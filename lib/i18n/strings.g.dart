/// Generated file. Do not edit.
///
/// Original: lib/i18n
/// To regenerate, run: `dart run slang`
///
/// Locales: 20
/// Strings: 11199 (559 per locale)
///
/// Built on 2025-04-07 at 02:31 UTC

// coverage:ignore-file
// ignore_for_file: type=lint

import 'package:flutter/widgets.dart';
import 'package:slang/builder/model/node.dart';
import 'package:slang_flutter/slang_flutter.dart';
export 'package:slang_flutter/slang_flutter.dart';

const AppLocale _baseLocale = AppLocale.en;

/// Supported locales, see extension methods below.
///
/// Usage:
/// - LocaleSettings.setLocale(AppLocale.en) // set locale
/// - Locale locale = AppLocale.en.flutterLocale // get flutter locale from enum
/// - if (LocaleSettings.currentLocale == AppLocale.en) // locale check
enum AppLocale with BaseAppLocale<AppLocale, Translations> {
	en(languageCode: 'en', build: Translations.build),
	bg(languageCode: 'bg', build: _StringsBg.build),
	bn(languageCode: 'bn', build: _StringsBn.build),
	ckb(languageCode: 'ckb', build: _StringsCkb.build),
	de(languageCode: 'de', build: _StringsDe.build),
	el(languageCode: 'el', build: _StringsEl.build),
	es(languageCode: 'es', build: _StringsEs.build),
	fr(languageCode: 'fr', build: _StringsFr.build),
	it(languageCode: 'it', build: _StringsIt.build),
	ja(languageCode: 'ja', build: _StringsJa.build),
	ko(languageCode: 'ko', build: _StringsKo.build),
	nl(languageCode: 'nl', build: _StringsNl.build),
	pl(languageCode: 'pl', build: _StringsPl.build),
	pt(languageCode: 'pt', build: _StringsPt.build),
	ru(languageCode: 'ru', build: _StringsRu.build),
	th(languageCode: 'th', build: _StringsTh.build),
	uk(languageCode: 'uk', build: _StringsUk.build),
	vi(languageCode: 'vi', build: _StringsVi.build),
	zhCn(languageCode: 'zh', countryCode: 'CN', build: _StringsZhCn.build),
	zhTw(languageCode: 'zh', countryCode: 'TW', build: _StringsZhTw.build);

	const AppLocale({required this.languageCode, this.scriptCode, this.countryCode, required this.build}); // ignore: unused_element

	@override final String languageCode;
	@override final String? scriptCode;
	@override final String? countryCode;
	@override final TranslationBuilder<AppLocale, Translations> build;

	/// Gets current instance managed by [LocaleSettings].
	Translations get translations => LocaleSettings.instance.translationMap[this]!;
}

/// Method A: Simple
///
/// No rebuild after locale change.
/// Translation happens during initialization of the widget (call of t).
/// Configurable via 'translate_var'.
///
/// Usage:
/// String a = t.someKey.anotherKey;
/// String b = t['someKey.anotherKey']; // Only for edge cases!
Translations get t => LocaleSettings.instance.currentTranslations;

/// Method B: Advanced
///
/// All widgets using this method will trigger a rebuild when locale changes.
/// Use this if you have e.g. a settings page where the user can select the locale during runtime.
///
/// Step 1:
/// wrap your App with
/// TranslationProvider(
/// 	child: MyApp()
/// );
///
/// Step 2:
/// final t = Translations.of(context); // Get t variable.
/// String a = t.someKey.anotherKey; // Use t variable.
/// String b = t['someKey.anotherKey']; // Only for edge cases!
class TranslationProvider extends BaseTranslationProvider<AppLocale, Translations> {
	TranslationProvider({required super.child}) : super(settings: LocaleSettings.instance);

	static InheritedLocaleData<AppLocale, Translations> of(BuildContext context) => InheritedLocaleData.of<AppLocale, Translations>(context);
}

/// Method B shorthand via [BuildContext] extension method.
/// Configurable via 'translate_var'.
///
/// Usage (e.g. in a widget's build method):
/// context.t.someKey.anotherKey
extension BuildContextTranslationsExtension on BuildContext {
	Translations get t => TranslationProvider.of(this).translations;
}

/// Manages all translation instances and the current locale
class LocaleSettings extends BaseFlutterLocaleSettings<AppLocale, Translations> {
	LocaleSettings._() : super(utils: AppLocaleUtils.instance);

	static final instance = LocaleSettings._();

	// static aliases (checkout base methods for documentation)
	static AppLocale get currentLocale => instance.currentLocale;
	static Stream<AppLocale> getLocaleStream() => instance.getLocaleStream();
	static AppLocale setLocale(AppLocale locale, {bool? listenToDeviceLocale = false}) => instance.setLocale(locale, listenToDeviceLocale: listenToDeviceLocale);
	static AppLocale setLocaleRaw(String rawLocale, {bool? listenToDeviceLocale = false}) => instance.setLocaleRaw(rawLocale, listenToDeviceLocale: listenToDeviceLocale);
	static AppLocale useDeviceLocale() => instance.useDeviceLocale();
	@Deprecated('Use [AppLocaleUtils.supportedLocales]') static List<Locale> get supportedLocales => instance.supportedLocales;
	@Deprecated('Use [AppLocaleUtils.supportedLocalesRaw]') static List<String> get supportedLocalesRaw => instance.supportedLocalesRaw;
	static void setPluralResolver({String? language, AppLocale? locale, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver}) => instance.setPluralResolver(
		language: language,
		locale: locale,
		cardinalResolver: cardinalResolver,
		ordinalResolver: ordinalResolver,
	);
}

/// Provides utility functions without any side effects.
class AppLocaleUtils extends BaseAppLocaleUtils<AppLocale, Translations> {
	AppLocaleUtils._() : super(baseLocale: _baseLocale, locales: AppLocale.values);

	static final instance = AppLocaleUtils._();

	// static aliases (checkout base methods for documentation)
	static AppLocale parse(String rawLocale) => instance.parse(rawLocale);
	static AppLocale parseLocaleParts({required String languageCode, String? scriptCode, String? countryCode}) => instance.parseLocaleParts(languageCode: languageCode, scriptCode: scriptCode, countryCode: countryCode);
	static AppLocale findDeviceLocale() => instance.findDeviceLocale();
	static List<Locale> get supportedLocales => instance.supportedLocales;
	static List<String> get supportedLocalesRaw => instance.supportedLocalesRaw;
}

// translations

// Path: <root>
class Translations implements BaseTranslations<AppLocale, Translations> {
	/// Returns the current translations of the given [context].
	///
	/// Usage:
	/// final t = Translations.of(context);
	static Translations of(BuildContext context) => InheritedLocaleData.of<AppLocale, Translations>(context).translations;

	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	Translations.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.en,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <en>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	dynamic operator[](String key) => $meta.getTranslation(key);

	late final Translations _root = this; // ignore: unused_field

	// Translations
	String get home => 'Home';
	String get switchLanguage => 'switch Language';
	String get languageSwitch => 'Language switch';
	String get slogan => 'Build a decentralized economic zone in delta';
	String get countryRegionCode => 'Country / region code';
	String get countryRegionSelection => 'Country / region selection';
	String get nextStep => 'Next step';
	String get yourPhoneNumber => 'Your phone number';
	String get pleaseSelectCountryAndRegion => 'Please select your country/region';
	String get pleaseEnterPhoneNumber => 'Please enter a valid phone number!';
	String get referrerDid => 'Referrer DID';
	String get pleaseEnterTheReferrersDid => 'Please enter a valid referrer\'s decentralized Identifier';
	String get thisDidIsInvalid => 'This DID is invalid';
	String get nicknameFormatTips => 'nickname cannot be empty and the length cannot exceed 16 characters';
	String get additionalIinformation => 'Additional information';
	String get invitationSubject => 'Invite you to participate in the Delta consensus construction';
	String invitationLetter({required Object did}) => 'Hello, I am participating in the Delta consensus construction!\n Delta is an open source new digital moneys platform running on InternetComputer. It can manage and use various digital currencies without passwords, private keys, or mnemonics. Please click this link https://delta.kim/auto/download to install the application. Now we invite you to join us in building consensus and minting coins.\n Referrer DID: ${did}';
	String get dSMSverification => 'dSMS verification';
	String get getAccessNumbers => 'get some access numbers';
	String get getAccessNumberPromptMessage => 'Click the "Get" button below to select a group of SMS verification access numbers in the queue in turn';
	String get optionalAccessNumbers => 'optional access numbers';
	String get accessNumber => 'Access Number';
	String get TELCO => 'TELCO';
	String get score => 'Score';
	TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('en'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Please check '),
			nBuilder(n),
			const TextSpan(text: ' access number and click the "'),
			span('text'),
			const TextSpan(text: '" button to proceed to the next step.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Please check '),
			nBuilder(n),
			const TextSpan(text: ' access numbers and click the "'),
			span('text'),
			const TextSpan(text: '" button to proceed to the next step.'),
		]),
	);
	String get whatIsDeltaDesc => 'Delta is an open source decentralized global digital currency experimental project and a currency application ecosystem.';
	String get deltaGoalsDesc => 'The goal is to enable people to use Delta to jointly build a universal, fair, secure, fast, and green new digital currency. And provide various effective application scenarios for these digital currencies and previous cryptocurrencies.';
	String get details => 'details';
	String get get => 'Get';
	String get select => 'Select';
	String get send => 'Send';
	String get complete => 'Complete';
	String get selectedAccessNumberPrompt => 'When selected, the full access number is displayed and an authentication string is generated.';
	String get location => 'Location';
	String get verificationString => 'Verification string';
	TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Please use your phone number '),
		num,
		const TextSpan(text: ', send the '),
		label,
		const TextSpan(text: ' to the '),
		accessNumber,
		const TextSpan(text: ' to complete the verification.'),
	]);
	String get ihaveSentTheSMS => 'I have sent the SMS';
	TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'The verification string is valid for 6 minutes, remaining time: '),
		time,
		const TextSpan(text: ' .'),
	]);
	String tooFast_waitXsecondsContinuing({required Object x}) => 'Too fast, wait ${x} seconds before continuing!';
	String get waitingForVerificationSMS => 'Waiting for verification SMS...';
	String get partSuccsForVerificationSMS => 'SMS verification has been passed by one of the access terminals.';
	String get creatingAccessToken => 'Creating access token…';
	String get intoDelta => 'Into Delta';
	String get deltaAccountIsLoggedIn => 'Your Delta account is logged in';
	String get iHavLoggedOut => 'i have logged out';
	String get startTwoFactorVerification => 'start two-factor verification';
	String get securityCircleVerification => 'Security Circle Verification';
	String get generateSecurityCode => 'Generate Security Code';
	String get generateSecurityCodeHintText => 'The generated security code will be sent to a randomly selected member of your security circle.';
	String get notSetSecurityCircleEnterPlaceholderTip => 'You have not set the security circle yet, your account is very insecure, please enter any 6-digit placeholder, and go to the next step.';
	String get securityCodeHasBeenGenerated_ContactFriendsTip => 'The security code has been generated, please contact the following relatives and friends, and ask them to extract the security code for you to pass the verification. Valid within 30 minutes!';
	String get itGetSecurityCodeTip => 'Tips: It finds your account nickname in the Delta App -> Menu -> Provide Security page and double-clicks to get the security code.';
	String get securityCircleMemberList => 'Security circle member list:';
	String get selectA_friendToProvideSecurityCodeTip => 'Please select a relative or friend from the member list to generate and provide you with a security code to verify your true identity. The purpose is to prevent the account from being controlled by others when the mobile phone number is lost or stolen.';
	String formatIsXdigits({required Object num}) => 'The format is ${num} digits';
	String get signInSuccessfully => 'Sign in successfully!';
	String get twoFAandLogin => 'Two-factor authentication and login';
	String get verificationSuccessful => 'Verification successful !';
	String get validationFailed => 'Validation failed !';
	String get securityCircle => 'Security circle';
	String get securityCode => 'Security code';
	String get provideSecurity => 'Provide security';
	String get addManully => 'add manully';
	String get addFromContacts => 'add from Contacts';
	String get addSecurityCircle => 'Add security circle';
	String get inputType => 'input Type';
	String get mobileNumber => 'Mobile Number';
	String get did => 'did';
	String get pleaseEnterValidDID => 'Please enter a valid Decentralized Identifier';
	String get pleaseEnterValidWalletAddress => 'Please enter a valid wallet address';
	String get appellation => 'Appellation';
	String get appellationHint => 'what you call it, like "baby"';
	String get addSecurityCircleTips => 'Please do not add untrusted people to security circles.';
	String get referralTeam => 'Referral Team';
	String get profile => 'Profile';
	String get menu => 'menu';
	String get directly => 'directly';
	String get indirectly => 'indirectly';
	String get inviteContacts => 'invite contacts';
	TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Your referrer is '),
		nickname,
		const TextSpan(text: ', You have directly recommended '),
		num1,
		const TextSpan(text: ' people and '),
		num2,
		const TextSpan(text: ' of them are currently online.'),
	]);
	TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'You have indirectly recommended '),
		num1,
		const TextSpan(text: ' people, including '),
		num2,
		const TextSpan(text: ' people who are currently online.'),
	]);
	TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Invite friends to join Delta and improve social consensus together. The mining rate of each directly recommended person increases by '),
		rate1,
		const TextSpan(text: ' of the base rate. '),
		btn,
	]);
	TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Invite friends to join Delta and improve social consensus together. The mining rate of each indirectly recommended person increases by '),
		rate2,
		const TextSpan(text: ' of the base rate.'),
	]);
	String areYouSureToRemove_x({required Object name}) => 'Are you sure to remove "${name}"?';
	String get safetyCircleRoleQ => 'What is the function of safety circle?';
	String get safetyCircleRoleA => 'Provides secondary authentication in sensitive situations to protect your account security.';
	String get howSecurityCirclesWorkQ => 'How does the security circle work?';
	String get howSecurityCirclesWorkA => 'When the security circle is required for verification, the Delta smart contract program will randomly select a member from the security circle friend list to help you provide a security code to complete identity security verification for you. When you ask the member for the security code, it can confirm that you are really you. At the same time, the program will prompt: "If it is not you, refuse to provide the security code", so as to protect your account security. So you should always make sure that members of your security circle are people you can trust.';
	String get securityCircleBeUsedQ => 'When will you use it?';
	String get securityCircleBeUsedA1 => '1. When your Delta APP is out of control, the general situation is that the mobile phone is lost or stolen.';
	String get securityCircleBeUsedA2 => '2. In the case of some sensitive operations, the Delta smart contract program needs to confirm that you are yourself.';
	String get provideSafetyTip1 => 'When your friend asks you for its security code, please be sure to confirm that it is him.';
	String get provideSafetyTip2 => 'You are providing security protection for the above friends. They have set you as the most trusted person in the security circle, and you need to provide security confirmation for them when their accounts encounter sensitive operations.';
	String get provideSafetyTip3 => 'When needed, double-click the other party\'s avatar to extract the security code.';
	String get doesNotSecurityCodeNeedsRetrieved => 'The other party does not currently have a security code that needs to be retrieved !';
	String get existSecurityCodeTip => 'Please be sure to confirm that the relative or friend who asks you for the security code is it himself. In order to protect the safety of the relative or friend, you should refuse to provide it if it is not the relative or friend himself.';
	String get avatarSettings => 'Avatar settings';
	String get NFTAvatarPropertyRightsText => 'Disclaimer: Using related NFTs as avatars is only a personal preference, and has nothing to do with owning the intellectual property rights of the NFT.';
	String get projectWebsite => 'Project website: ';
	String get whitepaper => 'white paper:';
	String get indexID => 'Index Id';
	String indexesRangeFromXtoY({required Object start, required Object end}) => 'Indexes range from ${start} to ${end}';
	String get inputToLoadNFTAvatarTip => 'Enter the index id of your favorite NFT, and the program will automatically load it as your avatar.';
	String get miningRate => 'Mining rate';
	String get miningDetails => 'Mining Details';
	TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Total mining rate: '),
		rate,
		const TextSpan(text: ' δ/day'),
	]);
	String get EndOfMiningSession => 'End of mining session: ';
	String get tapToMineDeltaCoin => 'Tap to mine Delta coin ↑';
	String get clickToStartMining => 'Tap to start mining!';
	String get miningHasStoppedPromptDesc => 'Mining has stopped, every 24 hours is a mining cycle, click the lightning icon to start a new round of mining. Delta\'s mining is a distribution mechanism that does not consume extra computing power and network traffic of your device.';
	String get aboutBaseRate => 'About base rate?';
	String get baseRateDescription => 'According to the agreement in the white paper, the basic rate-decreasing rule of Delta mining will be divided into two stages. \nPhase 1: When the number of participants (registrations) is 3000 or less, the rate is 32δ/day. Using this as a starting point, each time the number of people increases by a factor of 10, the base rate is halved. \nPhase 2: When the number of participants reaches 30 million and above, the base rate is halved every time the number of people increases by 3 times. Until the end of the digging out of production.';
	String get baseRate => 'Base Rate';
	String get directReferralRewards => 'Direct Referral Rewards';
	String get directReferralRewardDesc => 'For every person directly recommended, when the person is in the mining state, your mining rate will be increased by 1/3 of the base rate. \n\n In addition, the mining status of your referrer will also be calculated into your direct referral reward.';
	String get indirectReferralRewards => 'Indirect Referral Rewards';
	String get indirectReferralRewardDesc => 'When an indirect recommender is in the mining state, your mining rate will be additionally increased by 1/10 of the base rate. \n\nYour direct referral team, and every person they refer represents an indirect referral for you.';
	String get mine => 'Mine';
	String get thisMiningInformation => 'This mining information';
	TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Participated in mining: '),
		x,
		const TextSpan(text: ' times'),
	]);
	TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Total income this time: '),
		x,
		const TextSpan(text: ' Delta coins'),
	]);
	TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Basic income: '),
		x,
		const TextSpan(text: ' coins'),
	]);
	TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Direct team contribution: '),
		x,
		const TextSpan(text: ' coins'),
	]);
	TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Indirect team contribution: '),
		x,
		const TextSpan(text: ' coins'),
	]);
	TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Time interval from last mining: '),
		x,
	]);
	TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Effective mining time: '),
		x,
	]);
	String xhours({required Object x}) => '${x} hours';
	String get keep3_5peopleInTheSafetyCircleTip => 'For asset security, security circle members should keep 3-5 trustworthy people at any time.';
	String get index => 'Index';
	String get amount => 'Amount';
	String get balance => 'Balance';
	String get timeStamp => 'timestamp';
	String get summary => 'Summary';
	String get miningHasStopped => 'Mining has stopped.';
	String get miningHasStoppedDesc => 'Your mining is currently stopped, and you can start earning income immediately.';
	String get startMining => 'START MINING';
	String get changeMobileNumber => 'Change MobileNumber';
	String get currentMobileNumber => 'Current MobileNumber';
	String get newMobileNumber => 'New MobileNumber';
	String get securityCodeFormatIs6digits => 'The security code format is 6 digits!';
	String get startVrification => 'start Verification';
	String mobileNumberAlreadyExists_associated({required Object dId}) => 'This MobileNumber already exists, associated DID: ${dId}';
	String get noDataYet => 'No data yet';
	String get previousMobileNumber => 'previous Mobile NO.';
	String get changeLog => 'change log';
	String get referralLinkToShare => 'Referral link to share';
	String get referrer => 'Referrer';
	String get isoCountryCode => 'ISO country code';
	String get avatarLogo => 'Avatar logo';
	String get creationTime => 'Creation Time';
	String get lastUpdate => 'last update';
	String get numberOfSecurityCircleMembers => 'Number of security circle members';
	String get theLatestMining => 'The latest mining';
	String get effectiveMiningDays => 'Effective mining days';
	String get modifyNickname => 'modify Nickname';
	String get didNotChange => 'did not change!';
	String get kycVerification => 'KYC Verification';
	String get faceID => 'Face ID';
	String get touchID => 'Touch ID';
	String get biometricsAuthorizationTest => 'Biometrics Authorization Test';
	String get currentState => 'Current State';
	String get biometricsAuthenticationLocalizedReason => 'Use your device\'s unlock to verify your identity.';
	String get graph => 'Graph';
	String get referralRelationshipGraph => 'Referral Relationship Graph';
	String get nativeContacts => 'Native Contacts';
	String get registrationAndMiningTrends => 'Registration and Mining Trends';
	String get inMining => 'in mining';
	String get registrationVolume => 'Registration Volume';
	String get unmined => 'unmined';
	String get mined => 'Mined';
	String get communityMining => 'community mining';
	String get consensusPromotionFund => 'Consensus Promotion Fund';
	String get ecologicalAwardFund => 'Ecological Award Fund';
	String get icpFuelCrowdfunding => 'ICP fuel crowdfunding';
	String get coreDeveloperRewards => 'Core Developer Rewards';
	String get totalAllocation => 'Total allocation';
	String get miningRatio => 'Mining ratio';
	Map<String, String> get billion => {
		'300': '300 billion',
		'180': '180 billion',
		'30': '30 billion',
		'60': '60 billion',
	};
	String get watchAdsToSupportDevelopers => 'Watch ads to support developers';
	String get loadingAdcomponents => 'Loading ad components…';
	String get timeIsNotUp => 'Time is not up!';
	String get loadingFailed_maybeTheNetworkIsBlocked => 'Loading failed, maybe the network is blocked!';
	String get pendingUSCTrecords => 'Pending USCT records';
	String get pendingUSCTrecordsDesc => 'Pending USCT records will be compared and confirmed with the advertising platform within 15-30 days, valid records will be transferred to the USCT record list, and the corresponding USCT amount will be added to the account balance.';
	String get validity => 'validity';
	String get advertiser => 'advertiser';
	String get earned => 'Earned';
	String get withdraw => 'withdraw';
	String get validUSCTrecords => 'Valid USCT records';
	String get USCTmining => 'USCT mining';
	String get aboutUSCTmining => 'About USCT mining?';
	String get aboutUSCTminingItme1 => '1. USDT is a globally popular US dollar stablecoin, which can be easily converted into sovereign currencies of various countries on the world\'s mainstream cryptocurrency exchanges.';
	String get aboutUSCTminingItme2 => '2. USCT is a temporary measurement value of USCT mining income, the full name is USD credit, and finally it can be converted into USDT according to the actual settlement quota and distribution rules of the advertising platform and in corresponding proportion.';
	String get aboutUSCTminingItme3 => '3. USCT mining is a traffic advertising monetization function in the Delta community. Leverage the huge user base of the Delta community to provide multiple benefits for advertisers, Delta developers and miners. Its design purpose is to provide a certain amount of effective income for absenteeism in the early stage of the Delta ecology has not yet formed and flourished; at the same time, it also provides a certain amount of financial support for developers to ensure that developers can continue to provide development services for a long time, and eventually be able to Realize all the planning of the white paper; also provide an effective promotion channel for product advertisers.';
	String get aboutUSCTminingItme4 => '4. The distribution rules are designed so that 40% of the total income will be used as developer technical service commissions, and the remaining 60% will be used as community absenteeism rewards. The absenteeism reward part adopts a multi-level distribution model similar to DTC, and these absenteeism rewards are divided into 3 shares according to the ratio of 6:3:1, and 60% of the absenteeism reward for one USCT mining each time is allocated to the absenteeism who is currently watching the advertisement , 30% is allocated to the superior recommender, and 10% is allocated to the second-level recommender. In the same way, you can also get the same recommender rewards from the friends you recommend through USCT mining. The advantage of such multi-level distribution is that anyone can obtain a relatively large amount of USDT benefits by developing an offline team.';
	String get aboutUSCTminingItme5 => '5. The billing cycle is 7 days, that is, the validity is checked with the advertising platform every 7 days, and the confirmed effective income and actual amount will be recorded in the balance. The minimum amount for each withdrawal is 10USDT.';
	String linesXtoY({required Object x, required Object y}) => 'Lines ${x} to ${y}';
	String get wallet => 'Wallet';
	String get multiChainWallet => 'multi-chain Wallet';
	String get deposit => 'Deposit';
	String get transfer => 'Transfer';
	String xcoinInWallet({required Object coinCode}) => '${coinCode} in wallet address';
	String get transactions => 'Transactions';
	String get network => 'Network';
	String get walletAddress => 'Wallet Address';
	String get currentAddress => 'current Address';
	String get depositAddress => 'deposit Address';
	String get receivingMoneyAddress => 'Receiving money address';
	String get applyTempDepositAddress => 'Apply for temporary deposit address';
	String get tempDepositAddressTip => '1.This is a shared deposit address. Please do not deposit the amount after the lease expires or is unbound. The amount will be lost if this happens.';
	String get tempDepositAddressTip2 => '2.Before depositing, please be sure to confirm that [chain name] and [currency name] exactly match; if it is a contract token, you also need to confirm that [contract standard] and [contract address] exactly match.';
	String get tempDepositAddressTip3 => '3.Please do not attempt to deposit funds that do not match any of the parameters in the above tips, otherwise the amount will be lost.';
	String get tempDepositAddressTip4 => '4.If you need to deposit other types of assets, please switch to the corresponding currency page and parameter options to apply for a new address.';
	TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'The address will expire after '),
		diff,
		const TextSpan(text: ', and the validity period can be '),
		tap('manually extended'),
		const TextSpan(text: ' within 12 hours before the expiration.'),
	]);
	String get canOnlyRenewWithin12hoursInAdvance => 'Can only renew within 12 hours in advance';
	String get theReceivingAddressValidForLongtime => 'The receiving address is valid for a long time.';
	String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'The receiving address is valid for a long time and will be automatically credited in real time.';
	String get confirmDeposited => 'confirm Deposited';
	String get unbindThisDepositAddress => 'Unbind this deposit address';
	String get confirmDepositedTip => 'If funds have been transferred, please click the above button after 10 minutes to trigger the accounting to the wallet.';
	String get unbindDepositAddressTip => 'In order to reduce the running overhead of smart contracts, if no more funds will be deposited within the validity period, please unbind the deposit address.';
	String get transferToAddress => 'transfer to address';
	String get longPressToPaste => 'Long press to paste';
	String get all => 'All';
	String balanceX({required Object x}) => 'Balance ${x}';
	String get transferOut => 'Transfer out';
	String depositXcoins({required Object x}) => 'Deposit ${x}';
	String get sender => 'Sender';
	String get recipient => 'Recipient';
	String get memo => 'memo';
	String get kind => 'Kind';
	String get transferAmountExceedsAvailableBalance => 'Transfer amount exceeds available balance';
	String get pleaseEnterValidAmount => 'Please enter a valid amount';
	String get networkFee => 'Network fee';
	String get fee => 'fee';
	String validLengthXcharacters({required Object x}) => 'Valid length is ${x} characters';
	String get historys => 'Historys';
	String get dtcCreditdetail => 'Delta Credit detail';
	String get usdCreditdetail => 'USD Credit detail';
	String get dappSquare => 'dApp square';
	String get amountRaised => 'Amount raised';
	String get disbursedAmount => 'Disbursed amount';
	String get participationTimes => 'Participation times';
	String get completionRate => 'Completion rate';
	String get exchangeRate => 'Exchange Rate';
	String get icpCrowdfunding => 'ICP Crowdfunding';
	String get crowdfunding => 'Crowdfunding';
	String get trendsCurve => 'trends curve';
	String get fullScreenView => 'Full screen view';
	String get walletBalance => 'Wallet balance: ';
	String get manageWallet => 'Manage wallet';
	String get fundraiseAmount => 'Fundraise amount';
	String get exchangeRewardAmount => ' Exchange reward amount';
	String get fundraise => 'Fundraise';
	String rangeIntegersX({required Object x}) => 'Range: integers ${x}';
	String successfullParticipatingFundraisingXtip({required Object amount}) => 'Successfully participated in the fundraising and received a reward of ${amount}DTCT';
	String get amountSummary => 'Amount summary';
	String get changePreferred => 'change Preferred';
	String get changePreferredAddress => 'Change preferred address';
	String get preferredAddressTip => 'When receiving money using a registered mobile number or DID, funds will be automatically transferred to the preferred address.';
	String get newAddress => 'new Address';
	String get newAddressTip => 'In order to prevent abuse, when there is more than one wallet address, a transaction fee will be incurred for each new address created.';
	String get createNew => 'create New';
	String get chainNetworkName => 'Chain network';
	String get from => 'From';
	String get to => 'To';
	String get noAvailableDepositAmountDetected => 'No available deposit amount detected !';
	String get crossChainReceiveMoneyMonitoring => 'Cross-chain receive money is in monitoring …';
	TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Received('),
		v,
		const TextSpan(text: ')'),
	]);
	TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Confirming('),
		v,
		const TextSpan(text: ')'),
	]);
	String get thingsToNote_forNewbies => 'Notes (must read for newbies)';
	String get whyUseSharedAddresses => 'Why use shared addresses?';
	String get useSharedrAdvantage => 'When it comes to cross-chain deposits, the benefits of using shared addresses are:';
	String get useSharedrAdvantage1 => '1. Reduce the waste of transfer fees and reduce user costs. Because if an exclusive address is used, the funds will be too dispersed. In order to facilitate other users to transfer out when withdrawing, when the user makes a deposit, the secondary transfer of funds needs to be collected into one or a small number of addresses for management.';
	String get useSharedrAdvantage2 => '2. In the sharing solution, the program only needs to maintain a relatively small address pool, which can quickly match outgoing funds and perform lightweight collection monitoring, which can reduce computing resource overhead. In contrast, with exclusive addresses, the situation is exactly the opposite.';
	String get tokenType => 'Token type';
	String get contract => 'Contract';
	String get contractStandard => 'Contract standard';
	String get contractAddress => 'Contract address';
	String get native => 'Native';
	String get confirmUnbindingPleaseEnterYes => 'To confirm unbinding, please enter "yes"';
	String get listAllWorkingTempReceivingAddresses => 'List all working cross-chain receiving addresses';
	String get setNote => 'set Note';
	String lengthCannotExceedXbytes({required Object x}) => 'The length cannot exceed ${x} bytes';
	String get transferFee => 'transfer fee';
	String get crossChainFee => 'cross-chain fee';
	String get crossChainTransferOutError => 'Cross-chain transfer out error';
	String get chainName => 'Chain Name';
	String get message => 'message';
	String get dontShowAgain => 'Don\'t show again';
	String get queuing => 'Queuing';
	String get optional => 'Optional';
	String get publiclyVisible => 'publicly visible';
	String get rates => 'rates';
	String get minimum => 'Minimum';
	String get maximum => 'Maximum';
	String get minimumBlockConfirmations => 'minimum  Block Confirmations';
	String get dsmsVerifyTerminal => 'DSMS verifier terminal';
	String get overall => 'overall';
	String get my => 'My';
	String get getVerifierPermissions => 'Get verifier permissions';
	String get checkValidatorQualifications => 'Check validator permissions qualifications';
	String get qualification => 'Qualification';
	String get upperLimit => 'upper limit';
	String get maximumNumberOfTerminalsAllowedToAccess => 'Maximum number of terminals allowed to access';
	String get numberOfExistingAccessTerminals => 'Number of existing access terminals';
	String get applyingForDSMSVerifierPermissionsTips => 'Before applying for verifier permissions, you need to prepare an idle Android phone and a dedicated access number, and download and install the DSMS access terminal application.';
	String get downloadLink => 'download link';
	String get alreadyReadyFollowingTheAboveTips => 'already ready following the above tips';
	String get globalUniversal => 'Global universal';
	TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Currently there are not enough local verifiers to participate in the DSMS verification access service. Please select the "'),
		gu,
		const TextSpan(text: '" access service.'),
	]);
	String get asDedicatedNumberForAccess => 'As a dedicated number for access';
	String pleaseCheckTip({required Object tip}) => 'Please check "${tip}"';
	String get inputLengthTooShort => 'Input length too short';
	String get shortName => 'short-name';
	String pleaseEnterXname({required Object name}) => 'Please enter ${name}';
	String get applicationIsBeingSubmitted_pleaseWait => 'Application is being submitted, please wait...';
	String get applyForDSMSVerifierPermission => 'Apply for DSMS Verifier Permission';
	String get confirmInformation => 'Confirm information';
	String get lastHeartbeat => 'Last heartbeat';
	String get expirationTime => 'Expiration time';
	String get country => 'Country';
	String get accessTerminals => 'access terminals';
	String get totalNumberOfDSMSaccessNumberTerminals => 'Total number of DSMS access number terminals';
	String get textContent => 'Text content';
	String get scanQRcodeToLogin => 'Scan QRcode to login';
	String get confirmLogin => 'Confirm login';
	String get authorizeSubApplicationToLogin => 'Authorize this sub-application to login';
	String get authorizationSuccessful => 'Authorization successful!';
	String get launchSMSprogram => 'launch SMS program';
	String get notApplied => 'Not applied';
	String get validityPeriod => 'Validity period';
	String get renewal => 'Renewal';
	String get scanCodeToAuthorizeTerminalLogin => 'Scan code to authorize terminal login';
	String get rewards => 'Rewards';
	String get roles => 'Roles';
	String get developerCenter => 'Developer Center';
	String get appName => 'App Name';
	String get pleaseSelect => 'Please select';
	String get category => 'Category';
	String get keywords => 'Keywords';
	String get pleaseEnterAkeyword => 'Please enter a keyword';
	String get createApplication => 'create Application';
	String get appType => 'App type';
	String get numberOfCategoriesMustBetween1and3 => 'The number of categories must be between 1 and 3';
	String get appLogoSpecifications => 'Image format: png, size: within 100KB, resolution (pixels): 256 * 256';
	String get localAlbum => 'Local Album';
	String get networkPath => 'network path';
	String get imageURLkAddress => 'Image URL Address';
	String get urlAddressFormatIsIncorrect => 'The URL address format is incorrect';
	String get imageFormatOnlySupportsPng => 'The image format only supports "png".';
	String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'The length must be between ${a}-${b} characters';
	String get introduction => 'Introduction';
	String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'The image size cannot be larger than ${a}, currently ${b}';
	String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'The image resolution must be: ${p1} (pixels),currently ${p2}';
	String get becomeDeveloper => 'Become developer';
	String get developerInformation => 'Developer information';
	String get teamName => 'Team Name';
	String get website => 'Web site';
	String get other => 'Other';
	String get githubVerification => 'Github verification';
	String get exampleUrl => 'Example Url';
	String githubVerificationTip({required Object did}) => 'Please use your GitHub account to create a \'delta.did\' file in the repository with the content \'${did}\'; then, paste the githubusercontent url of the file into this input box for authentication.';
	String get createApp => 'Create App';
	String get appManagement => 'App Management';
	String get statusLogs => 'Status Logs';
	String get bad => 'Bad';
	String get normal => 'Normal';
	String get good => 'Good';
	String get onceCreatedItCannotBeChanged => 'Once created, it cannot be changed!';
	String get manageApplicationEntity => 'Manage application entity';
	String get currentVersion => 'current Version';
	String get submitVersion => 'submit Version';
	String get packageOnlySupportZipCompressedFile => 'The package only support zip compressed file';
	String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'The \'${name}\' file was not found in the zip package';
	String get fileList => 'File List: ';
	String get programPackage => 'program Package: ';
	String get automaticallyExtractFromVersionFile => 'Automatically extract from \'.version\' file';
	String get dappVersionFormatTip => 'The version number format must be a decimal and the precision must be maintained at 2 digits, and the maximum cannot exceed 99.99';
	String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'The version number must be greater than the current version \'${v}\'';
	String get versionNotes => 'Version Notes: ';
	String get dappInfo => 'DApp Info';
	String get updateRelease => 'Update release';
	String get loadAndRun => 'Load and Run';
	String get notYetSubmittedProgramPackage => 'Not yet submitted a program package!';
	String get authorizeMinidAppLogin => 'Authorize mini-dApp login';
	String get confirmAuthorizationPleaseEnterYes => 'Confirm authorization, please enter "yes"';
	String get authorizeNow => 'Authorize now';
	String get operation => 'Operation: ';
	String get statusChange => 'Status change';
	String get changeTo => 'Change to: ';
	String get notes => 'Notes: ';
	String get changesNotEffective => 'Changes not effective!';
	String get released => 'released';
	String get inPublicBeta => 'In public beta';
	String get developers => 'developers: ';
	String get reviewList => 'Review List: ';
	String get postReview => 'Post review';
	String get scoreNow => 'Score now';
	String get description => 'Description: ';
	String get noData => '(^-^) \n No data';
	String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Version has been updated from ${a} to ${b}';
	String get loadNewVersion => 'Load new version';
	String get name => 'Name: ';
	String get canisterId => 'CanisterId: ';
	String get updateTime => 'update Time';
	String get contractCanistersState => 'Contract Canisters State';
	String get userDistribution => 'User Distribution';
	String get settings => 'Settings';
	String get security => 'Security';
	String get invite => 'Invite';
	String get more => 'More…';
	String get receiveAddress => 'Receive address: ';
	String get hangingAmount => 'hanging';
	String get hangingAmountTips => 'The hanging amount is a temporary record of the rewards generated by your subordinate team\'s mining. Once you conduct a mining, these amounts will be collected into the pending amount.';
	String get pendingAmount => 'pending';
	String get pendingAmountTips => 'Pending amount refers to the amount that has not been confirmed and compared with the advertiser. The amount that is confirmed will be transferred to the valid USCT record. If there is any invalid part, it will be excluded.';
	String get received => 'Received';
	String get processing => 'Processing';
	String get replied => 'Replied';
	String get rejected => 'Rejected';
	String get unknown => 'Unknown';
	String get insufficientBalance => 'Insufficient balance!';
	String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Insufficient ${x} balance to pay cross-chain network fee';
	String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'There is a transaction that has not been completed and cannot be transferred at the moment.';
	String get thisfunctionNotSupportExternalCalls => 'This function does not support external calls';
	String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'There is no matching address that can be used to pay cross-chain fees, Please switch to other chain networks to try.';
	String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'The current maximum matched single transfer amount is ${x}';
	String get memoMustNotBeMoreThan64bytes => 'Memo must not be more than 64 bytes';
	String insufficientBalance_theAmountIsX({required Object x}) => 'Insufficient balance, the amount is: ${x}';
	String get boundRreceivingAddressesExceed3Tip => 'The number of bound receiving addresses cannot exceed 3. \nIf you need to bind a new receiving address, \nplease unbind another receiving address first.';
	String parametersA_exception({required Object x}) => 'Parameters: ${x}, exception';
	String get transferAmountMustBeLargerThan0 => 'Transfer amount must be larger than 0';
	String get authorizationHasExpired => 'Authorization has expired';
	String get theAppHasNotBeenAuthorizedByOwner => 'The app has not been authorized by the owner';
	String get authenticationTokenIsInvalid => 'Authentication token is invalid';
	String get verifyInfoIsInvalidOrExpired => 'verify Info is invalid or expired';
	String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Verify that the number of access terminals has exceeded the limit of one in 10,000';
	String get timeToParticipateInMiningMustBeMoreThan3Days => 'The time to participate in mining must be more than 3 days';
	String get numberOfSafetyCircleCannotBeLessThan3 => 'The number of safety circle members cannot be less than 3 people';
	String get avatarIsNotSet => 'Avatar is not set';
	String get numberOfDirectReferralsCannotBeLessThan3 => 'The number of direct referrals cannot be less than 3 people';
	String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Insufficient time limit, mobile number can only be changed once a year.';
	String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'This mobile phone number already exists and cannot be repeated';
	String get securityCodeIsIncorrect => 'Security code is incorrect';
	String get securityCodeMayHaveExpired => 'Security code may have expired';
	String get sessionIdIsInvalidOrExpired => 'The sessionId is invalid or expired';
	String get sessionHasBeenAuthorized => 'The session has been authorized!';
	String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Can only be renewed within ${x} days before expiration';
	String get notYetGrantedDeveloperPermissions => 'Not yet granted developer permissions';
	String fieldXcannotBeEmpty({required Object x}) => 'Field email ${x} be empty';
	String get emailFormatError => 'Email format error';
	String theXformatIsIncorrect({required Object x}) => 'The \'${x}\' format is incorrect';
	String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'The length of the field \'${x}\' must be between ${y} and ${z}  characters.';
	String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'The \'${x}\' selection must be between ${y} and ${z}';
	String get unchanged_sameAsOldContent => 'Unchanged, same as old content!';
	String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' already exists!';
	String get mobileNumberHasNotJoinedDelta => 'This mobile number has not yet joined Delta！';
	String get referrerIdCannotBeEmpty => 'referrerId cannot be empty! ';
	String get referrerIdDoesNotExist => 'referrerId does not exist!';
	String get didIsIncorrectOrInvalid => 'The DID is incorrect or invalid！';
	String get accessTokenIsIncorrectOrInvalid => 'The accessToken is incorrect or invalid！';
	String get minimumWithdrawalAmountIs1USD => 'The minimum withdrawal amount is 1USD';
	String get miningTimeIsNotYet => 'Mining time is not yet';
	String get alreadyExists_pleaseDoNotRepeatedly => 'Already exists, please do not add repeatedly!';
	String get registrationNumberCannotBeUsedAsAccessNumber => 'Registration number cannot be used as verification access number';
	String get canotAddYourSelf => 'Can\'t add yourself';
	String get logOut => 'Log out';
	String get confirmLogout => 'Confirm logout';
	String get logOutTipsText => 'Friendly reminder: According to the relevant agreement in the white paper, each login verification of the account will consume a certain amount of DTC coins from you to pay the verifier as an incentive. Please do not try to log in and log out if it is not necessary. Click the following button to Log out immediately.';
	String get ConfirmLogoutPleaseEnterYes => 'Confirm to logout, please enter "yes"';
	String get tip => 'Tip';
	String get cancel => 'Cancel';
	String get close => 'Close';
	String get selected => 'Selected';
	String get edit => 'Edit';
	String get submit => 'submit';
	String get goBack => 'go Back';
	String get copiedToClipboard => 'Copied to clipboard.';
	String get nickname => 'NickName';
	String get confirm => 'Confirm';
	String get cannotBeEmpty => 'cannot be empty';
	String get deleteSuccessful => 'Delete successful!';
	String get successfullyModified => 'Successfully modified!';
	String get executionSuccessful => 'Execution successful!';
	String get parameterException => 'Parameter exception!';
	String get preview => 'PreView';
	String get followSystem => 'follow System';
	String get change => 'Change';
	String get replace => 'Replace';
	String get view => 'View';
	String get manage => 'Manage';
	String get modify => 'Modify';
	String get replacedSuccessfully => 'Replaced successfully!';
	String get authentication => 'Authentication';
	String get reacquire => 'Reacquire';
	String get tryAgain => 'try Again';
	String get querying => 'Querying …';
	String get writingToOnChain_pleaseWait => 'Writing to the on-chain, please wait …';
	String get versionCheck => 'Version Check';
	String get alreadyLatestVersion => 'already the latest version!';
	String get foundNewVersion => 'Found a new version:';
	String get upgradeLink => 'Upgrade link: ';
	String get deviceDescription => 'Device description: ';
	String get notification30SecondsBeforeMiningStops => 'execute notification reminder 30 seconds before mining stops!';
	String get goMining => 'Go Mining';
	String get deltaMiningReminder => 'Delta mining reminder';
	String get clickToMine_miningIsAboutToStop => 'Click here to mine, mining is about to stop!';
	String get incorrect_input => 'Incorrect input !';
	String get are_you_sure_delete => 'Are you sure to delete?';
	String get delete_account => 'Delete account';
	String get how_to_operate_it => 'How to operate it?';
	String get deletion_warning_tip => 'If you delete your account, you will lose all your Delta Coins and all earnings from other members will also be lost.';
	String get launchWhatsAppProgram => 'Launch WhatsApp program';
	String get sms => 'SMS';
	String get whatsApp_verification_tips => 'Access numbers with this icon indicate that they also support WhatsApp message verification. When sending international messages, it is recommended to use WhatsApp to increase the success rate and reduce costs.';
	String get ihaveSentVerificationString => 'I have sent verification string';
	String get totalOfPeople => 'Total of people: ';
	String get numberOfPeopleMining => 'Number of people mining';
	String get useBrowserScanQRcodeToSMSprogram => 'You can use a browser on another device to scan the QR code and pass it to the SMS program';
	String get toggle => 'Toggle';
	String get DSMSverifier => 'DSMS Verifier';
	String get activate => 'Activate';
	String get activated => 'Activated';
	String get generateActivationCommand => 'generate Activation Command';
	String get activationCommand => 'Activation Command';
	String get activationSentedTip => 'After the activation SMS is sent, please check the activation status on the access terminal device.';
	String get biometricsNotEnabledTip => 'Your device has not enabled biometrics (face or fingerprint), please enable it to continue.';
	String get error => 'Error';
	String get exceptionOccurredWhenCallingBiometric => 'An exception occurred when calling the biometric recognition (face or fingerprint) function!';
	TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' access numbers are checked, '),
		shouldNum,
		const TextSpan(text: ' should be selected.'),
	]);
	String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Has ${text} been sent to the ${n} access numbers above?';
	String get interface => 'Interface:';
	String get waitingTimeoutOrSenderNumberMismatch => 'Waiting timeout or sender number mismatch';
	String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'The mobile phone number of the security circle member you filled in does not match:${x}';
	String leastXmobileNumbersMustCompleted({required Object n}) => 'At least ${n} mobile numbers must be completed';
	String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Log in within 10 minutes after logging out to avoid two-factor verification.';
	String get noAccessNumberInYourRegionYet => 'There is no access number in your region yet';
	String get notEnoughAccessNumbersInYourRegion => 'There are not enough access numbers in your region';
	String get tipsForDeployDSMSterminal => 'The system has automatically loaded some access numbers from other countries for you. In order to provide better and lower-cost verification services, it is recommended that you or contact your referrer to deploy DSMS terminals locally to earn verification fees.';
	String get noOneCanProvideMeTheSecurityCode => 'No one can provide me the security code?';
	String get useSupplementalMode => 'Use supplemental mode';
	String get returnToSecurityCodeMode => 'Return to security code mode';
	String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Please enter their associated mobile phone number, country code can be omitted.';
	String mobileNumberForNameIsIncorrect({required Object name}) => 'The mobile number for ${name} is incorrect';
	String get matchingVerificationStrategyIs => 'The matching verification strategy is:';
	String get balanceGreater3ICP_noNeedPourFuel => 'If the balance is greater than 3 ICP, there is no need to pour fuel temporarily.';
	String get escrowAccount => 'Escrow Account';
	String get fuelRelay => 'Fuel Relay';
	String get pourFuel => 'Pour Fuel';
	String get fuelState => 'fuel State';
	String get pouringFuelTips => 'Pouring fuel will not bring you any advantages or disadvantages, its purpose is to enrich the Delta system experience.';
	String get sponsorDevelopersByWatchingAds => 'Sponsor developers by watching ads';
	String get status => 'Status';
	String get date => 'Date';
}

// Path: <root>
class _StringsBg implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsBg.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.bg,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <bg>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsBg _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'Начало';
	@override String get switchLanguage => 'Смяна на езика';
	@override String get languageSwitch => 'Превключване на езика';
	@override String get slogan => 'Изграждане на децентрализирана икономическа зона в Delta';
	@override String get countryRegionCode => 'Код на държава / регион';
	@override String get countryRegionSelection => 'Избор на държава / регион';
	@override String get nextStep => 'Следваща стъпка';
	@override String get yourPhoneNumber => 'Вашият телефонен номер';
	@override String get pleaseSelectCountryAndRegion => 'Моля, изберете вашата държава/регион';
	@override String get pleaseEnterPhoneNumber => 'Моля, въведете валиден телефонен номер!';
	@override String get referrerDid => 'Референтен DID';
	@override String get pleaseEnterTheReferrersDid => 'Моля, въведете валиден децентрализиран идентификатор на референта';
	@override String get thisDidIsInvalid => 'Този DID е невалиден';
	@override String get nicknameFormatTips => 'Прякорът не може да бъде празен и дължината не може да надвишава 16 символа';
	@override String get additionalIinformation => 'Допълнителна информация';
	@override String get invitationSubject => 'Покана за участие в изграждането на консенсус в Delta';
	@override String invitationLetter({required Object did}) => 'Здравейте, участвам в изграждането на консенсус в Delta!\nDelta е платформа с отворен код за нови цифрови валути (крипто), работеща на InternetComputer. Тя може да управлява и използва различни цифрови валути без пароли, частни ключове или мнемонични фрази. Моля, кликнете върху този линк https://delta.kim/auto/download, за да инсталирате приложението. Сега ви каним да се присъедините към нас в изграждането на консенсус и добиването на токъни.\nРеферентен DID: ${did}';
	@override String get dSMSverification => 'dSMS проверка';
	@override String get getAccessNumbers => 'получаване на няколко номера за достъп';
	@override String get getAccessNumberPromptMessage => 'Кликнете върху бутона "Получи" , за да изберете номера за SMS/whatsapp (global) проверка от групата за верификация';
	@override String get optionalAccessNumbers => 'допълнителни номера за достъп';
	@override String get accessNumber => 'Номер за достъп';
	@override String get TELCO => 'TELCO';
	@override String get score => 'Резултат';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('bg'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Моля, проверете '),
			nBuilder(n),
			const TextSpan(text: ' номер за достъп и кликнете върху бутона "'),
			span('text'),
			const TextSpan(text: '", за да продължите към следващата стъпка.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Моля, проверете '),
			nBuilder(n),
			const TextSpan(text: ' номера за достъп и кликнете върху бутона "'),
			span('text'),
			const TextSpan(text: '", за да продължите към следващата стъпка.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta е експериментален проект с отворен код за глобална децентрализирана цифрова валута и екосистема от приложения за валути.';
	@override String get deltaGoalsDesc => 'Целта е да се даде възможност на хората да използват Delta, за да изградят заедно универсална, справедлива, сигурна, бърза и зелена нова цифрова валута. И да предоставят различни ефективни приложни сценарии за тези цифрови валути и вече съществуващите криптовалути.';
	@override String get details => 'детайли';
	@override String get get => 'Получи';
	@override String get select => 'Избери';
	@override String get send => 'Изпрати';
	@override String get complete => 'Завърши';
	@override String get selectedAccessNumberPrompt => 'Когато е избран пълният номер за достъп се показва и се генерира низ за удостоверяване.';
	@override String get location => 'Местоположение';
	@override String get verificationString => 'Низ за удостоверяване';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Моля, използвайте вашия телефонен номер '),
		num,
		const TextSpan(text: ', изпратете '),
		label,
		const TextSpan(text: ' до '),
		accessNumber,
		const TextSpan(text: ', за да завършите проверката.'),
	]);
	@override String get ihaveSentTheSMS => 'Изпратих SMS';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Низът за удостоверяване е валиден за 6 минути, оставащо време: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Твърде бързо, изчакайте ${x} секунди, преди да продължите!';
	@override String get waitingForVerificationSMS => 'Чакане за SMS за проверка...';
	@override String get partSuccsForVerificationSMS => 'SMS проверката е премината от един от терминалите за достъп.';
	@override String get creatingAccessToken => 'Създаване на токен за достъп...';
	@override String get intoDelta => 'В Delta';
	@override String get deltaAccountIsLoggedIn => 'Вашият Delta акаунт е вписан';
	@override String get iHavLoggedOut => 'Да, вече излязох';
	@override String get startTwoFactorVerification => 'стартиране на двуфакторна проверка';
	@override String get securityCircleVerification => 'Проверка чрез кръга за сигурност';
	@override String get generateSecurityCode => 'Генериране на секретен код';
	@override String get generateSecurityCodeHintText => 'Генерираният секретен код ще бъде изпратен на избран член от вашия кръг за сигурност.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Все още не сте задали кръг за сигурност, вашият акаунт е много несигурен. Моля, въведете произволен 6-цифрен код и продължете към следващата стъпка.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Кодът за сигурност е генериран, моля, свържете се със следните роднини или приятели и ги помолете да извлекат кода за сигурност , за да преминете проверката. Валиден в рамките на 30 минути!';
	@override String get itGetSecurityCodeTip => 'Съвет: Избрания член от кръга за сигурност може да генерира ключ за сигурност от  (Delta -> Меню -> Предоставяне на сигурност) и двойно кликване на вашия профил.';
	@override String get securityCircleMemberList => 'Списък с членове в кръга за сигурност:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Моля, изберете роднина или приятел от списъка с членове, за да ви генерира и предостави код за сигурност, с който ще се извърши проверка на вашата истинска идентичност. Целта е да се предотврати контролът на акаунта ви от други, когато телефонният номер е загубен или откраднат.';
	@override String formatIsXdigits({required Object num}) => 'Форматът е ${num} цифри';
	@override String get signInSuccessfully => 'Успешен вход!';
	@override String get twoFAandLogin => 'Двуфакторна автентикация и вход';
	@override String get verificationSuccessful => 'Проверката е успешна!';
	@override String get validationFailed => 'Проверката е неуспешна!';
	@override String get securityCircle => 'Кръг за сигурност';
	@override String get securityCode => 'Код за сигурност';
	@override String get provideSecurity => 'Предоставяне на сигурност';
	@override String get addManully => 'добави ръчно';
	@override String get addFromContacts => 'добави от Контакти';
	@override String get addSecurityCircle => 'Добавяне на кръг за сигурност';
	@override String get inputType => 'тип на въвеждане';
	@override String get mobileNumber => 'Мобилен номер';
	@override String get did => 'did';
	@override String get pleaseEnterValidDID => 'Моля, въведете валиден децентрализиран идентификатор';
	@override String get pleaseEnterValidWalletAddress => 'Моля, въведете валиден адрес на портфейл';
	@override String get appellation => 'Обръщение';
	@override String get appellationHint => 'как го наричате(прякор), например "бейби"';
	@override String get addSecurityCircleTips => 'Моля, не добавяйте непознати хора в кръга за сигурност.';
	@override String get referralTeam => 'Референтен екип';
	@override String get profile => 'Профил';
	@override String get menu => 'Меню';
	@override String get directly => 'директно';
	@override String get indirectly => 'индиректно';
	@override String get inviteContacts => 'покани контакти';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Вашият референт е '),
		nickname,
		const TextSpan(text: ', Вие сте директно препоръчали '),
		num1,
		const TextSpan(text: ' човека и '),
		num2,
		const TextSpan(text: ' от тях са в момента онлайн.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Вие сте индиректно препоръчали '),
		num1,
		const TextSpan(text: ' човека, включително '),
		num2,
		const TextSpan(text: ' човека, които са в момента онлайн.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Поканете приятели да се присъединят към Delta за да подобрим социалния консенсус заедно. Скоростта на добив на всеки директно препоръчан човек се увеличава с '),
		rate1,
		const TextSpan(text: ' от базовата скорост. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Поканете приятели да се присъединят към Delta за да подобрим социалния консенсус заедно. Скоростта на добив на всеки индиректно препоръчан човек се увеличава с '),
		rate2,
		const TextSpan(text: ' от базовата скорост.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Сигурни ли сте, че искате да премахнете "${name}"?';
	@override String get safetyCircleRoleQ => 'Каква е функцията на кръга за сигурност?';
	@override String get safetyCircleRoleA => 'Предоставя вторична автентикация в чувствителни ситуации, за да защити сигурността на вашият акаунтна .';
	@override String get howSecurityCirclesWorkQ => 'Как работи кръга за сигурност?';
	@override String get howSecurityCirclesWorkA => 'Когато е необходима проверка чрез кръга за сигурност, програмата за интелигентен договор на Delta ще избере произволно член от списъка с приятели в кръга за сигурност, за да ви помогне да предоставите код за сигурност и да завършите проверката на идентичността. Когато поискате от член код за сигурност, той може да потвърди, че наистина сте вие. В същото време програмата ще ви напомни: "Ако не сте вие, откажете предоставиянето на кода за сигурност", за да защити сигурността на вашия акаунтн. Затова винаги трябва да се уверявате, че членовете на вашия кръг  за сигурност са хора, на които можете да се доверите.';
	@override String get securityCircleBeUsedQ => 'Кога ще го използвате?';
	@override String get securityCircleBeUsedA1 => '1. Когато загубите контрол върху своя телефон (откраднат изгубен) съответно и върху приложението Delta.';
	@override String get securityCircleBeUsedA2 => '2. В случай на някои чувствителни операции, програмата за интелигентен договор на Delta трябва да потвърди, че сте вие.';
	@override String get provideSafetyTip1 => 'Когато вашият приятел ви поиска код за сигурност, моля, да се уверите, че това наистина е той.';
	@override String get provideSafetyTip2 => 'Вие предоставяте защита за приятелите по-горе. Те са ви задали като най-надеждния човек в кръга за сигурност, и вие трябва да предоставяте потвърждение за сигурност за тях, когато техните акаунти срещнат чувствителни операции.';
	@override String get provideSafetyTip3 => 'Когато е необходимо ,извличане на код за сигурност кликвате два пъти върху аватара на другата страна, за да извлечете кода.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'Другата страна в момента няма код за сигурност, който трябва да бъде извлечен!';
	@override String get existSecurityCodeTip => 'Моля, бъдете сигурни, че роднините или приятелите, които ви искат код за сигурност, са те самите. За да защитите сигурността на роднините или приятелите, трябва да откажете да го предоставите, ако не сте сигурни, че са реално те.';
	@override String get avatarSettings => 'Настройки на аватара';
	@override String get NFTAvatarPropertyRightsText => 'Отказ от отговорност: Използването на свързани NFT като аватари е само лично предпочитание и няма нищо общо с притежаването на правата върху интелектуалната собственост на NFT.';
	@override String get projectWebsite => 'Уебсайт на проекта: ';
	@override String get whitepaper => 'бяла книга:';
	@override String get indexID => 'Индекс Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Индексите са между ${start} и ${end}';
	@override String get inputToLoadNFTAvatarTip => 'Въведете индекса на вашия любим NFT и програмата ще го зареди автоматично като ваш аватар.';
	@override String get miningRate => 'Скорост на добив';
	@override String get miningDetails => 'Детайли за добива';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Обща скорост на добив: '),
		rate,
		const TextSpan(text: ' δ/ден'),
	]);
	@override String get EndOfMiningSession => 'Край на сесията за добив след: ';
	@override String get tapToMineDeltaCoin => 'Кликнете, за да започнете добиване Delta токъни↑';
	@override String get clickToStartMining => 'Кликнете, за да започнете добива!';
	@override String get miningHasStoppedPromptDesc => 'Добивът е спрян. Цикъла за добив е 24ч, кликнете върху светкавицата , за да започнете нов 24часов цикъл. Добивът на Delta е механизъм за разпределение, който не консумира допълнителна изчислителна мощност и мрежов трафик на вашето устройство.';
	@override String get aboutBaseRate => 'За базовата скорост?';
	@override String get baseRateDescription => 'Според споразумението в бялата книга, основното правило за намаляване на скоростта на добив на Delta ще бъде разделено на два етапа. \n Фаза 1: Когато броят на участниците (регистрации) е 3000 или по-малко, скоростта е 32δ/ден. Използвайки това като начална точка, всеки път, когато броят на хората се увеличи с фактор 10, базовата скорост се намалява наполовина. \n Фаза 2: Когато броят на участниците достигне 30 милиона и повече, базовата скорост се намалява наполовина всеки път, когато броят на хората се увеличи 3 пъти. До изчерпване на токъните предвидени за добиване.';
	@override String get baseRate => 'Базова скорост';
	@override String get directReferralRewards => 'Награди за директни препоръки';
	@override String get directReferralRewardDesc => 'Всеки директно препоръчан човек, който е в състояние на добив,увеличава вашата скорост на добиване с 1/3 от базовата скорост. \n\n Освен това, състоянието на добив на вашия референт също ще бъде изчислено в наградата ви за директна препоръка.';
	@override String get indirectReferralRewards => 'Награди за индиректни препоръки';
	@override String get indirectReferralRewardDesc => 'Когато индиректният препоръчител е в състояние на добив, вашата скорост на добив ще бъде допълнително увеличена с 1/10 от базовата скорост. \n\nВашият директно препоръчан екип и всеки човек, който те препоръчат, представляват индиректна препоръка за вас.';
	@override String get mine => 'Добивай';
	@override String get thisMiningInformation => 'Информация за добива';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Участвали сте в добив: '),
		x,
		const TextSpan(text: ' пъти'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Общ доход този път: '),
		x,
		const TextSpan(text: ' Delta монети'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Основен доход: '),
		x,
		const TextSpan(text: ' монети'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Принос на директния екип: '),
		x,
		const TextSpan(text: ' монети'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Принос на индиректния екип: '),
		x,
		const TextSpan(text: ' монети'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Времеви интервал от последния добив: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Ефективно време на добив: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} часа';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'За сигурността на активите, членовете на кръга сигурност трябва да поддържат 3-5 доверени човека по всяко време.';
	@override String get index => 'Индекс';
	@override String get amount => 'Количество';
	@override String get balance => 'Баланс';
	@override String get timeStamp => 'дата и час';
	@override String get summary => 'Резюме';
	@override String get miningHasStopped => 'Добивът е спрян.';
	@override String get miningHasStoppedDesc => 'Вашият добив в момента е спрян, можете да започнете добив на токъни сега.';
	@override String get startMining => 'ЗАПОЧНИ ДОБИВ';
	@override String get changeMobileNumber => 'Промяна на мобилен номер';
	@override String get currentMobileNumber => 'Текущ мобилен номер';
	@override String get newMobileNumber => 'Нов мобилен номер';
	@override String get securityCodeFormatIs6digits => 'Форматът на кода за сигурност е 6 цифри!';
	@override String get startVrification => 'стартиране на проверката';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Този мобилен номер вече съществува, асоцииран DID: ${dId}';
	@override String get noDataYet => 'Все още няма данни';
	@override String get previousMobileNumber => 'предишен мобилен номер';
	@override String get changeLog => 'дневник на промените';
	@override String get referralLinkToShare => 'Реферална връзка за споделяне';
	@override String get referrer => 'Референт';
	@override String get isoCountryCode => 'ISO код на държавата';
	@override String get avatarLogo => 'Лого на аватара';
	@override String get creationTime => 'Време на създаване';
	@override String get lastUpdate => 'последна актуализация';
	@override String get numberOfSecurityCircleMembers => 'Брой членове в кръга за сигурност';
	@override String get theLatestMining => 'Последен добив';
	@override String get effectiveMiningDays => 'Ефективни дни на добив';
	@override String get modifyNickname => 'промяна на прякора';
	@override String get didNotChange => 'не се промени!';
	@override String get kycVerification => 'KYC проверка';
	@override String get faceID => 'Face ID';
	@override String get touchID => 'Touch ID';
	@override String get biometricsAuthorizationTest => 'Тест за вход с биометрични данни';
	@override String get currentState => 'Текущо състояние';
	@override String get biometricsAuthenticationLocalizedReason => 'Използвайте заключването на устройството си, за да потвърдите идентичността си.';
	@override String get graph => 'Графика';
	@override String get referralRelationshipGraph => 'Графика на референтните връзки';
	@override String get nativeContacts => 'Собствени контакти';
	@override String get registrationAndMiningTrends => 'Тенденции на регистрации и добив';
	@override String get inMining => 'в добив';
	@override String get registrationVolume => 'Обем на регистрациите';
	@override String get unmined => 'не-добит';
	@override String get mined => 'Добит';
	@override String get communityMining => 'добив на общността';
	@override String get consensusPromotionFund => 'Фонд за промоция на консенсус';
	@override String get ecologicalAwardFund => 'Фонд за екологични награди';
	@override String get icpFuelCrowdfunding => 'ICP гориво за групово финансиране';
	@override String get coreDeveloperRewards => 'Заплати за основните разработчици';
	@override String get totalAllocation => 'Общо разпределение';
	@override String get miningRatio => 'Съотношение на добива';
	@override Map<String, String> get billion => {
		'300': '300 милиарда',
		'180': '180 милиарда',
		'30': '30 милиарда',
		'60': '60 милиарда',
	};
	@override String get watchAdsToSupportDevelopers => 'Гледайте реклами, за да подкрепите разработчиците';
	@override String get loadingAdcomponents => 'Зареждане на рекламни компоненти…';
	@override String get timeIsNotUp => 'Времето не е изтекло!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Зареждането е неуспешно, може би мрежата е блокирана!';
	@override String get pendingUSCTrecords => 'Чакащи USCT записи';
	@override String get pendingUSCTrecordsDesc => 'Чакащите USCT записи ще бъдат сравнени и потвърдени с рекламната платформа в рамките на 15-30 дни, валидните записи ще бъдат прехвърлени в списъка с USCT записи и съответното количество USCT ще бъде добавено към баланса на акаунта.';
	@override String get validity => 'валидност';
	@override String get advertiser => 'рекламодател';
	@override String get earned => 'Спечелено';
	@override String get withdraw => 'теглене';
	@override String get validUSCTrecords => 'Валидни USCT записи';
	@override String get USCTmining => 'USCT добив';
	@override String get aboutUSCTmining => 'За USCT добива?';
	@override String get aboutUSCTminingItme1 => '1. USDT е популярна световно стабилна монета в щатски долари, която може лесно да бъде преобразувана в суверенни валути на различни държави на световните основни криптовалутни борси.';
	@override String get aboutUSCTminingItme2 => '2. USCT е временна измервателна стойност на доходите от USCT добив, пълното име е USD кредит и накрая може да бъде преобразувана в USDT според действителната разплащателна квота и правилата за разпределение на рекламната платформа и в съответната пропорция.';
	@override String get aboutUSCTminingItme3 => '3. USCT добивът е функция за монетизация на реклама в общността на Delta. Използвайте огромната потребителска база на общността на Delta, за да предоставите множество ползи за рекламодателите, разработчиците на Delta и потребителите. Неговата цел е да предостави определено количество ефективен доход за отсъствията в ранния етап на екологията на Delta, когато тя все още не е формирана и процъфтява; в същото време, също предоставя определено финансово подпомагане за разработчиците, за да гарантира, че разработчиците могат да продължат да предоставят услуги за разработка за дълго време и накрая да реализират цялото планиране на белия документ; също предоставя ефективен канал за промоция за рекламодателите на продукти.';
	@override String get aboutUSCTminingItme4 => '4. Правилата за разпределение са проектирани така, че 40% от общите доходи ще бъдат използвани като комисионни за технически услуги на разработчиците, а останалите 60% ще бъдат използвани като награди за отсъствията в общността. Частта за награди за отсъствията използва модел за многостепенно разпределение, подобен на DTC, и тези награди за отсъствията са разделени на 3 дела според съотношението 6:3:1, като 60% от наградата за отсъствията за един USCT добив всеки път са разпределени на отсъстващия, който в момента гледа рекламата, 30% са разпределени на горния препоръчител и 10% са разпределени на второстепенния препоръчител. По същия начин, вие също можете да получите същите награди за препоръчител от приятелите, които препоръчате чрез USCT добив. Предимството на такова многостепенно разпределение е, че всеки може да получи относително голямо количество USDT ползи, като развие офлайн екип.';
	@override String get aboutUSCTminingItme5 => '5. Периодът на фактуриране е 7 дни, тоест валидността се проверява с рекламната платформа на всеки 7 дни и потвърдените ефективни доходи и действителното количество ще бъдат записани в баланса. Минималното количество за всяко теглене е 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Редове ${x} до ${y}';
	@override String get wallet => 'Портфейл';
	@override String get multiChainWallet => 'мулти-чейн портфейл';
	@override String get deposit => 'Депозит';
	@override String get transfer => 'Прехвърляне';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} в адреса на портфейла';
	@override String get transactions => 'Транзакции';
	@override String get network => 'Мрежа';
	@override String get walletAddress => 'Адрес на портфейла';
	@override String get currentAddress => 'текущ адрес';
	@override String get depositAddress => 'адрес за депозит';
	@override String get receivingMoneyAddress => 'Адрес за получаване на пари';
	@override String get applyTempDepositAddress => 'Заявка за временен адрес за депозит';
	@override String get tempDepositAddressTip => '1. Това е споделен адрес за депозит. Моля, не депозирайте сумата след изтичане на срока. Сумата ще бъде загубена, ако това се случи.';
	@override String get tempDepositAddressTip2 => '2. Преди да депозирате, моля, бъдете сигурни, че [име на веригата] и [име на валутата] съвпадат точно; ако е токън , вие също трябва да потвърдите, че [стандарта на договора] и [адреса на договора] съвпадат точно.';
	@override String get tempDepositAddressTip3 => '3. Моля, не опитвайте да депозирате средства, които не съвпадат точно с всички параметри от горните съвети, в противен случай сумата ще бъде загубена.';
	@override String get tempDepositAddressTip4 => '4. Ако трябва да депозирате други видове активи, моля, превключете към съответната страница с валута и опции за параметри, за да заявите нов адрес.';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Адресът ще изтече след '),
		diff,
		const TextSpan(text: ', и периодът на валидност може да бъде '),
		tap('ръчно удължен'),
		const TextSpan(text: ' в рамките на 12 часа преди изтичането.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Може да бъде удължен само в рамките на 12 часа предварително';
	@override String get theReceivingAddressValidForLongtime => 'Адресът за получаване е валиден за дълго време.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Адресът за получаване е валиден за дълго време и ще бъде автоматично кредитиран в реално време.';
	@override String get confirmDeposited => 'Потвърдете депозита';
	@override String get unbindThisDepositAddress => 'Разкачете този адрес за депозит';
	@override String get confirmDepositedTip => 'Ако средствата са били прехвърлени, моля, кликнете върху горния бутон след 10 минути, за да задействате отчитането в портфейла.';
	@override String get unbindDepositAddressTip => 'ако няма да бъдат депозирани повече средства в рамките на периода на валидност, моля, разкачете адреса за депозит, за да се намали използването на смарт контракти.';
	@override String get transferToAddress => 'прехвърляне към адрес';
	@override String get longPressToPaste => 'Задръжте за поставяне';
	@override String get all => 'Всички';
	@override String balanceX({required Object x}) => 'Баланс ${x}';
	@override String get transferOut => 'Изтегляне';
	@override String depositXcoins({required Object x}) => 'Депозиране на ${x}';
	@override String get sender => 'Изпращач';
	@override String get recipient => 'Получател';
	@override String get memo => 'memo';
	@override String get kind => 'Вид';
	@override String get transferAmountExceedsAvailableBalance => 'Сумата за прехвърляне надвишава наличния баланс';
	@override String get pleaseEnterValidAmount => 'Моля, въведете валидна сума';
	@override String get networkFee => 'Такса на мрежата';
	@override String get fee => 'такса';
	@override String validLengthXcharacters({required Object x}) => 'Валидната дължина е ${x} символа';
	@override String get historys => 'История';
	@override String get dtcCreditdetail => 'История на Delta прихода';
	@override String get usdCreditdetail => 'История на USD прихода';
	@override String get dappSquare => 'dApp площадка';
	@override String get amountRaised => 'Събрана сума';
	@override String get disbursedAmount => 'Разпр. сума';
	@override String get participationTimes => 'Брой участия';
	@override String get completionRate => '% на завършване';
	@override String get exchangeRate => 'Обменен курс';
	@override String get icpCrowdfunding => 'ICP краудфъндинг';
	@override String get crowdfunding => 'Краудфъндинг';
	@override String get trendsCurve => 'Крива на тенденциите';
	@override String get fullScreenView => 'преглед на цял екран';
	@override String get walletBalance => 'Баланс на портфейла: ';
	@override String get manageWallet => 'Управление на портфейл';
	@override String get fundraiseAmount => 'Събрана сума';
	@override String get exchangeRewardAmount => 'Общо за получаване';
	@override String get fundraise => 'набиране средства';
	@override String rangeIntegersX({required Object x}) => 'Диапазон: цели числа ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Успешно участие в събирането на средства и получаване на награда от ${amount}DTCT';
	@override String get amountSummary => 'Наличност на сумитеа';
	@override String get changePreferred => 'Промяна на предпочитанията';
	@override String get changePreferredAddress => 'Промяна на предпочитания адрес';
	@override String get preferredAddressTip => 'При получаване на пари с помощта на регистриран мобилен номер или DID, средствата ще бъдат автоматично прехвърлени към предпочитания адрес.';
	@override String get newAddress => 'Нов адрес';
	@override String get newAddressTip => 'За да се предотврати злоупотреба, когато има повече от един адрес на портфейл, ще се налага такса за всяка нова създадена транзакция.';
	@override String get createNew => 'Създаване на нов';
	@override String get chainNetworkName => 'Име на мрежата';
	@override String get from => 'От';
	@override String get to => 'До';
	@override String get noAvailableDepositAmountDetected => 'Не е открита налична сума за депозит!';
	@override String get crossChainReceiveMoneyMonitoring => 'Наблюдение на получаване на пари между веригите …';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Получени('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Потвърждаване('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Бележки (задължително за начинаещи)';
	@override String get whyUseSharedAddresses => 'Защо използваме споделени адреси?';
	@override String get useSharedrAdvantage => 'Когато става въпрос за депозити в кросчейн, ползите от използването на споделени адреси са:';
	@override String get useSharedrAdvantage1 => '1. Намаляване на загубите от такси за превод и намаляване на разходите за потребителите. Тъй като ако се използва изключителен адрес, средствата ще бъдат твърде разпръснати. За да се улесни прехвърлянето на други потребители при теглене, когато потребителят прави депозит, вторичното прехвърляне на средства трябва да бъде събрано в един или малък брой адреси за управление.';
	@override String get useSharedrAdvantage2 => '2. В споделеното решение, програмата трябва само да поддържа относително малък адресен пул, който може бързо да съпостави изходящите средства и да извърши леко потвърждение на транзакцията, което може да намали изчислителните ресурсни разходи. За разлика от това, с изключителни адреси, ситуацията е точно обратната.';
	@override String get tokenType => 'Тип на токъна';
	@override String get contract => 'Договор';
	@override String get contractStandard => 'Стандарт на договора';
	@override String get contractAddress => 'Адрес на договора';
	@override String get native => 'Роден';
	@override String get confirmUnbindingPleaseEnterYes => 'За да потвърдите разкачането, моля, въведете "да"';
	@override String get listAllWorkingTempReceivingAddresses => 'Списък с всички работещи временни адреси за получаване между веригите';
	@override String get setNote => 'Задайте бележка';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Дължината не може да надвишава ${x} байта';
	@override String get transferFee => 'Такса за превод';
	@override String get crossChainFee => 'Кросчейн такса';
	@override String get crossChainTransferOutError => 'Грешка при прехвърляне между веригите';
	@override String get chainName => 'Име на веригата';
	@override String get message => 'Съобщение';
	@override String get dontShowAgain => 'Не показвайте отново';
	@override String get queuing => 'Чакане на опашка';
	@override String get optional => 'По избор';
	@override String get publiclyVisible => 'Публично видим';
	@override String get rates => 'Такси';
	@override String get minimum => 'Минимум';
	@override String get maximum => 'Максимум';
	@override String get minimumBlockConfirmations => 'Минимално потвърждение на блок';
	@override String get dsmsVerifyTerminal => 'DSMS терминал за проверка';
	@override String get overall => 'Общо';
	@override String get my => 'Собствен';
	@override String get getVerifierPermissions => 'Получаване на разрешение за валидатор';
	@override String get checkValidatorQualifications => 'Проверка на квалификацията за валидатор';
	@override String get qualification => 'Квалификация';
	@override String get upperLimit => 'Горна граница';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Максимален брой терминали, разрешени за достъп';
	@override String get numberOfExistingAccessTerminals => 'Брой на съществуващите терминали за достъп';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Преди да кандидатствате за разрешения за валидатор, трябва да подготвите празен Android телефон и специален номер за достъп, и да изтеглите и инсталирате приложението за DSMS терминал за достъп.';
	@override String get downloadLink => 'Линк за изтегляне';
	@override String get alreadyReadyFollowingTheAboveTips => 'Вече сте готови, следвайки горните съвети';
	@override String get globalUniversal => 'Глобален универсален';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'В момента няма достатъчно местни валидатори, които да участват в услугата за достъп до DSMS проверка. Моля, изберете услугата за достъп "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'Като специален номер за достъп';
	@override String pleaseCheckTip({required Object tip}) => 'Моля, проверете "${tip}"';
	@override String get inputLengthTooShort => 'Въведената дължина е твърде кратка';
	@override String get shortName => 'Кратко име';
	@override String pleaseEnterXname({required Object name}) => 'Моля, въведете ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Кандидатурата се изпраща, моля, изчакайте...';
	@override String get applyForDSMSVerifierPermission => 'Кандидатстване за DSMS валидатор';
	@override String get confirmInformation => 'Потвърждаване на информацията';
	@override String get lastHeartbeat => 'Последен пулс';
	@override String get expirationTime => 'Време на изтичане';
	@override String get country => 'Държава';
	@override String get accessTerminals => 'Терминали за достъп';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Общ брой на DSMS терминали за достъп';
	@override String get textContent => 'Съдържание на текста';
	@override String get scanQRcodeToLogin => 'Сканирайте QR кода за влизане';
	@override String get confirmLogin => 'Потвърдете влизането';
	@override String get authorizeSubApplicationToLogin => 'Разрешаване на подприложението да влезе';
	@override String get authorizationSuccessful => 'Влизането е успешно!';
	@override String get launchSMSprogram => 'Стартиране на SMS програма';
	@override String get notApplied => 'Не е приложено';
	@override String get validityPeriod => 'Период на валидност';
	@override String get renewal => 'Подновяване';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Сканирайте код, за да разрешите влизане на терминала';
	@override String get rewards => 'Награди';
	@override String get roles => 'Роли';
	@override String get developerCenter => 'Център за разработчици';
	@override String get appName => 'Име на приложението';
	@override String get pleaseSelect => 'Моля, изберете';
	@override String get category => 'Категория';
	@override String get keywords => 'Ключови думи';
	@override String get pleaseEnterAkeyword => 'Моля, въведете ключова дума';
	@override String get createApplication => 'Създаване на приложение';
	@override String get appType => 'Тип на приложението';
	@override String get numberOfCategoriesMustBetween1and3 => 'Броят на категориите трябва да бъде между 1 и 3';
	@override String get appLogoSpecifications => 'Формат на изображението: png, размер: до 100KB, резолюция (пиксели): 256 * 256';
	@override String get localAlbum => 'Локален албум';
	@override String get networkPath => 'Мрежов път';
	@override String get imageURLkAddress => 'URL адрес на изображение';
	@override String get urlAddressFormatIsIncorrect => 'Форматът на URL адреса е неправилен';
	@override String get imageFormatOnlySupportsPng => 'Форматът на изображението поддържа само "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'Дължината трябва да бъде между ${a}-${b} знака';
	@override String get introduction => 'Представяне';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'Размерът на изображението не може да бъде по-голям от ${a}, в момента е ${b}';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'Резолюцията на изображението трябва да бъде: ${p1}(пиксели), в момента е ${p2}';
	@override String get becomeDeveloper => 'Станете разработчик';
	@override String get developerInformation => 'Информация за разработчика';
	@override String get teamName => 'Име на екипа';
	@override String get website => 'Уеб сайт';
	@override String get other => 'Други';
	@override String get githubVerification => 'Проверка в GitHub';
	@override String get exampleUrl => 'Примерен URL';
	@override String githubVerificationTip({required Object did}) => 'Моля, използвайте вашия GitHub акаунт, за да създадете файл \'delta.did\' в хранилището със съдържание \'${did}\'; след това, поставете githubusercontent url на файла в това поле за въвеждане за удостоверяване.';
	@override String get createApp => 'Създаване на приложение';
	@override String get appManagement => 'Управление на приложение';
	@override String get statusLogs => 'Статус логове';
	@override String get bad => 'Лошо';
	@override String get normal => 'Нормално';
	@override String get good => 'Добро';
	@override String get onceCreatedItCannotBeChanged => 'След като бъде създадено, не може да бъде променено!';
	@override String get manageApplicationEntity => 'Управление на приложението';
	@override String get currentVersion => 'Текуща версия';
	@override String get submitVersion => 'Изпращане на версия';
	@override String get packageOnlySupportZipCompressedFile => 'Пакетът поддържа само zip компресиран файл';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Файлът \'${name}\' не беше намерен в zip пакета';
	@override String get fileList => 'Списък на файлове: ';
	@override String get programPackage => 'Пакет на програма: ';
	@override String get automaticallyExtractFromVersionFile => 'Автоматично извличане от файл \'.version\'';
	@override String get dappVersionFormatTip => 'Форматът на номера на версията трябва да бъде десетичен и точността трябва да се поддържа на 2 цифри, като максимумът не може да надвишава 99.99';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Номерът на версията трябва да бъде по-голям от текущата версия \'${v}\'';
	@override String get versionNotes => 'Бележки за версията: ';
	@override String get dappInfo => 'DApp информация';
	@override String get updateRelease => 'Обновяване на изданието';
	@override String get loadAndRun => 'Зареждане и стартиране';
	@override String get notYetSubmittedProgramPackage => 'Все още не е изпратен пакет на програма!';
	@override String get authorizeMinidAppLogin => 'Разрешаване на влизане в мини-DApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Потвърдете разрешаването, моля, въведете "yes"';
	@override String get authorizeNow => 'Разреши сега';
	@override String get operation => 'Операция: ';
	@override String get statusChange => 'Промяна на състоянието';
	@override String get changeTo => 'Промени на: ';
	@override String get notes => 'Бележки: ';
	@override String get changesNotEffective => 'Промените не са ефективни!';
	@override String get released => 'Издание';
	@override String get inPublicBeta => 'В публична бета версия';
	@override String get developers => 'Разработчици: ';
	@override String get reviewList => 'Списък за преглед: ';
	@override String get postReview => 'Публикуване на преглед';
	@override String get scoreNow => 'Оценете сега';
	@override String get description => 'Описание: ';
	@override String get noData => '(^-^) \n Няма данни';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Версията е обновена от ${a} до ${b}';
	@override String get loadNewVersion => 'Зареждане на нова версия';
	@override String get name => 'Име: ';
	@override String get canisterId => 'CanisterId: ';
	@override String get updateTime => 'Обновено на';
	@override String get contractCanistersState => 'Състояние на договорните контейнери';
	@override String get userDistribution => 'Регистрирани потребители';
	@override String get settings => 'Настройки';
	@override String get security => 'Сигурност';
	@override String get invite => 'Покани';
	@override String get more => 'Още…';
	@override String get receiveAddress => 'Адрес за получаване: ';
	@override String get hangingAmount => 'Висяща сума';
	@override String get hangingAmountTips => 'Висящата сума е временен запис на наградите, генерирани от приятелите които сте поканили. След като извършите добив , тези суми ще бъдат събрани в чакащата сума.';
	@override String get pendingAmount => 'Чакаща сума';
	@override String get pendingAmountTips => 'Чакащата сума се отнася до сумата, която все още не е потвърдена и сравнена с рекламодателя. Сумата, която е потвърдена, ще бъде прехвърлена към валидния запис на USCT. Ако има невалидна част, тя ще бъде изключена.';
	@override String get received => 'Получено';
	@override String get processing => 'Обработване';
	@override String get replied => 'Отговорено';
	@override String get rejected => 'Отхвърлено';
	@override String get unknown => 'Неизвестно';
	@override String get insufficientBalance => 'Недостатъчен баланс!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Недостатъчен ${x} баланс за плащане на мрежовата такса между веригите';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Има транзакция, която не е завършена и не може да бъде прехвърлена в момента.';
	@override String get thisfunctionNotSupportExternalCalls => 'Тази функция не поддържа външни обаждания';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Няма съвпадащ адрес, който може да бъде използван за плащане на такси между веригите, моля, превключете към други мрежи.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'Текущата максимална съвпадаща единична сума за прехвърляне е ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Бележката не трябва да бъде повече от 64 байта';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Недостатъчен баланс, сумата е: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Броят на свързаните адреси за получаване не може да надвишава 3. \n Ако трябва да свържете нов адрес за получаване, \n моля, първо разкачете друг адрес за получаване.';
	@override String parametersA_exception({required Object x}) => 'Параметри: ${x}, изключение';
	@override String get transferAmountMustBeLargerThan0 => 'Сумата за прехвърляне трябва да бъде по-голяма от 0';
	@override String get authorizationHasExpired => 'Ауторизацията е изтекла';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'Приложението не е ауторизирано от собственика';
	@override String get authenticationTokenIsInvalid => 'Токънът за удостоверяване е невалиден';
	@override String get verifyInfoIsInvalidOrExpired => 'Информацията за проверка е невалидна или е изтекла';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Проверете дали броят на терминалите за достъп е надвишил лимита от един на 10 000';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'За да се участвате трябва да сте добивали повече от 3 дни';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Броят на членовете в кръга за сигурност не може да бъде по-малък от 3 души';
	@override String get avatarIsNotSet => 'Аватарът не е зададен';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Броят на директно препоръчаните лица не може да бъде по-малък от 3 души';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Недостатъчен времеви лимит, мобилният номер може да бъде променен само веднъж годишно.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Този мобилен номер вече съществува и не може да бъде повторен';
	@override String get securityCodeIsIncorrect => 'Кодът за сигурност е неправилен';
	@override String get securityCodeMayHaveExpired => 'Кодът за сигурност е невалиден или изтекъл';
	@override String get sessionIdIsInvalidOrExpired => 'Сесията е невалидна или е изтекла';
	@override String get sessionHasBeenAuthorized => 'Сесията е удостоверена!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Може да бъде подновена само в рамките на ${x} дни преди изтичането';
	@override String get notYetGrantedDeveloperPermissions => 'Все още не са предоставени разрешения за разработчик';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Полето email ${x} не може да бъде празно';
	@override String get emailFormatError => 'Грешка във формата на имейла';
	@override String theXformatIsIncorrect({required Object x}) => 'Форматът \'${x}\' е неправилен';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Дължината на полето \'${x}\' трябва да бъде между ${y} и ${z} знака.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Изборът \'${x}\' трябва да бъде между ${y} и ${z}';
	@override String get unchanged_sameAsOldContent => 'Непроменено, съдържанието е същото като старото!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' вече съществува!';
	@override String get mobileNumberHasNotJoinedDelta => 'Този мобилен номер все още не се е присъединил към Delta！';
	@override String get referrerIdCannotBeEmpty => 'ID на препоръчителя не може да бъде празен! ';
	@override String get referrerIdDoesNotExist => 'ID на препоръчителя не съществува!';
	@override String get didIsIncorrectOrInvalid => 'DID е неправилен или невалиден！';
	@override String get accessTokenIsIncorrectOrInvalid => 'Токънът за достъп е неправилен или невалиден！';
	@override String get minimumWithdrawalAmountIs1USD => 'Минималната сума за теглене е 1USD';
	@override String get miningTimeIsNotYet => 'Времето за добиване още не е настъпило';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Вече съществува, моля, не добавяйте отново!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Този номер не може да бъде използван като номер за валидатор';
	@override String get canotAddYourSelf => 'Не можете да добавите себе си';
	@override String get logOut => 'Изход';
	@override String get confirmLogout => 'Потвърдете изход';
	@override String get logOutTipsText => 'Приятелско напомняне: Според съответното споразумение в бялата книга, всяко влизане в акаунта ще ви струва определено количество DTC монети, които ще бъдат изплатени на проверяващия, като стимул. Моля, не се опитвайте да влизате и излизате, ако не е необходимо. Кликнете върху следния бутон, за да излезете веднага.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Потвърдете изход, моля, въведете "yes"';
	@override String get tip => 'Съвет';
	@override String get cancel => 'Отказ';
	@override String get close => 'Затвори';
	@override String get selected => 'Избран';
	@override String get edit => 'Редактиране';
	@override String get submit => 'Изпращане';
	@override String get goBack => 'Назад';
	@override String get copiedToClipboard => 'Копирано в клипборда.';
	@override String get nickname => 'Прякор';
	@override String get confirm => 'Потвърди';
	@override String get cannotBeEmpty => 'не може да бъде празно';
	@override String get deleteSuccessful => 'Успешно изтриване!';
	@override String get successfullyModified => 'Успешно променено!';
	@override String get executionSuccessful => 'Успешно изпълнено!';
	@override String get parameterException => 'Изключение при параметри!';
	@override String get preview => 'Преглед';
	@override String get followSystem => 'Следвай системата';
	@override String get change => 'Промяна';
	@override String get replace => 'Замяна';
	@override String get view => 'Преглед';
	@override String get manage => 'Управление';
	@override String get modify => 'Промяна';
	@override String get replacedSuccessfully => 'Успешно променено!';
	@override String get authentication => 'Удостоверяване';
	@override String get reacquire => 'Повторно получаване';
	@override String get tryAgain => 'Опитайте отново';
	@override String get querying => 'Заявка …';
	@override String get writingToOnChain_pleaseWait => 'Записване в блокчейн мрежата, моля, изчакайте …';
	@override String get versionCheck => 'Проверка на версията';
	@override String get alreadyLatestVersion => 'Използвате последната версия!';
	@override String get foundNewVersion => 'Има налична нова версия:';
	@override String get upgradeLink => 'Линк за надграждане: ';
	@override String get deviceDescription => 'Описание на устройството: ';
	@override String get notification30SecondsBeforeMiningStops => 'Получаване на известие 30 секунди преди добивната дейност да спре!';
	@override String get goMining => 'Започнете добива';
	@override String get deltaMiningReminder => 'Напомняне за добив в Delta';
	@override String get clickToMine_miningIsAboutToStop => 'Кликнете тук, за добиване, текущото добиване е на път да спре!';
	@override String get incorrect_input => 'Некоректен вход !';
	@override String get are_you_sure_delete => 'Сигурни ли сте, че искате да изтриете?';
	@override String get delete_account => 'Изтриване на акаунт';
	@override String get how_to_operate_it => 'Как да го изпълните?';
	@override String get deletion_warning_tip => 'Ако изтриете акаунта си, ще загубите всички свои Delta монети и всички доходи от други членове също ще бъдат загубени.';
	@override String get launchWhatsAppProgram => 'Стартиране на WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Номерата за достъп с тази икона показват, че те също поддържат проверка чрез WhatsApp съобщение. При изпращане на международни съобщения се препоръчва използването на WhatsApp, за да се увеличи степента на успех и да се избегнат разходите за SMS.';
	@override String get ihaveSentVerificationString => 'Изпратих кода за проверка';
	@override String get totalOfPeople => 'Общо хора: ';
	@override String get numberOfPeopleMining => 'Брой хора, които добиват';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Можете да използвате браузър на друго устройство, за да сканирате QR кода и да го предадете на SMS програмата';
	@override String get toggle => 'Превключване';
	@override String get DSMSverifier => 'DSMS валидатор';
	@override String get activate => 'Активиране';
	@override String get activated => 'Активиран';
	@override String get generateActivationCommand => 'Генериране на команда за активиране';
	@override String get activationCommand => 'Команда за активиране';
	@override String get activationSentedTip => 'След изпращане на SMS за активиране, моля, проверете състоянието на активиране на устройството за достъп.';
	@override String get biometricsNotEnabledTip => 'Вашето устройство не е активирало биометричните данни (лице или пръстов отпечатък), моля, активирайте ги, за да продължите.';
	@override String get error => 'Грешка';
	@override String get exceptionOccurredWhenCallingBiometric => 'Възникна грешка при извикване на функцията за биометрично разпознаване (лице или пръстен отпечатък)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' номера за достъп са проверени, '),
		shouldNum,
		const TextSpan(text: ' трябва да бъдат избрани.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Беше ли изпратено съобщени със съдържание: ${text} към номера за достъп: ${n} ?';
	@override String get interface => 'Интерфейс:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Време за изчакване или несъответствие на номера на изпращача';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Мобилният номер, който въведохте на члена от кръга за сигурност, не съвпада: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Влезте в рамките на 10 минути след излизане, за да избегнете двуфакторна проверка.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Поне ${n} мобилни телефонни номера трябва да бъдат попълнени';
	@override String get noAccessNumberInYourRegionYet => 'Все още няма номер за достъп във Вашия регион';
	@override String get notEnoughAccessNumbersInYourRegion => 'Няма достатъчно номера за достъп във вашия регион';
	@override String get tipsForDeployDSMSterminal => 'Системата автоматично е заредила някои номера за достъп от други държави за вас. За да предоставите по-добри и евтини услуги за проверка, се препоръчва вие или вашето препоръчано лице да разположите DSMS терминала локално, за да печелите такси за проверка.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Никой не може да ми предостави кода за сигурност?';
	@override String get useSupplementalMode => 'Използване на допълнителен режим';
	@override String get returnToSecurityCodeMode => 'Връщане към режим на код за сигурност';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Моля, въведете свързания им мобилен номер. Кодът на държавата може да бъде пропуснат.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Мобилният номер на ${name} е неправилен';
	@override String get matchingVerificationStrategyIs => 'Стратегията за проверка на съответствието е:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Салдо по-голямо от 3 ICP, няма нужда да се налива гориво за момента.';
	@override String get escrowAccount => 'Escrow акаунт';
	@override String get fuelRelay => 'Реле за гориво';
	@override String get pourFuel => 'Наливане на гориво';
	@override String get fuelState => 'състояние на гориво';
	@override String get pouringFuelTips => 'Наливането на гориво не ви носи никакви предимства или недостатъци, целта му е да обогати изживяването на системата Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Спонсорирайте разработчиците, като гледате реклами';
	@override String get status => 'Състояние';
	@override String get date => 'Дата';
}

// Path: <root>
class _StringsBn implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsBn.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.bn,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <bn>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsBn _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'প্রথম পাতা';
	@override String get switchLanguage => 'ভাষা পরিবর্তন করুন';
	@override String get languageSwitch => 'ভাষা সুইচ';
	@override String get slogan => 'ব-দ্বীপে একটি বিকেন্দ্রীভূত অর্থনৈতিক বৃত্ত তৈরি করুন';
	@override String get countryRegionCode => 'দেশের কোড';
	@override String get countryRegionSelection => 'দেশ এবং অঞ্চল নির্বাচন';
	@override String get nextStep => 'পরবর্তী ধাপ';
	@override String get yourPhoneNumber => 'আপনার ফোন নম্বর';
	@override String get pleaseSelectCountryAndRegion => 'আপনার দেশ/অঞ্চল নির্বাচন করুন';
	@override String get pleaseEnterPhoneNumber => 'একটি বৈধ ফোন নম্বর লিখুন!';
	@override String get referrerDid => 'সুপারিশকারী DID';
	@override String get pleaseEnterTheReferrersDid => 'অনুগ্রহ করে একটি বৈধ সুপারিশকারীর বিকেন্দ্রীকৃত পরিচয় আইডি লিখুন';
	@override String get thisDidIsInvalid => 'এই DID অবৈধ';
	@override String get nicknameFormatTips => 'ডাকনাম খালি হতে পারে না এবং দৈর্ঘ্যে 16 অক্ষরের বেশি হতে পারে না';
	@override String get additionalIinformation => 'সম্পূরক তথ্য';
	@override String get invitationSubject => 'ডেল্টা ঐক্যমত্য বিল্ডিংয়ে অংশগ্রহণের জন্য আপনাকে আমন্ত্রণ জানাই';
	@override String invitationLetter({required Object did}) => 'হ্যালো, আমি ডেল্টা ঐক্যমত্য বিল্ডিংয়ে অংশগ্রহণ করছি! \n ডেল্টা হল একটি ওপেন সোর্স নতুন ডিজিটাল কারেন্সি প্ল্যাটফর্ম যা ICP-এ চলছে। অ্যাপ্লিকেশনটি ইনস্টল করতে দয়া করে https://delta.kim/auto/download এই লিঙ্কে ক্লিক করুন এবং আপনাকে এখন ঐকমত্য তৈরি এবং মুদ্রা তৈরিতে অংশগ্রহণের জন্য আমন্ত্রণ জানানো হয়েছে। \n সুপারিশকারী DID: ${did}';
	@override String get dSMSverification => 'DSMS যাচাইকরণ';
	@override String get getAccessNumbers => 'কিছু অ্যাক্সেস নম্বর পান';
	@override String get getAccessNumberPromptMessage => 'সারিতে থাকা SMS যাচাইকরণ অ্যাক্সেস নম্বরগুলির একটি গ্রুপ নির্বাচন করতে নীচের "পান" বোতামে ক্লিক করুন৷';
	@override String get optionalAccessNumbers => 'ঐচ্ছিক অ্যাক্সেস নম্বর';
	@override String get accessNumber => 'অ্যাক্সেস নম্বর';
	@override String get TELCO => 'অপারেটর';
	@override String get score => 'স্কোর';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('bn'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'অনুগ্রহ করে '),
			nBuilder(n),
			const TextSpan(text: ' অ্যাক্সেস নম্বর চেক করুন এবং পরবর্তী ধাপে যেতে "'),
			span('text'),
			const TextSpan(text: '" বোতামে ক্লিক করুন'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'অনুগ্রহ করে '),
			nBuilder(n),
			const TextSpan(text: ' অ্যাক্সেস নম্বরগুলি পরীক্ষা করুন এবং পরবর্তী ধাপে যেতে "'),
			span('text'),
			const TextSpan(text: '" বোতামটি ক্লিক করুন '),
		]),
	);
	@override String get whatIsDeltaDesc => 'ডেল্টা হল একটি ওপেন সোর্স বিকেন্দ্রীকৃত বিশ্বব্যাপী ডিজিটাল মুদ্রার পরীক্ষামূলক প্রকল্প এবং কারেন্সি অ্যাপ্লিকেশন ইকোলজিক্যাল চেইন।';
	@override String get deltaGoalsDesc => 'লক্ষ্য হল ডেল্টা ব্যবহার করার জন্য জনগণকে যৌথভাবে একটি নতুন ডিজিটাল মুদ্রা তৈরি করার অনুমতি দেওয়া যা সর্বজনীন, ন্যায্য, নিরাপদ, দ্রুত এবং সবুজ। এবং এই ডিজিটাল মুদ্রা এবং পূর্ববর্তী ক্রিপ্টোকারেন্সিগুলির জন্য বিভিন্ন কার্যকর প্রয়োগের পরিস্থিতি প্রদান করে।';
	@override String get details => 'বিস্তারিত';
	@override String get get => 'পান';
	@override String get select => 'চয়ন করুন';
	@override String get send => 'পাঠান';
	@override String get complete => 'শেষ করুন';
	@override String get selectedAccessNumberPrompt => 'নির্বাচিত হলে, সম্পূর্ণ অ্যাক্সেস নম্বর প্রদর্শিত হয় এবং একটি যাচাইকরণ স্ট্রিং তৈরি হয়।';
	@override String get location => 'অবস্থান';
	@override String get verificationString => 'বৈধতা স্ট্রিং';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan accessNumber, required InlineSpan label}) => TextSpan(children: [
		const TextSpan(text: 'আপনার ফোন নম্বর '),
		num,
		const TextSpan(text: ' ব্যবহার করুন এবং যাচাইকরণ সম্পূর্ণ করতে '),
		accessNumber,
		const TextSpan(text: ' এ '),
		label,
		const TextSpan(text: ' পাঠান।'),
	]);
	@override String get ihaveSentTheSMS => 'আমি একটি টেক্সট বার্তা পাঠিয়েছি';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'যাচাইকরণ স্ট্রিংটি 6 মিনিটের মধ্যে বৈধ, বাকি সময়: '),
		time,
		const TextSpan(text: '।'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'খুব দ্রুত, চালিয়ে যাওয়ার আগে ${x} সেকেন্ড অপেক্ষা করুন!';
	@override String get waitingForVerificationSMS => 'যাচাইকরণ SMS এর জন্য অপেক্ষা করা হচ্ছে...';
	@override String get partSuccsForVerificationSMS => 'একসেস টার্মিনালের এসএমএস ভেরিফিকেশন হয়ে গেছে!';
	@override String get creatingAccessToken => 'অ্যাক্সেস টোকেন তৈরি করা হচ্ছে...';
	@override String get intoDelta => 'ডেল্টায়';
	@override String get deltaAccountIsLoggedIn => 'আপনার ডেল্টা অ্যাকাউন্ট লগ ইন হয়েছে';
	@override String get alreadyLoggedInOnAnotherDeviceTip1 => '1. ডিভাইস থেকে লগ আউট করার পরে আবার চেষ্টা করুন.';
	@override String get alreadyLoggedInOnAnotherDeviceTip2 => '2. অথবা সিকিউরিটি সার্কেল + এসএমএস ডবল ভেরিফিকেশনের মাধ্যমে জোর করে লগইন করুন।';
	@override String get iHavLoggedOut => 'আমি লগ আউট করেছি';
	@override String get startTwoFactorVerification => 'দ্বি-পদক্ষেপ যাচাইকরণ শুরু করুন';
	@override String get securityCircleVerification => 'নিরাপত্তা সার্কেল যাচাইকরণ';
	@override String get generateSecurityCode => 'নিরাপত্তা কোড তৈরি করুন';
	@override String get generateSecurityCodeHintText => 'জেনারেট করা সিকিউরিটি কোডটি আপনার সিকিউরিটি সার্কেলের একজন এলোমেলোভাবে নির্বাচিত সদস্যের কাছে পাঠানো হবে।';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'আপনি একটি নিরাপত্তা বৃত্ত সেট আপ করেননি আপনার অ্যাকাউন্ট খুব অনিরাপদ যেকোন 6-সংখ্যার স্থানধারক লিখুন এবং পরবর্তী ধাপে যান৷';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'নিরাপত্তা কোড তৈরি করা হয়েছে দয়া করে নিম্নলিখিত আত্মীয় এবং বন্ধুদের সাথে যোগাযোগ করুন যাতে আপনি যাচাইকরণ পাস করতে নিরাপত্তা কোড বের করতে পারেন। 30 মিনিটের মধ্যে বৈধ!';
	@override String get itGetSecurityCodeTip => 'টিপ: ডেল্টা অ্যাপ -> মেনু -> সুরক্ষা পৃষ্ঠাতে আপনার অ্যাকাউন্টের ডাকনাম খুঁজুন এবং নিরাপত্তা কোড পেতে এটিতে ডাবল-ক্লিক করুন।';
	@override String get securityCircleMemberList => 'নিরাপত্তা সার্কেলের সদস্য তালিকা:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'আপনার আসল পরিচয় যাচাই করার জন্য একটি নিরাপত্তা কোড তৈরি করতে এবং আপনাকে প্রদান করতে সদস্য তালিকায় অনুগ্রহ করে একজন আত্মীয় বা বন্ধু নির্বাচন করুন। উদ্দেশ্য হল মোবাইল ফোন নম্বর হারিয়ে গেলে বা চুরি হয়ে গেলে অ্যাকাউন্টটি অন্যদের দ্বারা নিয়ন্ত্রিত হওয়া থেকে বিরত রাখা।';
	@override String formatIsXdigits({required Object num}) => 'বিন্যাস হল ${num} সংখ্যা';
	@override String get signInSuccessfully => 'লগইন সফল!';
	@override String get twoFAandLogin => 'দ্বি-পদক্ষেপ যাচাইকরণ এবং লগইন';
	@override String get verificationSuccessful => 'যাচাইকরণ সফল!';
	@override String get validationFailed => 'যাচাইকরণ ব্যর্থ হয়েছে!';
	@override String get dappInfo => 'DApp তথ্য';
	@override String get securityCircle => 'নিরাপত্তা বৃত্ত';
	@override String get securityCode => 'নিরাপত্তা কোড';
	@override String get provideSecurity => 'নিরাপত্তা প্রদান';
	@override String get addManully => 'ম্যানুয়ালি যোগ করুন';
	@override String get addFromContacts => 'ঠিকানা বই থেকে যোগ করুন';
	@override String get addSecurityCircle => 'নিরাপত্তা বৃত্ত যোগ করুন';
	@override String get inputType => 'ইনপুট প্রকার';
	@override String get mobileNumber => 'ফোন নম্বর';
	@override String get did => 'ঠিকানা আইডি';
	@override String get pleaseEnterValidDID => 'অনুগ্রহ করে একটি বৈধ বিকেন্দ্রীকৃত পরিচয় আইডি লিখুন';
	@override String get pleaseEnterValidWalletAddress => 'একটি বৈধ ওয়ালেট ঠিকানা লিখুন';
	@override String get appellation => 'শিরোনাম';
	@override String get appellationHint => 'তুমি এটাকে কি বলবে, যেমন "শিশু"';
	@override String get addSecurityCircleTips => 'আপনার নিরাপত্তা বৃত্তে আপনি বিশ্বাস করেন না এমন লোকেদের যোগ করবেন না।';
	@override String get referralTeam => 'সুপারিশকৃত দল';
	@override String get profile => 'অ্যাকাউন্ট তথ্য';
	@override String get menu => 'মেনু';
	@override String get directly => 'সরাসরি';
	@override String get indirectly => 'পরোক্ষ';
	@override String get inviteContacts => 'পরিচিতিদের আমন্ত্রণ জানান';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'আপনার আমন্ত্রণকারী হলেন '),
		nickname,
		const TextSpan(text: ', এবং আপনি সরাসরি '),
		num1,
		const TextSpan(text: ' জনকে সুপারিশ করেছেন, যাদের মধ্যে '),
		num2,
		const TextSpan(text: 'টি বর্তমানে অনলাইন রয়েছে৷'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'আপনি পরোক্ষভাবে '),
		num1,
		const TextSpan(text: ' জনকে সুপারিশ করেছেন, যাদের মধ্যে '),
		num2,
		const TextSpan(text: ' বর্তমানে অনলাইনে রয়েছে।'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'বন্ধুদের ডেল্টায় যোগ দিতে আমন্ত্রণ জানান এবং একসাথে সামাজিক ঐকমত্য উন্নত করুন। একজন ব্যক্তির প্রতিটি সরাসরি সুপারিশ মাইনিং রেটকে বেস রেটের '),
		rate1,
		const TextSpan(text: ' হারে বাড়িয়ে দেয়। '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'বন্ধুদের ডেল্টায় যোগদানের জন্য আমন্ত্রণ জানান এবং একসাথে সামাজিক সম্মতি উন্নত করতে একজন ব্যক্তির প্রতিটি পরোক্ষ সুপারিশ খননের হারকে মূল হারের '),
		rate2,
		const TextSpan(text: ' দ্বারা বৃদ্ধি করবে।'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'আপনি কি "${name}" মুছে ফেলার বিষয়ে নিশ্চিত?';
	@override String get safetyCircleRoleQ => 'নিরাপত্তা বৃত্তের কাজ কি?';
	@override String get safetyCircleRoleA => 'আপনার অ্যাকাউন্টের নিরাপত্তা রক্ষা করতে সংবেদনশীল পরিস্থিতিতে দ্বি-ফ্যাক্টর প্রমাণীকরণ প্রদান করুন।';
	@override String get howSecurityCirclesWorkQ => 'নিরাপত্তা বৃত্ত কিভাবে কাজ করে?';
	@override String get howSecurityCirclesWorkA => 'যখন যাচাইকরণের জন্য নিরাপত্তা বৃত্তের প্রয়োজন হয়, তখন ডেল্টা স্মার্ট কন্ট্রাক্ট প্রোগ্রাম এলোমেলোভাবে সিকিউরিটি সার্কেল ফ্রেন্ড লিস্ট থেকে একজন সদস্যকে বেছে নেবে আপনার জন্য পরিচয় নিরাপত্তা যাচাইকরণ সম্পূর্ণ করার জন্য একটি নিরাপত্তা কোড প্রদান করতে। আপনি সদস্যকে নিরাপত্তা কোড জিজ্ঞাসা করলে, এটি নিশ্চিত করতে পারে যে এটি আপনিই। একই সময়ে, প্রোগ্রামটি অনুরোধ করবে: "আপনি না হলে নিরাপত্তা কোড প্রদান করতে অস্বীকার করুন" আপনার অ্যাকাউন্টের নিরাপত্তা রক্ষা করতে। তাই আপনার সর্বদা নিশ্চিত হওয়া উচিত যে আপনার নিরাপত্তা বৃত্তের সদস্যরা আপনি বিশ্বাস করতে পারেন।';
	@override String get securityCircleBeUsedQ => 'কখন এটি ব্যবহার করা হবে?';
	@override String get securityCircleBeUsedA1 => '1. যখন আপনার Delta APP নিয়ন্ত্রণ হারায়, তখন সাধারণত ফোনটি হারিয়ে বা চুরি হয়ে যায়।';
	@override String get securityCircleBeUsedA2 => '2. কিছু সংবেদনশীল অপারেশনের ক্ষেত্রে, ডেল্টা স্মার্ট কন্ট্রাক্ট প্রোগ্রামকে নিশ্চিত করতে হবে যে এটি আপনিই।';
	@override String get provideSafetyTip1 => 'যখন আপনার বন্ধু আপনাকে তার নিরাপত্তা কোড জিজ্ঞাসা করে, নিশ্চিত করুন যে এটি সে বা তার।';
	@override String get provideSafetyTip2 => 'আপনি উপরের বন্ধুদের জন্য নিরাপত্তা সুরক্ষা প্রদান করছেন তারা আপনাকে নিরাপত্তা বৃত্তের সবচেয়ে বিশ্বস্ত ব্যক্তি হিসাবে সেট করেছে এবং তাদের অ্যাকাউন্টগুলি সংবেদনশীল ক্রিয়াকলাপের সম্মুখীন হলে আপনাকে তাদের নিরাপত্তা নিশ্চিত করতে হবে৷';
	@override String get provideSafetyTip3 => 'প্রয়োজনে নিরাপত্তা কোড বের করতে অন্য পক্ষের অবতারে ডাবল-ক্লিক করুন।';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'অন্য পক্ষের বর্তমানে একটি নিরাপত্তা কোড নেই যা পুনরুদ্ধার করা প্রয়োজন!';
	@override String get existSecurityCodeTip => 'দয়া করে নিশ্চিত করুন যে আপনার কাছ থেকে নিরাপত্তা কোডের জন্য অনুরোধ করা আত্মীয় বা বন্ধুটি আপনার আত্মীয় বা বন্ধুর নিরাপত্তা রক্ষা করার জন্য, যদি এটি আত্মীয় বা বন্ধু না হয় তবে আপনার এটি প্রদান করতে অস্বীকার করা উচিত।';
	@override String get avatarSettings => 'অবতার সেটিংস';
	@override String get NFTAvatarPropertyRightsText => 'বিবৃতি: একটি অবতার হিসাবে প্রাসঙ্গিক NFT ব্যবহার করা শুধুমাত্র ব্যক্তিগত পছন্দের জন্য এবং NFT এর বৌদ্ধিক সম্পত্তি অধিকারের মালিকানার সাথে কোন সম্পর্ক নেই।';
	@override String get projectWebsite => 'প্রকল্প ওয়েবসাইট:';
	@override String get whitepaper => 'সাদা কাগজ:';
	@override String get indexID => 'IndexId';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'সূচক পরিসীমা ${start} এবং ${end} এর মধ্যে';
	@override String get inputToLoadNFTAvatarTip => 'আপনার প্রিয় NFT এর সূচক আইডি লিখুন এবং প্রোগ্রামটি স্বয়ংক্রিয়ভাবে আপনার জন্য একটি অবতার হিসাবে এটি লোড করবে।';
	@override String get miningRate => 'খনির হার';
	@override String get miningDetails => 'খনির বিবরণ';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'মোট খনির হার: '),
		rate,
		const TextSpan(text: ' δ/দিন'),
	]);
	@override String get EndOfMiningSession => 'চক্র খনির সমাপ্তি:';
	@override String get tapToMineDeltaCoin => 'ডেল্টা কয়েন খনিতে ক্লিক করুন ↑';
	@override String get clickToStartMining => 'মাইনিং শুরু করতে ক্লিক করুন!';
	@override String get miningHasStoppedPromptDesc => 'খনির একটি নতুন রাউন্ড শুরু করতে প্রতি 24 ঘন্টা খনি বন্ধ হয়ে গেছে। ডেল্টার মাইনিং হল একটি ডিস্ট্রিবিউশন মেকানিজম যা আপনার ডিভাইস থেকে অতিরিক্ত কম্পিউটিং পাওয়ার এবং নেটওয়ার্ক ট্রাফিক খরচ করে না।';
	@override String get aboutBaseRate => 'বেস রেট সম্পর্কে কি?';
	@override String get baseRateDescription => 'শ্বেতপত্রে বলা হয়েছে, ডেল্টা মাইনিংয়ের মৌলিক হার হ্রাসের নিয়ম দুটি পর্যায়ে বিভক্ত করা হবে। \nপর্যায় 1: যখন অংশগ্রহণকারীদের সংখ্যা (নিবন্ধন) 3000 বা তার কম, হার 32δ/দিন। এটিকে প্রারম্ভিক বেসলাইন হিসাবে ব্যবহার করে, প্রতিবার লোকের সংখ্যা 10 গুণ বেড়ে গেলে, মৌলিক হার অর্ধেক হয়ে যায়। \nপর্যায় 2: যখন অংশগ্রহণকারীদের সংখ্যা 30 মিলিয়ন বা তার উপরে পৌঁছায়, প্রতিবার অংশগ্রহণকারীদের সংখ্যা তিনগুণ বাড়লে মূল হার অর্ধেক হয়ে যায়। চূড়ান্ত খনন শেষ না হওয়া পর্যন্ত উৎপাদন বন্ধ ছিল।';
	@override String get baseRate => 'ভিত্তি হার';
	@override String get directReferralRewards => 'সরাসরি রেফারেল পুরস্কার';
	@override String get directReferralRewardDesc => 'আপনি সরাসরি সুপারিশ করেন এমন প্রত্যেক ব্যক্তির জন্য, যখন তারা খনির স্থিতিতে থাকবে, তখন আপনার খনির হার মূল হারের অতিরিক্ত 1/3 দ্বারা বৃদ্ধি পাবে।\n\n এছাড়াও, আপনার রেফারারের মাইনিং স্ট্যাটাসও আপনার সরাসরি রেফারেল পুরস্কারে গণনা করা হবে।';
	@override String get indirectReferralRewards => 'পরোক্ষ রেফারেল পুরস্কার';
	@override String get indirectReferralRewardDesc => 'যখন একজন পরোক্ষ রেফারার মাইনিং স্ট্যাটাসে থাকে, তখন আপনার মাইনিং রেট বেস রেটের অতিরিক্ত 1/10 দ্বারা বৃদ্ধি পাবে।\n\n আপনার প্রত্যক্ষ সুপারিশ দল, তারা সুপারিশ করা প্রতিটি ব্যক্তি আপনার জন্য একটি পরোক্ষ সুপারিশ প্রতিনিধিত্ব করে।';
	@override String get mine => 'খনির';
	@override String get thisMiningInformation => 'এই খনির তথ্য';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'খনিতে অংশগ্রহণ করেছে: '),
		x,
		const TextSpan(text: ' বার'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'এইবার মোট আয়: '),
		x,
		const TextSpan(text: ' ডেল্টা কয়েন'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'মৌলিক আয়: '),
		x,
		const TextSpan(text: ' কয়েন'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'সরাসরি দলের অবদান: '),
		x,
		const TextSpan(text: ' কয়েন'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'পরোক্ষ দল অবদান: '),
		x,
		const TextSpan(text: ' কয়েন'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'শেষ খনন থেকে সময়ের ব্যবধান: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'কার্যকরী খনির সময়: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} ঘন্টা';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'সম্পদের নিরাপত্তার জন্য, নিরাপত্তা চক্রের সদস্যদের সর্বদা 3-5 জন বিশ্বস্ত লোক রাখা উচিত।';
	@override String get index => 'সূচক';
	@override String get amount => 'পরিমাণ';
	@override String get balance => 'ভারসাম্য';
	@override String get timeStamp => 'টাইমস্ট্যাম্প';
	@override String get summary => 'সারাংশ';
	@override String get miningHasStopped => 'খনন বন্ধ হয়ে গেছে।';
	@override String get miningHasStoppedDesc => 'আপনার মাইনিং বর্তমানে বন্ধ, অবিলম্বে আয় উপার্জন শুরু করুন.';
	@override String get startMining => 'খনন শুরু করুন';
	@override String get changeMobileNumber => 'মোবাইল নম্বর পরিবর্তন করুন';
	@override String get currentMobileNumber => 'বর্তমান মোবাইল নম্বর';
	@override String get newMobileNumber => 'নতুন মোবাইল নম্বর';
	@override String get securityCodeFormatIs6digits => 'সিকিউরিটি কোড ফরম্যাট ৬ ডিজিটের!';
	@override String get startVrification => 'যাচাইকরণ শুরু করুন';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'এই মোবাইল নম্বরটি ইতিমধ্যেই বিদ্যমান, সংশ্লিষ্ট DID: ${dId}';
	@override String get noDataYet => 'এখনো কোনো তথ্য নেই';
	@override String get previousMobileNumber => 'আগের মোবাইল নম্বর';
	@override String get changeLog => 'ইতিহাস পরিবর্তন করুন';
	@override String get referralLinkToShare => 'প্রস্তাবিত লিঙ্ক শেয়ারিং';
	@override String get referrer => 'সুপারিশকারী';
	@override String get isoCountryCode => 'ISO দেশের কোড';
	@override String get avatarLogo => 'অবতার লোগো';
	@override String get creationTime => 'সৃষ্টির সময়';
	@override String get lastUpdate => 'সর্বশেষ আপডেট করা হয়েছে';
	@override String get numberOfSecurityCircleMembers => 'নিরাপত্তা চক্রের সদস্য সংখ্যা';
	@override String get theLatestMining => 'সর্বশেষ খনির';
	@override String get effectiveMiningDays => 'কার্যকর খননের দিনের সংখ্যা';
	@override String get modifyNickname => 'ডাকনাম পরিবর্তন করুন';
	@override String get didNotChange => 'কিছুই বদলায়নি!';
	@override String get kycVerification => 'কেওয়াইসি যাচাইকরণ';
	@override String get faceID => 'ফেস আইডি';
	@override String get touchID => 'ফিঙ্গারপ্রিন্ট আইডি';
	@override String get biometricsAuthorizationTest => 'বায়োমেট্রিক প্রমাণীকরণ পরীক্ষা';
	@override String get currentState => 'বর্তমান অবস্থা';
	@override String get biometricsAuthenticationLocalizedReason => 'আপনার পরিচয় যাচাই করতে আপনার ডিভাইসের আনলক ব্যবহার করুন।';
	@override String get graph => 'এটলাস';
	@override String get referralRelationshipGraph => 'রেফারেল সম্পর্ক গ্রাফ';
	@override String get nativeContacts => 'স্থানীয় যোগাযোগ';
	@override String get registrationAndMiningTrends => 'নিবন্ধন এবং খনির প্রবণতা';
	@override String get inMining => 'খনির';
	@override String get registrationVolume => 'নিবন্ধন সংখ্যা';
	@override String get unmined => 'unmined';
	@override String get mined => 'খনন করা';
	@override String get communityMining => 'সম্প্রদায় খনির';
	@override String get consensusPromotionFund => 'ঐক্যমত প্রচার তহবিল';
	@override String get ecologicalAwardFund => 'পরিবেশগত পুরস্কার তহবিল';
	@override String get icpFuelCrowdfunding => 'আইসিপি ফুয়েল ক্রাউডফান্ডিং';
	@override String get coreDeveloperRewards => 'মূল বিকাশকারী পুরস্কার';
	@override String get totalAllocation => 'মোট বরাদ্দ';
	@override String get miningRatio => 'খনির অনুপাত';
	@override Map<String, String> get billion => {
		'30': '30 বিলিয়ন',
		'60': '60 বিলিয়ন',
		'180': '180 বিলিয়ন',
		'300': '300 বিলিয়ন',
	};
	@override String get watchAdsToSupportDevelopers => 'বিকাশকারীদের সমর্থন করার জন্য বিজ্ঞাপনগুলি দেখুন';
	@override String get loadingAdcomponents => 'বিজ্ঞাপনের উপাদান লোড হচ্ছে...';
	@override String get timeIsNotUp => 'এখনো সময় আসেনি!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'লোডিং ব্যর্থ হয়েছে, নেটওয়ার্ক অবরুদ্ধ হতে পারে!';
	@override String get pendingUSCTrecords => 'মুলতুবি USCT রেকর্ড';
	@override String get pendingUSCTrecordsDesc => 'মুলতুবি USCT রেকর্ডগুলি নিশ্চিতকরণের জন্য 15-30 দিনের মধ্যে বিজ্ঞাপনের প্ল্যাটফর্মের সাথে তুলনা করা হবে USCT রেকর্ড তালিকায় স্থানান্তর করা হবে এবং সংশ্লিষ্ট USCT পরিমাণ অ্যাকাউন্ট ব্যালেন্সে যোগ করা হবে।';
	@override String get validity => 'কার্যকারিতা';
	@override String get advertiser => 'বিজ্ঞাপনদাতা';
	@override String get earned => 'অর্জিত';
	@override String get withdraw => 'প্রত্যাহার';
	@override String get validUSCTrecords => 'বৈধ USCT রেকর্ড';
	@override String get USCTmining => 'ইউএসসিটি মাইনিং';
	@override String get aboutUSCTmining => 'USCT খনির সম্পর্কে?';
	@override String get aboutUSCTminingItme1 => '1. USDT হল একটি বিশ্বব্যাপী জনপ্রিয় মার্কিন ডলারের স্থিতিশীল মুদ্রা যা সারা বিশ্বের মূলধারার ক্রিপ্টোকারেন্সি এক্সচেঞ্জে সহজেই বিভিন্ন দেশের সার্বভৌম মুদ্রায় রূপান্তরিত হতে পারে।';
	@override String get aboutUSCTminingItme2 => '2. USCT হল USCT খনির আয়ের একটি অস্থায়ী পরিমাপ মূল্য, পুরো নাম হল USD ক্রেডিট, যা প্রকৃত নিষ্পত্তির পরিমাণ এবং বিজ্ঞাপন প্ল্যাটফর্মের বন্টন নিয়ম অনুযায়ী এবং সংশ্লিষ্ট অনুপাতে USDT-তে রূপান্তরিত হতে পারে।';
	@override String get aboutUSCTminingItme3 => '3. ইউএসসিটি মাইনিং হল ডেল্টা সম্প্রদায়ের একটি ট্রাফিক বিজ্ঞাপন নগদীকরণ ফাংশন। বিজ্ঞাপনদাতা, ডেল্টা ডেভেলপার এবং ঠিকাদারদের জন্য একাধিক সুবিধা প্রদানের জন্য ডেল্টা সম্প্রদায়ের বৃহৎ ব্যবহারকারী বেস ব্যবহার করুন। এর ডিজাইনের উদ্দেশ্য হল প্রাথমিক পর্যায়ে অনুপস্থিতদের জন্য একটি নির্দিষ্ট পরিমাণ কার্যকর আয় প্রদান করা যখন ডেল্টা ইকোসিস্টেম এখনও তৈরি হয়নি এবং একই সাথে এটি বিকাশকারীদেরকে নিশ্চিত করতে নির্দিষ্ট আর্থিক সহায়তা প্রদান করে দীর্ঘমেয়াদে উন্নয়ন পরিষেবা, এবং শেষ পর্যন্ত শ্বেতপত্রে সমস্ত পরিকল্পনা উপলব্ধি করতে সক্ষম হবেন পণ্যের বিজ্ঞাপনদাতাদের জন্য একটি কার্যকর প্রচার চ্যানেলও প্রদান করবে;';
	@override String get aboutUSCTminingItme4 => '4. বিতরণের নিয়মগুলি এমনভাবে ডিজাইন করা হয়েছে যে মোট রাজস্বের 40% ডেভেলপার প্রযুক্তিগত পরিষেবা কমিশন হিসাবে ব্যবহার করা হয় এবং অবশিষ্ট 60% সম্প্রদায় অনুপস্থিত পুরস্কার হিসাবে ব্যবহৃত হয়। অনুপস্থিত পুরষ্কার অংশটি DTC এর অনুরূপ একটি বহু-স্তরের বন্টন মডেল গ্রহণ করে 6:3:1 অনুপাত অনুসারে এই অনুপস্থিতির পুরষ্কারগুলির 60% একটি USCT খনির জন্য বরাদ্দ করা হয়৷ অনুপস্থিত যারা বর্তমানে বিজ্ঞাপনটি দেখছেন, 3 পয়েন্ট বরাদ্দ করা হয়েছে উচ্চতর সুপারিশকারীকে, এবং 1টি উপাদান দ্বিতীয় স্তরের সুপারিশকারীকে বরাদ্দ করা হয়েছে। একইভাবে, আপনি যদি USCT-এর মাধ্যমে আমার বন্ধুদের সুপারিশ করেন, আপনিও একই রেফারারের পুরস্কার পেতে পারেন। এই ধরনের মাল্টি-লেভেল ডিস্ট্রিবিউশনের সুবিধা হল যে কেউ একটি অফলাইন দল তৈরি করে তুলনামূলকভাবে বড় পরিমাণে USDT আয় পেতে পারে।';
	@override String get aboutUSCTminingItme5 => '5. নিষ্পত্তি চক্র 7 দিন, অর্থাৎ, বৈধতা প্রতি 7 দিনে বিজ্ঞাপন প্ল্যাটফর্মের সাথে পরীক্ষা করা হয়, এবং বৈধ বলে নিশ্চিত হওয়া রাজস্ব এবং প্রকৃত পরিমাণ ব্যালেন্সে রেকর্ড করা হবে। প্রতিটি তোলার জন্য সর্বনিম্ন পরিমাণ হল 10 USDT।';
	@override String linesXtoY({required Object x, required Object y}) => 'লাইন ${x} থেকে ${y}';
	@override String get wallet => 'মানিব্যাগ';
	@override String get multiChainWallet => 'মাল্টি-চেইন ওয়ালেট';
	@override String get deposit => 'জমা';
	@override String get transfer => 'স্থানান্তর';
	@override String xcoinInWallet({required Object coinCode}) => 'ওয়ালেট ঠিকানায় ${coinCode}';
	@override String get transactions => 'লেনদেনের ইতিহাস';
	@override String get network => 'নেটওয়ার্ক';
	@override String get walletAddress => 'ওয়ালেট ঠিকানা';
	@override String get currentAddress => 'বর্তমান ঠিকানা';
	@override String get depositAddress => 'রিচার্জ ঠিকানা';
	@override String get receivingMoneyAddress => 'পেমেন্ট ঠিকানা';
	@override String get applyTempDepositAddress => 'একটি অস্থায়ী রিচার্জ ঠিকানার জন্য আবেদন করুন';
	@override String get tempDepositAddressTip => '1. এটি একটি শেয়ার করা ডিপোজিট ঠিকানা। ইজারার মেয়াদ শেষ হওয়ার পরে বা সীমাহীন হওয়ার পরে অনুগ্রহ করে পরিমাণ জমা করবেন না। যদি এটি ঘটে তবে পরিমাণটি নষ্ট হয়ে যাবে।';
	@override String get tempDepositAddressTip2 => '2. জমা করার আগে, অনুগ্রহ করে নিশ্চিত করুন যে [চেইন নাম] এবং [মুদ্রার নাম] সম্পূর্ণ মেলে যদি এটি একটি চুক্তির টোকেন হয় তবে আপনাকে নিশ্চিত করতে হবে যে [চুক্তির মান] এবং [চুক্তির ঠিকানা] সম্পূর্ণ মেলে।';
	@override String get tempDepositAddressTip3 => '3. অনুগ্রহ করে এমন তহবিল জমা করার চেষ্টা করবেন না যা উপরের টিপসগুলির সাথে কোনও প্যারামিটারের সাথে মেলে না, অন্যথায় পরিমাণটি হারিয়ে যাবে৷';
	@override String get tempDepositAddressTip4 => '4. আপনি যদি অন্য ধরনের সম্পদ জমা করতে চান, তাহলে অনুগ্রহ করে একটি নতুন ঠিকানার জন্য আবেদন করার জন্য সংশ্লিষ্ট মুদ্রা পৃষ্ঠা এবং প্যারামিটার বিকল্পগুলিতে স্যুইচ করুন।';
	@override String get applyExtensionOfValidity => 'মেয়াদ বাড়ানোর জন্য আবেদন করুন';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap }) => TextSpan(children: [
		const TextSpan(text: 'ঠিকানাটির মেয়াদ '),
		diff,
		const TextSpan(text: ' পরে শেষ হয়ে যাবে, এবং মেয়াদ শেষ হওয়ার 12 ঘন্টার মধ্যে আপনি '),
		tap ('ম্যানুয়ালি প্রসারিত'),
		const TextSpan(text: ' করতে পারেন৷'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'শুধুমাত্র 12 ঘন্টা আগে পুনর্নবীকরণ করা যাবে';
	@override String get theReceivingAddressValidForLongtime => 'এই পেমেন্ট ঠিকানা দীর্ঘ সময়ের জন্য বৈধ.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'এই পেমেন্ট ঠিকানাটি দীর্ঘ সময়ের জন্য বৈধ এবং রিয়েল টাইমে স্বয়ংক্রিয়ভাবে জমা হবে।';
	@override String get confirmDeposited => 'জমা নিশ্চিত করুন';
	@override String get unbindThisDepositAddress => 'রিচার্জ ঠিকানাটি আনবাইন্ড করুন';
	@override String get confirmDepositedTip => 'যদি তহবিল স্থানান্তর করা হয়, অনুগ্রহ করে 10 মিনিটের পরে ওয়ালেটে অ্যাকাউন্টটি ট্রিগার করতে উপরের বোতামে ক্লিক করুন।';
	@override String get unbindDepositAddressTip => 'স্মার্ট কন্ট্রাক্টের চলমান খরচ কমাতে, যদি মেয়াদের মধ্যে আর কোনো ফান্ড জমা না করা হয়, তাহলে অনুগ্রহ করে রিচার্জ অ্যাড্রেসটি আনবাইন্ড করুন।';
	@override String get transferToAddress => 'ঠিকানায় যান';
	@override String get longPressToPaste => 'পেস্ট করতে দীর্ঘক্ষণ টিপুন';
	@override String get all => 'সব';
	@override String balanceX({required Object x}) => 'ব্যালেন্স ${x}';
	@override String get transferOut => 'স্থানান্তর আউট';
	@override String depositXcoins({required Object x}) => '${x} জমা দিন';
	@override String get sender => 'প্রেরক';
	@override String get recipient => 'রিসিভার';
	@override String get memo => 'মন্তব্য';
	@override String get kind => 'পথ';
	@override String get transferAmountExceedsAvailableBalance => 'স্থানান্তরের পরিমাণ উপলব্ধ ব্যালেন্স ছাড়িয়ে গেছে';
	@override String get pleaseEnterValidAmount => 'একটি বৈধ পরিমাণ লিখুন';
	@override String get networkFee => 'নেটওয়ার্ক হ্যান্ডলিং ফি';
	@override String get fee => 'হ্যান্ডলিং ফি';
	@override String validLengthXcharacters({required Object x}) => 'ঠিকানার কার্যকরী দৈর্ঘ্য হল ${x} অক্ষর';
	@override String get historys => 'ইতিহাস';
	@override String get dtcCreditdetail => 'ডেল্টা পয়েন্টের বিবরণ';
	@override String get usdCreditdetail => 'USD পয়েন্টের বিবরণ';
	@override String get dappSquare => 'dApp স্কোয়ার';
	@override String get amountRaised => 'পরিমাণ উত্থাপিত';
	@override String get disbursedAmount => 'বিতরণের পরিমাণ';
	@override String get participationTimes => 'অংশগ্রহণকারীদের সংখ্যা';
	@override String get completionRate => 'সমাপ্তির হার';
	@override String get exchangeRate => 'বিনিময় হার';
	@override String get icpCrowdfunding => 'আইসিপি ক্রাউডফান্ডিং';
	@override String get crowdfunding => 'ক্রাউডফান্ডিং';
	@override String get trendsCurve => 'প্রবণতা বক্ররেখা';
	@override String get fullScreenView => 'পূর্ণ পর্দা দৃশ্য';
	@override String get walletBalance => 'ওয়ালেট ব্যালেন্স:';
	@override String get manageWallet => 'মানিব্যাগ পরিচালনা করুন';
	@override String get fundraiseAmount => 'উত্থাপিত তহবিলের পরিমাণ';
	@override String get exchangeRewardAmount => 'বিনিময় পুরস্কার পরিমাণ';
	@override String get fundraise => 'তহবিল বাড়াতে';
	@override String rangeIntegersX({required Object x}) => 'ব্যাপ্তি: ${x} পূর্ণসংখ্যা';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'সফলভাবে তহবিল সংগ্রহে অংশগ্রহণ করেছেন এবং ${amount}DTCT পুরস্কার পেয়েছেন৷';
	@override String get amountSummary => 'পরিমাণের সারাংশ';
	@override String get changePreferred => 'পছন্দ পরিবর্তন করুন';
	@override String get changePreferredAddress => 'পছন্দের ঠিকানা পরিবর্তন করুন';
	@override String get preferredAddressTip => 'একটি নিবন্ধিত মোবাইল নম্বর বা DID ব্যবহার করে অর্থ গ্রহণ করার সময়, তহবিল স্বয়ংক্রিয়ভাবে পছন্দের ঠিকানায় স্থানান্তরিত হবে।';
	@override String get newAddress => 'নতুন ঠিকানা';
	@override String get newAddressTip => 'অপব্যবহার রোধ করতে, যখন একাধিক ওয়ালেট ঠিকানা থাকে, তৈরি করা প্রতিটি নতুন ঠিকানার জন্য একটি লেনদেন ফি খরচ করা হবে।';
	@override String get createNew => 'নতুন';
	@override String get chainNetworkName => 'চেইন নেটওয়ার্কের নাম';
	@override String get from => 'থেকে';
	@override String get to => 'পৌঁছা';
	@override String get noAvailableDepositAmountDetected => 'কোন উপলব্ধ আমানত পরিমাণ সনাক্ত করা হয়নি!';
	@override String get crossChainReceiveMoneyMonitoring => 'ক্রস-চেইন পেমেন্ট নিরীক্ষণ করা হচ্ছে...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'প্রাপ্ত ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'নিশ্চিত করা হচ্ছে('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'উল্লেখ্য জিনিস (নতুনদের জন্য পড়তে হবে)';
	@override String get whyUseSharedAddresses => 'কেন শেয়ার করা ঠিকানা ব্যবহার করবেন?';
	@override String get useSharedrAdvantage => 'ক্রস-চেইন আমানত করার সময়, একটি ভাগ করা ঠিকানা ব্যবহার করার সুবিধাগুলি নিম্নরূপ:';
	@override String get useSharedrAdvantage1 => '1. স্থানান্তর ফি এর অপচয় কমাতে এবং ব্যবহারকারীর খরচ কমাতে. কারণ যদি একটি এক্সক্লুসিভ ঠিকানা ব্যবহার করা হয়, তবে তহবিলগুলি খুব বেশি বিচ্ছুরিত হবে, সাধারণভাবে, নগদ তোলার সময় অন্য ব্যবহারকারীদের ট্রান্সফার করার সুবিধার্থে, যখন ব্যবহারকারীরা রিচার্জ করেন, তখন তাদের একটি বা অল্প সংখ্যায় তহবিল স্থানান্তর করতে হবে। ব্যবস্থাপনার জন্য ঠিকানা।';
	@override String get useSharedrAdvantage2 => '2. শেয়ারিং সলিউশনে, প্রোগ্রামটিকে শুধুমাত্র একটি অপেক্ষাকৃত ছোট অ্যাড্রেস পুল বজায় রাখতে হবে, যা দ্রুত বহির্গামী তহবিলের সাথে মেলে এবং লাইটওয়েট সংগ্রহ পর্যবেক্ষণ করতে পারে, যা কম্পিউটিং রিসোর্স ওভারহেড কমাতে পারে। বিপরীতে, একচেটিয়া ঠিকানাগুলির সাথে, পরিস্থিতি ঠিক বিপরীত।';
	@override String get tokenType => 'টোকেন প্রকার';
	@override String get contract => 'চুক্তি';
	@override String get contractStandard => 'চুক্তির মান';
	@override String get contractAddress => 'চুক্তির ঠিকানা';
	@override String get native => 'নেটিভ';
	@override String get confirmUnbindingPleaseEnterYes => 'আনবাইন্ডিং নিশ্চিত করতে, অনুগ্রহ করে "হ্যাঁ" লিখুন';
	@override String get listAllWorkingTempReceivingAddresses => 'সমস্ত কর্মরত ক্রস-চেইন রিচার্জ ঠিকানা তালিকাভুক্ত করুন';
	@override String get setNote => 'নোট সেট করুন';
	@override String lengthCannotExceedXbytes({required Object x}) => 'দৈর্ঘ্য ${x} বাইটের বেশি হতে পারে না৷';
	@override String get transferFee => 'স্থানান্তর ফি';
	@override String get crossChainFee => 'ক্রস-চেইন ফি';
	@override String get crossChainTransferOutError => 'ক্রস-চেইন স্থানান্তর ত্রুটি';
	@override String get chainName => 'চেইন নাম';
	@override String get message => 'তথ্য';
	@override String get dontShowAgain => 'আবার দেখাবেন না';
	@override String get queuing => 'সারিতে';
	@override String get optional => 'ঐচ্ছিক';
	@override String get publiclyVisible => 'সর্বজনীনভাবে দৃশ্যমান';
	@override String get rates => 'হার';
	@override String get minimum => 'সর্বনিম্ন';
	@override String get maximum => 'সর্বোচ্চ';
	@override String get minimumBlockConfirmations => 'ব্লক নিশ্চিতকরণের ন্যূনতম সংখ্যা';
	@override String get dsmsVerifyTerminal => 'DSMS যাচাইকরণ টার্মিনাল';
	@override String get overall => 'সামগ্রিক';
	@override String get my => 'আমার';
	@override String get checkValidatorQualifications => 'যাচাইকারী অনুমতির যোগ্যতা পরীক্ষা করুন';
	@override String get getVerifierPermissions => 'সার্টিফায়ার অনুমতি পান';
	@override String get qualification => 'যোগ্যতা';
	@override String get upperLimit => 'উচ্চ সীমা';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'অ্যাক্সেস করার জন্য অনুমোদিত টার্মিনাল সংখ্যার উপরের সীমা';
	@override String get numberOfExistingAccessTerminals => 'বিদ্যমান অ্যাক্সেস টার্মিনালের সংখ্যা';
	@override String get applyingForDSMSVerifierPermissionsTips => 'যাচাইকারী অনুমতির জন্য আবেদন করার আগে, আপনাকে একটি নিষ্ক্রিয় অ্যান্ড্রয়েড ফোন এবং একটি ডেডিকেটেড অ্যাক্সেস নম্বর প্রস্তুত করতে হবে এবং DSMS অ্যাক্সেস টার্মিনাল অ্যাপ্লিকেশনটি ডাউনলোড এবং ইনস্টল করতে হবে।';
	@override String get downloadLink => 'ডাউনলোড লিঙ্ক';
	@override String get alreadyReadyFollowingTheAboveTips => 'উপরের টিপস অনুযায়ী প্রস্তুত';
	@override String get globalUniversal => 'সর্বজনীন';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'DSMS যাচাইকরণ অ্যাক্সেস পরিষেবায় অংশগ্রহণ করার জন্য বর্তমানে পর্যাপ্ত স্থানীয় যাচাইকারী নেই পরিষেবাটি অ্যাক্সেস করতে দয়া করে "'),
		gu,
		const TextSpan(text: '" নির্বাচন করুন৷'),
	]);
	@override String get asDedicatedNumberForAccess => 'একটি ডেডিকেটেড অ্যাক্সেস নম্বর হিসাবে';
	@override String pleaseCheckTip({required Object tip}) => 'অনুগ্রহ করে "${tip}" চেক করুন';
	@override String get inputLengthTooShort => 'ইনপুট দৈর্ঘ্য খুব ছোট';
	@override String get shortName => 'সংক্ষেপণ';
	@override String pleaseEnterXname({required Object name}) => 'দয়া করে ${name} লিখুন';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'আবেদন জমা দেওয়া হচ্ছে, অনুগ্রহ করে অপেক্ষা করুন...';
	@override String get applyForDSMSVerifierPermission => 'DSMS যাচাইকারী অনুমতির জন্য আবেদন করুন';
	@override String get confirmInformation => 'তথ্য নিশ্চিত করুন';
	@override String get lastHeartbeat => 'শেষ হার্টবিট';
	@override String get expirationTime => 'মেয়াদ শেষ হওয়ার সময়';
	@override String get country => 'জাতি';
	@override String get accessTerminals => 'অ্যাক্সেস টার্মিনাল';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'DSMS অ্যাক্সেস নম্বর টার্মিনালের মোট সংখ্যা';
	@override String get textContent => 'পাঠ্য বিষয়বস্তু';
	@override String get scanQRcodeToLogin => 'লগ ইন করতে কোড স্ক্যান করুন';
	@override String get confirmLogin => 'লগইন নিশ্চিত করুন';
	@override String get authorizeSubApplicationToLogin => 'লগ ইন করার জন্য সাব-অ্যাপ্লিকেশন অনুমোদন করুন';
	@override String get authorizationSuccessful => 'অনুমোদন সফল!';
	@override String get launchSMSprogram => 'এসএমএস প্রোগ্রাম শুরু করুন';
	@override String get notApplied => 'কোন আবেদন নেই';
	@override String get validityPeriod => 'মেয়াদকাল';
	@override String get renewal => 'নবায়ন করুন';
	@override String get scanCodeToAuthorizeTerminalLogin => 'টার্মিনাল লগইন অনুমোদন করতে কোড স্ক্যান করুন';
	@override String get rewards => 'পুরস্কার';
	@override String get roles => 'ভূমিকা';
	@override String get developerCenter => 'বিকাশকারী কেন্দ্র';
	@override String get appName => 'আবেদনের নাম';
	@override String get pleaseSelect => 'অনুগ্রহ করে নির্বাচন করুন';
	@override String get category => 'শ্রেণী';
	@override String get keywords => 'কীওয়ার্ড';
	@override String get pleaseEnterAkeyword => 'অনুগ্রহ করে একটি কীওয়ার্ড লিখুন';
	@override String get createApplication => 'অ্যাপ্লিকেশন তৈরি করুন';
	@override String get appType => 'আবেদনের ধরন';
	@override String get numberOfCategoriesMustBetween1and3 => 'বিভাগের সংখ্যা 1 থেকে 3 এর মধ্যে হতে হবে';
	@override String get appLogoSpecifications => 'ছবির বিন্যাস: png, আকার: 100KB এর মধ্যে, রেজোলিউশন (পিক্সেল): 256*256';
	@override String get localAlbum => 'স্থানীয় ছবির অ্যালবাম';
	@override String get networkPath => 'নেটওয়ার্ক পাথ';
	@override String get imageURLkAddress => 'ছবির URL ঠিকানা';
	@override String get urlAddressFormatIsIncorrect => 'URL ঠিকানা বিন্যাস ভুল';
	@override String get imageFormatOnlySupportsPng => 'ছবি শুধুমাত্র "png" ফর্ম্যাট সমর্থন করে।';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'দৈর্ঘ্য অবশ্যই ${a}-${b} অক্ষরের মধ্যে হতে হবে';
	@override String get introduction => 'ভূমিকা';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'ছবির আকার ${a} এর চেয়ে বড় হতে পারে না, বর্তমানে এটি ${b}';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'ছবির রেজোলিউশন হতে হবে: ${p1} (পিক্সেল), বর্তমানে এটি ${p2}';
	@override String get becomeDeveloper => 'একজন বিকাশকারী হয়ে উঠুন';
	@override String get developerInformation => 'বিকাশকারী তথ্য';
	@override String get teamName => 'দলের নাম';
	@override String get website => 'ওয়েবসাইট';
	@override String get other => 'অন্যান্য';
	@override String get githubVerification => 'Github যাচাইকরণ';
	@override String get exampleUrl => 'ExampleUrl';
	@override String githubVerificationTip({required Object did}) => '\'${did}\' এর বিষয়বস্তু সহ একটি \'delta.did\' ফাইল তৈরি করতে অনুগ্রহ করে আপনার GitHub অ্যাকাউন্টটি ব্যবহার করুন; তারপর, প্রমাণীকরণের জন্য এই ইনপুট বক্সে ফাইলটির githubusercontent URL ঠিকানা পেস্ট করুন।';
	@override String get createApp => 'অ্যাপ তৈরি করুন';
	@override String get appManagement => 'অ্যাপ্লিকেশন ব্যবস্থাপনা';
	@override String get statusLogs => 'অবস্থা লগ';
	@override String get bad => 'ভাল না';
	@override String get normal => 'সাধারণভাবে';
	@override String get good => 'খুব ভাল';
	@override String get onceCreatedItCannotBeChanged => 'একবার তৈরি হয়ে গেলে আর পরিবর্তন করা যায় না!';
	@override String get manageApplicationEntity => 'অ্যাপ্লিকেশন সত্তা পরিচালনা করুন';
	@override String get currentVersion => 'বর্তমান সংস্করণ';
	@override String get submitVersion => 'কমিট সংস্করণ';
	@override String get packageOnlySupportZipCompressedFile => 'প্যাকেজ শুধুমাত্র জিপ সংকুচিত ফাইল সমর্থন করে';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'জিপ প্যাকেজে \'${name}\' ফাইল পাওয়া যায়নি';
	@override String get fileList => 'ফাইল তালিকা:';
	@override String get programPackage => 'প্যাকেজ:';
	@override String get automaticallyExtractFromVersionFile => '\'.version\' ফাইল থেকে স্বয়ংক্রিয়ভাবে বের করুন';
	@override String get dappVersionFormatTip => 'সংস্করণ নম্বর বিন্যাসটি অবশ্যই একটি দশমিক হতে হবে এবং নির্ভুলতা অবশ্যই 2 সংখ্যায় বজায় রাখতে হবে এবং সর্বাধিক 99.99 এর বেশি হতে পারবে না।';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'সংস্করণ নম্বর বর্তমান সংস্করণ \'${v}\' থেকে বড় হতে হবে';
	@override String get versionNotes => 'সংস্করণ নোট:';
	@override String get updateRelease => 'আপডেট সংস্করণ';
	@override String get loadAndRun => 'লোড এবং রান';
	@override String get notYetSubmittedProgramPackage => 'প্যাকেজ এখনো জমা হয়নি!';
	@override String get authorizeMinidAppLogin => 'মিনি-ডিএপ লগইন অনুমোদন করুন';
	@override String get confirmAuthorizationPleaseEnterYes => 'অনুমোদন নিশ্চিত করতে, অনুগ্রহ করে "হ্যাঁ" লিখুন';
	@override String get authorizeNow => 'এখন অনুমোদন করুন';
	@override String get operation => 'পরিচালনা:';
	@override String get statusChange => 'অবস্থা পরিবর্তন';
	@override String get changeTo => 'এতে পরিবর্তন করুন:';
	@override String get notes => 'মন্তব্য:';
	@override String get changesNotEffective => 'অবৈধ পরিবর্তন!';
	@override String get released => 'প্রকাশিত হয়েছে';
	@override String get inPublicBeta => 'পাবলিক বিটা';
	@override String get developers => 'বিকাশকারী:';
	@override String get reviewList => 'মন্তব্য তালিকা:';
	@override String get postReview => 'একটি মন্তব্য করুন';
	@override String get scoreNow => 'এখন রেট';
	@override String get description => 'বর্ণনা:';
	@override String get noData => '(^-^)\n কোন তথ্য নেই';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'সংস্করণ আপডেট করা হয়েছে ${a} থেকে ${b}';
	@override String get loadNewVersion => 'নতুন সংস্করণ লোড করুন';
	@override String get name => 'নাম:';
	@override String get canisterId => 'কন্টেইনার ট্যাঙ্ক আইডি:';
	@override String get updateTime => 'আপডেট সময়';
	@override String get contractCanistersState => 'চুক্তি পাত্র অবস্থা';
	@override String get userDistribution => 'ব্যবহারকারী বিতরণ';
	@override String get settings => 'সেট আপ';
	@override String get security => 'নিরাপত্তা';
	@override String get invite => 'আমন্ত্রণ';
	@override String get more => 'আরও…';
	@override String get receiveAddress => 'প্রাপ্তির ঠিকানা:';
	@override String get hangingAmount => 'ঝুলন্ত';
	@override String get hangingAmountTips => 'মুলতুবি থাকা পরিমাণ হল আপনার অধীনস্থ দল দ্বারা খনন করে জেনারেট করা পুরষ্কারগুলির একটি অস্থায়ী রেকর্ড।';
	@override String get pendingAmount => 'মুলতুবি';
	@override String get pendingAmountTips => 'মুলতুবি থাকা অর্থ সেই পরিমাণকে বোঝায় যা এখনও নিশ্চিত করা হয়নি এবং যে পরিমাণ তুলনার জন্য বৈধ তা যদি কোনো অবৈধ অংশ থাকে তবে তা বাদ দেওয়া হবে।';
	@override String get received => 'গৃহীত';
	@override String get processing => 'প্রক্রিয়াকরণ';
	@override String get replied => 'উত্তর দিয়েছেন';
	@override String get rejected => 'প্রত্যাখ্যান';
	@override String get unknown => 'অজানা';
	@override String get insufficientBalance => 'অপর্যাপ্ত ভারসাম্য!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'ক্রস-চেইন নেটওয়ার্ক ফি প্রদানের জন্য ${x} এর ব্যালেন্স অপর্যাপ্ত';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'এমন একটি লেনদেন রয়েছে যা সম্পূর্ণ হয়নি এবং এই মুহূর্তে স্থানান্তর করা যাবে না।';
	@override String get thisfunctionNotSupportExternalCalls => 'এই ফাংশন বহিরাগত কল সমর্থন করে না';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'ক্রস-চেইন ফি প্রদানের জন্য ব্যবহার করা যেতে পারে এমন কোনো মিল ঠিকানা নেই এবং অনুগ্রহ করে অন্য চেইন নেটওয়ার্কে স্যুইচ করুন।';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'সর্বাধিক স্থানান্তর পরিমাণ বর্তমানে একটি একক লেনদেনের সাথে মিলেছে ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'মন্তব্য 64 বাইট অতিক্রম করা উচিত নয়';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'অপর্যাপ্ত ব্যালেন্স, পরিমাণ হল: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'আবদ্ধ অর্থপ্রদান ঠিকানার সংখ্যা 3 এর বেশি হতে পারে না।\nআপনি যদি একটি নতুন পেমেন্ট ঠিকানা আবদ্ধ করতে চান,\nঅনুগ্রহ করে প্রথমে অন্য পেমেন্ট ঠিকানা আনবাইন্ড করুন';
	@override String parametersA_exception({required Object x}) => 'প্যারামিটার: ${x}, ব্যতিক্রম';
	@override String get parameterException => 'প্যারামিটার ব্যতিক্রম!';
	@override String get transferAmountMustBeLargerThan0 => 'স্থানান্তরের পরিমাণ অবশ্যই 0-এর বেশি হতে হবে';
	@override String get authorizationHasExpired => 'অনুমোদনের মেয়াদ শেষ হয়ে গেছে';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'অ্যাপটি মালিক কর্তৃক অনুমোদিত নয়';
	@override String get authenticationTokenIsInvalid => 'প্রমাণীকরণ টোকেন অবৈধ৷';
	@override String get verifyInfoIsInvalidOrExpired => 'যাচাইকরণের তথ্য অবৈধ বা মেয়াদোত্তীর্ণ';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'যাচাই করুন যে অ্যাক্সেস টার্মিনালের সংখ্যা 10,000 এর মধ্যে একটির সীমা অতিক্রম করেছে৷';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'খনির অংশগ্রহণের সময় অবশ্যই 3 দিনের বেশি হতে হবে';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'নিরাপত্তা চক্রের সদস্য সংখ্যা 3 জনের কম হতে পারবে না';
	@override String get avatarIsNotSet => 'অবতার সেট করা নেই';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'সরাসরি রেফারেলের সংখ্যা 3 জনের কম হতে পারে না';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'সময়সীমা অপর্যাপ্ত এবং আপনি বছরে একবার আপনার মোবাইল ফোন নম্বর পরিবর্তন করতে পারবেন।';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'মোবাইল ফোন নম্বরটি ইতিমধ্যেই বিদ্যমান এবং পুনরাবৃত্তি করা যাবে না৷';
	@override String get securityCodeIsIncorrect => 'নিরাপত্তা কোড ভুল';
	@override String get securityCodeMayHaveExpired => 'নিরাপত্তা কোড মেয়াদ উত্তীর্ণ হতে পারে';
	@override String get sessionIdIsInvalidOrExpired => 'সেশন আইডিটি অবৈধ বা মেয়াদোত্তীর্ণ';
	@override String get sessionHasBeenAuthorized => 'অধিবেশন অনুমোদিত হয়েছে!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'মেয়াদ শেষ হওয়ার আগে শুধুমাত্র ${x} দিনের মধ্যে পুনর্নবীকরণ করা যাবে';
	@override String get notYetGrantedDeveloperPermissions => 'এখনও বিকাশকারী অধিকার প্রাপ্ত করা হয়নি';
	@override String fieldXcannotBeEmpty({required Object x}) => '${x} ক্ষেত্র খালি রাখা যাবে না';
	@override String get emailFormatError => 'ইমেল বিন্যাস ত্রুটি';
	@override String theXformatIsIncorrect({required Object x}) => '\'${x}\' ফর্ম্যাট ত্রুটি৷';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'ক্ষেত্র \'${x}\' অবশ্যই ${y} এবং ${z} অক্ষরের মধ্যে হতে হবে৷';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => '‘${x}’ নির্বাচনের পরিসর অবশ্যই ${y} এবং ${z} এর মধ্যে হতে হবে';
	@override String get unchanged_sameAsOldContent => 'অপরিবর্তিত, পুরানো বিষয়বস্তু হিসাবে একই!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' ইতিমধ্যেই বিদ্যমান!';
	@override String get mobileNumberHasNotJoinedDelta => 'এই মোবাইল নম্বরটি ডেল্টায় যোগ করা হয়নি!';
	@override String get referrerIdCannotBeEmpty => 'রেফারার আইডি খালি হতে পারে না!';
	@override String get referrerIdDoesNotExist => 'রেফারার আইডি নেই!';
	@override String get didIsIncorrectOrInvalid => 'ডিআইডি ভুল নাকি অবৈধ!';
	@override String get accessTokenIsIncorrectOrInvalid => 'অ্যাক্সেস টোকেন ভুল বা অবৈধ!';
	@override String get minimumWithdrawalAmountIs1USD => 'এক সময়ের জন্য সর্বনিম্ন উত্তোলনের পরিমাণ হল 1USD৷';
	@override String get miningTimeIsNotYet => 'খনির সময় এখনও আসেনি';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'ইতিমধ্যেই বিদ্যমান, দয়া করে আবার যোগ করবেন না!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'নিবন্ধন নম্বর যাচাইকরণ অ্যাক্সেস নম্বর হিসাবে ব্যবহার করা যাবে না';
	@override String get canotAddYourSelf => 'নিজেকে যোগ করা যাবে না';
	@override String get logOut => 'লগ আউট করুন';
	@override String get confirmLogout => 'লগআউট নিশ্চিত করুন';
	@override String get logOutTipsText => 'বন্ধুত্বপূর্ণ অনুস্মারক: শ্বেতপত্রের প্রাসঙ্গিক বিধান অনুসারে, অ্যাকাউন্টের প্রতিটি লগইন যাচাইকরণের জন্য একটি প্রণোদনা হিসাবে একটি নির্দিষ্ট পরিমাণ ডিটিসি কয়েন খরচ হবে, যদি না প্রয়োজন হয় তাহলে লগ ইন এবং আউট করার চেষ্টা করবেন না নিচের বোতামটি এখন সাইন আউট করবে।';
	@override String get ConfirmLogoutPleaseEnterYes => 'লগআউট নিশ্চিত করতে দয়া করে "হ্যাঁ" লিখুন৷';
	@override String get tip => 'ইঙ্গিত';
	@override String get cancel => 'বাতিল করুন';
	@override String get close => 'বন্ধ';
	@override String get selected => 'নির্বাচিত';
	@override String get edit => 'সম্পাদনা';
	@override String get submit => 'জমা';
	@override String get goBack => 'রোলব্যাক';
	@override String get copiedToClipboard => 'ক্লিপবোর্ডে কপি করা হয়েছে।';
	@override String get nickname => 'ডাক নাম';
	@override String get confirm => 'নিশ্চিত করুন';
	@override String get cannotBeEmpty => 'খালি হতে পারে না';
	@override String get deleteSuccessful => 'মুছে ফেলা সফল!';
	@override String get successfullyModified => 'পরিবর্তন সফল!';
	@override String get executionSuccessful => 'মৃত্যুদন্ড সফল!';
	@override String get preview => 'পূর্বরূপ';
	@override String get followSystem => 'সিস্টেম অনুসরণ করুন';
	@override String get change => 'পরিবর্তন';
	@override String get replace => 'প্রতিস্থাপন';
	@override String get view => 'চেক করুন';
	@override String get manage => 'পরিচালনা';
	@override String get modify => 'সংশোধন করুন';
	@override String get replacedSuccessfully => 'প্রতিস্থাপন সফল!';
	@override String get authentication => 'প্রমাণীকরণ';
	@override String get reacquire => 'পুনরায় অর্জন করা';
	@override String get tryAgain => 'আবার চেষ্টা করুন';
	@override String get querying => 'প্রশ্ন করা হচ্ছে...';
	@override String get writingToOnChain_pleaseWait => 'চেইনে লেখা, অনুগ্রহ করে অপেক্ষা করুন...';
	@override String get versionCheck => 'সংস্করণ সনাক্তকরণ';
	@override String get alreadyLatestVersion => 'ইতিমধ্যে সর্বশেষ সংস্করণ!';
	@override String get foundNewVersion => 'নতুন সংস্করণ পাওয়া গেছে:';
	@override String get upgradeLink => 'আপগ্রেড লিঙ্ক:';
	@override String get deviceDescription => 'সরঞ্জাম বিবরণ:';
	@override String get notification30SecondsBeforeMiningStops => 'খনন বন্ধ হওয়ার 30 সেকেন্ড আগে বিজ্ঞপ্তি অনুস্মারক কার্যকর করুন!';
	@override String get goMining => 'মাইনিংয়ে যাও';
	@override String get deltaMiningReminder => 'ডেল্টা মাইনিং অনুস্মারক';
	@override String get clickToMine_miningIsAboutToStop => 'খনি এখানে ক্লিক করুন, খনি শীঘ্রই বন্ধ হবে!';
	@override String get incorrect_input => 'ইনপুটটি ভুল!';
	@override String get are_you_sure_delete => 'আপনি কি মুছতে নিশ্চিত?';
	@override String get delete_account => 'অ্যাকাউন্ট মুছুন';
	@override String get how_to_operate_it => 'দেখুন কিভাবে এটি পরিচালনা করতে হয়?';
	@override String get deletion_warning_tip => 'আপনি যদি আপনার অ্যাকাউন্ট মুছে দেন, তাহলে আপনি সমস্ত ডেল্টা মুদ্রা হারাবেন, এবং অন্যান্য সদস্যদের দ্বারা আপনার জন্য আনা সুবিধাগুলিও হারিয়ে যাবে।';
	@override String get launchWhatsAppProgram => 'হোয়াটসঅ্যাপ প্রোগ্রাম চালু করুন';
	@override String get sms => 'এসএমএস';
	@override String get whatsApp_verification_tips => 'এই আইকন ধারণকারী অ্যাক্সেস নম্বরগুলি নির্দেশ করে যে তারা হোয়াটসঅ্যাপ বার্তা যাচাইকরণকেও সমর্থন করে। আন্তঃসীমান্ত বার্তা পাঠানোর সময়, সাফল্যের হার বাড়াতে এবং খরচ কমাতে WhatsApp ব্যবহার করার পরামর্শ দেওয়া হয়।';
	@override String get ihaveSentVerificationString => 'আমি যাচাইকরণ স্ট্রিং পাঠিয়েছি';
	@override String get totalOfPeople => 'মোট লোক: ';
	@override String get numberOfPeopleMining => 'খননকারী মানুষের সংখ্যা';
	@override String get useBrowserScanQRcodeToSMSprogram => 'আপনি অন্য ডিভাইসে একটি ব্রাউজার ব্যবহার করে QR-কোড স্ক্যান করে SMS প্রোগ্রামে পাঠাতে পারেন';
	@override String get toggle => 'টগল করুন';
	@override String get DSMSverifier => 'DSMS verifier';
	@override String get activate => 'সক্রিয় করুন';
	@override String get activated => 'সক্রিয় করা হয়েছে';
	@override String get generateActivationCommand => 'অ্যাক্টিভেশন কমান্ড তৈরি করুন';
	@override String get activationCommand => 'অ্যাক্টিভেশন কমান্ড';
	@override String get activationSentedTip => 'অ্যাক্টিভেশন এসএমএস পাঠানোর পর, অ্যাক্টিভেশন স্ট্যাটাস চেক করতে অনুগ্রহ করে অ্যাক্সেস টার্মিনাল ডিভাইসে যান।';
	@override String get biometricsNotEnabledTip => 'আপনার ডিভাইসে বায়োমেট্রিক্স (মুখ বা আঙুলের ছাপ) সক্ষম করা হয়নি। চালিয়ে যেতে দয়া করে এটি সক্ষম করুন।';
	@override String get error => 'ত্রুটি';
	@override String get exceptionOccurredWhenCallingBiometric => 'বায়োমেট্রিক (মুখ বা আঙুলের ছাপ) ফাংশন কল করার সময় একটি ব্যতিক্রম ঘটেছে!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' অ্যাক্সেস নম্বর চেক করা হয়েছে, '),
		shouldNum,
		const TextSpan(text: ' নির্বাচন করা উচিত।'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text} কি উপরের ${n} অ্যাক্সেস নম্বরগুলিতে পাঠানো হয়েছে?';
	@override String get interface => 'ইন্টারফেস:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'অপেক্ষার সময়সীমা বা প্রেরকের নম্বর মিলছে না';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'আপনার পূরণ করা নিরাপত্তা বৃত্তের সদস্যের মোবাইল নম্বর মেলে না: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'ডবল যাচাই এড়াতে লগ আউট করার 10 মিনিটের মধ্যে লগ ইন করুন।';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'অন্তত ${n}টি মোবাইল ফোন নম্বর অবশ্যই পূরণ করতে হবে';
	@override String get noAccessNumberInYourRegionYet => 'এখনও আপনার অঞ্চলে কোনো অ্যাক্সেস নম্বর নেই';
	@override String get notEnoughAccessNumbersInYourRegion => 'আপনার অঞ্চলে পর্যাপ্ত অ্যাক্সেস নম্বর নেই';
	@override String get tipsForDeployDSMSterminal => 'সিস্টেমটি স্বয়ংক্রিয়ভাবে আপনার জন্য অন্যান্য দেশ থেকে কিছু অ্যাক্সেস নম্বর লোড করেছে। আরও ভাল এবং কম খরচে যাচাইকরণ পরিষেবা প্রদান করার জন্য, যাচাইকরণ ফি অর্জনের জন্য স্থানীয়ভাবে একটি DSMS টার্মিনাল স্থাপন করার জন্য আপনাকে বা আপনার সুপারিশকারীর সাথে যোগাযোগ করার পরামর্শ দেওয়া হচ্ছে।';
	@override String get noOneCanProvideMeTheSecurityCode => 'কেউ আমাকে নিরাপত্তা কোড দিতে পারবে না?';
	@override String get useSupplementalMode => 'পরিপূরক মোড ব্যবহার করুন';
	@override String get returnToSecurityCodeMode => 'নিরাপত্তা কোড মোডে ফিরে যান';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'অনুগ্রহ করে তাদের সংশ্লিষ্ট মোবাইল ফোন নম্বর লিখুন। দেশের কোড বাদ দেওয়া যেতে পারে।';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => '${name} এর মোবাইল নম্বরটি ভুল';
	@override String get matchingVerificationStrategyIs => 'ম্যাচিং যাচাইকরণ কৌশল হল:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'ব্যালেন্স 3 ICP-এর বেশি, অস্থায়ীভাবে জ্বালানি ঢালার দরকার নেই।';
	@override String get escrowAccount => 'এসক্রো অ্যাকাউন্ট';
	@override String get fuelRelay => 'ফুয়েল রিলে';
	@override String get pourFuel => 'জ্বালানি ঢালা';
	@override String get fuelState => 'জ্বালানির অবস্থা';
	@override String get pouringFuelTips => 'জ্বালানি ঢালা আপনার কোন সুবিধা বা অসুবিধা বয়ে আনবে না এবং এর উদ্দেশ্য হল ডেল্টা সিস্টেমের অভিজ্ঞতাকে সমৃদ্ধ করা।';
	@override String get sponsorDevelopersByWatchingAds => 'বিজ্ঞাপন দেখে ডেভেলপারদের স্পনসর করুন';
	@override String get status => 'স্থিতি';
	@override String get date => 'তারিখ';
}

// Path: <root>
class _StringsCkb implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsCkb.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.ckb,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <ckb>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsCkb _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'سەرەتا';
	@override String get switchLanguage => 'گۆرینی زمان';
	@override String get languageSwitch => 'گۆڕینی زمان';
	@override String get slogan => 'ناوچەیەکی ئابووری لامەرکەزی لە دێڵتا دروست بکە';
	@override String get countryRegionCode => 'کۆدی وڵات / ناوچە';
	@override String get countryRegionSelection => 'هەڵبژاردنی وڵات / هەرێم';
	@override String get nextStep => 'هەنگاووی دواتر';
	@override String get yourPhoneNumber => 'ژمارە مۆبایڵت بنوسە';
	@override String get pleaseSelectCountryAndRegion => 'تکایە وڵاتەکەت هەڵبژێرە';
	@override String get pleaseEnterPhoneNumber => 'تکایە ژمارەیەکی تەلەفۆنی دروست دابنێ!';
	@override String get referrerDid => 'کۆدی بانگێشت نامە';
	@override String get pleaseEnterTheReferrersDid => 'تکایە ناسێنەری لامەرکەزی ڕەوانەکەرێکی دروست دابنێ';
	@override String get thisDidIsInvalid => 'ئەم بانگێشت نامەی داتناوە درووست نیە';
	@override String get nicknameFormatTips => 'نازناو ناتوانرێت بەتاڵ بێت و درێژییەکەی لە ١٦ پیت زیاتر نەبێت';
	@override String get additionalIinformation => 'زانیاری زیاتر';
	@override String get invitationSubject => 'بانگهێشتتان دەکەم بۆ بەشداریکردن لە بنیاتنانی کۆدەنگی دێڵتا';
	@override String invitationLetter({required Object did}) => 'سڵاو، من بەشداری لە بنیاتنانی کۆدەنگیی دێڵتا دەکەم!\n دێڵتا پلاتفۆرمی سەرچاوە کراوەی پارەی دیجیتاڵی نوێیە کە لەسەر ئینتەرنێتکۆمپیوتەر کاردەکات. دەتوانێت دراوی دیجیتاڵی جۆراوجۆر بەڕێوەببات و بەکاریبهێنێت بەبێ وشەی نهێنی، کلیلی تایبەت، یان یادەوەری. تکایە کلیک لەم بەستەرە بکە https://delta.kim/auto/download بۆ دامەزراندنی بەرنامەکە. ئێستا بانگهێشتتان دەکەین بۆ ئەوەی لەگەڵمان بن لە دروستکردنی کۆدەنگی و دروێنەکردنی سکە.\n بانگێشت نامە : ${did}';
	@override String get dSMSverification => 'پشتڕاستکردنەوەی کورتەنامە';
	@override String get getAccessNumbers => 'هەندێک ژمارەی دەستگەیشتن بەدەست بهێنە';
	@override String get getAccessNumberPromptMessage => 'کلیک لە دوگمەی "Get" لە خوارەوە بکە بۆ هەڵبژاردنی کۆمەڵێک ژمارەی دەستڕاگەیشتن بە پشتڕاستکردنەوەی کورتەنامە لە ڕیزەکەدا بە نۆرە';
	@override String get optionalAccessNumbers => 'ژمارەی دەستگەیشتن بە ئیختیاری';
	@override String get accessNumber => 'ژمارەی دەستگەیشتن';
	@override String get TELCO => 'کۆمپانیای تێلکۆ';
	@override String get score => 'سەرچاوە';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ckb'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'تکایە ژمارەی دەستگەیشتن '),
			nBuilder(n),
			const TextSpan(text: ' بپشکنە و کرتە لە دوگمەی "'),
			span('text'),
			const TextSpan(text: '" بکە بۆ ئەوەی بچیتە هەنگاوی داهاتوو.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'تکایە ژمارەکانی دەستگەیشتن '),
			nBuilder(n),
			const TextSpan(text: ' بپشکنە و کرتە لە دوگمەی "'),
			span('text'),
			const TextSpan(text: '" بکە بۆ ئەوەی بچیتە هەنگاوی داهاتوو.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'دێڵتا پڕۆژەیەکی تاقیکاری جیهانی دراوی دیجیتاڵی لامەرکەزی سەرچاوە کراوە و ئیکۆسیستەمێکی بەکارهێنانی دراوە.';
	@override String get deltaGoalsDesc => 'ئامانج لێی ئەوەیە خەڵک بتوانن کۆمپانیای دێڵتا بەکاربهێنن بۆ ئەوەی بە هاوبەشی دراوێکی دیجیتاڵی نوێی گشتگیر و دادپەروەرانە و پارێزراو و خێرا و سەوز بنیات بنێن. وە دابینکردنی سیناریۆی جۆراوجۆری کاریگەر بۆ ئەم دراوە دیجیتاڵیانە و دراوە کریپتۆکانی پێشوو.';
	@override String get details => 'زانیاری زیاتر';
	@override String get get => 'وەرگرتن';
	@override String get select => 'دیاریکردن';
	@override String get send => 'ناردن';
	@override String get complete => 'سەرکەوتوبو';
	@override String get selectedAccessNumberPrompt => 'کاتێک هەڵدەبژێردرێت، ژمارەی دەستگەیشتن بە تەواوی پیشان دەدرێت و ڕیزێکی ڕەسەنایەتی دروست دەکرێت.';
	@override String get location => 'شوێن';
	@override String get verificationString => 'ڕستەی پشتڕاستکردنەوە';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'تکایە ژمارەی تەلەفۆنەکەت '),
		num,
		const TextSpan(text: ' بەکاربهێنە، '),
		label,
		const TextSpan(text: ' بنێرە بۆ '),
		accessNumber,
		const TextSpan(text: ' بۆ تەواوکردنی پشتڕاستکردنەوەکە.'),
	]);
	@override String get ihaveSentTheSMS => 'کورتەنامەکەم ناردووە';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'ڕیزەکەی پشتڕاستکردنەوە بۆ ماوەی ٦ خولەک کارا دەبێت، کاتی ماوە: '),
		time,
		const TextSpan(text: ' .'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'زۆر خێرا، چاوەڕێی ${x} چرکە بکە پێش ئەوەی بەردەوام بیت!';
	@override String get waitingForVerificationSMS => 'چاوەڕوانی کورتەنامەی پشتڕاستکردنەوە...';
	@override String get partSuccsForVerificationSMS => 'پشتڕاستکردنەوەی کورتەنامە لە یەکێک لە تێرمیناڵەکانی دەستگەیشتن تێپەڕیوە.';
	@override String get creatingAccessToken => 'دروستکردنی نیشانەی دەستڕاگەیشتن...';
	@override String get intoDelta => 'بۆ ناو دێڵتا';
	@override String get deltaAccountIsLoggedIn => 'ئەکاونتی Delta ی تۆ چووەتە ژوورەوە';
	@override String get iHavLoggedOut => 'من چوومەتە دەرەوە';
	@override String get startTwoFactorVerification => 'دەستپێکردنی پشتڕاستکردنەوەی دوو فاکتەری';
	@override String get securityCircleVerification => 'دڵنیاکردنەوەی بازنەی ئاسایش';
	@override String get generateSecurityCode => 'دروستکردنی کۆدی ئاسایش';
	@override String get generateSecurityCodeHintText => 'کۆدی ئاسایشی دروستکراو دەنێردرێت بۆ ئەندامێکی هەڵبژێردراوی هەڕەمەکی بازنەی ئاسایشەکەت.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'هێشتا بازنەی ئاسایشت دانەناوە، ئەکاونتەکەت زۆر ناپارێزراوە، تکایە هەر شوێنگرەوەیەکی ٦ ژمارەیی داخڵ بکە، و بچۆ بۆ هەنگاوی داهاتوو.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'کۆدی ئاسایش دروست کراوە، تکایە پەیوەندی بەم خزم و هاوڕێیانەوە بکەن، و داوایان لێ بکەن کۆدی ئاسایش دەربهێنن بۆ ئەوەی تۆ لە پشتڕاستکردنەوەکەدا تێپەڕیت. لە ماوەی ٣٠ خولەکدا کارا دەبێت!';
	@override String get itGetSecurityCodeTip => 'ئامۆژگاری: نازناوی ئەکاونتەکەت لە پەڕەی Delta App -> Menu -> Provide Security دەدۆزێتەوە و دووجار کلیک دەکات بۆ بەدەستهێنانی کۆدی ئاسایش.';
	@override String get securityCircleMemberList => 'لیستی ئەندامانی بازنەی ئاسایش:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'تکایە خزمێک یان هاوڕێیەک لە لیستی ئەندامان هەڵبژێرە بۆ ئەوەی دروستی بکات و کۆدێکی ئاسایشت بۆ دابین بکات بۆ پشتڕاستکردنەوەی ناسنامەی ڕاستەقینەی خۆت. مەبەست لێی ڕێگریکردنە لەوەی کە ئەکاونتەکە لەلایەن کەسانی دیکەوە کۆنترۆڵ نەکرێت کاتێک ژمارەی مۆبایلەکە ون دەبێت یان دزراوە.';
	@override String formatIsXdigits({required Object num}) => 'فۆرماتەکە بریتییە لە ${num} ژمارە';
	@override String get signInSuccessfully => 'بە سەرکەوتوویی بچۆرە ژوورەوە!';
	@override String get twoFAandLogin => 'ڕەسەنایەتی دوو فاکتەری و چوونەژوورەوە';
	@override String get verificationSuccessful => ' پشتڕاستکردنەوە سەرکەوتوو بوو !';
	@override String get validationFailed => 'چەسپاندن شکستی هێنا !';
	@override String get securityCircle => 'بازنەی ئاسایش';
	@override String get securityCode => 'کۆدی ئاسایش';
	@override String get provideSecurity => 'دابینکردنی ئاسایش';
	@override String get addManully => 'بە دەست زیادکردن';
	@override String get addFromContacts => 'زیادکردن لە پەیوەندییەکان';
	@override String get addSecurityCircle => 'یادکردنی بازنەی ئاسایش';
	@override String get inputType => 'جۆری هاتنەژوورەوە';
	@override String get mobileNumber => 'ژمارەی مۆبایل';
	@override String get did => 'کۆد';
	@override String get pleaseEnterValidDID => 'تکایە ناسێنەرێکی لامەرکەزی دروست دابنێ';
	@override String get pleaseEnterValidWalletAddress => 'تکایە ناونیشانی جزدانێکی دروست دابنێ';
	@override String get appellation => 'ناونیشان';
	@override String get appellationHint => 'ئەوەی ناوی دەبەیت، وەک "baby"';
	@override String get addSecurityCircleTips => 'تکایە کەسانی باوەڕپێنەکراو زیاد مەکەن بۆ بازنەکانی ئاسایش.';
	@override String get referralTeam => 'تیمی ڕەوانەکردن';
	@override String get profile => 'پڕۆفایلی';
	@override String get menu => 'مێنۆ';
	@override String get directly => 'ڕاستەوخۆ';
	@override String get indirectly => 'ناڕاستەوخۆ';
	@override String get inviteContacts => 'بانگهێشتی پەیوەندییەکان';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'ناونیشاندەرەکەت '),
		nickname,
		const TextSpan(text: ' یە، تۆ ڕاستەوخۆ پێشنیاری '),
		num1,
		const TextSpan(text: ' کەست کردووە و '),
		num2,
		const TextSpan(text: 'یان لە ئێستادا سەرهێڵن.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'تۆ بە شێوەیەکی ناڕاستەوخۆ پێشنیاری '),
		num1,
		const TextSpan(text: ' کەست کردووە، لەنێویاندا '),
		num2,
		const TextSpan(text: ' کەس کە لە ئێستادا سەرهێڵن.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'هاوڕێکان بانگهێشت بکە بۆ ئەوەی بەشداری لە Delta بکەن و پێکەوە کۆدەنگی کۆمەڵایەتی باشتر بکەن. ڕێژەی کانگاکردنی هەر کەسێک کە ڕاستەوخۆ پێشنیار کراوە بە ڕێژەی '),
		rate1,
		const TextSpan(text: ' لە ڕێژەی بنەڕەتی زیاد دەکات. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'هاوڕێیان بانگهێشت بکە بۆ ئەوەی بەشداری لە کۆمپانیای دێڵتا بکەن و پێکەوە کۆدەنگی کۆمەڵایەتی باشتر بکەن. ڕێژەی کانگاکردنی هەر کەسێک کە بە شێوەیەکی ناڕاستەوخۆ پێشنیار کراوە بە ڕێژەی '),
		rate2,
		const TextSpan(text: ' لە ڕێژەی بنەڕەتی زیاد دەکات.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'ئایا دڵنیای لە لابردنی "${name}"؟';
	@override String get safetyCircleRoleQ => 'ئەرکی بازنەی سەلامەتی چییە؟';
	@override String get safetyCircleRoleA => 'ڕەسەنایەتی لاوەکی لە دۆخە هەستیارەکاندا دابین دەکات بۆ پاراستنی ئاسایشی ئەکاونتەکەت.';
	@override String get howSecurityCirclesWorkQ => 'بازنەی ئاسایش چۆن کاردەکات؟';
	@override String get howSecurityCirclesWorkA => 'کاتێک بازنەی ئاسایش پێویستە بۆ پشتڕاستکردنەوە، بەرنامەی گرێبەستی زیرەکی دێڵتا بە شێوەیەکی هەڕەمەکی ئەندامێک لە لیستی هاوڕێکانی بازنەی ئاسایش هەڵدەبژێرێت بۆ ئەوەی یارمەتیت بدات کۆدێکی ئاسایش دابین بکات بۆ تەواوکردنی پشتڕاستکردنەوەی ئاسایشی ناسنامە بۆ تۆ. کاتێک داوای کۆدی ئاسایش لە ئەندامەکە دەکەیت، دەتوانێت پشتڕاستی بکاتەوە کە تۆ بەڕاستی تۆیت. لە هەمان کاتدا، بەرنامەکە داوای لێدەکات: "ئەگەر تۆ نەبیت، ڕەتیدەکاتەوە کۆدی ئاسایش دابین بکات", بۆ ئەوەی ئاسایشی ئەکاونتەکەت بپارێزیت. بۆیە پێویستە هەمیشە دڵنیا بیت لەوەی کە ئەندامانی بازنەی ئاسایشت کەسانێکن کە دەتوانیت متمانەیان پێ بکەیت.';
	@override String get securityCircleBeUsedQ => 'کەی بەکاری دەهێنیت؟';
	@override String get securityCircleBeUsedA1 => '1. کاتێک Delta APP ـەکەت لە کۆنتڕۆڵ دەرچووە، دۆخی گشتی ئەوەیە کە مۆبایلەکە ون بووە یان دزراوە.';
	@override String get securityCircleBeUsedA2 => '2. لە حاڵەتی هەندێک کارپێکردنی هەستیاردا، بەرنامەی گرێبەستی زیرەکی دێڵتا پێویستی بە پشتڕاستکردنەوەی هەیە کە تۆ خۆتیت.';
	@override String get provideSafetyTip1 => 'کاتێک هاوڕێکەت داوای کۆدی ئاسایشی خۆیت لێدەکات، تکایە دڵنیابە پشتڕاستی دەکەیتەوە کە ئەوە.';
	@override String get provideSafetyTip2 => 'تۆ پاراستنی ئاسایش بۆ ئەو هاوڕێیەی سەرەوە دابین دەکەیت. ئەوان تۆیان وەک متمانەپێکراوترین کەس لە بازنەی ئاسایشدا داناوە، و پێویستە پشتڕاستکردنەوەی ئاسایشیان بۆ دابین بکەیت کاتێک ئەکاونتەکانیان ڕووبەڕووی کارێکی هەستیار دەبنەوە.';
	@override String get provideSafetyTip3 => 'کاتێک پێویست بوو، دووجار کلیک لەسەر ئاڤاتاری لایەنی بەرامبەر بکە بۆ دەرهێنانی کۆدی ئاسایش.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'لایەنی بەرامبەر لە ئێستادا کۆدێکی ئاسایشی نییە کە پێویستی بە وەرگرتنەوە هەبێت !';
	@override String get existSecurityCodeTip => 'تکایە دڵنیابە لەوەی کە ئەو خزم یان هاوڕێیەی کە داوای کۆدی ئاسایشت لێدەکات خۆیەتی. بۆ پاراستنی سەلامەتی خزم یان هاوڕێکە، پێویستە ڕەتی بکەیتەوە دابینی بکەیت ئەگەر خزم یان هاوڕێکە خۆی نەبێت.';
	@override String get avatarSettings => 'ڕێکخستنەکانی ئاڤاتاری';
	@override String get NFTAvatarPropertyRightsText => 'ڕەتکردنەوەی بەرپرسیاریەتی: بەکارهێنانی NFT پەیوەندیدارەکان وەک ئاڤاتاری تەنها هەڵبژاردنێکی کەسییە، و هیچ پەیوەندییەکی بە خاوەندارێتی مافی خاوەندارێتی فیکری NFTەوە نییە.';
	@override String get projectWebsite => 'ماڵپەڕی پڕۆژە: ';
	@override String get whitepaper => 'کاغەزی سپی:';
	@override String get indexID => 'ناسنامەی ئیندێکس';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'ئیندێکسەکان لە ${start} تا ${end}';
	@override String get inputToLoadNFTAvatarTip => 'ناسنامەی ئیندێکسی NFT دڵخوازەکەت دابنێ، و بەرنامەکە بە شێوەیەکی ئۆتۆماتیکی وەک ئاڤاتاری تۆ باری دەکات.';
	@override String get miningRate => 'رێژەی کانگاکردن';
	@override String get miningDetails => 'وردەکارییەکانی کانگا';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'کۆی گشتی ڕێژەی کانگاکردن: '),
		rate,
		const TextSpan(text: ' δ/ڕۆژ'),
	]);
	@override String get EndOfMiningSession => 'کۆتایی دانیشتنی کانگا: ';
	@override String get tapToMineDeltaCoin => 'تاپ بۆ کانگاکردنی دراوی دێڵتا ↑';
	@override String get clickToStartMining => 'بۆ دەستپێکردنی کانگاکردن پەنجە بنێ!';
	@override String get miningHasStoppedPromptDesc => 'کانگاکردن وەستاوە، هەر ٢٤ کاتژمێر جارێک خولێکی کانگاکردنە، کلیک لەسەر ئایکۆنی ڕەشەبا بکە بۆ دەستپێکردنی خولێکی نوێی کانگاکردن. کانگاکردنی دێڵتا میکانیزمێکی دابەشکردنە کە هێزی کۆمپیوتەری زیادە و هاتوچۆی تۆڕی ئامێرەکەت بەکارناهێنێت.';
	@override String get aboutBaseRate => 'دەربارەی ڕێژەی بنەڕەتی؟';
	@override String get baseRateDescription => 'بەپێی ڕێککەوتنەکە لە وەرەقە سپییەکەدا، یاسای بنەڕەتی کەمکردنەوەی ڕێژە لە کانگاکانی دێڵتا دابەش دەکرێت بۆ دوو قۆناغ. \nقۆناغی یەکەم: کاتێک ژمارەی بەشداربووان (تۆمارکردن) ٣٠٠٠ یان کەمتر بێت، ڕێژەکە ٣٢δ/ڕۆژە. بە بەکارهێنانی ئەمە وەک خاڵی دەستپێک، هەر جارێک ژمارەی خەڵک بە فاکتەری ١٠ زیاد دەکات، ڕێژەی بنەڕەتییە. \nقۆناغی دووەم: کاتێک ژمارەی بەشداربووان دەگاتە ٣٠ ملیۆن و سەرووتر، هەر جارێک ژمارەی خەڵک ٣ هێندە زیاد دەکات، ڕێژەی بنەڕەتی بۆ نیوە کەم دەکرێتەوە تا کۆتایی هەڵکەندنی بەرهەمهێنان.';
	@override String get baseRate => 'ڕێژەی بنەڕەتی';
	@override String get directReferralRewards => 'پاداشتی ڕەوانەکردنی ڕاستەوخۆ';
	@override String get directReferralRewardDesc => 'بۆ هەر کەسێک کە ڕاستەوخۆ پێشنیار دەکرێت، کاتێک کەسەکە لە دۆخی کانگاکردندایە، ڕێژەی کانگاکردنەکەت بە ڕێژەی 1/3ی ڕێژەی بنەڕەتی زیاد دەکرێت. \n\n سەرەڕای ئەوەش، دۆخی کانگاکردنی ڕەوانەکەرەکەت هەروەها لە پاداشتی ڕەوانەکردنی ڕاستەوخۆتدا حیسابی بۆ دەکرێت.';
	@override String get indirectReferralRewards => 'پاداشتی ڕەوانەکردنی ناڕاستەوخۆ';
	@override String get indirectReferralRewardDesc => 'کاتێک پێشنیارکەرێکی ناڕاستەوخۆ لە دۆخی کانگادا بێت، ڕێژەی کانگاکردنەکەت بە زیادە بە ڕێژەی 1/10ی ڕێژەی بنەڕەتی زیاد دەکرێت. \n\nتیمی ڕەوانەکردنی ڕاستەوخۆت، و هەر کەسێک کە ڕەوانەی دەکەن نوێنەرایەتی ڕەوانەکردنێکی ناڕاستەوخۆ دەکەن بۆ تۆ.';
	@override String get mine => 'من';
	@override String get thisMiningInformation => 'ئەم زانیارییە کانزایە';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'بەشداری لە کانگاکردندا کراوە: '),
		x,
		const TextSpan(text: ' جار'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'کۆی داهاتی ئەمجارە: '),
		x,
		const TextSpan(text: ' دراوی دێڵتا'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'داهاتی بنەڕەتی: '),
		x,
		const TextSpan(text: ' دراو'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'بەشداری ڕاستەوخۆی تیم: '),
		x,
		const TextSpan(text: ' دراو'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'بەشداریکردنی ناڕاستەوخۆی تیم: '),
		x,
		const TextSpan(text: ' دراو'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'ماوەی کات لە دوایین کانگا: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'کاتی کاریگەرانەی کانگاکردن: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} کاتژمێر';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'بۆ ئاسایشی سەروەت و سامان، ئەندامانی بازنەی ئاسایش پێویستە لە هەر کاتێکدا ٣-٥ کەسی متمانەپێکراو بهێڵنەوە.';
	@override String get index => 'Index';
	@override String get amount => 'بڕی';
	@override String get balance => 'هاوسەنگی';
	@override String get timeStamp => 'مۆری کات';
	@override String get summary => 'پوختە';
	@override String get miningHasStopped => 'کانگاکردن وەستاوە.';
	@override String get miningHasStoppedDesc => 'لە ئێستادا کانگاکەت وەستاوە، و دەتوانیت دەستبەجێ دەست بە بەدەستهێنانی داهات بکەیت.';
	@override String get startMining => 'دەستپێکردنی کانگا';
	@override String get changeMobileNumber => 'ژمارەی مۆبایل بگۆڕە';
	@override String get currentMobileNumber => 'ژمارەی مۆبایلی ئێستا';
	@override String get newMobileNumber => 'ژمارەی مۆبایلی نوێ';
	@override String get securityCodeFormatIs6digits => 'فۆرماتەکەی کۆدی ئاسایش ٦ ژمارەیە!';
	@override String get startVrification => 'دەستپێکردنی پشتڕاستکردنەوە';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'ئەم ژمارەی مۆبایلە پێشتر بوونی هەیە، پەیوەندیدار DID: ${dId}';
	@override String get noDataYet => 'هێشتا هیچ داتایەک نییە';
	@override String get previousMobileNumber => 'ژمارەی مۆبایلی پێشوو.';
	@override String get changeLog => 'لۆگ گۆڕینی';
	@override String get referralLinkToShare => 'بەستەری ڕەوانەکردن بۆ هاوبەشکردن';
	@override String get referrer => 'ئاماژەدەر';
	@override String get isoCountryCode => 'کۆدی وڵاتی ISO';
	@override String get avatarLogo => 'لۆگۆی ئاڤاتار';
	@override String get creationTime => 'کاتی دروستکردن';
	@override String get lastUpdate => 'دوا نوێکردنەوە';
	@override String get numberOfSecurityCircleMembers => 'ژمارەی ئەندامانی بازنەی ئاسایش';
	@override String get theLatestMining => 'نوێترین کانگا';
	@override String get effectiveMiningDays => 'ڕۆژانی کاریگەرانەی کانگا';
	@override String get modifyNickname => 'دەستکاریکردنی نازناو';
	@override String get didNotChange => 'نەگۆڕاوە!';
	@override String get kycVerification => 'پاراستنی KYC';
	@override String get faceID => 'ناسنامەی ڕووخسار';
	@override String get touchID => 'ناسنامەی تاچ';
	@override String get biometricsAuthorizationTest => 'تاقیکردنەوەی ڕێگەپێدانی بایۆمەتری';
	@override String get currentState => 'دۆخی ئێستا';
	@override String get biometricsAuthenticationLocalizedReason => 'بۆ پشتڕاستکردنەوەی ناسنامەکەت قفڵی ئامێرەکەت بەکاربهێنە.';
	@override String get graph => 'گرافیک';
	@override String get referralRelationshipGraph => 'گرافی پەیوەندی ڕەوانەکردن';
	@override String get nativeContacts => 'پەیوەندییە ڕەسەنەکان';
	@override String get registrationAndMiningTrends => 'ڕەوتی تۆمارکردن و کانگاکردن';
	@override String get inMining => 'لە کانگادا';
	@override String get registrationVolume => 'قەبارەی تۆمارکردن';
	@override String get unmined => 'بێ مین';
	@override String get mined => 'مین';
	@override String get communityMining => 'کانزاکانی کۆمەڵگا';
	@override String get consensusPromotionFund => 'سندوقی بەرزکردنەوەی کۆدەنگی';
	@override String get ecologicalAwardFund => 'سندوقی خەڵاتی ئیکۆلۆژی';
	@override String get icpFuelCrowdfunding => 'Crowdfunding سووتەمەنی ICP';
	@override String get coreDeveloperRewards => 'پاداشتی گەشەپێدەری سەرەکی';
	@override String get totalAllocation => 'کۆی گشتی تەرخانکردن';
	@override String get miningRatio => 'رێژەی کانگا';
	@override Map<String, String> get billion => {
		'300': '300 ملیار',
		'180': '180 ملیار',
		'30': '30 ملیار',
		'60': '60 ملیار',
	};
	@override String get watchAdsToSupportDevelopers => 'سەیری ڕێکلامەکان بکە بۆ پشتگیریکردنی گەشەپێدەران';
	@override String get loadingAdcomponents => 'بارکردنی پێکهاتەکانی ڕێکلام...';
	@override String get timeIsNotUp => 'کات تەواو نەبووە!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'بارکردن شکستی هێنا، لەوانەیە تۆڕەکە بلۆک کرابێت!';
	@override String get pendingUSCTrecords => 'تۆمارە چاوەڕوانکراوەکانی USCT';
	@override String get pendingUSCTrecordsDesc => 'تۆمارە چاوەڕوانکراوەکانی USCT لە ماوەی 15-30 ڕۆژدا بەراورد دەکرێن و پشتڕاست دەکرێنەوە لەگەڵ پلاتفۆرمی ڕێکلام، تۆمارە ڕەواکان دەگوازرێنەوە بۆ لیستی تۆمارەکانی USCT، و بڕی USCTی هاوتا زیاد دەکرێت بۆ باڵانسی ئەکاونتەکە.';
	@override String get validity => 'ڕەوایی';
	@override String get advertiser => 'ڕێکلامکەر';
	@override String get earned => 'بەدەست هاتووە';
	@override String get withdraw => 'کشانەوە';
	@override String get validUSCTrecords => 'تۆمارە دروستەکانی USCT';
	@override String get USCTmining => 'کانزاکانی USCT';
	@override String get aboutUSCTmining => 'دەربارەی کانگاکردنی USCT؟';
	@override String get aboutUSCTminingItme1 => '1. USDT stablecoin ی دۆلاری ئەمریکییە کە لە ئاستی جیهانیدا بەناوبانگە، کە دەتوانرێت بە ئاسانی بگۆڕدرێت بۆ دراوی سەروەری وڵاتانی جیاواز لە ئاڵوگۆڕە سەرەکییەکانی دراوی کریپتۆی جیهاندا.';
	@override String get aboutUSCTminingItme2 => '2. USCT بەهایەکی کاتییە بۆ پێوانەکردنی داهاتی کانزاکانی USCT، ناوی تەواوی قەرزی دۆلارە، و لە کۆتاییدا دەتوانرێت بگۆڕدرێت بۆ USDT بەپێی کۆتایی ڕاستەقینەی یەکلاکردنەوە و یاساکانی دابەشکردنی پلاتفۆرمی ڕێکلام و بە ڕێژەیەکی هاوتا.';
	@override String get aboutUSCTminingItme3 => '3. کانگاکردنی USCT ئەرکێکی پارەدارکردنی ڕیکلامی هاتوچۆیە لە کۆمەڵگەی دێڵتا. سوود لە بنکەی بەکارهێنەری گەورەی کۆمەڵگەی دێڵتا وەربگرە بۆ دابینکردنی چەندین سوود بۆ ڕێکلامکەران، گەشەپێدەرانی دێڵتا و کانگەرەکان. ئامانجی دیزاینەکەی دابینکردنی بڕێکی دیاریکراو لە داهاتی کاریگەرە بۆ ئامادەنەبوون لە قۆناغی سەرەتایی ئیکۆلۆژیای دێڵتا هێشتا پێکهاتووە و گەشەی نەکردووە؛ لە هەمان کاتدا، هەروەها بڕێکی دیاریکراو لە پشتگیری دارایی بۆ گەشەپێدەران دابین دەکات بۆ دڵنیابوون لەوەی کە گەشەپێدەران دەتوانن بەردەوام بن لە پێشکەشکردنی خزمەتگوزارییەکانی گەشەپێدان بۆ ماوەیەکی زۆر، و لە کۆتاییدا دەتوانن هەموو پلاندانانی کاغەزی سپی بەدیبهێنن هەروەها کەناڵێکی کاریگەر بۆ بانگەشەکردن بۆ ڕێکلامکەرانی بەرهەمەکە دابین بکەن.';
	@override String get aboutUSCTminingItme4 => '4. یاساکانی دابەشکردن بە شێوەیەک داڕێژراون کە 40%ی کۆی داهاتەکە وەک کۆمیسیۆنی خزمەتگوزاری تەکنیکی گەشەپێدەر بەکاردەهێنرێت، و 60%ی دیکەش وەک پاداشتی ئامادەنەبوونی کۆمەڵگا بەکاردەهێنرێت. بەشی پاداشتی ئامادەنەبوون مۆدێلێکی دابەشکردنی فرە ئاست هاوشێوەی DTC دەگرێتەبەر، و ئەم پاداشتانەی ئامادەنەبوون بەپێی ڕێژەی... 6:3:1، و 60%ی پاداشتی ئامادەنەبوون بۆ یەک کانگاکردنی USCT هەر جارێک بۆ ئەو ئامادەنەبوونە تەرخانکراوە کە لە ئێستادا سەیری ڕیکلامەکە دەکات , 30% بۆ پێشنیارکەری ئاستی دووەم تەرخانکراوە، و 10% بۆ پێشنیارکەری ئاستی دووەم تەرخانکراوە بە هەمان شێوە، دەتوانیت هەمان پاداشتی پێشنیارکراوی ئەو هاوڕێیانە بەدەستبهێنیت کە پێشنیاری دەکەیت لە ڕێگەی کانگاکردنی USCT دابەشکردن ئەوەیە کە هەر کەسێک دەتوانێت بڕێکی تاڕادەیەک زۆر لە سوودەکانی USDT بەدەستبهێنێت بە پەرەپێدانی تیمێکی ئۆفلاین.';
	@override String get aboutUSCTminingItme5 => '5. خولی فەسڵکردن 7 ڕۆژە، واتە هەر 7 ڕۆژ جارێک ڕەوایی لەگەڵ پلاتفۆرمی ڕێکلامدا دەپشکنرێت، و داهاتی کاریگەری پشتڕاستکراوە و بڕی ڕاستەقینە لە باڵانسەکەدا تۆمار دەکرێت. کەمترین بڕی پارە بۆ هەر کشانەوەیەک 10USDTە.';
	@override String linesXtoY({required Object x, required Object y}) => 'Lines ${x} to ${y}';
	@override String get wallet => 'جزدان';
	@override String get multiChainWallet => 'جزدانی فرە زنجیرەیی';
	@override String get deposit => 'پارە دانان';
	@override String get transfer => 'گواستنەوە';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} لە ناونیشانی جزدان';
	@override String get transactions => 'مامەڵەکان';
	@override String get network => 'Network';
	@override String get walletAddress => 'ناویشنانی جزدان دانێ';
	@override String get currentAddress => 'current Address';
	@override String get depositAddress => 'ناونیشانی ناردن';
	@override String get receivingMoneyAddress => 'پارە گەیشتە ئەم ناونیشانە';
	@override String get applyTempDepositAddress => 'داواکاری پێشکەش بکە بۆ ناونیشانی دانانی کاتی';
	@override String get tempDepositAddressTip => '1.ئەمە ناونیشانی پارەدانێکی هاوبەشە. تکایە دوای تەواوبوونی بەکرێدانەکە یان پابەند نەبوون، بڕە پارەکە مەخەنە ناوەوە. بڕە پارەکە لەدەست دەچێت ئەگەر ئەمە ڕووبدات.';
	@override String get tempDepositAddressTip2 => '2.پێش ئەوەی پارە دابنێیت، تکایە دڵنیابە لەوەی کە [ناوی زنجیرەکە] و [ناوی دراو] بە تەواوی یەکدەگرنەوە؛ ئەگەر نیشانەیەکی گرێبەستە، پێویستە پشتڕاستی بکەیتەوە کە [ستانداردی گرێبەست] و [ناونیشانی گرێبەست] بە تەواوی یەکدەگرنەوە.';
	@override String get tempDepositAddressTip3 => '3.تکایە هەوڵ مەدە ئەو پارانە دابنێیت کە لەگەڵ هیچ کام لە پارامێتەرەکانی ناو ئامۆژگارییەکانی سەرەوەدا ناگونجێت، ئەگەرنا بڕە پارەکە لەدەست دەچێت.';
	@override String get tempDepositAddressTip4 => '4.ئەگەر پێویستت بە دانانی جۆرەکانی تری سەروەت و سامانە، تکایە بگۆڕە بۆ لاپەڕەی دراوی گونجاو و هەڵبژاردەکانی پارامێتەر بۆ ئەوەی داوای ناونیشانێکی نوێ بکەیت.';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'ناونیشانەکە دوای '),
		diff,
		const TextSpan(text: ' بەسەر دەچێت، و ماوەی ڕەوایی دەتوانرێت '),
		tap('بە دەست درێژکراوەتەوە'),
		const TextSpan(text: ' لە ماوەی 12 کاتژمێر پێش بەسەرچوونەکە.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'تەنها دەتوانرێت لە ماوەی 12 کاتژمێر پێشوەختە نوێ بکرێتەوە';
	@override String get theReceivingAddressValidForLongtime => 'ناونیشانی وەرگرتن بۆ ماوەیەکی زۆر کاریگەرە.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'ناونیشانی وەرگرتن بۆ ماوەیەکی زۆر کاریگەرە و لە کاتی ڕاستەقینەدا بە شێوەیەکی ئۆتۆماتیکی کرێدت دەکرێت.';
	@override String get confirmDeposited => 'پاراستنی Deposited';
	@override String get unbindThisDepositAddress => 'ئەم ناونیشانەی پارەدانەکە هەڵبگرە';
	@override String get confirmDepositedTip => 'ئەگەر پارەکان گواستراونەتەوە، تکایە دوای ١٠ خولەک کلیک لەسەر دوگمەی سەرەوە بکە بۆ دەستپێکردنی ژمێریاری بۆ جزدانەکە.';
	@override String get unbindDepositAddressTip => 'بۆ کەمکردنەوەی سەرپێچی کارپێکردنی گرێبەستە زیرەکەکان، ئەگەر لە ماوەی کارکردندا هیچ پارەیەکی زیاتر دانەنرێت، تکایە ناونیشانی دانانەکە بکەرەوە.';
	@override String get transferToAddress => 'گواستنەوە بۆ ناونیشان';
	@override String get longPressToPaste => 'پەستانێکی درێژ بۆ لێدان';
	@override String get all => 'هەموو';
	@override String balanceX({required Object x}) => 'هاوسەنگی ${x}';
	@override String get transferOut => 'گواستنەوە بۆ دەرەوە';
	@override String depositXcoins({required Object x}) => 'پاراستنی ${x}';
	@override String get sender => 'نێرەر';
	@override String get recipient => 'وەرگر';
	@override String get memo => 'یاداشت';
	@override String get kind => 'میهرەبان';
	@override String get transferAmountExceedsAvailableBalance => 'بڕی گواستنەوە لە باڵانسی بەردەست زیاترە';
	@override String get pleaseEnterValidAmount => 'تکایە بڕە پارەیەکی دروست دابنێ';
	@override String get networkFee => 'کرێی تۆڕ';
	@override String get fee => 'کرێ';
	@override String validLengthXcharacters({required Object x}) => 'درێژی دروست ${x} پیتە';
	@override String get historys => 'مێژووەکان';
	@override String get dtcCreditdetail => 'وردەکارییەکانی قەرزی دێڵتا';
	@override String get usdCreditdetail => 'وردەکاری قەرزی USD';
	@override String get dappSquare => 'چوارگۆشەی dApp';
	@override String get amountRaised => 'بڕی کۆکراوە';
	@override String get disbursedAmount => 'بڕی خەرجکراو';
	@override String get participationTimes => 'کاتەکانی بەشداریکردن';
	@override String get completionRate => 'رێژەی تەواوبوون';
	@override String get exchangeRate => 'ڕێژەی ئاڵوگۆڕ';
	@override String get icpCrowdfunding => 'کۆمپانیای ئای سی پی';
	@override String get crowdfunding => 'کراودفاندینگ';
	@override String get trendsCurve => 'کێوی ڕەوتەکان';
	@override String get fullScreenView => 'دیمەنی تەواوی شاشە';
	@override String get walletBalance => 'باڵانسی جزدان: ';
	@override String get manageWallet => 'بەڕێوەبردنی جزدان';
	@override String get fundraiseAmount => 'بڕی کۆکردنەوەی پارە';
	@override String get exchangeRewardAmount => ' بڕی پاداشتی ئاڵوگۆڕ';
	@override String get fundraise => 'کۆکردنەوەی پارە';
	@override String rangeIntegersX({required Object x}) => 'مەودا: ژمارە تەواوەکان ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'بە سەرکەوتوویی بەشداری لە کۆکردنەوەی پارەدا کرد و پاداشتی ${amount}DTCT وەرگرت';
	@override String get amountSummary => 'پوختەی بڕی';
	@override String get changePreferred => 'گۆڕانکاری پەسەندکراو';
	@override String get changePreferredAddress => 'ناونیشانی پەسەندکراو بگۆڕە';
	@override String get preferredAddressTip => 'لەکاتی وەرگرتنی پارە بە بەکارهێنانی ژمارەی مۆبایلی تۆمارکراو یان DID، پارەکان بە شێوەیەکی ئۆتۆماتیکی دەگوازرێنەوە بۆ ناونیشانی پەسەندکراو.';
	@override String get newAddress => 'ناونیشانی نوێ';
	@override String get newAddressTip => 'بۆ ڕێگریکردن لە خراپ بەکارهێنان، کاتێک زیاتر لە یەک ناونیشانی جزدان هەیە، کرێی مامەڵەکردن بۆ هەر ناونیشانێکی نوێ کە دروست دەکرێت، خەرج دەکرێت.';
	@override String get createNew => 'دروستکردنی نوێ';
	@override String get chainNetworkName => 'تۆڕی زنجیرەیی';
	@override String get from => 'لە';
	@override String get to => 'بۆ';
	@override String get noAvailableDepositAmountDetected => 'هیچ بڕە پارەیەکی پێشەکی بەردەست دەستنیشان نەکراوە !';
	@override String get crossChainReceiveMoneyMonitoring => 'پارەی وەرگرتنی زنجیرەی بڕاو لە چاودێریکردندایە ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'وەرگیراو('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'دڵنیاکردنەوە('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'تێبینییەکان (پێویستە بۆ تازەپێگەیشتووان بخوێنرێتەوە)';
	@override String get whyUseSharedAddresses => 'بۆچی ناونیشانی هاوبەش بەکاربهێنرێت؟';
	@override String get useSharedrAdvantage => 'کاتێک باس لە وەبەرهێنانی زنجیرەکان دەکرێت، سوودەکانی بەکارهێنانی ناونیشانی هاوبەش بریتین لە:';
	@override String get useSharedrAdvantage1 => '1. کەمکردنەوەی بەفیڕۆدانی کرێی گواستنەوە و کەمکردنەوەی تێچووی بەکارهێنەر. چونکە ئەگەر ناونیشانێکی تایبەت بەکاربهێنرێت، ئەوا پارەکان زۆر بڵاودەبنەوە. بۆ ئەوەی بەکارهێنەرانی دیکە ئاسانکاری بۆ گواستنەوەی دەرەوە بکەن لە کاتی کشانەوەدا، کاتێک بەکارهێنەر پارەیەکی پێشەکی دەکات، گواستنەوەی لاوەکی پارەکان پێویستی بە کۆکردنەوە هەیە بۆ یەکێک یان ژمارەیەکی کەم لە ناونیشانەکان بۆ بەڕێوەبردن.';
	@override String get useSharedrAdvantage2 => '2. In the sharing solution, the program only needs to maintain a relatively small address pool, which can quickly match outgoing funds and perform lightweight collection monitoring, which can reduce computing resource overhead. In contrast, with exclusive addresses, the situation is exactly the opposite.';
	@override String get tokenType => 'جۆری نیشانە';
	@override String get contract => 'گرێبەست';
	@override String get contractStandard => 'ستانداردی گرێبەست';
	@override String get contractAddress => 'ناونیشانی گرێبەست';
	@override String get native => 'ڕەسەن';
	@override String get confirmUnbindingPleaseEnterYes => 'بۆ پشتڕاستکردنەوەی بەستنەوە، تکایە "بەڵێ"';
	@override String get listAllWorkingTempReceivingAddresses => 'لیستکردنی هەموو ناونیشانە وەرگرەکانی زنجیرە بڕاوەکانی کارکردن';
	@override String get setNote => 'تێبینی دابنێ';
	@override String lengthCannotExceedXbytes({required Object x}) => 'درێژی ناتوانێت لە ${x} بایت زیاتر بێت';
	@override String get transferFee => 'کرێی گواستنەوە';
	@override String get crossChainFee => 'کرێی cross-chain';
	@override String get crossChainTransferOutError => 'هەڵەی گواستنەوەی زنجیرەکان بۆ دەرەوە';
	@override String get chainName => 'ناوی زنجیرە';
	@override String get message => 'پەیام';
	@override String get dontShowAgain => 'جارێکی تر نیشان مەدەرەوە';
	@override String get queuing => 'ڕیزکردن';
	@override String get optional => 'ئیختیاری';
	@override String get publiclyVisible => 'بە ئاشکرا دیارە';
	@override String get rates => 'ڕێژەکان';
	@override String get minimum => 'کەمترین';
	@override String get maximum => 'زۆرترین';
	@override String get minimumBlockConfirmations => 'کەمترین پشتڕاستکردنەوەکانی بلۆک';
	@override String get dsmsVerifyTerminal => 'تێرمیناڵی پشتڕاستکەرەوەی DSMS';
	@override String get overall => 'بە گشتی';
	@override String get my => 'من';
	@override String get getVerifierPermissions => 'مۆڵەتی پشتڕاستکەرەوە وەربگرە';
	@override String get checkValidatorQualifications => 'پشکنینی بڕوانامەی مۆڵەتی چەسپێنەر';
	@override String get qualification => 'بڕوانامە';
	@override String get upperLimit => 'سنووری سەرەوە';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'زۆرترین ژمارەی تێرمیناڵەکان ڕێگەپێدراوە بۆ دەستگەیشتن';
	@override String get numberOfExistingAccessTerminals => 'ژمارەی تێرمیناڵەکانی دەستگەیشتن کە هەن';
	@override String get applyingForDSMSVerifierPermissionsTips => 'پێش ئەوەی داوای مۆڵەتی پشتڕاستکەرەوە بکەیت، پێویستە مۆبایلێکی ئەندرۆیدی بێکار و ژمارەیەکی تایبەت بە دەستگەیشتن ئامادە بکەیت، و بەرنامەی تێرمیناڵی دەستگەیشتن بە DSMS دابەزێنیت و دایبمەزرێنیت.';
	@override String get downloadLink => 'بەستەری دابەزاندن';
	@override String get alreadyReadyFollowingTheAboveTips => 'لە ئێستاوە ئامادەی پەیڕەوکردنی ئەو ئامۆژگارییانەی سەرەوەم';
	@override String get globalUniversal => 'گەردوونی جیهانی';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'لە ئێستادا پشتڕاستکەرەوەی ناوخۆیی بەس نییە بۆ بەشداریکردن لە خزمەتگوزاری دەستڕاگەیشتن بە پشتڕاستکردنەوەی DSMS. تکایە خزمەتگوزاری دەستڕاگەیشتن "'),
		gu,
		const TextSpan(text: '" هەڵبژێرە.'),
	]);
	@override String get asDedicatedNumberForAccess => 'وەک ژمارەیەکی تایبەت بۆ دەستگەیشتن';
	@override String pleaseCheckTip({required Object tip}) => 'تکایە "${tip}" بپشکنە';
	@override String get inputLengthTooShort => 'درێژی زانیاری زۆر کورت';
	@override String get shortName => 'short-name';
	@override String pleaseEnterXname({required Object name}) => 'تکایە ${name} بنووسە';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'داواکاری پێشکەش دەکرێت، تکایە چاوەڕوان بن...';
	@override String get applyForDSMSVerifierPermission => 'داواکاری بۆ مۆڵەتی پشتڕاستکەرەوەی DSMS بکە';
	@override String get confirmInformation => 'زانیاری پشتڕاست بکەرەوە';
	@override String get lastHeartbeat => 'دوا لێدانی دڵ';
	@override String get expirationTime => 'کاتی بەسەرچوون';
	@override String get country => 'وڵات';
	@override String get accessTerminals => 'تێرمیناڵەکانی دەستڕاگەیشتن';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'کۆی ژمارەی تێرمیناڵەکانی ژمارەی دەستگەیشتن بە DSMS';
	@override String get textContent => 'ناوەڕۆکی دەق';
	@override String get scanQRcodeToLogin => 'سکانکردنی QRcode بۆ چوونەژوورەوە';
	@override String get confirmLogin => 'دووپاتکردنەوەی چوونەژوورەوە';
	@override String get authorizeSubApplicationToLogin => 'ڕێگە بەم بەرنامە لاوەکییە بدە بۆ چوونەژوورەوە';
	@override String get authorizationSuccessful => 'ڕێگەپێدان سەرکەوتوو بوو!';
	@override String get launchSMSprogram => 'دەستپێکردنی بەرنامەی کورتەنامە';
	@override String get notApplied => 'کارپێنەکراوە';
	@override String get validityPeriod => 'ماوەی کاریگەری';
	@override String get renewal => 'نوێبوونەوە';
	@override String get scanCodeToAuthorizeTerminalLogin => 'کۆد سکان بکە بۆ ڕێگەدان بە چوونەژوورەوەی تێرمیناڵ';
	@override String get rewards => 'پاداشت';
	@override String get roles => 'ڕۆڵەکان';
	@override String get developerCenter => 'ناوەندی گەشەپێدەر';
	@override String get appName => 'ناوی ئەپ';
	@override String get pleaseSelect => 'تکایە هەڵبژێرە';
	@override String get category => 'پۆل';
	@override String get keywords => 'وشەی سەرەکی';
	@override String get pleaseEnterAkeyword => 'تکایە وشەیەکی سەرەکی دابنێ';
	@override String get createApplication => 'دروستکردنی بەرنامە';
	@override String get appType => 'جۆری ئەپ';
	@override String get numberOfCategoriesMustBetween1and3 => 'ژمارەی پۆلەکان دەبێت لە نێوان 1 و 3 بێت';
	@override String get appLogoSpecifications => 'فۆرماتە وێنە: png، قەبارە: لە ماوەی 100KB، ڕوونی (پێکسڵ): 256 * 256';
	@override String get localAlbum => 'ئەلبوومی ناوخۆیی';
	@override String get networkPath => 'ڕێڕەوی تۆڕ';
	@override String get imageURLkAddress => 'ناونیشانی URLی وێنە';
	@override String get urlAddressFormatIsIncorrect => 'فۆرماتەکەی ناونیشانی URL هەڵەیە';
	@override String get imageFormatOnlySupportsPng => 'فۆرماتەکەی وێنە تەنها پشتگیری "png" دەکات.';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'درێژییەکە دەبێت لە نێوان ${a}-${b} کاراکتەرەکاندا بێت';
	@override String get introduction => 'پێشەکی';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'قەبارەی وێنەکە ناتوانێت لە ${a} گەورەتر بێت، لە ئێستادا ${b}';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'ڕوونکردنەوەی وێنەکە دەبێت: ${p1} (پێکسڵەکان), لە ئێستادا ${p2}';
	@override String get becomeDeveloper => 'ببە بە گەشەپێدەر';
	@override String get developerInformation => 'زانیاری گەشەپێدەر';
	@override String get teamName => 'ناوی تیم';
	@override String get website => 'ماڵپەڕ';
	@override String get other => 'ئەوەی تر';
	@override String get githubVerification => 'چەندکردنەوەی گیتوب';
	@override String get exampleUrl => 'نموونەی Url';
	@override String githubVerificationTip({required Object did}) => 'تکایە ئەژمێری GitHub ی خۆت بەکاربهێنە بۆ دروستکردنی پەڕگەیەکی \'delta.did\' لە کۆگاکەدا بە ناوەڕۆکی \'${did}\'؛ پاشان، url githubusercontent ی پەڕگەکە بخەرە ناو ئەم بۆکسەی چوونەژوورەوە بۆ ڕەسەنایەتی.';
	@override String get createApp => 'دروستکردنی ئەپ';
	@override String get appManagement => 'بەڕێوەبردنی ئەپ';
	@override String get statusLogs => 'لۆگەکانی دۆخ';
	@override String get bad => 'خراپ';
	@override String get normal => 'ئاسایی';
	@override String get good => 'باشە';
	@override String get onceCreatedItCannotBeChanged => 'کاتێک دروستکرا، ناتوانرێت بگۆڕدرێت!';
	@override String get manageApplicationEntity => 'بەڕێوەبردنی یەکەیەکی بەرنامە';
	@override String get currentVersion => 'وەشانەکەی ئێستا';
	@override String get submitVersion => 'وەشان پێشکەش بکە';
	@override String get packageOnlySupportZipCompressedFile => 'پاکێجەکە تەنها پشتگیری لە پەڕگەی پاڵەپەستۆکراوی زیپ دەکات';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'پەڕگەی \'${name}\' لە پاکێجی زیپدا نەدۆزرایەوە';
	@override String get fileList => 'لیستی فایلەکان: ';
	@override String get programPackage => 'پاکێجی بەرنامە: ';
	@override String get automaticallyExtractFromVersionFile => 'بە شێوەیەکی ئۆتۆماتیکی لە پەڕگەی \'.version\' دەربهێنە';
	@override String get dappVersionFormatTip => 'فۆرماتەکەی ژمارەی وەشانی دەبێت دەهەمی بێت و وردبینییەکەی دەبێت بە ٢ ژمارە بپارێزرێت، و زۆرترینی ناتوانێت لە ٩٩.٩٩ زیاتر بێت';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'ژمارەی وەشانی دەبێت گەورەتر بێت لە وەشانی ئێستا \'${v}\'';
	@override String get versionNotes => 'تێبینی وەشانی: ';
	@override String get dappInfo => 'زانیاری داپ';
	@override String get updateRelease => 'نوێکردنەوەی بڵاوکردنەوە';
	@override String get loadAndRun => 'بارکردن و جێبەجێکردن';
	@override String get notYetSubmittedProgramPackage => 'هێشتا پاکێجێکی بەرنامە پێشکەش نەکراوە!';
	@override String get authorizeMinidAppLogin => 'ڕێگەدان بە چوونەژوورەوەی مینی-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'ڕێگەپێدان پشتڕاست بکەرەوە، تکایە "بەڵێ" داخڵ بکە';
	@override String get authorizeNow => 'ئێستا ڕێگەپێدان';
	@override String get operation => 'ئۆپەراسیۆن: ';
	@override String get statusChange => 'گۆڕینی دۆخ';
	@override String get changeTo => 'گۆڕانکاری بۆ: ';
	@override String get notes => 'تێبینی: ';
	@override String get changesNotEffective => 'گۆڕانکارییەکان کاریگەر نین!';
	@override String get released => 'ئازاد';
	@override String get inPublicBeta => 'لە تاقیکاری گشتیدا';
	@override String get developers => 'گەشەپێدەران: ';
	@override String get reviewList => 'لیستی پێداچوونەوە: ';
	@override String get postReview => 'پۆست پێداچوونەوە';
	@override String get scoreNow => 'ئێستا گۆڵ تۆمار بکە';
	@override String get description => 'وەسف: ';
	@override String get noData => '(^-^) \n بێ داتا';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'وەشانەکە لە ${a}ەوە بۆ ${b} نوێکراوەتەوە';
	@override String get loadNewVersion => 'بارکردنی وەشانی نوێ';
	@override String get name => 'ناو: ';
	@override String get canisterId => 'CanisterId: ';
	@override String get updateTime => 'کاتی نوێکردنەوە';
	@override String get contractCanistersState => 'دەوڵەتی کانستەرەکانی گرێبەست';
	@override String get userDistribution => 'دابەشکردنی بەکارهێنەر';
	@override String get settings => 'ڕێکخستنەکان';
	@override String get security => 'ئاسایشی';
	@override String get invite => 'بانگهێشت';
	@override String get more => 'زیاتر...';
	@override String get receiveAddress => 'ناونیشانی وەرگرتن: ';
	@override String get hangingAmount => 'هەڵواسینی';
	@override String get hangingAmountTips => 'بڕی هەڵواسینی تۆمارێکی کاتی ئەو پاداشتانەیە کە لەلایەن کانگاکردنی تیمی ژێردەستەکەتەوە دروست دەبن. کاتێک کانگایەک ئەنجام دەدەیت، ئەم بڕە پارانە کۆدەکرێنەوە بۆ بڕی هەڵپەسێردراو.';
	@override String get pendingAmount => 'هەڵپەسێردراو';
	@override String get pendingAmountTips => 'بڕی چاوەڕوانکراو ئاماژەیە بۆ ئەو بڕە پارەیەی کە پشتڕاست نەکراوەتەوە و بەراورد نەکراوە لەگەڵ ڕێکلامکەر. ئەو بڕە پارەیەی کە پشتڕاستکراوەتەوە دەگوازرێتەوە بۆ تۆماری ڕەوای USCT. ئەگەر هەر بەشێکی نادروست هەبێت، ئەوا دەخرێتە دەرەوە.';
	@override String get received => 'وەرگیراوە';
	@override String get processing => 'پڕۆسێسکردن';
	@override String get replied => 'وەڵامی دایەوە';
	@override String get rejected => 'ڕەتکرایەوە';
	@override String get unknown => 'نەناسراو';
	@override String get insufficientBalance => 'هاوسەنگی بەس نییە!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'باڵانسی ${x} بەس نییە بۆ پێدانی کرێی تۆڕی نێوان زنجیرەکان';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'مامەڵێک هەیە کە تەواو نەبووە و لە ئێستادا ناتوانرێت بگوازرێتەوە.';
	@override String get thisfunctionNotSupportExternalCalls => 'ئەم کارە پشتگیری لە پەیوەندی دەرەکی ناکات';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'هیچ ناونیشانێکی هاوتا نییە کە بتوانرێت بەکاربهێنرێت بۆ پێدانی کرێی زنجیرە بڕاوەکان، تکایە بگۆڕە بۆ تۆڕەکانی زنجیرەی تر بۆ هەوڵدان.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'زۆرترین بڕی تاکە گواستنەوەی هاوتاکراوی ئێستا ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'یاداشتنامەکە نابێت لە ٦٤ بایت زیاتر بێت';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'باسەنگی بەس نییە، بڕە پارەکە بریتییە لە: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'ژمارەی ناونیشانە وەرگرەکانی بەستراو ناتوانێت لە 3 زیاتر بێت. \nئەگەر پێویستت بە بەستنەوەی ناونیشانی وەرگرتنی نوێ بوو، \nتکایە سەرەتا ناونیشانی وەرگرێکی تر بکەرەوە.';
	@override String parametersA_exception({required Object x}) => ' پارامێتەرەکان: ${x}, ئیستسنای';
	@override String get transferAmountMustBeLargerThan0 => 'بڕی گواستنەوە دەبێت لە 0 گەورەتر بێت';
	@override String get authorizationHasExpired => 'ڕێگەپێدان بەسەرچووە';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'ئەپەکە لەلایەن خاوەنەکەیەوە ڕێگەپێنەدراوە';
	@override String get authenticationTokenIsInvalid => 'نیشانەی ڕەسەنایەتی نادروستە';
	@override String get verifyInfoIsInvalidOrExpired => 'دڵنیابوون لەوەی زانیاری نادروستە یان بەسەرچووە';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'دڵنیابە کە ژمارەی تێرمیناڵەکانی دەستڕاگەیشتن سنووری یەکێک لە 10,000 تێپەڕاندووە';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'کاتی بەشداریکردن لە کانگادا دەبێت زیاتر لە ٣ ڕۆژ بێت';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'ژمارەی ئەندامانی بازنەی سەلامەتی ناتوانێت لە ٣ کەس کەمتر بێت';
	@override String get avatarIsNotSet => 'ئاڤاتاری دانەنراوە';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'ژمارەی ڕەوانەکردنی ڕاستەوخۆ ناتوانێت لە ٣ کەس کەمتر بێت';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'سنوری کاتیی بەس نییە، ژمارەی مۆبایل تەنها ساڵانە جارێک دەتوانرێت بگۆڕدرێت.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'ئەم ژمارە مۆبایلە پێشتر بوونی هەیە و ناتوانرێت دووبارە بکرێتەوە';
	@override String get securityCodeIsIncorrect => 'کۆدی ئاسایش هەڵەیە';
	@override String get securityCodeMayHaveExpired => 'ڕەنگە کۆدی ئاسایش بەسەرچووبێت';
	@override String get sessionIdIsInvalidOrExpired => 'ناسنامەی دانیشتنەکە نادروستە یان بەسەرچووە';
	@override String get sessionHasBeenAuthorized => 'دانیشتنەکە ڕێگەپێدراوە!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'تەنها دەتوانرێت لە ماوەی ${x} ڕۆژ پێش بەسەرچوون نوێ بکرێتەوە';
	@override String get notYetGrantedDeveloperPermissions => 'هێشتا مۆڵەتی گەشەپێدەر نەدراوە';
	@override String fieldXcannotBeEmpty({required Object x}) => 'ئیمەیڵی مەیدانی ${x} بەتاڵ بێت';
	@override String get emailFormatError => 'هەڵەی فۆرمات ئیمەیڵ';
	@override String theXformatIsIncorrect({required Object x}) => 'فۆرماتەکەی \'${x}\' هەڵەیە';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'درێژی مەیدانی \'${x}\' دەبێت لە نێوان ${y} و ${z} پیتەکاندا بێت.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'هەڵبژاردنی \'${x}\' دەبێت لە نێوان ${y} و ${z} بێت';
	@override String get unchanged_sameAsOldContent => 'نەگۆڕاوە، هەمان ناوەڕۆکی کۆن!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' پێشتر بوونی هەیە!';
	@override String get mobileNumberHasNotJoinedDelta => 'ئەم ژمارە مۆبایلە هێشتا پەیوەندی بە Delta نەکردووە!';
	@override String get referrerIdCannotBeEmpty => 'ناتوانرێت ئاماژەپێکراو بەتاڵ بێت! ';
	@override String get referrerIdDoesNotExist => 'referrerId بوونی نییە!';
	@override String get didIsIncorrectOrInvalid => 'DID هەڵەیە یان نادروستە!';
	@override String get accessTokenIsIncorrectOrInvalid => 'accessToken هەڵەیە یان نادروستە!';
	@override String get minimumWithdrawalAmountIs1USD => 'کەمترین بڕی کشانەوە 1USD';
	@override String get miningTimeIsNotYet => 'کاتی کانگاکردن هێشتا نییە';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'پێشتر بوونی هەیە، تکایە دووبارە زیاد مەکە!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'ژمارەی تۆمارکردن ناتوانرێت وەک ژمارەی دەستڕاگەیشتن بە پشتڕاستکردنەوە بەکاربهێنرێت';
	@override String get canotAddYourSelf => 'ناتوانیت خۆت زیاد بکەیت';
	@override String get logOut => 'دەرچوون';
	@override String get confirmLogout => 'دڵنیای لە دەرچوون';
	@override String get logOutTipsText => 'بیرخستنەوەی دۆستانە: بەپێی ڕێکەوتنی پەیوەندیدار لە کاغەزی سپیدا، هەر پشتڕاستکردنەوەی چوونەژوورەوەی ئەکاونتەکە بڕێکی دیاریکراو لە دراوی DTC لەلایەن تۆوە بەکاردەهێنێت بۆ ئەوەی وەک هاندانێک پارەی پشتڕاستکەرەوە بدەیت. تکایە ئەگەر پێویست نەبوو هەوڵ مەدە بچیتە ژوورەوە و بچیتە دەرەوە. بۆ ئەوەی دەستبەجێ دەربچیت کلیک لەم دوگمەیەی خوارەوە بکە.';
	@override String get ConfirmLogoutPleaseEnterYes => 'دڵنیای لەوەی کە ئەتەوێ لە ئەکاونتەکەت بچیتە دەرەوە؟ "بەڵێ"';
	@override String get tip => 'سەرنج';
	@override String get cancel => 'بگەرێوە';
	@override String get close => 'داخستن';
	@override String get selected => 'دیاریکردن';
	@override String get edit => 'گۆرانکاری';
	@override String get submit => 'ناردرا';
	@override String get goBack => 'بگەڕێوە دواوە';
	@override String get copiedToClipboard => 'هەڵگیرا .';
	@override String get nickname => 'نازناوو';
	@override String get confirm => 'دڵنیابوون';
	@override String get cannotBeEmpty => 'ناتوانێت بەتاڵ بێت';
	@override String get deleteSuccessful => 'بەسەرکەوتوی سڕاوە!';
	@override String get successfullyModified => 'بە سەرکەوتوویی دەستکاری کراوە!';
	@override String get executionSuccessful => 'جێبەجێکردن سەرکەوتوو بوو!';
	@override String get parameterException => 'ئیستسنای پارامێتەر!';
	@override String get preview => 'بینین';
	@override String get followSystem => 'بەدواداچوون بۆ سیستەم';
	@override String get change => 'دەسکاریکردن';
	@override String get replace => 'شوێن گرتنەوە';
	@override String get view => 'بینین';
	@override String get manage => 'بەڕێوەبردن';
	@override String get modify => 'دەستکاری بکە';
	@override String get replacedSuccessfully => 'بە سەرکەوتوویی گۆڕدرا!';
	@override String get authentication => 'ڕەسەنایەتی';
	@override String get reacquire => 'بەدەستهێنانەوەی دووبارە';
	@override String get tryAgain => 'دووبارە هەوڵبدەوە';
	@override String get querying => 'پرسیارکردن ...';
	@override String get writingToOnChain_pleaseWait => 'نووسین بۆ سەر زنجیرەکە، تکایە چاوەڕوان بە ...';
	@override String get versionCheck => 'پشکنینی وەشانی';
	@override String get alreadyLatestVersion => 'پێشتر نوێترین وەشانی!';
	@override String get foundNewVersion => 'وەشانێکی نوێ دۆزرایەوە:';
	@override String get upgradeLink => 'بەستەری بەرزکردنەوە: ';
	@override String get deviceDescription => 'وەسفکردنی ئامێر: ';
	@override String get notification30SecondsBeforeMiningStops => '30 چرکە پێش وەستانی کانگاکردن بیرخستنەوەی ئاگادارکردنەوە جێبەجێ بکە!';
	@override String get goMining => 'بڕۆ بۆ کانگا';
	@override String get deltaMiningReminder => 'بیرخستنەوەی کانگاکانی دێڵتا';
	@override String get clickToMine_miningIsAboutToStop => 'کلیک لێرە بکە بۆ مین، خەریکە کانگاکردن بوەستێت!';
	@override String get incorrect_input => 'هاتنە ژوورەوەی هەڵە !';
	@override String get are_you_sure_delete => 'دڵنیای دەتەوێت بسڕیتەوە?';
	@override String get delete_account => 'سڕینەوەی ئەکاونت';
	@override String get how_to_operate_it => 'چۆن کارپێکردنی؟';
	@override String get deletion_warning_tip => 'ئەگەر ئەکاونتەکەت بسڕیتەوە، هەموو دێڵتا کۆینەکانت لەدەست دەدەیت و هەموو داهاتەکانی ئەندامانی تریش لەدەست دەچێت.';
	@override String get launchWhatsAppProgram => 'دەستپێکردنی بەرنامەی واتسئەپ';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'ژمارەی دەستگەیشتن بەم ئایکۆنە ئاماژەیە بۆ ئەوەی کە پشتگیری پشتڕاستکردنەوەی نامەی واتسئەپیش دەکەن. لە کاتی ناردنی نامەی نێودەوڵەتیدا پێشنیار دەکرێت واتسئەپ بەکاربهێنیت بۆ زیادکردنی ڕێژەی سەرکەوتن و کەمکردنەوەی تێچوونەکان.';
	@override String get ihaveSentVerificationString => 'من ڕستەی پشتڕاستکردنەوەم ناردووە';
	@override String get totalOfPeople => 'کۆی گشتی خەڵک: ';
	@override String get numberOfPeopleMining => 'ژمارەی ئەو کەسانەی کە کانگا دەکەن';
	@override String get useBrowserScanQRcodeToSMSprogram => 'دەتوانیت وێبگەڕێک لەسەر ئامێرێکی تر بەکاربهێنیت بۆ سکانکردنی کۆدی QR و گواستنەوەی بۆ بەرنامەی SMS';
	@override String get toggle => 'گۆڕین';
	@override String get DSMSverifier => 'دڵنیاکەرەوەی DSMS';
	@override String get activate => 'چالاککردن';
	@override String get activated => 'چالاککراوه';
	@override String get generateActivationCommand => 'فرمانی چالاککردن دروست بکە';
	@override String get activationCommand => 'فەرمانی چالاککردن';
	@override String get activationSentedTip => 'دوای ناردنی کورتەنامەی چالاککردنەوە، تکایە دۆخی چالاککردن لەسەر ئامێری تێرمیناڵی دەستگەیشتن بپشکنە.';
	@override String get biometricsNotEnabledTip => 'ئامێرەکەت بایۆمەتری (ڕووخسار یان پەنجەمۆر)ی چالاک نەکردووە، تکایە چالاکی بکە بۆ بەردەوامبوون.';
	@override String get error => 'هەڵەیە';
	@override String get exceptionOccurredWhenCallingBiometric => 'ئیستسنایەک ڕوویدا لەکاتی بانگکردنی فەنکشنی ناسینەوەی بایۆمەتری (ڕووخسار یان پەنجەمۆر)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: 'ژمارەکانی دەستڕاگەیشتن '),
		checkedNum,
		const TextSpan(text: ' پشکنینیان بۆ کراوە، پێویستە '),
		shouldNum,
		const TextSpan(text: ' هەڵبژێردرێت.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'ئایا ${text} نێردراوە بۆ ژمارەکانی دەستگەیشتن ${n} لە سەرەوە؟';
	@override String get interface => 'ڕووکار:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'کات بەسەرچوونی چاوەڕوانی یان ناتەبایی ژمارەی نێرەر';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'ژمارەی مۆبایلی ئەو ئەندامەی بازنەی ئاسایش کە پڕت کردۆتەوە ناگونجێت:${x}';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'بەلایەنی کەمەوە ${n} ژمارەی مۆبایل دەبێت پڕبکرێتەوە';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'لە ماوەی ١٠ خولەکدا دوای چوونە دەرەوە بچۆرە ژوورەوە بۆ ئەوەی پشتڕاستکردنەوەی دوو فاکتەری نەبێت.';
	@override String get noAccessNumberInYourRegionYet => 'هێشتا ژمارەیەکی دەستگەیشتن لە ناوچەکەتدا نییە';
	@override String get notEnoughAccessNumbersInYourRegion => 'لە هەرێمەکەتدا ژمارەی دەستگەیشتن بەس نییە';
	@override String get tipsForDeployDSMSterminal => 'سیستەمەکە بە شێوەیەکی ئۆتۆماتیکی هەندێک ژمارەی دەستگەیشتن لە وڵاتانی دیکەوە بۆ تۆ بارکردووە. بۆ ئەوەی خزمەتگوزاری پشتڕاستکردنەوەی باشتر و کەمتر تێچووی پێشکەش بکرێت، پێشنیار دەکرێت کە تۆ یان ڕەوانەکەرەکەت پەیوەندی بکەیت بۆ بڵاوکردنەوەی تێرمیناڵەکانی DSMS لە ناوخۆدا بۆ بەدەستهێنانی کرێی پشتڕاستکردنەوە.';
	@override String get noOneCanProvideMeTheSecurityCode => 'کەس ناتوانێت کۆدی ئاسایشم بۆ دابین بکات?';
	@override String get useSupplementalMode => 'دۆخی تەواوکەر بەکاربهێنە';
	@override String get returnToSecurityCodeMode => 'گەڕانەوە بۆ دۆخی کۆدی ئاسایش';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'تکایە ژمارەی مۆبایلی پەیوەندیداریان داخڵ بکە، دەتوانرێت کۆدی وڵات لاببرێت.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'ژمارەی مۆبایل بۆ ${name} هەڵەیە';
	@override String get matchingVerificationStrategyIs => 'ستراتیژی پشتڕاستکردنەوەی هاوتاکردن بریتییە لە...:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'هاوسەنگی زیاترە لە 3 ICP، پێویست بە ڕشتنی سووتەمەنی ناکات بۆ ئێستا.';
	@override String get escrowAccount => 'ئەژمێری ئیسکرۆ';
	@override String get fuelRelay => 'ڕێلەی سووتەمەنی';
	@override String get pourFuel => 'سووتەمەنی ڕژێنە';
	@override String get fuelState => 'دۆخی سووتەمەنی';
	@override String get pouringFuelTips => 'ڕشتنی سووتەمەنی هیچ سوود و زیانێکت بۆ ناهێنێت، مەبەست لێی دەوڵەمەندکردنی ئەزموونی سیستەمی دێڵتایە.';
	@override String get sponsorDevelopersByWatchingAds => 'سپۆنسەری گەشەپێدەران بە سەیرکردنی ڕێکلامەکان';
	@override String get status => 'دۆخ';
	@override String get date => 'بەروار';
}

// Path: <root>
class _StringsDe implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsDe.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.de,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <de>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsDe _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'Abb. Anfang';
	@override String get switchLanguage => 'Sprache wechseln';
	@override String get languageSwitch => 'Sprachwechsel';
	@override String get slogan => 'Aufbau einer dezentralen Wirtschaft im Delta';
	@override String get countryRegionCode => 'Länder-/Gebietscode';
	@override String get countryRegionSelection => 'Auswahl der Länder und Regionen';
	@override String get nextStep => 'der nächste Schritt';
	@override String get yourPhoneNumber => 'Ihre Telefonnummer.';
	@override String get pleaseSelectCountryAndRegion => 'Bitte wählen Sie Ihr Land/Ihre Region';
	@override String get pleaseEnterPhoneNumber => 'Bitte geben Sie eine gültige Telefonnummer ein!';
	@override String get referrerDid => 'Referrer DID';
	@override String get pleaseEnterTheReferrersDid => 'Bitte geben Sie eine gültige dezentrale Identitätskennung des Überweisers ein';
	@override String get thisDidIsInvalid => 'Diese DID ist ungültig.';
	@override String get nicknameFormatTips => 'Der Nickname darf nicht leer sein und darf nicht länger als 16 Ziffern sein.';
	@override String get additionalIinformation => 'Zusätzliche Informationen';
	@override String get invitationSubject => 'Eine Einladung zur Delta-Konsensbildung';
	@override String invitationLetter({required Object did}) => 'Hallo, ich nehme an der Delta-Konsensbildung teil!\n Delta ist eine neue Open-Source-Plattform für digitale Währungen, die auf dem ICP läuft und die es Ihnen ermöglicht, verschiedene digitale Währungen ohne Passwörter, private Schlüssel oder Mnemonics zu verwalten und zu nutzen. Bitte klicken Sie auf diesen Link https://delta.kim/auto/download, um die Anwendung zu installieren. Jetzt sind Sie eingeladen, sich an der Konsensbildung zu beteiligen und auch Währungen zu prägen.\n Referrer DID: ${did}';
	@override String get dSMSverification => 'DSMS-Validierung';
	@override String get getAccessNumbers => 'Besorgen Sie sich einige Zugangsnummern';
	@override String get getAccessNumberPromptMessage => 'Klicken Sie auf die Schaltfläche "Abrufen" unten, um eine Reihe von SMS-Verifizierungszugangsnummern in der Warteschlange zu drehen.';
	@override String get optionalAccessNumbers => 'Optionale Zugangsnummer';
	@override String get accessNumber => 'Zugangsnummer';
	@override String get TELCO => 'Betreiber (eines Kraftwerks, eines Verkehrsnetzes usw.)';
	@override String get score => 'Ergebnis';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('de'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Bitte kreuzen Sie '),
			nBuilder(n),
			const TextSpan(text: ' Zugangsnummern an und klicken Sie auf die Schaltfläche "'),
			span('text'),
			const TextSpan(text: '", um zum nächsten Schritt zu gelangen.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Bitte kreuzen Sie '),
			nBuilder(n),
			const TextSpan(text: ' Zugangsnummern an und klicken Sie auf die Schaltfläche "'),
			span('text'),
			const TextSpan(text: '", um zum nächsten Schritt zu gelangen. '),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta ist ein quelloffenes, dezentralisiertes, globales digitales Währungsexperiment und ein Ökosystem von Kryptowährungsanwendungen.';
	@override String get deltaGoalsDesc => 'Ziel ist es, den Menschen die Möglichkeit zu geben, mit Delta neue digitale Währungen mitzugestalten, die universell, fair, sicher, schnell und umweltfreundlich sind. Und verschiedene effektive Anwendungsszenarien für diese digitalen Währungen und bisherige Kryptowährungen bereitzustellen.';
	@override String get details => 'Einzelheiten';
	@override String get get => 'gewinnen';
	@override String get select => 'Option';
	@override String get send => 'Senden';
	@override String get complete => 'erfüllen.';
	@override String get selectedAccessNumberPrompt => 'Wenn Sie diese Option auswählen, wird die vollständige Zugangsnummer angezeigt und eine Authentifizierungszeichenfolge generiert.';
	@override String get location => 'Platzierung';
	@override String get verificationString => 'Validierungsstring';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Bitte verwenden Sie Ihre Telefonnummer '),
		num,
		const TextSpan(text: ' und senden Sie '),
		label,
		const TextSpan(text: ' an '),
		accessNumber,
		const TextSpan(text: ', um die Überprüfung abzuschließen.'),
	]);
	@override String get ihaveSentTheSMS => 'Ich habe eine Textnachricht gesendet';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Der Validierungsstring ist 6 Minuten lang gültig, verbleibende Zeit: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Zu schnell, um ${x} Sekunden auf die Fortsetzung zu warten!';
	@override String get waitingForVerificationSMS => 'Ich warte auf die Verifizierungs-SMS...';
	@override String get partSuccsForVerificationSMS => 'Die SMS-Verifizierung eines der Zugangsterminals wurde bestanden!';
	@override String get creatingAccessToken => 'Zugriffstoken wird erstellt...';
	@override String get intoDelta => 'Innerhalb von Delta';
	@override String get deltaAccountIsLoggedIn => 'Ihr Delta-Konto ist angemeldet';
	@override String get iHavLoggedOut => 'Ich bin raus.';
	@override String get startTwoFactorVerification => 'Start der doppelten Verifizierung';
	@override String get securityCircleVerification => 'Circle of Safety Validierung';
	@override String get generateSecurityCode => 'Sicherheitscode generieren';
	@override String get generateSecurityCodeHintText => 'Der generierte Sicherheitscode wird an ein zufällig ausgewähltes Mitglied Ihres Sicherheitskreises gesendet.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Sie haben keinen Sicherheitskreis eingerichtet, Ihr Konto ist sehr unsicher, bitte geben Sie einen beliebigen 6-stelligen Platzhalter ein und gehen Sie zum nächsten Schritt.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Der Sicherheitscode wurde generiert, bitte kontaktieren Sie die folgenden Familienmitglieder und Freunde, um den Sicherheitscode für Sie zu extrahieren, damit Sie die Überprüfung bestehen können. 30 Minuten lang gültig!';
	@override String get itGetSecurityCodeTip => 'Tipp: Sie erhalten den Sicherheitscode, indem Sie auf der Seite Delta App -> Menü -> Sicherheit bereitstellen auf Ihren Konto-Nickname doppelklicken.';
	@override String get securityCircleMemberList => 'Mitgliederliste des Sicherheitskreises:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Bitte wählen Sie einen Verwandten oder Freund in der Mitgliederliste aus, der einen Sicherheitscode generieren und Ihnen zur Verifizierung Ihrer wahren Identität geben soll. Der Zweck besteht darin, zu verhindern, dass das Konto von anderen kontrolliert wird, wenn die Mobiltelefonnummer verloren geht oder gestohlen wird.';
	@override String formatIsXdigits({required Object num}) => 'Format als ${num} Ziffern';
	@override String get signInSuccessfully => 'Erfolgreich eingeloggt!';
	@override String get twoFAandLogin => 'Doppelte Authentifizierung und Anmeldung';
	@override String get verificationSuccessful => 'Überprüfen Sie den Erfolg!';
	@override String get validationFailed => 'Validierung fehlgeschlagen!';
	@override String get dappInfo => 'DApp-Informationen';
	@override String get securityCircle => 'Sicherheitsring';
	@override String get securityCode => 'Sicherheitscode';
	@override String get provideSecurity => 'Bereitstellung von Sicherheit';
	@override String get addManully => 'Manuell hinzufügen';
	@override String get addFromContacts => 'Aus dem Adressbuch hinzufügen';
	@override String get addSecurityCircle => 'Kreis der Sicherheit hinzufügen';
	@override String get inputType => 'Eingabe Typ';
	@override String get mobileNumber => 'Mobiltelefonnummer';
	@override String get did => 'Adresse';
	@override String get pleaseEnterValidDID => 'Bitte geben Sie eine gültige dezentrale Identitätskennung ein';
	@override String get pleaseEnterValidWalletAddress => 'Bitte geben Sie eine gültige Brieftaschenadresse ein';
	@override String get appellation => 'Anrede';
	@override String get appellationHint => 'Wie nennst du es, etwa "Baby"?';
	@override String get addSecurityCircleTips => 'Bitte fügen Sie keine Personen, denen Sie nicht vertrauen, zu Ihrem Sicherheitskreis hinzu.';
	@override String get referralTeam => 'Empfohlene Teams';
	@override String get profile => 'Konto-Informationen';
	@override String get menu => 'Menü';
	@override String get directly => 'direkt';
	@override String get indirectly => 'indirekt';
	@override String get inviteContacts => 'Einladung Kontakt';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Ihr Eingeladener ist '),
		nickname,
		const TextSpan(text: ' und Sie haben '),
		num1,
		const TextSpan(text: ' Personen direkt vermittelt, von denen '),
		num2,
		const TextSpan(text: ' derzeit online sind.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Sie haben indirekt '),
		num1,
		const TextSpan(text: ' Personen vermittelt, von denen '),
		num2,
		const TextSpan(text: ' derzeit online sind.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Laden Sie Ihre Freunde ein, Delta beizutreten und den sozialen Konsens gemeinsam zu verbessern. Für jede direkte Empfehlung erhöht die Mining-Rate einer Person die Basisrate um '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Laden Sie Freunde ein, sich Delta anzuschließen und gemeinsam den sozialen Konsens zu verbessern. Jede indirekte Empfehlung einer Person erhöht die Mining-Rate um '),
		rate2,
		const TextSpan(text: ' des Basistarifs.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Sind Sie sicher, dass Sie "${name}" löschen wollen?';
	@override String get safetyCircleRoleQ => 'Was ist der Zweck des Sicherheitsrings?';
	@override String get safetyCircleRoleA => 'Schützen Sie Ihr Konto durch eine sekundäre Authentifizierung in sensiblen Situationen.';
	@override String get howSecurityCirclesWorkQ => 'Wie funktionieren die Sicherheitsringe?';
	@override String get howSecurityCirclesWorkA => 'Sollte eine Verifizierung durch den Circle of Safety erforderlich sein, wählt das Delta Smart Contracts-Programm nach dem Zufallsprinzip ein Mitglied aus der Buddy-Liste des Circle of Safety aus, das Ihnen hilft, einen Sicherheitscode zu erhalten, um die Identitätsverifizierung für Sie abzuschließen. Wenn Sie das Mitglied nach dem Sicherheitscode fragen, kann es bestätigen, ob Sie Sie selbst sind oder nicht. Gleichzeitig fordert das Programm Sie auf: "Verweigern Sie die Angabe des Sicherheitscodes, wenn Sie es nicht sind", um Ihre Kontosicherheit zu schützen. Sie sollten also immer darauf achten, dass die Mitglieder Ihres Sicherheitskreises Personen sind, denen Sie vertrauen können.';
	@override String get securityCircleBeUsedQ => 'Wann wird es verwendet?';
	@override String get securityCircleBeUsedA1 => '1. wenn Sie die Kontrolle über Ihre Delta APP verlieren, ist es in der Regel der Fall, dass Ihr Mobiltelefon verloren geht oder gestohlen wird.';
	@override String get securityCircleBeUsedA2 => '(2) Bei einigen sensiblen Vorgängen muss das Programm Delta Smart Contract bestätigen, dass Sie es sind.';
	@override String get provideSafetyTip1 => 'Wenn Ihr Buddy Sie nach seinem Sicherheitscode fragt, müssen Sie bestätigen, dass es sein eigener Code ist.';
	@override String get provideSafetyTip2 => 'Sie bieten Sicherheit für die oben genannten Freunde, die Sie als vertrauenswürdigste Person in ihrem Sicherheitskreis eingestuft haben und Sie als Sicherheitsbestätigung benötigen, falls sie auf ihrem Konto sensible Vorgänge durchführen.';
	@override String get provideSafetyTip3 => 'Doppelklicken Sie auf den Avatar der anderen Person, um bei Bedarf den Sicherheitscode zu extrahieren.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'Die andere Partei verfügt derzeit nicht über einen Sicherheitscode, der extrahiert werden muss!';
	@override String get existSecurityCodeTip => 'Bitte vergewissern Sie sich, dass der Freund oder das Familienmitglied, der/das Sie um den Sicherheitscode bittet, mit dem Freund oder Familienmitglied identisch ist. Zum Schutz Ihres Freundes oder Familienmitglieds sollten Sie die Angabe des Sicherheitscodes verweigern, wenn der Freund oder das Familienmitglied nicht mit dem Freund oder Familienmitglied identisch ist.';
	@override String get avatarSettings => 'Avatar-Einstellungen';
	@override String get NFTAvatarPropertyRightsText => 'Haftungsausschluss: Die Verwendung des betreffenden NFT als Avatar dient nur der persönlichen Vorliebe und hat nichts mit dem Besitz der geistigen Eigentumsrechte an diesem NFT zu tun.';
	@override String get projectWebsite => 'Projekt-Website.';
	@override String get whitepaper => 'Whitepaper:';
	@override String get indexID => 'Index Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Index zwischen ${start} und ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Geben Sie die Index-ID Ihres Lieblings-NFT ein, und das Programm lädt ihn automatisch als Avatar für Sie.';
	@override String get miningRate => 'Abbaugeschwindigkeit';
	@override String get miningDetails => 'Bergbau Details';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Gesamtabbaurate: '),
		rate,
		const TextSpan(text: ' δ/Tag'),
	]);
	@override String get EndOfMiningSession => 'Cycle Mining ist vorbei:';
	@override String get tapToMineDeltaCoin => 'Klicken Sie, um Delta-Münzen abzubauen ↑';
	@override String get clickToStartMining => 'Klicken Sie, um mit dem Abbau zu beginnen!';
	@override String get miningHasStoppedPromptDesc => 'Alle 24 Stunden findet ein Mining-Zyklus statt. Klicken Sie auf das Blitzsymbol, um eine neue Mining-Runde zu starten.Deltas Mining ist ein Zuteilungsmechanismus, der keine zusätzliche Rechenleistung und keinen Netzwerkverkehr von Ihrem Gerät verbraucht.';
	@override String get aboutBaseRate => 'Über den Basiszinssatz?';
	@override String get baseRateDescription => 'Wie im Whitepaper vereinbart, wird die Regel zur Senkung des Basistarifs für Delta-Mining in zwei Phasen unterteilt.\nPhase 1: Der Satz beträgt 32δ/Tag, wenn die Zahl der Teilnehmer (Anmeldungen) 3.000 oder weniger beträgt. Ausgehend von dieser Zahl wird der Basissatz jedes Mal halbiert, wenn die Zahl der Teilnehmer um den Faktor 10 steigt.\nPhase 2: Wenn die Zahl der Teilnehmer 30 Millionen oder mehr erreicht, wird der Basissatz jedes Mal halbiert, wenn sich die Zahl der Teilnehmer um den Faktor 3 erhöht. Bis die letzte Ausgrabung die Produktion stoppt.';
	@override String get baseRate => 'Grundgebühr (wie bei ISDN)';
	@override String get directReferralRewards => 'Direkter Empfehlungsbonus';
	@override String get directReferralRewardDesc => 'Für jede direkte Empfehlung wird Ihre Mining-Rate um ein zusätzliches 1/3 der Basisrate erhöht, während sie Mining betreiben.\n\n Darüber hinaus wird der Mining-Status Ihrer Empfehlungen auch für Ihren Bonus für direkte Empfehlungen angerechnet.';
	@override String get indirectReferralRewards => 'Indirekter Empfehlungsbonus';
	@override String get indirectReferralRewardDesc => 'Wenn eine indirekte Empfehlung abbaut, wird Ihre Abbaurate um ein zusätzliches Zehntel der Basisrate erhöht.\n\n Jede Person, die Ihr direktes Empfehlungsteam weiterempfiehlt, stellt eine indirekte Empfehlung für Sie dar.';
	@override String get mine => '(Erz oder andere Ressourcen aus einem Bergwerk) abbauen';
	@override String get thisMiningInformation => 'Aktuelle Bergbauinformationen';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Beteiligt am Bergbau: '),
		x,
		const TextSpan(text: ' mal'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Gesamtgewinn dieses Mal: '),
		x,
		const TextSpan(text: ' Delta-Münzen'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Basisverdienst: '),
		x,
		const TextSpan(text: ' Münzen'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Direkter Beitrag des Teams: '),
		x,
		const TextSpan(text: ' Münzen'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Indirekter Beitrag des Teams: '),
		x,
		const TextSpan(text: ' Münzen'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Länge der Zeit zwischen den Grabungen: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Effektive Abbaustunden: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} Stunden';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Um die Sicherheit von Vermögenswerten zu gewährleisten, sollten die Mitglieder des Sicherheitskreises jederzeit 3-5 vertrauenswürdige Personen beibehalten.';
	@override String get index => 'Indizierung';
	@override String get amount => 'Geldsumme';
	@override String get balance => 'Salden';
	@override String get timeStamp => 'Zeitstempel';
	@override String get summary => 'Abstracts';
	@override String get miningHasStopped => 'Der Bergbau wurde eingestellt.';
	@override String get miningHasStoppedDesc => 'Ihr Mining ist momentan gestoppt und Sie werden sofort anfangen, Geld zu verdienen.';
	@override String get startMining => 'Bergbau beginnen';
	@override String get changeMobileNumber => 'Änderung der Mobiltelefonnummer';
	@override String get currentMobileNumber => 'Aktuelle Handynummer';
	@override String get newMobileNumber => 'Neue Mobiltelefonnummer';
	@override String get securityCodeFormatIs6digits => 'Das Format des Sicherheitscodes ist 6-stellig!';
	@override String get startVrification => 'Überprüfung starten';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Diese Mobilfunknummer existiert bereits, zugehörige DID: ${dId}';
	@override String get noDataYet => 'Keine Daten verfügbar';
	@override String get previousMobileNumber => 'Frühere Mobiltelefonnummer';
	@override String get changeLog => 'Aufzeichnung der Änderungen';
	@override String get referralLinkToShare => 'Empfohlene Links zum Teilen';
	@override String get referrer => 'Referrer';
	@override String get isoCountryCode => 'ISO-Ländercode';
	@override String get avatarLogo => 'Kopfzeilenlogo';
	@override String get creationTime => 'Erstellungszeit';
	@override String get lastUpdate => 'Letzte Aktualisierung';
	@override String get numberOfSecurityCircleMembers => 'Anzahl der Mitglieder von Sicherheitskreisen';
	@override String get theLatestMining => 'Letzte Ausgrabung';
	@override String get effectiveMiningDays => 'Anzahl der Tage des effektiven Abbaus';
	@override String get modifyNickname => 'Nickname ändern';
	@override String get didNotChange => 'Keine Änderung!';
	@override String get kycVerification => 'KYC-Prüfung';
	@override String get faceID => 'Gesichtserkennung';
	@override String get touchID => 'Fingerabdruck-ID';
	@override String get biometricsAuthorizationTest => 'Prüfung der biometrischen Authentifizierung';
	@override String get currentState => 'aktueller Stand';
	@override String get biometricsAuthenticationLocalizedReason => 'Verwenden Sie die Entsperrung Ihres Geräts, um Ihre Identität zu bestätigen.';
	@override String get graph => 'Archiv von Grafiken (z. B. Karten, Dokumente oder botanische Abbildungen)';
	@override String get referralRelationshipGraph => 'Mapping der Verweisungsbeziehungen';
	@override String get nativeContacts => 'Lokale Kontakte';
	@override String get registrationAndMiningTrends => 'Registrierung und Bergbautrends';
	@override String get inMining => 'Bergbau';
	@override String get registrationVolume => 'Anmeldevolumen';
	@override String get unmined => 'ungenutzt';
	@override String get mined => 'abgebaut';
	@override String get communityMining => 'Bergbau in der Gemeinschaft';
	@override String get consensusPromotionFund => 'Konsensförderungsfonds';
	@override String get ecologicalAwardFund => 'Ökologischer Anreizfonds';
	@override String get icpFuelCrowdfunding => 'ICP Fuel Crowdfunding';
	@override String get coreDeveloperRewards => 'Belohnungen für Hauptentwickler';
	@override String get totalAllocation => 'Gesamtverteilung';
	@override String get miningRatio => 'Bergbauquote';
	@override Map<String, String> get billion => {
		'30': '30 Milliarden',
		'60': '60 Milliarden',
		'180': '180 Milliarden.',
		'300': '300 Milliarden',
	};
	@override String get watchAdsToSupportDevelopers => 'Anzeigen ansehen, um Entwickler zu unterstützen';
	@override String get loadingAdcomponents => 'Anzeigenkomponenten laden...';
	@override String get timeIsNotUp => 'Die Zeit ist noch nicht um!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Konnte nicht geladen werden, möglicherweise ist das Netzwerk blockiert!';
	@override String get pendingUSCTrecords => 'Ausstehende USCT-Aufzeichnungen';
	@override String get pendingUSCTrecordsDesc => 'Ausstehende USCT-Datensätze werden innerhalb von 15-30 Tagen mit der Werbeplattform abgeglichen, und gültige Datensätze werden in die USCT-Datensatzliste übertragen, und der entsprechende USCT-Betrag wird dem Kontostand gutgeschrieben.';
	@override String get validity => 'Gültigkeit';
	@override String get advertiser => 'Inserenten';
	@override String get earned => 'verdient';
	@override String get withdraw => 'Geld abheben';
	@override String get validUSCTrecords => 'Effektive USCT-Aufzeichnungen';
	@override String get USCTmining => 'USCT Bergbau';
	@override String get aboutUSCTmining => 'Über den USCT-Bergbau?';
	@override String get aboutUSCTminingItme1 => '1. USDT ist ein weltweit beliebter US-Dollar-Stablecoin, der an den wichtigsten Kryptowährungsbörsen auf der ganzen Welt problemlos in nationale Landeswährungen umgetauscht werden kann.';
	@override String get aboutUSCTminingItme2 => '(2) USCT ist eine vorübergehende Maßnahme der Erlöse aus dem USCT-Mining, bekannt als USD-Guthaben, das schließlich in USDT umgewandelt wird, je nach dem tatsächlichen Abrechnungsbetrag und den Verteilungsregeln der Werbeplattform und dem entsprechenden Anteil.';
	@override String get aboutUSCTminingItme3 => '3) USCT Mining ist eine Funktion der Delta-Gemeinschaft zur Realisierung von Verkehrsanzeigen. Sie macht sich die große Nutzerbasis der Delta-Gemeinschaft zunutze, um Werbetreibenden, Delta-Entwicklern und Abwesenden mehrere Vorteile zu bieten. Es soll abwesenden Arbeitnehmern in der Anfangsphase, in der sich das Delta-Ökosystem noch nicht gebildet hat und noch nicht floriert, ein gewisses effektives Einkommen verschaffen; gleichzeitig bietet es den Entwicklern eine gewisse finanzielle Unterstützung, um sicherzustellen, dass sie über einen langen Zeitraum hinweg Entwicklungsdienste anbieten können und letztendlich in der Lage sind, alle Pläne des Whitepapers zu verwirklichen; und es bietet auch einen effektiven Werbekanal für die Produktwerber.';
	@override String get aboutUSCTminingItme4 => '(4) Die Verteilungsregeln sind so gestaltet, dass 40 % der Gesamteinnahmen als Provisionen für den technischen Dienst der Entwickler und die restlichen 60 % als Belohnungen für Abwesenheit in der Gemeinde verwendet werden. Abwesenheit Belohnung Teil der Multi-Level-Distribution-Modell ähnlich wie DTC, die Abwesenheit Belohnung wird in drei Teile nach dem Verhältnis von 6:3:1, jedes Mal, wenn einer der Abwesenheit Belohnung von USCT Bergbau 6 Teile für die Abwesenheit der aktuellen Anzeigen, 3 Teile für die übergeordnete Referrer, 1 Teil für die zweite Ebene Referrer zugeordnet werden. In ähnlicher Weise können Sie die gleiche Empfehlungsprämie auch für die Freunde erhalten, die Sie durch USCT Mining werben. Der Vorteil dieser mehrstufigen Verteilung ist, dass jeder eine relativ große Menge an USDT verdienen kann, indem er ein Downline-Team aufbaut.';
	@override String get aboutUSCTminingItme5 => '5. die Abrechnungsfrist beträgt 7 Tage, d.h. alle 7 Tage wird die Gültigkeit mit der Werbeplattform überprüft und die bestätigte Gültigkeit des Erlöses und der tatsächliche Betrag werden im Guthaben verbucht. Der Mindestbetrag für jede Auszahlung beträgt 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Zeilen ${x} bis ${y}.';
	@override String get wallet => 'Geldbörsen';
	@override String get multiChainWallet => 'Multiketten-Geldbörse';
	@override String get deposit => 'Einzahlung (z. B. auf ein Bankkonto)';
	@override String get transfer => 'Überweisung (Geld auf ein Bankkonto)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} in der Wallet-Adresse';
	@override String get transactions => 'Transaktionsaufzeichnungen';
	@override String get network => 'Vernetzungen';
	@override String get walletAddress => 'Adresse der Brieftasche';
	@override String get currentAddress => 'aktuelle Adresse';
	@override String get depositAddress => 'Adresse aufladen';
	@override String get receivingMoneyAddress => 'Adresse des Zahlungsempfängers';
	@override String get applyTempDepositAddress => 'Adresse für die Beantragung einer vorübergehenden Aufstockung';
	@override String get tempDepositAddressTip => '(1) Dies ist eine gemeinsame Kautionsadresse. Bitte hinterlegen Sie den Betrag nicht, nachdem der Mietvertrag abgelaufen ist oder Sie ungebunden wurden. Wenn dies geschieht, ist der Betrag verloren.';
	@override String get tempDepositAddressTip2 => 'Bevor Sie eine Einzahlung vornehmen, vergewissern Sie sich bitte, dass [Kettenname] und [Münzname] genau übereinstimmen; im Falle von Vertrags-Token müssen Sie auch sicherstellen, dass [Vertragsstandard] und [Vertragsadresse] genau übereinstimmen.';
	@override String get tempDepositAddressTip3 => '(3) Versuchen Sie bitte nicht, Geldbeträge einzuzahlen, die nicht mit einem der Parameter in den oben genannten Tipps übereinstimmen, da der Betrag sonst verloren geht.';
	@override String get tempDepositAddressTip4 => '(4) Wenn Sie andere Arten von Vermögenswerten einzahlen möchten, wechseln Sie bitte auf die entsprechende Währungsseite und die Parameteroptionen, um eine neue Adresse zu beantragen.';
	@override String get applyExtensionOfValidity => 'Antrag auf Verlängerung der Gültigkeitsdauer';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Diese Adresse läuft nach '),
		diff,
		const TextSpan(text: ' ab und ist '),
		tap('manuell verlängern'),
		const TextSpan(text: ' für 12 Stunden vor Ablauf gültig.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Kann nur 12 Stunden im Voraus verlängert werden';
	@override String get theReceivingAddressValidForLongtime => 'Diese Adresse ist für eine lange Zeit gültig.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Diese Sammeladresse ist lange Zeit gültig und wird automatisch in Echtzeit gutgeschrieben.';
	@override String get confirmDeposited => 'Bestätigung der Hinterlegung';
	@override String get unbindThisDepositAddress => 'Entbündeln Sie diese Top-up-Adresse';
	@override String get confirmDepositedTip => 'Wenn das Guthaben überwiesen wurde, klicken Sie auf die obige Schaltfläche, um die Abrechnung mit Ihrer Brieftasche nach 10 Minuten auszulösen.';
	@override String get unbindDepositAddressTip => 'Um den laufenden Overhead des Smart Contracts zu reduzieren, heben Sie bitte die Bindung der Aufladeadresse auf, wenn Sie während der Gültigkeitsdauer kein Geld mehr einzahlen werden.';
	@override String get transferToAddress => 'zur Adresse gehen';
	@override String get longPressToPaste => 'Langes Drücken zum Einfügen';
	@override String get all => 'vollständig';
	@override String balanceX({required Object x}) => 'Saldo ${x}';
	@override String get transferOut => 'sich herausstellen';
	@override String depositXcoins({required Object x}) => 'Gutschrift ${x}';
	@override String get sender => 'Absender';
	@override String get recipient => 'Empfänger';
	@override String get memo => 'Hinweis';
	@override String get kind => 'Art (des Lebens)';
	@override String get transferAmountExceedsAvailableBalance => 'Übertragungen über den verfügbaren Saldo hinaus';
	@override String get pleaseEnterValidAmount => 'Bitte geben Sie einen gültigen Betrag ein';
	@override String get networkFee => 'Bearbeitungsgebühr für das Netz';
	@override String get fee => 'Bearbeitungsgebühr';
	@override String validLengthXcharacters({required Object x}) => 'Adresse gültige Länge ${x} Zeichen';
	@override String get historys => 'historische Aufzeichnung';
	@override String get dtcCreditdetail => 'Delta-Punkte Details';
	@override String get usdCreditdetail => 'USD Punkte Details';
	@override String get dappSquare => 'dApp-Platz';
	@override String get amountRaised => 'Aufgenommener Betrag';
	@override String get disbursedAmount => 'Ausgegebener Betrag';
	@override String get participationTimes => 'Anzahl der Teilnehmer';
	@override String get completionRate => 'Abschlussquote';
	@override String get exchangeRate => 'Währungswechselkurs';
	@override String get icpCrowdfunding => 'ICP Crowdfunding';
	@override String get crowdfunding => 'Crowdfunding';
	@override String get trendsCurve => 'Trendkurve';
	@override String get fullScreenView => 'Vollbildansicht';
	@override String get walletBalance => 'Guthaben im Portemonnaie:';
	@override String get manageWallet => 'Brieftasche verwalten';
	@override String get fundraiseAmount => 'Fundraising';
	@override String get exchangeRewardAmount => 'Einlösen des Prämienbetrags';
	@override String get fundraise => 'Fundraising';
	@override String rangeIntegersX({required Object x}) => 'Bereich: Ganzzahl ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Nehmen Sie erfolgreich an einer Spendensammlung teil und erhalten Sie eine Belohnung von ${amount}DTCT';
	@override String get amountSummary => 'Zusammenfassung der Beträge';
	@override String get changePreferred => 'Änderung der Präferenz';
	@override String get changePreferredAddress => 'Bevorzugte Adresse ändern';
	@override String get preferredAddressTip => 'Die Gelder werden automatisch an die bevorzugte Adresse überwiesen, wenn die Gelder über eine registrierte Handynummer oder DID abgeholt werden.';
	@override String get newAddress => 'Neue Adresse';
	@override String get newAddressTip => 'Um Missbrauch vorzubeugen, wird bei mehr als einer Wallet-Adresse eine Transaktionsgebühr für jede neu angelegte Adresse erhoben.';
	@override String get createNew => 'neu gebaut';
	@override String get chainNetworkName => 'Kettennetzname';
	@override String get from => 'von (einem Ort) kommen';
	@override String get to => 'bis (eine Zeit)';
	@override String get noAvailableDepositAmountDetected => 'Es wurde kein verfügbarer Einzahlungsbetrag gefunden!';
	@override String get crossChainReceiveMoneyMonitoring => 'Kettenübergreifendes Sammeln ist Hören ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Empfangen ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Bestätigung in Bearbeitung ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Anmerkungen (Pflichtlektüre für Neulinge)';
	@override String get whyUseSharedAddresses => 'Warum eine gemeinsame Adresse verwenden?';
	@override String get useSharedrAdvantage => 'Die Vorteile der Verwendung gemeinsamer Adressen bei der Hinterlegung über Ketten hinweg sind folgende:';
	@override String get useSharedrAdvantage1 => '1. die Verschwendung von Überweisungsgebühren zu reduzieren und die Kosten für die Nutzung für die Nutzer zu senken. Wegen der Verwendung von exklusiven Adresse, wird es zu viel Streuung der Mittel führen, in der Regel, um die anschließende Übertragung von anderen Nutzern in der Rücknahme von Geldern zu erleichtern, wenn der Benutzer lädt die zweite Übertragung von Geldern müssen in einem oder einer kleinen Anzahl von Adresse Management gepoolt werden.';
	@override String get useSharedrAdvantage2 => 'Bei der gemeinsamen Nutzung muss das Programm nur einen relativ kleinen Pool von Adressen vorhalten, der schnell mit ausgehenden Übertragungen und leichten Sammelüberwachungen abgeglichen werden kann, was den Rechenaufwand reduziert. Im Gegensatz dazu wäre das Gegenteil der Fall, wenn exklusive Adressen verwendet würden.';
	@override String get tokenType => 'Token-Typ';
	@override String get contract => 'vertraglich';
	@override String get contractStandard => 'Vertragsstandard';
	@override String get contractAddress => 'Vertragsadresse';
	@override String get native => 'Protozoen';
	@override String get confirmUnbindingPleaseEnterYes => 'Um die Entbindung zu bestätigen, geben Sie bitte "ja" ein.';
	@override String get listAllWorkingTempReceivingAddresses => 'Liste aller funktionierenden kettenübergreifenden Aufladeadressen';
	@override String get setNote => 'Einrichten von Notizen';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Kann nicht länger als ${x} Bytes sein';
	@override String get transferFee => 'Ablösesumme';
	@override String get crossChainFee => 'Kettengebühr';
	@override String get crossChainTransferOutError => 'Querverbindungsfehler';
	@override String get chainName => 'Kettenname';
	@override String get message => 'Nachrichten';
	@override String get dontShowAgain => 'nicht mehr angezeigt';
	@override String get queuing => 'Warteschlange';
	@override String get optional => 'optional';
	@override String get publiclyVisible => 'öffentlich sichtbar';
	@override String get rates => 'Tarif';
	@override String get minimum => 'Minimum';
	@override String get maximum => 'Obergrenze';
	@override String get minimumBlockConfirmations => 'Mindestanzahl von Blockbestätigungen';
	@override String get dsmsVerifyTerminal => 'DSMS-Validierungsterminal';
	@override String get overall => 'Regenschirm';
	@override String get my => 'meine';
	@override String get checkValidatorQualifications => 'Überprüfung der Berechtigungen von Authentifikatoren';
	@override String get getVerifierPermissions => 'Authentifikator-Rechte erhalten';
	@override String get qualification => 'natürliche Begabungen';
	@override String get upperLimit => 'Grenze';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Maximale Anzahl der zulässigen Zugangsterminals';
	@override String get numberOfExistingAccessTerminals => 'Anzahl der vorhandenen Zugangsterminals';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Vor der Beantragung von Authentifizierungsrechten müssen Sie ein Android-Mobiltelefon im Ruhezustand und eine spezielle Zugangsnummer vorbereiten sowie die DSMS Access Terminal-Anwendung herunterladen und installieren.';
	@override String get downloadLink => 'Download-Link';
	@override String get alreadyReadyFollowingTheAboveTips => 'Es ist fertig gemäß den oben genannten Tipps';
	@override String get globalUniversal => 'für den weltweiten Einsatz';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Derzeit gibt es nicht genügend lokale Authentifikatoren, um am DSMS-Authentifizierungs-Zugangsdienst teilzunehmen. Bitte wählen Sie den Zugangsdienst "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'als reine Zugangsnummer';
	@override String pleaseCheckTip({required Object tip}) => 'Bitte kreuzen Sie das Feld "${tip}" an.';
	@override String get inputLengthTooShort => 'Eingabelänge zu kurz';
	@override String get shortName => 'Akronyme';
	@override String pleaseEnterXname({required Object name}) => 'Bitte geben Sie ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Die Bewerbung wird eingereicht, bitte warten Sie...';
	@override String get applyForDSMSVerifierPermission => 'Beantragen Sie DSMS-Validator-Privilegien';
	@override String get confirmInformation => 'Bestätigung der Informationen';
	@override String get lastHeartbeat => 'letzter Herzschlag';
	@override String get expirationTime => 'fällige Zeit';
	@override String get country => 'Nationen';
	@override String get accessTerminals => 'Zugangsterminal';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Gesamtzahl der DSMS-Zugangsnummern-Terminals';
	@override String get textContent => 'Inhalt des Textes';
	@override String get scanQRcodeToLogin => 'Zum Einloggen wischen';
	@override String get confirmLogin => 'Anmeldung bestätigen';
	@override String get authorizeSubApplicationToLogin => 'Diese Teilanwendung zum Einloggen autorisieren';
	@override String get authorizationSuccessful => 'Die Genehmigung war erfolgreich!';
	@override String get launchSMSprogram => 'Start des SMS-Programms';
	@override String get notApplied => 'Kein Antrag';
	@override String get validityPeriod => 'Gültigkeitsdauer';
	@override String get renewal => 'Verlängerungsantrag';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Code scannen, um Terminalanmeldung zu autorisieren';
	@override String get rewards => 'Anreize';
	@override String get roles => 'Zeichen';
	@override String get developerCenter => 'Entwicklerzentrum';
	@override String get appName => 'Name der Anwendung';
	@override String get pleaseSelect => 'bitte auswählen';
	@override String get category => 'Kategorie';
	@override String get keywords => 'Stichwort';
	@override String get pleaseEnterAkeyword => 'Bitte geben Sie ein Stichwort ein';
	@override String get createApplication => 'Anwendungen erstellen';
	@override String get appType => 'Art der Anwendung';
	@override String get numberOfCategoriesMustBetween1and3 => 'Die Anzahl der Kategorien muss zwischen 1 und 3 liegen.';
	@override String get appLogoSpecifications => 'Bildformat: png, Größe: bis 100KB, Auflösung (Pixel): 256*256';
	@override String get localAlbum => 'Lokale Fotoalben';
	@override String get networkPath => 'Netzwerkpfad';
	@override String get imageURLkAddress => 'Bild-URL';
	@override String get urlAddressFormatIsIncorrect => 'Falsch formatierte URL-Adresse';
	@override String get imageFormatOnlySupportsPng => 'Bilder werden nur im "png"-Format unterstützt.';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'Die Länge muss zwischen ${a}-${b} Zeichen liegen.';
	@override String get introduction => 'kurz';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'Die Bildgröße kann nicht größer sein als ${a}, derzeit ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'Die Bildauflösung muss sein: ${p1}(Pixel), derzeit ${p2}';
	@override String get becomeDeveloper => 'Werden Sie ein Entwickler';
	@override String get developerInformation => 'Informationen für Entwickler';
	@override String get teamName => 'Name der Mannschaft';
	@override String get website => 'Knoten';
	@override String get other => 'andere als';
	@override String get githubVerification => 'Github-Überprüfung';
	@override String get exampleUrl => 'Beispiel Url';
	@override String githubVerificationTip({required Object did}) => 'Bitte verwenden Sie Ihr GitHub-Konto, um in Ihrem Repository eine Datei "delta.did" mit dem Inhalt "${did}" zu erstellen; fügen Sie dann die githubusercontent Url-Adresse dieser Datei zur Authentifizierung in dieses Eingabefeld ein.';
	@override String get createApp => 'Anwendungen erstellen';
	@override String get appManagement => 'Anwendungsmanagement';
	@override String get statusLogs => 'Statusprotokoll';
	@override String get bad => 'nicht gut';
	@override String get normal => 'üblich';
	@override String get good => 'eine ausgezeichnete';
	@override String get onceCreatedItCannotBeChanged => 'Einmal erstellt, kann es nicht mehr geändert werden!';
	@override String get manageApplicationEntity => 'Verwaltung von Anwendungsentitäten';
	@override String get currentVersion => 'aktuelle Version';
	@override String get submitVersion => 'Eingereichte Version';
	@override String get packageOnlySupportZipCompressedFile => 'Das Paket unterstützt nur zip-komprimierte Dateien';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Die Datei \'${name}\' wurde im Zip-Paket nicht gefunden.';
	@override String get fileList => 'Liste der Dokumente:';
	@override String get programPackage => 'Programmierpaket:';
	@override String get automaticallyExtractFromVersionFile => 'Automatisch aus \'.version\'-Dateien extrahiert';
	@override String get dappVersionFormatTip => 'Das Format der Versionsnummer muss eine Dezimalzahl mit einer Genauigkeit von 2 Ziffern sein, die maximal 99,99 betragen darf.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Die Versionsnummer muss größer sein als die aktuelle Version \'${v}\'.';
	@override String get versionNotes => 'Impressum:';
	@override String get updateRelease => 'neue Version';
	@override String get loadAndRun => 'Laden und ausführen';
	@override String get notYetSubmittedProgramPackage => 'Das Programmpaket ist noch nicht eingereicht worden!';
	@override String get authorizeMinidAppLogin => 'mini-dApp Anmeldung autorisieren';
	@override String get confirmAuthorizationPleaseEnterYes => 'Um die Genehmigung zu bestätigen, geben Sie bitte "ja" ein.';
	@override String get authorizeNow => 'Sofortige Genehmigung';
	@override String get operation => 'Betrieb.';
	@override String get statusChange => 'Statusänderung';
	@override String get changeTo => 'Wechseln zu:';
	@override String get notes => 'Bemerkung.';
	@override String get changesNotEffective => 'Die Änderung ist nicht gültig!';
	@override String get released => 'Veröffentlicht';
	@override String get inPublicBeta => 'offene Beta';
	@override String get developers => 'Entwickelt von.';
	@override String get reviewList => 'Kommentarliste.';
	@override String get postReview => 'Hinterlassen Sie einen Kommentar';
	@override String get scoreNow => 'Jetzt bewerten';
	@override String get description => 'Beschreibung.';
	@override String get noData => '(^-^)\n Keine Daten';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Die Version wurde von ${a} auf ${b} aktualisiert.';
	@override String get loadNewVersion => 'Neue Version laden';
	@override String get name => 'Name.';
	@override String get canisterId => 'Tank-Id.';
	@override String get updateTime => 'Aktualisierungszeit';
	@override String get contractCanistersState => 'Vertrag Tank Status';
	@override String get userDistribution => 'Benutzerverteilung';
	@override String get settings => 'Einstellung';
	@override String get security => 'Sicherheit';
	@override String get invite => 'Einladungen';
	@override String get more => 'Mehr...';
	@override String get receiveAddress => 'Empfangsadresse:';
	@override String get hangingAmount => 'hängend';
	@override String get hangingAmountTips => 'Ausstehende Beträge sind temporäre Aufzeichnungen von Belohnungen, die durch den Abbau durch Ihr untergeordnetes Team generiert wurden. Sobald Sie eine Abbausitzung durchgeführt haben, werden diese Beträge in den Ausstehenden Beträgen gesammelt.';
	@override String get pendingAmount => 'ausstehend';
	@override String get pendingAmountTips => 'Ausstehende Beträge sind solche, die noch nicht gegenüber Inserenten bestätigt wurden, und solche mit gültigen Übereinstimmungen werden in gültige USCT-Datensätze übertragen, wobei ungültige Teile, falls vorhanden, ausgeschlossen werden.';
	@override String get received => 'erhalten';
	@override String get processing => 'in Arbeit';
	@override String get replied => 'Befragter';
	@override String get rejected => 'Ablehnung';
	@override String get unknown => 'unkartiert';
	@override String get insufficientBalance => 'Unzureichendes Gleichgewicht!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Das Guthaben von ${x} reicht nicht aus, um die Gebühren des Cross-Link-Netzwerks zu decken';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Eine Transaktion ist noch nicht abgeschlossen und kann zu diesem Zeitpunkt nicht übertragen werden';
	@override String get thisfunctionNotSupportExternalCalls => 'Diese Funktion kann nicht von außen aufgerufen werden.';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Es gibt keine Übereinstimmung mit einer Adresse, die zur Zahlung von Cross-Chain-Gebühren verwendet werden kann. Bitte wechseln Sie zu einem anderen Kettennetzwerk, um es zu versuchen.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'Die aktuelle Übereinstimmung mit dem Höchstbetrag, der in einer einzigen Transaktion überwiesen werden kann, beträgt ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Bemerkungen dürfen 64 Bytes nicht überschreiten';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Der Saldo ist unzureichend und der Betrag beträgt: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Sie können nicht mehr als 3 Adressen binden.\nWenn Sie eine neue Zahlungsadresse binden müssen.\nBitte heben Sie zuerst die Bindung einer anderen Adresse auf.';
	@override String parametersA_exception({required Object x}) => 'Parameter: ${x}, Ausnahme';
	@override String get parameterException => 'Parameter-Ausnahme!';
	@override String get transferAmountMustBeLargerThan0 => 'Der Transferbetrag muss größer als 0 sein';
	@override String get authorizationHasExpired => 'Die Zulassung ist abgelaufen';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'Die App wurde vom Eigentümer nicht autorisiert';
	@override String get authenticationTokenIsInvalid => 'Ungültiges Authentifizierungstoken';
	@override String get verifyInfoIsInvalidOrExpired => 'Ungültige oder abgelaufene Validierungsinformationen';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Überprüfen Sie, ob die Anzahl der Zugangsterminals die Grenze von einem von zehntausend überschritten hat.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'Die Teilnahme am Bergbau muss mehr als 3 Tage betragen';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Die Anzahl der Mitglieder des Sicherheitskreises darf nicht weniger als drei betragen';
	@override String get avatarIsNotSet => 'Avatar nicht gesetzt';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Die Anzahl der direkten Verweise darf nicht weniger als 3 betragen.';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Die zeitliche Begrenzung ist unzureichend, und Sie können Ihre Mobiltelefonnummer nur einmal im Jahr ändern.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Diese Mobiltelefonnummer existiert bereits und kann nicht dupliziert werden';
	@override String get securityCodeIsIncorrect => 'Falscher Sicherheitscode';
	@override String get securityCodeMayHaveExpired => 'Der Sicherheitscode ist möglicherweise abgelaufen';
	@override String get sessionIdIsInvalidOrExpired => 'Ungültige oder abgelaufene Sitzungsnummer';
	@override String get sessionHasBeenAuthorized => 'Die Sitzung wurde zum Abschluss genehmigt!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Kann nur innerhalb von ${x} Tagen vor Ablauf der Laufzeit verlängert werden';
	@override String get notYetGrantedDeveloperPermissions => 'Noch keine Entwicklerrechte';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Feld ${x} kann nicht null sein';
	@override String get emailFormatError => 'Fehler im E-Mail-Format';
	@override String theXformatIsIncorrect({required Object x}) => 'Formatierungsfehler \'${x}\'';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Das Feld "${x}" muss zwischen ${y} und ${z} Zeichen lang sein.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Der Auswahlbereich "${x}" muss zwischen ${y} und ${z} liegen.';
	@override String get unchanged_sameAsOldContent => 'Unverändert, gleicher Inhalt wie früher!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' existiert bereits!';
	@override String get mobileNumberHasNotJoinedDelta => 'Diese Handynummer wurde nicht zu Delta hinzugefügt!';
	@override String get referrerIdCannotBeEmpty => 'Die Referrer-ID darf nicht leer sein!';
	@override String get referrerIdDoesNotExist => 'Referrer ID existiert nicht!';
	@override String get didIsIncorrectOrInvalid => 'Die DID ist falsch oder ungültig!';
	@override String get accessTokenIsIncorrectOrInvalid => 'Der accessToken ist falsch oder ungültig!';
	@override String get minimumWithdrawalAmountIs1USD => 'Mindestens 1USD für eine einzelne Abhebung';
	@override String get miningTimeIsNotYet => 'Es ist noch nicht an der Zeit, Bergbau zu betreiben.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Bereits vorhanden, bitte nicht erneut hinzufügen!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Registrierungsnummer kann nicht als Zugangsnummer für die Authentifizierung verwendet werden';
	@override String get canotAddYourSelf => 'Kann dich nicht hinzufügen';
	@override String get logOut => 'Abmelden';
	@override String get confirmLogout => 'Bestätigen Sie die Abmeldung';
	@override String get logOutTipsText => 'Bitte beachten Sie: Wie im Whitepaper beschrieben, wird bei jeder Verifizierung Ihres Kontos ein bestimmter Betrag Ihrer DTC-Münzen verbraucht, der als Anreiz an den Verifizierer ausgezahlt wird. Versuchen Sie also nicht, sich unnötig ein- und auszuloggen, sondern klicken Sie auf die Schaltfläche unten, um sich sofort auszuloggen.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Bitte geben Sie "ja" ein, um die Abmeldung zu bestätigen.';
	@override String get tip => 'auf etw. aufmerksam machen';
	@override String get cancel => 'Stornierungen';
	@override String get close => 'Klageschrift';
	@override String get selected => 'ausgewählt';
	@override String get edit => 'Compiler';
	@override String get submit => 'vorlegen (einen Bericht usw.)';
	@override String get goBack => 'Regression (in der Psychologie)';
	@override String get copiedToClipboard => 'Sie wurde in die Zwischenablage kopiert.';
	@override String get nickname => 'Kosewort';
	@override String get confirm => 'erkennen';
	@override String get cannotBeEmpty => 'Kann nicht leer sein';
	@override String get deleteSuccessful => 'Erfolgreich gelöscht!';
	@override String get successfullyModified => 'Die Änderung war erfolgreich!';
	@override String get executionSuccessful => 'Die Umsetzung war erfolgreich!';
	@override String get preview => 'Vorschauen';
	@override String get followSystem => 'Wiedervorlageverfahren';
	@override String get change => 'Variation';
	@override String get replace => 'Ersetzungen';
	@override String get view => 'auschecken';
	@override String get manage => 'Geschäftsführung';
	@override String get modify => 'Änderungen';
	@override String get replacedSuccessfully => 'Ersetzung erfolgreich!';
	@override String get authentication => 'Authentifizierung';
	@override String get reacquire => 'abrufen.';
	@override String get tryAgain => 'Versuchen Sie es noch einmal.';
	@override String get querying => 'Es werden Erkundigungen eingezogen ...';
	@override String get writingToOnChain_pleaseWait => 'Es wird gerade in die Kette geschrieben, bitte warten Sie ...';
	@override String get versionCheck => 'Versionserkennung';
	@override String get alreadyLatestVersion => 'Bereits die neueste Version!';
	@override String get foundNewVersion => 'Entdecken Sie die neue Version:';
	@override String get upgradeLink => 'Upgrade-Link:';
	@override String get deviceDescription => 'Beschreibung der Ausrüstung.';
	@override String get notification30SecondsBeforeMiningStops => 'Führen Sie die Benachrichtigungserinnerung 30 Sekunden vor dem Ende des Minings aus!';
	@override String get goMining => 'Gehe Bergbau';
	@override String get deltaMiningReminder => 'Delta Mining-Erinnerung';
	@override String get clickToMine_miningIsAboutToStop => 'Klicken Sie hier, um zu schürfen. Der Bergbau wird bald eingestellt!';
	@override String get incorrect_input => 'Falsche Eingabe!';
	@override String get are_you_sure_delete => 'Sind Sie sicher, dass Sie löschen möchten?';
	@override String get delete_account => 'Konto löschen';
	@override String get how_to_operate_it => 'Siehst du, wie es funktioniert?';
	@override String get deletion_warning_tip => 'Wenn Sie Ihr Konto löschen, verlieren Sie alle Ihre Delta-Münzen und alle Einnahmen anderer Mitglieder gehen ebenfalls verloren.';
	@override String get launchWhatsAppProgram => 'WhatsApp-Programm starten';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Zugangsnummern mit diesem Symbol unterstützen auch die WhatsApp-Nachrichtenverifizierung. Beim internationalen Versand von Nachrichten empfiehlt sich die Verwendung von WhatsApp, um die Erfolgsquote zu erhöhen und Kosten zu senken.';
	@override String get ihaveSentVerificationString => 'Ich habe eine Bestätigungszeichenfolge gesendet';
	@override String get totalOfPeople => 'Gesamtzahl der Personen: ';
	@override String get numberOfPeopleMining => 'Anzahl der Mining-Personen';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Sie können einen Browser auf einem anderen Gerät verwenden, um den QR-Code zu scannen und an das SMS-Programm weiterzuleiten';
	@override String get toggle => 'Umschalten';
	@override String get DSMSverifier => 'DSMS-Verifizierer';
	@override String get activate => 'Aktivieren';
	@override String get activated => 'Aktiviert';
	@override String get generateActivationCommand => 'Aktivierungsbefehl generieren';
	@override String get activationCommand => 'Aktivierungsbefehl';
	@override String get activationSentedTip => 'Nachdem die Aktivierungs-SMS versendet wurde, prüfen Sie bitte den Aktivierungsstatus auf dem Zugangsterminal.';
	@override String get biometricsNotEnabledTip => 'Biometrie (Gesicht oder Fingerabdruck) ist auf Ihrem Gerät nicht aktiviert. Bitte aktivieren Sie sie, um fortzufahren.';
	@override String get error => 'Fehler';
	@override String get exceptionOccurredWhenCallingBiometric => 'Beim Aufruf der biometrischen Funktion (Gesicht oder Fingerabdruck) ist eine Ausnahme aufgetreten!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' Zugangsnummern sind geprüft, '),
		shouldNum,
		const TextSpan(text: ' sollte ausgewählt werden.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Wurde ${text} an die oben genannten ${n} Zugangsnummern gesendet?';
	@override String get interface => 'Schnittstelle:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Wartezeitüberschreitung oder Absendernummer stimmt nicht überein';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Die von Ihnen eingegebene Handynummer des Sicherheitskreismitglieds stimmt nicht überein: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Melden Sie sich innerhalb von 10 Minuten nach der Abmeldung wieder an, um die Zwei-Faktor-Verifizierung zu vermeiden.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Mindestens ${n} Mobiltelefonnummern müssen eingetragen werden';
	@override String get noAccessNumberInYourRegionYet => 'In Ihrer Region gibt es noch keine Zugangsnummer';
	@override String get notEnoughAccessNumbersInYourRegion => 'Nicht genügend Zugangsnummern in Ihrer Region';
	@override String get tipsForDeployDSMSterminal => 'Das System hat automatisch einige Zugangsnummern aus anderen Ländern für Sie geladen. Um bessere und kostengünstigere Verifizierungsdienste anbieten zu können, wird empfohlen, dass Sie oder Ihre Empfehlungsperson das DSMS-Terminal lokal einsetzen, um Verifizierungsgebühren zu verdienen.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Kann mir niemand den Sicherheitscode geben?';
	@override String get useSupplementalMode => 'Ergänzenden Modus verwenden';
	@override String get returnToSecurityCodeMode => 'Zurück zum Sicherheitscode-Modus';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Bitte geben Sie die zugehörige Handynummer ein. Die Landesvorwahl kann weggelassen werden.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Die Handynummer von ${name} ist falsch';
	@override String get matchingVerificationStrategyIs => 'Die passende Verifizierungsstrategie ist:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Der Saldo ist größer als 3 ICP, es muss derzeit kein Kraftstoff nachgefüllt werden.';
	@override String get escrowAccount => 'Treuhandkonto';
	@override String get fuelRelay => 'Kraftstoffrelais';
	@override String get pourFuel => 'Kraftstoff einfüllen';
	@override String get fuelState => 'Kraftstoffzustand';
	@override String get pouringFuelTips => 'Das Einfüllen von Kraftstoff bringt Ihnen weder Vorteile noch Nachteile, sein Zweck besteht darin, das Delta-Systemerlebnis zu bereichern.';
	@override String get sponsorDevelopersByWatchingAds => 'Sponsern Sie Entwickler, indem Sie sich Werbung ansehen';
	@override String get status => 'Status';
	@override String get date => 'Datum';
}

// Path: <root>
class _StringsEl implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsEl.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.el,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <el>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsEl _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'εικ. αρχή';
	@override String get switchLanguage => 'Αλλαγή γλώσσας';
	@override String get languageSwitch => 'Αλλαγή γλώσσας';
	@override String get slogan => 'Οικοδόμηση μιας αποκεντρωμένης οικονομίας στο Δέλτα';
	@override String get countryRegionCode => 'Κωδικός χώρας/περιοχής';
	@override String get countryRegionSelection => 'Επιλογή χωρών και περιφερειών';
	@override String get nextStep => 'το επόμενο βήμα';
	@override String get yourPhoneNumber => 'Ο αριθμός τηλεφώνου σας.';
	@override String get pleaseSelectCountryAndRegion => 'Επιλέξτε τη χώρα/περιοχή σας';
	@override String get pleaseEnterPhoneNumber => 'Παρακαλώ εισάγετε έναν έγκυρο αριθμό τηλεφώνου!';
	@override String get referrerDid => 'Referrer DID';
	@override String get pleaseEnterTheReferrersDid => 'Παρακαλούμε εισάγετε ένα έγκυρο αναγνωριστικό αποκεντρωμένης ταυτότητας παραπομπής';
	@override String get thisDidIsInvalid => 'Αυτό το DID είναι άκυρο.';
	@override String get nicknameFormatTips => 'Το ψευδώνυμο δεν πρέπει να είναι κενό και το μήκος του δεν πρέπει να υπερβαίνει τα 16 ψηφία.';
	@override String get additionalIinformation => 'Πρόσθετες πληροφορίες';
	@override String get invitationSubject => 'Πρόσκληση για την οικοδόμηση συναίνεσης στη Δέλτα';
	@override String invitationLetter({required Object did}) => 'Γεια σας, συμμετέχω στο Delta Consensus Building!\n Η Delta είναι μια νέα πλατφόρμα ψηφιακών νομισμάτων ανοιχτού κώδικα που τρέχει στο ICP, η οποία σας επιτρέπει να διαχειρίζεστε και να χρησιμοποιείτε διάφορα ψηφιακά νομίσματα χωρίς κωδικούς πρόσβασης, ιδιωτικά κλειδιά ή μνημονικά. Κάντε κλικ σε αυτόν τον σύνδεσμο https://delta.kim/auto/download για να εγκαταστήσετε την εφαρμογή και τώρα καλείστε να συμμετάσχετε και εσείς στην οικοδόμηση συναίνεσης και στην κοπή νομισμάτων.\n Referrer DID: ${did}';
	@override String get dSMSverification => 'Επικύρωση DSMS';
	@override String get getAccessNumbers => 'Πάρτε μερικούς αριθμούς πρόσβασης';
	@override String get getAccessNumberPromptMessage => 'Κάντε κλικ στο κουμπί "Αποκτήστε" παρακάτω για να περιστρέψετε ένα σύνολο αριθμών πρόσβασης επαλήθευσης SMS στην ουρά.';
	@override String get optionalAccessNumbers => 'Προαιρετικός αριθμός πρόσβασης';
	@override String get accessNumber => 'αριθμός πρόσβασης';
	@override String get TELCO => 'φορέας εκμετάλλευσης (σταθμού παραγωγής ενέργειας, δικτύου μεταφορών κ.λπ.)';
	@override String get score => 'σκορ';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('el'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Παρακαλώ σημειώστε '),
			nBuilder(n),
			const TextSpan(text: ' αριθμούς πρόσβασης και κάντε κλικ στο κουμπί "'),
			span('text'),
			const TextSpan(text: '" για να προχωρήσετε στο επόμενο βήμα.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Επιλέξτε '),
			nBuilder(n),
			const TextSpan(text: ' αριθμούς πρόσβασης και κάντε κλικ στο κουμπί "'),
			span('text'),
			const TextSpan(text: '" για να προχωρήσετε στο επόμενο βήμα.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Η Delta είναι ένα ανοικτού κώδικα, αποκεντρωμένο, παγκόσμιο πείραμα ψηφιακού νομίσματος και ένα οικοσύστημα εφαρμογών κρυπτονομισμάτων.';
	@override String get deltaGoalsDesc => 'Στόχος είναι να μπορέσουν οι άνθρωποι να χρησιμοποιήσουν τη Delta για να συνδιαμορφώσουν νέα ψηφιακά νομίσματα που θα είναι καθολικά, δίκαια, ασφαλή, γρήγορα και πράσινα. Και να παρέχει διάφορα αποτελεσματικά σενάρια εφαρμογής για αυτά τα ψηφιακά νομίσματα και τα προηγούμενα κρυπτονομίσματα.';
	@override String get details => 'στοιχεία';
	@override String get get => 'κέρδος';
	@override String get select => 'επιλογή';
	@override String get send => 'αποστολή';
	@override String get complete => 'πληρούν';
	@override String get selectedAccessNumberPrompt => 'Όταν επιλεγεί, εμφανίζεται ο πλήρης αριθμός πρόσβασης και δημιουργείται μια συμβολοσειρά ελέγχου ταυτότητας.';
	@override String get location => 'τοποθέτηση';
	@override String get verificationString => 'συμβολοσειρά επικύρωσης';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Παρακαλούμε χρησιμοποιήστε τον αριθμό τηλεφώνου σας '),
		num,
		const TextSpan(text: ' και στείλτε '),
		label,
		const TextSpan(text: ' στο '),
		accessNumber,
		const TextSpan(text: ' για να ολοκληρώσετε την επαλήθευση.'),
	]);
	@override String get ihaveSentTheSMS => 'Έχω στείλει ένα μήνυμα κειμένου';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Η συμβολοσειρά επικύρωσης είναι έγκυρη για 6 λεπτά, εναπομένον χρόνος: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Πολύ γρήγορα για να περιμένετε ${x} δευτερόλεπτα για να συνεχίσετε!';
	@override String get waitingForVerificationSMS => 'Αναμονή για SMS επαλήθευσης...';
	@override String get partSuccsForVerificationSMS => 'Ένα από τα τερματικά πρόσβασης έχει περάσει την επαλήθευση SMS!';
	@override String get creatingAccessToken => 'Δημιουργείται token πρόσβασης...';
	@override String get intoDelta => 'Μέσα στη Delta';
	@override String get deltaAccountIsLoggedIn => 'Ο λογαριασμός σας Delta είναι συνδεδεμένος';
	@override String get iHavLoggedOut => 'Εγώ φεύγω.';
	@override String get startTwoFactorVerification => 'Έναρξη διπλής επαλήθευσης';
	@override String get securityCircleVerification => 'Κύκλος επικύρωσης της ασφάλειας';
	@override String get generateSecurityCode => 'Δημιουργία κωδικού ασφαλείας';
	@override String get generateSecurityCodeHintText => 'Ο παραγόμενος κωδικός ασφαλείας θα σταλεί σε ένα τυχαία επιλεγμένο μέλος του κύκλου ασφαλείας σας.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Δεν έχετε ορίσει κύκλο ασφαλείας, ο λογαριασμός σας είναι πολύ ανασφαλής, παρακαλώ εισάγετε οποιοδήποτε 6ψήφιο σύμβολο και προχωρήστε στο επόμενο βήμα.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Ο κωδικός ασφαλείας έχει δημιουργηθεί, παρακαλούμε επικοινωνήστε με τους ακόλουθους συγγενείς και φίλους για να ζητήσετε να εξαγάγετε τον κωδικό ασφαλείας για να περάσετε την επαλήθευση.Ισχύει για 30 λεπτά!';
	@override String get itGetSecurityCodeTip => 'Συμβουλή: Μπορείτε να λάβετε τον κωδικό ασφαλείας κάνοντας διπλό κλικ στο ψευδώνυμο του λογαριασμού σας στη σελίδα Delta App -> Μενού -> Παροχή ασφάλειας.';
	@override String get securityCircleMemberList => 'Λίστα μελών του κύκλου ασφαλείας:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Επιλέξτε έναν συγγενή ή φίλο στη λίστα μελών για να δημιουργήσετε και να σας παράσχετε έναν κωδικό ασφαλείας για να επαληθεύσετε την πραγματική σας ταυτότητα. Ο σκοπός είναι να αποτρέψετε τον έλεγχο του λογαριασμού από άλλους όταν ο αριθμός του κινητού τηλεφώνου χαθεί ή κλαπεί.';
	@override String formatIsXdigits({required Object num}) => 'Μορφή ως ψηφία ${num}';
	@override String get signInSuccessfully => 'Συνδεθείτε με επιτυχία!';
	@override String get twoFAandLogin => 'Διπλή αυθεντικοποίηση και σύνδεση';
	@override String get verificationSuccessful => 'Επαληθεύστε την επιτυχία!';
	@override String get validationFailed => 'Η επικύρωση απέτυχε!';
	@override String get dappInfo => 'Πληροφορίες DApp';
	@override String get securityCircle => 'δαχτυλίδι ασφαλείας';
	@override String get securityCode => 'κωδικός ασφαλείας';
	@override String get provideSecurity => 'παροχή ασφάλειας';
	@override String get addManully => 'Προσθέστε χειροκίνητα';
	@override String get addFromContacts => 'Προσθήκη από το βιβλίο διευθύνσεων';
	@override String get addSecurityCircle => 'Προσθέστε τον Κύκλο Ασφάλειας';
	@override String get inputType => 'Τύπος εισόδου';
	@override String get mobileNumber => 'αριθμός κινητού τηλεφώνου';
	@override String get did => 'ID διεύθυνσης';
	@override String get pleaseEnterValidDID => 'Παρακαλούμε εισάγετε ένα έγκυρο αναγνωριστικό αποκεντρωμένης ταυτότητας';
	@override String get pleaseEnterValidWalletAddress => 'Παρακαλώ εισάγετε μια έγκυρη διεύθυνση πορτοφολιού';
	@override String get appellation => 'μορφή διεύθυνσης';
	@override String get appellationHint => 'Πώς το λέτε, όπως "μωρό";';
	@override String get addSecurityCircleTips => 'Μην προσθέτετε άτομα που δεν εμπιστεύεστε στον κύκλο ασφαλείας σας.';
	@override String get referralTeam => 'Συνιστώμενες ομάδες';
	@override String get profile => 'Πληροφορίες λογαριασμού';
	@override String get menu => 'μενού';
	@override String get directly => 'άμεση';
	@override String get indirectly => 'έμμεση';
	@override String get inviteContacts => 'Πρόσκληση Επικοινωνία';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Ο προσκεκλημένος σας είναι '),
		nickname,
		const TextSpan(text: ' και έχετε παραπέμψει άμεσα '),
		num1,
		const TextSpan(text: ' άτομα, εκ των οποίων '),
		num2,
		const TextSpan(text: ' είναι σήμερα online.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Έχετε παραπέμψει έμμεσα '),
		num1,
		const TextSpan(text: ' άτομα, εκ των οποίων '),
		num2,
		const TextSpan(text: ' είναι σήμερα online.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Προσκαλέστε τους φίλους σας να συμμετάσχουν στη Delta και να βελτιώσετε μαζί την κοινωνική συναίνεση. Για κάθε άμεση παραπομπή το ποσοστό εξόρυξης ενός ατόμου αυξάνει το βασικό ποσοστό κατά '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Προσκαλέστε τους φίλους σας να γίνουν μέλη της Delta για να αυξήσετε την κοινωνική συναίνεση και για κάθε έμμεση παραπομπή, το ποσοστό εξόρυξης αυξάνεται κατά '),
		rate2,
		const TextSpan(text: ' του βασικού ποσοστού.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Είστε σίγουροι ότι θέλετε να διαγράψετε το "${name}";';
	@override String get safetyCircleRoleQ => 'Ποιος είναι ο σκοπός του δακτυλίου ασφαλείας;';
	@override String get safetyCircleRoleA => 'Προστατέψτε το λογαριασμό σας παρέχοντας δευτερεύοντα έλεγχο ταυτότητας σε ευαίσθητες καταστάσεις.';
	@override String get howSecurityCirclesWorkQ => 'Πώς λειτουργούν οι δακτύλιοι ασφαλείας;';
	@override String get howSecurityCirclesWorkA => 'Σε περίπτωση που απαιτείται επαλήθευση του Circle of Safety, το πρόγραμμα Delta Smart Contracts θα επιλέξει τυχαία ένα μέλος της λίστας Circle of Safety buddy που θα σας βοηθήσει να λάβετε έναν κωδικό ασφαλείας για να ολοκληρωθεί η επαλήθευση της ταυτότητας για εσάς. Όταν ζητήσετε από το μέλος τον κωδικό ασφαλείας, μπορεί να επιβεβαιώσει αν είστε εσείς ή όχι. Ταυτόχρονα, το πρόγραμμα θα σας προτρέπει: "Αρνηθείτε να παράσχετε τον κωδικό ασφαλείας αν δεν είστε εσείς", ώστε να προστατεύεται η ασφάλεια του λογαριασμού σας. Επομένως, θα πρέπει πάντα να βεβαιώνεστε ότι τα μέλη του κύκλου ασφαλείας σας είναι άτομα που μπορείτε να εμπιστευτείτε.';
	@override String get securityCircleBeUsedQ => 'Πότε θα χρησιμοποιηθεί;';
	@override String get securityCircleBeUsedA1 => '1. Όταν χάνετε τον έλεγχο του Delta APP, συνήθως πρόκειται για απώλεια ή κλοπή του κινητού σας τηλεφώνου.';
	@override String get securityCircleBeUsedA2 => '2. Σε περίπτωση ορισμένων ευαίσθητων λειτουργιών, το πρόγραμμα Delta Smart Contract πρέπει να επιβεβαιώσει ότι είστε εσείς.';
	@override String get provideSafetyTip1 => 'Όταν το φιλαράκι σας σας ζητήσει τον κωδικό ασφαλείας του, βεβαιωθείτε ότι είναι ο δικός του.';
	@override String get provideSafetyTip2 => 'Παρέχετε ασφάλεια στους παραπάνω φίλους, οι οποίοι σας έχουν ορίσει ως το πιο έμπιστο πρόσωπο στον κύκλο ασφαλείας τους και σας χρειάζονται για να τους παρέχετε επιβεβαίωση ασφαλείας σε περίπτωση που συναντήσει ευαίσθητες λειτουργίες στο λογαριασμό τους.';
	@override String get provideSafetyTip3 => 'Κάντε διπλό κλικ στο άβαταρ του άλλου ατόμου για να εξαγάγετε τον κωδικό ασφαλείας όταν χρειάζεται.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'Το άλλο μέρος δεν διαθέτει επί του παρόντος έναν κωδικό ασφαλείας που πρέπει να εξαχθεί!';
	@override String get existSecurityCodeTip => 'Βεβαιωθείτε ότι ο φίλος ή το μέλος της οικογένειας που σας ζητάει τον κωδικό ασφαλείας είναι ο ίδιος με τον φίλο ή το μέλος της οικογένειας. Για την προστασία του φίλου ή του μέλους της οικογένειας, θα πρέπει να αρνηθείτε να δώσετε τον κωδικό ασφαλείας εάν δεν τον έχει δώσει ο ίδιος ο φίλος ή το μέλος της οικογένειας.';
	@override String get avatarSettings => 'Ρυθμίσεις Avatar';
	@override String get NFTAvatarPropertyRightsText => 'Αποποίηση ευθυνών: Η χρήση του εν λόγω NFT ως avatar γίνεται μόνο για προσωπική προτίμηση και δεν έχει καμία σχέση με την κατοχή των δικαιωμάτων πνευματικής ιδιοκτησίας του εν λόγω NFT.';
	@override String get projectWebsite => 'Ιστοσελίδα του έργου:';
	@override String get whitepaper => 'λευκό χαρτί:';
	@override String get indexID => 'Ευρετήριο Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Δείκτης μεταξύ ${start} και ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Εισάγετε το index id του αγαπημένου σας NFT και το πρόγραμμα θα το φορτώσει αυτόματα ως avatar για εσάς.';
	@override String get miningRate => 'ποσοστό εξόρυξης';
	@override String get miningDetails => 'Λεπτομέρειες εξόρυξης';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Συνολική τιμή εξόρυξης: '),
		rate,
		const TextSpan(text: ' δ/ημέρα'),
	]);
	@override String get EndOfMiningSession => 'Η εξόρυξη κύκλων τελείωσε:';
	@override String get tapToMineDeltaCoin => 'Κάντε κλικ για να εξορύξετε νομίσματα Delta ↑';
	@override String get clickToStartMining => 'Κάντε κλικ για να ξεκινήσετε την εξόρυξη!';
	@override String get miningHasStoppedPromptDesc => 'Η εξόρυξη έχει σταματήσει, κάθε 24 ώρες είναι ένας κύκλος εξόρυξης, κάντε κλικ στο εικονίδιο του κεραυνού για να ξεκινήσετε έναν νέο γύρο εξόρυξης.Η εξόρυξη της Delta είναι ένας μηχανισμός κατανομής που δεν καταναλώνει πρόσθετη αριθμητική ισχύ και κίνηση δικτύου από τη συσκευή σας.';
	@override String get aboutBaseRate => 'Σχετικά με το βασικό επιτόκιο;';
	@override String get baseRateDescription => 'Όπως συμφωνήθηκε στο ενημερωτικό δελτίο, ο κανόνας μείωσης του βασικού συντελεστή για την εξόρυξη Delta θα χωριστεί σε δύο φάσεις.\nΦάση 1: Το ποσοστό θα είναι 32δ/ημέρα όταν ο αριθμός των συμμετεχόντων (εγγραφές) είναι 3.000 ή λιγότεροι. Χρησιμοποιώντας αυτό ως αρχική βάση, το βασικό ποσοστό μειώνεται στο μισό κάθε φορά που ο αριθμός των ατόμων αυξάνεται κατά 10 φορές.\nΦάση 2: Όταν ο αριθμός των συμμετεχόντων φτάσει τα 30 εκατομμύρια ή περισσότερο, το βασικό ποσοστό μειώνεται στο μισό κάθε φορά που ο αριθμός των συμμετεχόντων αυξάνεται κατά ένα παράγοντα 3. Μέχρι να σταματήσει η παραγωγή της τελικής εκσκαφής.';
	@override String get baseRate => 'βασικός ρυθμός (όπως στο ISDN)';
	@override String get directReferralRewards => 'Μπόνους άμεσης παραπομπής';
	@override String get directReferralRewardDesc => 'Για κάθε άμεση παραπομπή, το ποσοστό εξόρυξης θα αυξάνεται κατά επιπλέον 1/3 του βασικού ποσοστού όταν βρίσκονται σε λειτουργία εξόρυξης.\n\n Επιπλέον, η κατάσταση εξόρυξης των παραπομπών σας θα προσμετράται επίσης στο μπόνους άμεσης παραπομπής.';
	@override String get indirectReferralRewards => 'Μπόνους έμμεσης παραπομπής';
	@override String get indirectReferralRewardDesc => 'Όταν μια έμμεση παραπομπή κάνει εξόρυξη, ο ρυθμός εξόρυξης αυξάνεται κατά 1/10 του βασικού ρυθμού.\n\n Η ομάδα άμεσης παραπομπής σας, κάθε άτομο που παραπέμπει εκ νέου αποτελεί μια έμμεση παραπομπή για εσάς.';
	@override String get mine => 'εξάγετε (μετάλλευμα ή άλλο πόρο από ορυχείο)';
	@override String get thisMiningInformation => 'Τρέχουσες πληροφορίες εξόρυξης';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Συμμετείχα στην εξόρυξη: '),
		x,
		const TextSpan(text: ' φορές'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Συνολικό κέρδος αυτή τη φορά: '),
		x,
		const TextSpan(text: ' Δέλτα νομίσματα'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Βασικά κέρδη: '),
		x,
		const TextSpan(text: ' νομίσματα'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Άμεση συνεισφορά της ομάδας: '),
		x,
		const TextSpan(text: ' νομίσματα'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Έμμεση συνεισφορά της ομάδας: '),
		x,
		const TextSpan(text: ' νομίσματα'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Χρονικό διάστημα μεταξύ των ανασκαφών: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Αποτελεσματικές ώρες εξόρυξης: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} ώρες';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Για την ασφάλεια των περιουσιακών στοιχείων, τα μέλη του κύκλου ασφαλείας θα πρέπει να διατηρούν ανά πάσα στιγμή 3-5 έμπιστα άτομα.';
	@override String get index => 'ευρετηρίαση';
	@override String get amount => 'χρηματικό ποσό';
	@override String get balance => 'υπόλοιπα';
	@override String get timeStamp => 'timestamp';
	@override String get summary => 'περιλήψεις';
	@override String get miningHasStopped => 'Η εξόρυξη έχει σταματήσει.';
	@override String get miningHasStoppedDesc => 'Η εξόρυξή σας έχει σταματήσει και θα αρχίσετε να κερδίζετε αμέσως.';
	@override String get startMining => 'Ξεκινήστε την εξόρυξη';
	@override String get changeMobileNumber => 'Αλλαγή αριθμού κινητού τηλεφώνου';
	@override String get currentMobileNumber => 'Τρέχων αριθμός κινητού τηλεφώνου';
	@override String get newMobileNumber => 'Νέος αριθμός κινητού τηλεφώνου';
	@override String get securityCodeFormatIs6digits => 'Η μορφή του κωδικού ασφαλείας είναι 6 ψηφία!';
	@override String get startVrification => 'Έναρξη επαλήθευσης';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Αυτός ο αριθμός κινητού υπάρχει ήδη, σχετικό DID: ${dId}';
	@override String get noDataYet => 'Δεν υπάρχουν διαθέσιμα στοιχεία';
	@override String get previousMobileNumber => 'Προηγούμενος αριθμός κινητού τηλεφώνου';
	@override String get changeLog => 'Καταγραφή των αλλαγών';
	@override String get referralLinkToShare => 'Συνιστώμενοι σύνδεσμοι για να μοιραστείτε';
	@override String get referrer => 'παραπομπή';
	@override String get isoCountryCode => 'Κωδικός χώρας ISO';
	@override String get avatarLogo => 'λογότυπο κεφαλίδας';
	@override String get creationTime => 'Χρόνος δημιουργίας';
	@override String get lastUpdate => 'Τελευταία ενημέρωση';
	@override String get numberOfSecurityCircleMembers => 'Αριθμός μελών των κύκλων ασφαλείας';
	@override String get theLatestMining => 'Τελευταία ανασκαφή';
	@override String get effectiveMiningDays => 'Αριθμός ημερών πραγματικής εξόρυξης';
	@override String get modifyNickname => 'Αλλαγή ψευδώνυμου';
	@override String get didNotChange => 'Καμία αλλαγή!';
	@override String get kycVerification => 'Επαλήθευση KYC';
	@override String get faceID => 'Αναγνώριση προσώπου';
	@override String get touchID => 'Αναγνώριση δακτυλικών αποτυπωμάτων';
	@override String get biometricsAuthorizationTest => 'Δοκιμές βιομετρικής πιστοποίησης ταυτότητας';
	@override String get currentState => 'τρέχουσα κατάσταση';
	@override String get biometricsAuthenticationLocalizedReason => 'Χρησιμοποιήστε το ξεκλείδωμα της συσκευής σας για να επαληθεύσετε την ταυτότητά σας.';
	@override String get graph => 'αρχείο γραφικών (π.χ. χάρτες, έγγραφα ή βοτανικά στοιχεία)';
	@override String get referralRelationshipGraph => 'Χαρτογράφηση σχέσεων παραπομπής';
	@override String get nativeContacts => 'Τοπικές επαφές';
	@override String get registrationAndMiningTrends => 'Τάσεις εγγραφής και εξόρυξης';
	@override String get inMining => 'εξόρυξη';
	@override String get registrationVolume => 'όγκος εγγραφής';
	@override String get unmined => 'ανεκμετάλλευτο';
	@override String get mined => 'εξορύσσεται';
	@override String get communityMining => 'Κοινοτικά ορυχεία';
	@override String get consensusPromotionFund => 'Ταμείο Προώθησης της συναίνεσης';
	@override String get ecologicalAwardFund => 'Ταμείο οικολογικών κινήτρων';
	@override String get icpFuelCrowdfunding => 'ICP Fuel Crowdfunding';
	@override String get coreDeveloperRewards => 'Βασικές ανταμοιβές προγραμματιστών';
	@override String get totalAllocation => 'Συνολική κατανομή';
	@override String get miningRatio => 'Αναλογία εξόρυξης';
	@override Map<String, String> get billion => {
		'30': '30 δισεκατομμύρια',
		'60': '60 δισεκατομμύρια',
		'180': '180 δισεκατομμύρια.',
		'300': '300 δισεκατομμύρια',
	};
	@override String get watchAdsToSupportDevelopers => 'Παρακολουθήστε διαφημίσεις για να υποστηρίξετε τους προγραμματιστές';
	@override String get loadingAdcomponents => 'Φόρτωση διαφημιστικών στοιχείων...';
	@override String get timeIsNotUp => 'Ο χρόνος δεν τελείωσε!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Απέτυχε να φορτώσει, πιθανόν μπλοκαρισμένο δίκτυο!';
	@override String get pendingUSCTrecords => 'Εκκρεμείς εγγραφές USCT';
	@override String get pendingUSCTrecordsDesc => 'Οι εκκρεμείς εγγραφές USCT θα επιβεβαιώνονται από τη διαφημιστική πλατφόρμα εντός 15-30 ημερών και οι έγκυρες εγγραφές θα μεταφέρονται στον κατάλογο εγγραφών USCT και το αντίστοιχο ποσό USCT θα προστίθεται στο υπόλοιπο του λογαριασμού.';
	@override String get validity => 'εγκυρότητα';
	@override String get advertiser => 'διαφημιστές';
	@override String get earned => 'κερδισμένο';
	@override String get withdraw => 'αποσύρω';
	@override String get validUSCTrecords => 'Αποτελεσματικά αρχεία USCT';
	@override String get USCTmining => 'Μεταλλεία USCT';
	@override String get aboutUSCTmining => 'Σχετικά με τα ορυχεία της USCT;';
	@override String get aboutUSCTminingItme1 => '1. Το USDT είναι ένα παγκοσμίως δημοφιλές stablecoin σε δολάρια ΗΠΑ, το οποίο μπορεί εύκολα να ανταλλαχθεί με εθνικά κρατικά νομίσματα στα μεγαλύτερα ανταλλακτήρια κρυπτονομισμάτων σε όλο τον κόσμο.';
	@override String get aboutUSCTminingItme2 => '2. Το USCT είναι ένα προσωρινό μέτρο των εσόδων της εξόρυξης USCT, γνωστό ως πίστωση USD, η οποία τελικά θα μετατραπεί σε USDT σύμφωνα με το πραγματικό ποσό διακανονισμού και τους κανόνες διανομής της διαφημιστικής πλατφόρμας και την αντίστοιχη αναλογία.';
	@override String get aboutUSCTminingItme3 => '3. Το USCT Mining είναι μια λειτουργία υλοποίησης διαφημίσεων κυκλοφορίας της κοινότητας Delta. Εκμεταλλεύεται τη μεγάλη βάση χρηστών της κοινότητας Delta για να παρέχει πολλαπλά οφέλη για τους διαφημιστές, τους προγραμματιστές της Delta και τους απόντες. Έχει σχεδιαστεί για να παρέχει ένα ορισμένο ποσό αποτελεσματικού εισοδήματος για τους απόντες εργαζόμενους στο αρχικό στάδιο, όταν το οικοσύστημα της Delta δεν έχει ακόμη διαμορφωθεί και ευημερήσει- ταυτόχρονα, παρέχει επίσης ορισμένη οικονομική υποστήριξη για τους προγραμματιστές, ώστε να διασφαλιστεί ότι μπορούν να συνεχίσουν να παρέχουν υπηρεσίες ανάπτυξης για μεγάλο χρονικό διάστημα και τελικά να είναι σε θέση να υλοποιήσουν όλα τα σχέδια που περιέχονται στο whitepaper- και παρέχει επίσης ένα αποτελεσματικό κανάλι προώθησης για τους διαφημιστές των προϊόντων.';
	@override String get aboutUSCTminingItme4 => '4. Οι κανόνες διανομής έχουν σχεδιαστεί έτσι ώστε το 40 % των συνολικών εσόδων να χρησιμοποιείται ως προμήθειες τεχνικών υπηρεσιών των προγραμματιστών και το υπόλοιπο 60 % να χρησιμοποιείται ως ανταμοιβή για τις κοινοτικές απουσίες. Το μέρος ανταμοιβής απουσίας του μοντέλου διανομής πολλαπλών επιπέδων παρόμοιο με το DTC, η ανταμοιβή απουσίας θα διαιρεθεί σε τρία μέρη σύμφωνα με την αναλογία 6:3:1, κάθε φορά που ένα από τα ανταμοιβή απουσίας της εξόρυξης USCT 6 μέρη που κατανέμονται στην απουσία των τρεχουσών διαφημίσεων, 3 μέρη που κατανέμονται στον ανώτερο παραπέμποντα, 1 μέρος που κατανέμεται στον παραπέμποντα του δεύτερου επιπέδου. Ομοίως, μπορείτε επίσης να λάβετε την ίδια ανταμοιβή παραπομπής για τους φίλους που παραπέμπετε μέσω της εξόρυξης USCT. Το πλεονέκτημα αυτής της πολυεπίπεδης διανομής είναι ότι ο καθένας μπορεί να κερδίσει ένα σχετικά μεγάλο ποσό USDT αναπτύσσοντας μια ομάδα downline.';
	@override String get aboutUSCTminingItme5 => '5. Η περίοδος διακανονισμού είναι 7 ημέρες, δηλαδή κάθε 7 ημέρες ελέγχεται η εγκυρότητα με τη διαφημιστική πλατφόρμα και η επιβεβαιωμένη εγκυρότητα των εσόδων και το πραγματικό ποσό θα καταγράφονται στο υπόλοιπο. Το ελάχιστο ποσό για κάθε ανάληψη είναι 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Γραμμές ${x} έως ${y}.';
	@override String get wallet => 'πορτοφόλια';
	@override String get multiChainWallet => 'πορτοφόλι πολλαπλών αλυσίδων';
	@override String get deposit => 'κατάθεση (π.χ. σε τραπεζικό λογαριασμό)';
	@override String get transfer => 'μεταφορά (χρήματα σε τραπεζικό λογαριασμό)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} στη διεύθυνση πορτοφολιού';
	@override String get transactions => 'Αρχεία συναλλαγών';
	@override String get network => 'δικτυωτό δίκτυο';
	@override String get walletAddress => 'Διεύθυνση πορτοφολιού';
	@override String get currentAddress => 'τρέχουσα διεύθυνση';
	@override String get depositAddress => 'Διεύθυνση επαναφόρτισης';
	@override String get receivingMoneyAddress => 'διεύθυνση δικαιούχου';
	@override String get applyTempDepositAddress => 'Διεύθυνση για την αίτηση προσωρινής αναπλήρωσης';
	@override String get tempDepositAddressTip => '1. Πρόκειται για μια κοινή διεύθυνση κατάθεσης. Παρακαλείστε να μην καταθέσετε το ποσό μετά τη λήξη της μίσθωσης ή μετά την αποδέσμευσή σας. Εάν συμβεί αυτό, το ποσό θα χαθεί.';
	@override String get tempDepositAddressTip2 => '2. Πριν κάνετε μια κατάθεση, βεβαιωθείτε ότι το [Όνομα αλυσίδας] και το [Όνομα νομίσματος] ταιριάζουν ακριβώς- στην περίπτωση των συμβολαίων, πρέπει επίσης να βεβαιωθείτε ότι το [Πρότυπο συμβολαίου] και η [Διεύθυνση συμβολαίου] ταιριάζουν ακριβώς.';
	@override String get tempDepositAddressTip3 => '3. Μην επιχειρήσετε να καταθέσετε χρήματα που δεν ταιριάζουν με καμία από τις παραμέτρους στις παραπάνω συμβουλές, διαφορετικά το ποσό θα χαθεί.';
	@override String get tempDepositAddressTip4 => '4. Εάν πρέπει να καταθέσετε άλλα είδη περιουσιακών στοιχείων, μεταβείτε στη σελίδα με το αντίστοιχο νόμισμα και τις επιλογές παραμέτρων για να υποβάλετε αίτηση για νέα διεύθυνση.';
	@override String get applyExtensionOfValidity => 'Αίτηση για παράταση της περιόδου ισχύος';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Αυτή η διεύθυνση θα λήξει μετά από '),
		diff,
		const TextSpan(text: ' και θα είναι '),
		tap('manually extend'),
		const TextSpan(text: ' έγκυρη για 12 ώρες πριν τη λήξη.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Μπορεί να ανανεωθεί μόνο 12 ώρες νωρίτερα';
	@override String get theReceivingAddressValidForLongtime => 'Αυτή η διεύθυνση ισχύει για μεγάλο χρονικό διάστημα.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Αυτή η διεύθυνση συλλογής ισχύει για μεγάλο χρονικό διάστημα και πιστώνεται αυτόματα σε πραγματικό χρόνο.';
	@override String get confirmDeposited => 'Επιβεβαίωση της κατάθεσης';
	@override String get unbindThisDepositAddress => 'Αποδεσμεύστε αυτή τη διεύθυνση ανανέωσης';
	@override String get confirmDepositedTip => 'Εάν έχουν μεταφερθεί χρήματα, κάντε κλικ στο παραπάνω κουμπί για να ενεργοποιήσετε την τιμολόγηση στο πορτοφόλι σας μετά από 10 λεπτά.';
	@override String get unbindDepositAddressTip => 'Προκειμένου να μειωθεί η επιβάρυνση λειτουργίας του έξυπνου συμβολαίου, παρακαλείστε να αποδεσμεύσετε τη διεύθυνση ανανέωσης, εάν δεν θα καταθέσετε άλλα χρήματα κατά τη διάρκεια της περιόδου ισχύος.';
	@override String get transferToAddress => 'πηγαίνετε στη διεύθυνση';
	@override String get longPressToPaste => 'Παρατεταμένο πάτημα για επικόλληση';
	@override String get all => 'πλήρες';
	@override String balanceX({required Object x}) => 'Υπόλοιπο ${x}';
	@override String get transferOut => 'αποδειχθεί';
	@override String depositXcoins({required Object x}) => 'Πιστώθηκε ${x}';
	@override String get sender => 'αποστολέας';
	@override String get recipient => 'παραλήπτης';
	@override String get memo => 'σημείωση';
	@override String get kind => 'τρόπος (ζωής)';
	@override String get transferAmountExceedsAvailableBalance => 'Μεταφορές πέραν του διαθέσιμου υπολοίπου';
	@override String get pleaseEnterValidAmount => 'Παρακαλώ εισάγετε ένα έγκυρο ποσό';
	@override String get networkFee => 'Τέλος χειρισμού δικτύου';
	@override String get fee => 'τέλος διεκπεραίωσης';
	@override String validLengthXcharacters({required Object x}) => 'Ισχύον μήκος διεύθυνσης ${x} χαρακτήρες';
	@override String get historys => 'ιστορικό αρχείο';
	@override String get dtcCreditdetail => 'Λεπτομέρειες πόντων Delta';
	@override String get usdCreditdetail => 'Λεπτομέρειες πόντων USD';
	@override String get dappSquare => 'dApp Plaza';
	@override String get amountRaised => 'Συγκεντρωθέν ποσό';
	@override String get disbursedAmount => 'Εκδοθέν ποσό';
	@override String get participationTimes => 'Αριθμός συμμετεχόντων';
	@override String get completionRate => 'ποσοστό ολοκλήρωσης';
	@override String get exchangeRate => 'Συναλλαγματική Ισοτιμία';
	@override String get icpCrowdfunding => 'ICP Crowdfunding';
	@override String get crowdfunding => 'crowdfunding';
	@override String get trendsCurve => 'καμπύλη τάσης';
	@override String get fullScreenView => 'προβολή σε πλήρη οθόνη';
	@override String get walletBalance => 'Υπόλοιπο πορτοφολιού:';
	@override String get manageWallet => 'Διαχείριση πορτοφολιού';
	@override String get fundraiseAmount => 'συγκέντρωση χρημάτων';
	@override String get exchangeRewardAmount => 'Εξαργύρωση του ποσού ανταμοιβής';
	@override String get fundraise => 'Ερανος';
	@override String rangeIntegersX({required Object x}) => 'Εύρος: ακέραιος ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Συμμετέχετε επιτυχώς στη συγκέντρωση χρημάτων και ανταμείβεστε με ${amount}DTCT';
	@override String get amountSummary => 'Περίληψη των ποσών';
	@override String get changePreferred => 'Αλλαγή προτίμησης';
	@override String get changePreferredAddress => 'Αλλαγή προτιμώμενης διεύθυνσης';
	@override String get preferredAddressTip => 'Τα χρήματα θα μεταφερθούν αυτόματα στην προτιμώμενη διεύθυνση όταν τα χρήματα συλλέγονται με τη χρήση ενός καταχωρημένου αριθμού κινητού τηλεφώνου ή DID.';
	@override String get newAddress => 'Νέα διεύθυνση';
	@override String get newAddressTip => 'Για να αποφευχθεί η κατάχρηση, όταν υπάρχουν περισσότερες από μία διευθύνσεις πορτοφολιού, επιβάλλεται τέλος συναλλαγής για κάθε νέα διεύθυνση που δημιουργείται.';
	@override String get createNew => 'νεόδμητο';
	@override String get chainNetworkName => 'όνομα δικτύου αλυσίδας';
	@override String get from => 'προέρχονται από (έναν τόπο)';
	@override String get to => 'μέχρι (μια στιγμή)';
	@override String get noAvailableDepositAmountDetected => 'Δεν εντοπίστηκε διαθέσιμο ποσό κατάθεσης!';
	@override String get crossChainReceiveMoneyMonitoring => 'Η συλλογή διασταυρούμενων αλυσίδων ακούει ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Ελήφθη ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Επιβεβαίωση σε εξέλιξη ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Σημειώσεις (πρέπει να διαβάσετε για αρχάριους)';
	@override String get whyUseSharedAddresses => 'Γιατί να χρησιμοποιήσετε μια κοινή διεύθυνση;';
	@override String get useSharedrAdvantage => 'Τα πλεονεκτήματα της χρήσης κοινών διευθύνσεων κατά την κατάθεση μεταξύ αλυσίδων είναι τα εξής:';
	@override String get useSharedrAdvantage1 => '1. Μείωση της σπατάλης των τελών μεταφοράς και μείωση του κόστους χρήσης για τους χρήστες. Λόγω της χρήσης της αποκλειστικής διεύθυνσης, θα οδηγήσει σε υπερβολική διασπορά των κεφαλαίων, γενικά, προκειμένου να διευκολυνθεί η επακόλουθη μεταφορά άλλων χρηστών κατά την ανάληψη κεφαλαίων, όταν ο χρήστης επαναφορτίζει τη δεύτερη μεταφορά κεφαλαίων πρέπει να συγκεντρωθεί σε μία ή σε μικρό αριθμό διαχείρισης διευθύνσεων.';
	@override String get useSharedrAdvantage2 => '2. Στο κοινόχρηστο σχήμα, το πρόγραμμα χρειάζεται μόνο να διατηρεί μια σχετικά μικρή δεξαμενή διευθύνσεων που μπορεί να αντιστοιχιστεί γρήγορα με εξερχόμενες μεταφορές και ελαφριά ακρόαση συλλογής, γεγονός που μειώνει την επιβάρυνση των υπολογιστικών πόρων. Αντίθετα, το αντίθετο θα συνέβαινε αν χρησιμοποιούνταν αποκλειστικές διευθύνσεις.';
	@override String get tokenType => 'Τύπος Token';
	@override String get contract => 'εργολάβος';
	@override String get contractStandard => 'πρότυπο σύμβασης';
	@override String get contractAddress => 'διεύθυνση σύμβασης';
	@override String get native => 'πρωτόζωα';
	@override String get confirmUnbindingPleaseEnterYes => 'Για να επιβεβαιώσετε την αποδέσμευση, πληκτρολογήστε "ναι".';
	@override String get listAllWorkingTempReceivingAddresses => 'Κατάλογος όλων των διευθύνσεων επαναφόρτισης cross-chain που λειτουργούν';
	@override String get setNote => 'Ρύθμιση σημειώσεων';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Δεν μπορεί να είναι μεγαλύτερο από ${x} bytes';
	@override String get transferFee => 'αμοιβή μεταφοράς';
	@override String get crossChainFee => 'αμοιβή διασταυρούμενης αλυσίδας';
	@override String get crossChainTransferOutError => 'σφάλμα μεταφοράς διασταυρούμενων δεσμών';
	@override String get chainName => 'όνομα αλυσίδας';
	@override String get message => 'μηνύματα';
	@override String get dontShowAgain => 'δεν εμφανίζεται πλέον';
	@override String get queuing => 'ουρά';
	@override String get optional => 'προαιρετικό';
	@override String get publiclyVisible => 'δημόσια ορατά';
	@override String get rates => 'τιμολόγιο';
	@override String get minimum => 'ελάχιστο';
	@override String get maximum => 'ανώτατο όριο';
	@override String get minimumBlockConfirmations => 'Ελάχιστος αριθμός επιβεβαιώσεων μπλοκ';
	@override String get dsmsVerifyTerminal => 'Τερματικό επικύρωσης DSMS';
	@override String get overall => 'ομπρέλα';
	@override String get my => 'το  μου';
	@override String get checkValidatorQualifications => 'Έλεγχος προσόντων προνομίων αυθεντικοποιητή';
	@override String get getVerifierPermissions => 'Λήψη προνομίων αυθεντικοποιητή';
	@override String get qualification => 'φυσικά προσόντα';
	@override String get upperLimit => 'όριο';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Μέγιστος αριθμός επιτρεπόμενων τερματικών πρόσβασης';
	@override String get numberOfExistingAccessTerminals => 'Αριθμός τερματικών πρόσβασης σε λειτουργία';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Πριν κάνετε αίτηση για προνόμια αυθεντικοποιητή, πρέπει να προετοιμάσετε ένα κινητό τηλέφωνο Android σε αδράνεια και έναν ειδικό αριθμό πρόσβασης και να κατεβάσετε και να εγκαταστήσετε την εφαρμογή DSMS Access Terminal.';
	@override String get downloadLink => 'σύνδεσμος λήψης';
	@override String get alreadyReadyFollowingTheAboveTips => 'Είναι έτοιμο σύμφωνα με τις παραπάνω συμβουλές';
	@override String get globalUniversal => 'για παγκόσμια χρήση';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Προς το παρόν δεν υπάρχουν αρκετοί τοπικοί επαληθευτές για να συμμετάσχουν στην υπηρεσία πρόσβασης για τον έλεγχο ταυτότητας DSMS, παρακαλούμε επιλέξτε την υπηρεσία πρόσβασης "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'ως αριθμός μόνο για πρόσβαση';
	@override String pleaseCheckTip({required Object tip}) => 'Παρακαλώ σημειώστε το πλαίσιο "${tip}".';
	@override String get inputLengthTooShort => 'Πολύ μικρό μήκος εισόδου';
	@override String get shortName => 'ακρωνύμια';
	@override String pleaseEnterXname({required Object name}) => 'Παρακαλώ εισάγετε ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Η αίτηση υποβάλλεται, παρακαλώ περιμένετε...';
	@override String get applyForDSMSVerifierPermission => 'Υποβάλετε αίτηση για προνόμια επικυρωτή DSMS';
	@override String get confirmInformation => 'Επιβεβαίωση πληροφοριών';
	@override String get lastHeartbeat => 'τελικός χτύπος της καρδιάς';
	@override String get expirationTime => 'οφειλόμενος χρόνος';
	@override String get country => 'έθνη';
	@override String get accessTerminals => 'τερματικό πρόσβασης';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Συνολικός αριθμός τερματικών αριθμού πρόσβασης DSMS';
	@override String get textContent => 'Περιεχόμενο κειμένου';
	@override String get scanQRcodeToLogin => 'Σύρετε για να συνδεθείτε';
	@override String get confirmLogin => 'Επιβεβαίωση σύνδεσης';
	@override String get authorizeSubApplicationToLogin => 'Εξουσιοδότηση αυτής της υποεφαρμογής για σύνδεση';
	@override String get authorizationSuccessful => 'Η εξουσιοδότηση ήταν επιτυχής!';
	@override String get launchSMSprogram => 'Έναρξη του προγράμματος SMS';
	@override String get notApplied => 'Καμία εφαρμογή';
	@override String get validityPeriod => 'περίοδος ισχύος';
	@override String get renewal => 'αίτηση ανανέωσης';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Σαρώστε τον κωδικό για να εξουσιοδοτήσετε την είσοδο στο τερματικό';
	@override String get rewards => 'κίνητρα';
	@override String get roles => 'χαρακτήρας';
	@override String get developerCenter => 'Κέντρο προγραμματιστών';
	@override String get appName => 'Όνομα εφαρμογής';
	@override String get pleaseSelect => 'παρακαλώ επιλέξτε';
	@override String get category => 'κατηγορία';
	@override String get keywords => 'byword';
	@override String get pleaseEnterAkeyword => 'Παρακαλώ εισάγετε μια λέξη-κλειδί';
	@override String get createApplication => 'Δημιουργία εφαρμογών';
	@override String get appType => 'Τύπος εφαρμογής';
	@override String get numberOfCategoriesMustBetween1and3 => 'Ο αριθμός των κατηγοριών πρέπει να είναι μεταξύ 1 και 3.';
	@override String get appLogoSpecifications => 'Μορφή εικόνας: png, μέγεθος: εντός 100KB, ανάλυση (pixel): 256*256';
	@override String get localAlbum => 'Τοπικά άλμπουμ φωτογραφιών';
	@override String get networkPath => 'διαδρομή δικτύου';
	@override String get imageURLkAddress => 'URL εικόνας';
	@override String get urlAddressFormatIsIncorrect => 'Λανθασμένα διαμορφωμένη διεύθυνση URL';
	@override String get imageFormatOnlySupportsPng => 'Οι εικόνες υποστηρίζονται μόνο σε μορφή "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'Το μήκος πρέπει να είναι μεταξύ των χαρακτήρων ${a}-${b}.';
	@override String get introduction => 'σύντομο';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'Το μέγεθος της εικόνας δεν μπορεί να είναι μεγαλύτερο από ${a}, προς το παρόν ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'Η ανάλυση της εικόνας πρέπει να είναι: ${p1}(pixels), επί του παρόντος ${p2}';
	@override String get becomeDeveloper => 'Γίνετε Developer';
	@override String get developerInformation => 'Πληροφορίες για τον προγραμματιστή';
	@override String get teamName => 'Όνομα ομάδας';
	@override String get website => 'κόμβος';
	@override String get other => 'εκτός από';
	@override String get githubVerification => 'Επαλήθευση Github';
	@override String get exampleUrl => 'Παράδειγμα Url';
	@override String githubVerificationTip({required Object did}) => 'Παρακαλούμε χρησιμοποιήστε το λογαριασμό σας στο GitHub για να δημιουργήσετε ένα αρχείο \'delta.did\' στο αποθετήριό σας με το περιεχόμενο \'${did}\'.Στη συνέχεια, επικολλήστε τη διεύθυνση Url του αρχείου githubusercontent σε αυτό το πλαίσιο εισαγωγής για έλεγχο ταυτότητας.';
	@override String get createApp => 'Δημιουργία εφαρμογών';
	@override String get appManagement => 'διαχείριση εφαρμογών';
	@override String get statusLogs => 'Ημερολόγιο κατάστασης';
	@override String get bad => 'δεν είναι καλό';
	@override String get normal => 'συνηθισμένο';
	@override String get good => 'ένα εξαιρετικό';
	@override String get onceCreatedItCannotBeChanged => 'Μόλις δημιουργηθεί, δεν μπορεί να αλλάξει!';
	@override String get manageApplicationEntity => 'Διαχείριση οντοτήτων εφαρμογής';
	@override String get currentVersion => 'τρέχουσα έκδοση';
	@override String get submitVersion => 'Υποβληθείσα έκδοση';
	@override String get packageOnlySupportZipCompressedFile => 'Το πακέτο υποστηρίζει μόνο συμπιεσμένα αρχεία zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Το αρχείο \'${name}\' δεν βρέθηκε στο πακέτο zip.';
	@override String get fileList => 'Κατάλογος εγγράφων:';
	@override String get programPackage => 'Πακέτο προγραμματισμού:';
	@override String get automaticallyExtractFromVersionFile => 'Εξάγεται αυτόματα από τα αρχεία \'.version\'';
	@override String get dappVersionFormatTip => 'Η μορφή του αριθμού έκδοσης πρέπει να είναι δεκαδική με ακρίβεια 2 ψηφίων, με μέγιστο όριο 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Ο αριθμός έκδοσης πρέπει να είναι μεγαλύτερος από την τρέχουσα έκδοση \'${v}\'';
	@override String get versionNotes => 'Εκτύπωση:';
	@override String get updateRelease => 'νέα έκδοση';
	@override String get loadAndRun => 'Φορτώστε και εκτελέστε';
	@override String get notYetSubmittedProgramPackage => 'Το πακέτο προγράμματος δεν έχει ακόμη υποβληθεί!';
	@override String get authorizeMinidAppLogin => 'Εξουσιοδότηση σύνδεσης mini-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Για να επιβεβαιώσετε την εξουσιοδότηση, πληκτρολογήστε "ναι".';
	@override String get authorizeNow => 'Άμεση έγκριση';
	@override String get operation => 'Λειτουργία.';
	@override String get statusChange => 'Αλλαγή κατάστασης';
	@override String get changeTo => 'Αλλαγή σε:';
	@override String get notes => 'Παρατηρήσεις.';
	@override String get changesNotEffective => 'Η αλλαγή δεν είναι έγκυρη !';
	@override String get released => 'Δημοσιευμένο';
	@override String get inPublicBeta => 'ανοιχτή beta';
	@override String get developers => 'Αναπτύχθηκε από.';
	@override String get reviewList => 'Λίστα σχολίων.';
	@override String get postReview => 'Αφήστε ένα σχόλιο';
	@override String get scoreNow => 'Βαθμολογήστε τώρα';
	@override String get description => 'Περιγραφή.';
	@override String get noData => '(^-^)\n Δεν υπάρχουν διαθέσιμα στοιχεία';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Η έκδοση έχει ενημερωθεί από ${a} σε ${b}.';
	@override String get loadNewVersion => 'Φόρτωση νέας έκδοσης';
	@override String get name => 'Όνομα.';
	@override String get canisterId => 'Tank Id.';
	@override String get updateTime => 'χρόνος ενημέρωσης';
	@override String get contractCanistersState => 'Κατάσταση δεξαμενής συμβολαίου';
	@override String get userDistribution => 'διανομή χρηστών';
	@override String get settings => 'Ρύθμιση';
	@override String get security => 'Ασφάλεια';
	@override String get invite => 'προσκλήσεις';
	@override String get more => 'Περισσότερα...';
	@override String get receiveAddress => 'Διεύθυνση λήψης:';
	@override String get hangingAmount => 'κρέμασμα';
	@override String get hangingAmountTips => 'Τα εκκρεμή ποσά είναι προσωρινά αρχεία των ανταμοιβών που παράγονται από την εξόρυξη από την ομάδα των υφισταμένων σας, μόλις πραγματοποιήσετε μια συνεδρία εξόρυξης, τα ποσά αυτά θα συγκεντρωθούν στα εκκρεμή ποσά.';
	@override String get pendingAmount => 'εκκρεμής';
	@override String get pendingAmountTips => 'Τα εκκρεμή ποσά είναι εκείνα που δεν έχουν ακόμη επιβεβαιωθεί έναντι των διαφημιζόμενων, και εκείνα με έγκυρες αντιστοιχίες θα μεταφερθούν σε έγκυρες εγγραφές USCT, με εξαίρεση τα άκυρα τμήματα, εάν υπάρχουν.';
	@override String get received => 'έλαβε';
	@override String get processing => 'σε εξέλιξη';
	@override String get replied => 'ερωτώμενος';
	@override String get rejected => 'απόρριψη';
	@override String get unknown => 'αχαρτογράφητο';
	@override String get insufficientBalance => 'Ανεπαρκής ισορροπία!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Το υπόλοιπο ${x} δεν επαρκεί για την κάλυψη των τελών του δικτύου διασύνδεσης';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Μια συναλλαγή δεν έχει ακόμη ολοκληρωθεί και δεν μπορεί να μεταφερθεί αυτή τη στιγμή';
	@override String get thisfunctionNotSupportExternalCalls => 'Αυτή η λειτουργία δεν υποστηρίζεται για εξωτερική κλήση';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Δεν υπάρχει ταύτιση για μια διεύθυνση που μπορεί να χρησιμοποιηθεί για την πληρωμή των τελών cross-chain, παρακαλούμε μεταβείτε σε άλλο δίκτυο αλυσίδας για να δοκιμάσετε.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'Η τρέχουσα αντιστοιχία με το μέγιστο ποσό που μπορεί να μεταφερθεί σε μία μόνο συναλλαγή είναι ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Οι παρατηρήσεις δεν πρέπει να υπερβαίνουν τα 64 bytes';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Το υπόλοιπο είναι ανεπαρκές και το ποσό είναι: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Δεν μπορείτε να δεσμεύσετε περισσότερες από 3 διευθύνσεις.\nΕάν πρέπει να δεσμεύσετε μια νέα διεύθυνση πληρωμής.\nΠαρακαλούμε να αποδεσμεύσετε πρώτα μια άλλη διεύθυνση.';
	@override String parametersA_exception({required Object x}) => 'Παράμετροι: ${x}, εξαίρεση';
	@override String get parameterException => 'Εξαίρεση παραμέτρου!';
	@override String get transferAmountMustBeLargerThan0 => 'Το ποσό μεταφοράς πρέπει να είναι μεγαλύτερο από 0';
	@override String get authorizationHasExpired => 'Η άδεια έχει λήξει';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'Η εφαρμογή δεν έχει εξουσιοδοτηθεί από τον ιδιοκτήτη';
	@override String get authenticationTokenIsInvalid => 'Μη έγκυρο διακριτικό ελέγχου ταυτότητας';
	@override String get verifyInfoIsInvalidOrExpired => 'Άκυρες ή ληγμένες πληροφορίες επικύρωσης';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Επαληθεύστε ότι ο αριθμός των τερματικών πρόσβασης έχει υπερβεί το όριο ένα στα δέκα χιλιάδες.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'Η συμμετοχή στην εξόρυξη πρέπει να υπερβαίνει τις 3 ημέρες';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Ο αριθμός των μελών του κύκλου ασφαλείας δεν μπορεί να είναι μικρότερος από τρία.';
	@override String get avatarIsNotSet => 'Το Avatar δεν έχει οριστεί';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Ο αριθμός των άμεσων παραπομπών δεν μπορεί να είναι μικρότερος από 3';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Το χρονικό όριο είναι ανεπαρκές και μπορείτε να αλλάξετε τον αριθμό του κινητού σας τηλεφώνου μόνο μία φορά το χρόνο.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Αυτός ο αριθμός κινητού τηλεφώνου υπάρχει ήδη και δεν μπορεί να αναπαραχθεί';
	@override String get securityCodeIsIncorrect => 'Λανθασμένος κωδικός ασφαλείας';
	@override String get securityCodeMayHaveExpired => 'Ο κωδικός ασφαλείας μπορεί να έχει λήξει';
	@override String get sessionIdIsInvalidOrExpired => 'Μη έγκυρο ή ληγμένο αναγνωριστικό συνεδρίας';
	@override String get sessionHasBeenAuthorized => 'Η σύνοδος εγκρίθηκε για να ολοκληρωθεί!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Μπορεί να ανανεωθεί μόνο εντός ${x} ημερών πριν από τη λήξη της διάρκειας.';
	@override String get notYetGrantedDeveloperPermissions => 'Δεν υπάρχουν ακόμα δικαιώματα ανάπτυξης';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Το πεδίο ${x} δεν μπορεί να είναι null';
	@override String get emailFormatError => 'Σφάλμα μορφής email';
	@override String theXformatIsIncorrect({required Object x}) => '\'${x}\' σφάλμα μορφοποίησης';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Το πεδίο "${x}" πρέπει να έχει μήκος μεταξύ ${y} και ${z} χαρακτήρων.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Το εύρος επιλογής \'${x}\' πρέπει να είναι μεταξύ ${y} και ${z}.';
	@override String get unchanged_sameAsOldContent => 'Αμετάβλητο, ίδιο περιεχόμενο με το παλιό!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' υπάρχει ήδη!';
	@override String get mobileNumberHasNotJoinedDelta => 'Αυτός ο αριθμός κινητού δεν έχει προστεθεί στη Delta!';
	@override String get referrerIdCannotBeEmpty => 'Το αναγνωριστικό παραπομπής δεν μπορεί να είναι κενό!';
	@override String get referrerIdDoesNotExist => 'Το αναγνωριστικό παραπομπής δεν υπάρχει!';
	@override String get didIsIncorrectOrInvalid => 'Το DID είναι λανθασμένο ή άκυρο!';
	@override String get accessTokenIsIncorrectOrInvalid => 'Το accessToken είναι λανθασμένο ή άκυρο!';
	@override String get minimumWithdrawalAmountIs1USD => 'Ελάχιστο 1USD για μία μόνο ανάληψη';
	@override String get miningTimeIsNotYet => 'Δεν ήρθε ακόμα η ώρα να ορυχτείς.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Υπάρχει ήδη, παρακαλώ μην το προσθέσετε ξανά!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Δεν είναι δυνατή η χρήση του αριθμού εγγραφής ως αριθμού πρόσβασης για έλεγχο ταυτότητας';
	@override String get canotAddYourSelf => 'Δεν μπορείτε να προσθέσετε τον εαυτό σας';
	@override String get logOut => 'Αποσύνδεση';
	@override String get confirmLogout => 'Επιβεβαίωση αποσύνδεσης';
	@override String get logOutTipsText => 'Σημείωση: Σύμφωνα με το whitepaper, κάθε επαλήθευση του λογαριασμού σας θα καταναλώνει ένα ορισμένο ποσό από τα νομίσματα DTC που θα καταβληθούν στον επαληθευτή ως κίνητρο, οπότε μην προσπαθείτε να συνδεθείτε και να βγείτε χωρίς λόγο, κάνοντας κλικ στο παρακάτω κουμπί θα αποσυνδεθείτε αμέσως.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Παρακαλούμε πληκτρολογήστε "ναι" για να επιβεβαιώσετε την αποσύνδεση.';
	@override String get tip => 'να τραβήξω την προσοχή σε κάτι.';
	@override String get cancel => 'ακυρώσεις';
	@override String get close => 'cloture';
	@override String get selected => 'επιλεγμένο';
	@override String get edit => 'μεταγλωττιστής';
	@override String get submit => 'να υποβάλει (μια έκθεση κ.λπ.)';
	@override String get goBack => 'παλινδρόμηση (στην ψυχολογία)';
	@override String get copiedToClipboard => 'Έχει αντιγραφεί στο πρόχειρο.';
	@override String get nickname => 'προσφιλής όρος';
	@override String get confirm => 'αναγνωρίστε το';
	@override String get cannotBeEmpty => 'Δεν μπορεί να είναι κενό';
	@override String get deleteSuccessful => 'Διαγράφηκε με επιτυχία!';
	@override String get successfullyModified => 'Η τροποποίηση ήταν επιτυχής!';
	@override String get executionSuccessful => 'Η εφαρμογή ήταν επιτυχής!';
	@override String get preview => 'προεπισκοπήσεις';
	@override String get followSystem => 'σύστημα παρακολούθησης';
	@override String get change => 'παραλλαγή';
	@override String get replace => 'αντικαταστάσεις';
	@override String get view => 'ελέγξτε';
	@override String get manage => 'διαχειριστικό';
	@override String get modify => 'τροποποιήσεις';
	@override String get replacedSuccessfully => 'Αντικατάσταση επιτυχής!';
	@override String get authentication => 'πιστοποίηση ταυτότητας';
	@override String get reacquire => 'ανάκτηση';
	@override String get tryAgain => 'Δοκιμάστε ξανά.';
	@override String get querying => 'Γίνονται έρευνες ...';
	@override String get writingToOnChain_pleaseWait => 'Γίνεται εγγραφή στην αλυσίδα, παρακαλώ περιμένετε ...';
	@override String get versionCheck => 'ανίχνευση έκδοσης';
	@override String get alreadyLatestVersion => 'Ήδη η τελευταία έκδοση!';
	@override String get foundNewVersion => 'Ανακαλύψτε τη νέα έκδοση:';
	@override String get upgradeLink => 'Σύνδεσμος αναβάθμισης:';
	@override String get deviceDescription => 'Περιγραφή εξοπλισμού.';
	@override String get notification30SecondsBeforeMiningStops => 'Εκτελέστε υπενθύμιση ειδοποίησης 30 δευτερόλεπτα πριν σταματήσει η εξόρυξη!';
	@override String get goMining => 'Πηγαίνετε εξόρυξη';
	@override String get deltaMiningReminder => 'Delta Mining Reminder';
	@override String get clickToMine_miningIsAboutToStop => 'Κάντε κλικ εδώ για το δικό μου, η εξόρυξη θα σταματήσει σύντομα!';
	@override String get incorrect_input => 'Λανθασμένη εισαγωγή!';
	@override String get are_you_sure_delete => 'Είστε βέβαιοι ότι θα διαγράψετε;';
	@override String get delete_account => 'Διαγραφή λογαριασμού';
	@override String get how_to_operate_it => 'Δείτε πώς να το λειτουργήσετε;';
	@override String get deletion_warning_tip => 'Εάν διαγράψετε τον λογαριασμό σας, θα χάσετε όλα τα νομίσματα Delta και όλα τα κέρδη από άλλα μέλη θα χαθούν επίσης.';
	@override String get launchWhatsAppProgram => 'Εκκίνηση του προγράμματος WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Οι αριθμοί πρόσβασης με αυτό το εικονίδιο υποστηρίζουν επίσης την επαλήθευση μηνυμάτων WhatsApp. Κατά την αποστολή διεθνών μηνυμάτων, συνιστάται να χρησιμοποιείτε το WhatsApp για να αυξήσετε το ποσοστό επιτυχίας και να μειώσετε το κόστος.';
	@override String get ihaveSentVerificationString => 'Έχω στείλει μια συμβολοσειρά επαλήθευσης';
	@override String get totalOfPeople => 'Σύνολο ατόμων: ';
	@override String get numberOfPeopleMining => 'Αριθμός ατόμων που εξορύσσονται';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Μπορείτε να χρησιμοποιήσετε ένα πρόγραμμα περιήγησης σε άλλη συσκευή για να σαρώσετε τον κώδικα QR και να τον μεταβιβάσετε στο πρόγραμμα SMS';
	@override String get toggle => 'Εναλλαγή';
	@override String get DSMSverifier => 'DSMS Verifier';
	@override String get activate => 'Ενεργοποίηση';
	@override String get activated => 'Activated';
	@override String get generateActivationCommand => 'Δημιουργία εντολής ενεργοποίησης';
	@override String get activationCommand => 'Εντολή ενεργοποίησης';
	@override String get activationSentedTip => 'Μετά την αποστολή του SMS ενεργοποίησης, ελέγξτε την κατάσταση ενεργοποίησης στην τερματική συσκευή πρόσβασης.';
	@override String get biometricsNotEnabledTip => 'Τα βιομετρικά στοιχεία (πρόσωπο ή δακτυλικό αποτύπωμα) δεν είναι ενεργοποιημένα στη συσκευή σας. Ενεργοποιήστε τα για να συνεχίσετε.';
	@override String get error => 'Σφάλμα';
	@override String get exceptionOccurredWhenCallingBiometric => 'Παρουσιάστηκε εξαίρεση κατά την κλήση της βιομετρικής λειτουργίας (πρόσωπο ή δακτυλικό αποτύπωμα)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' αριθμοί πρόσβασης είναι επιλεγμένοι, θα πρέπει να επιλεγεί '),
		shouldNum,
		const TextSpan(text: '.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Έχει σταλεί το ${text} στους αριθμούς πρόσβασης ${n} παραπάνω;';
	@override String get interface => 'Interface:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Λήξη χρόνου αναμονής ή αναντιστοιχία αριθμού αποστολέα';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Ο αριθμός κινητού του μέλους του κύκλου ασφαλείας που συμπληρώσατε δεν ταιριάζει: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Συνδεθείτε εντός 10 λεπτών μετά την αποσύνδεση για να αποφύγετε την επαλήθευση δύο παραγόντων.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Πρέπει να συμπληρωθούν τουλάχιστον ${n} αριθμοί κινητών τηλεφώνων';
	@override String get noAccessNumberInYourRegionYet => 'Δεν υπάρχει ακόμη αριθμός πρόσβασης στην περιοχή σας';
	@override String get notEnoughAccessNumbersInYourRegion => 'Δεν υπάρχουν αρκετοί αριθμοί πρόσβασης στην περιοχή σας';
	@override String get tipsForDeployDSMSterminal => 'Το σύστημα έχει φορτώσει αυτόματα ορισμένους αριθμούς πρόσβασης από άλλες χώρες για εσάς. Προκειμένου να παρέχετε καλύτερες και φθηνότερες υπηρεσίες επαλήθευσης, συνιστάται εσείς ή το άτομο που σας παραπέμπει να αναπτύξετε το τερματικό DSMS τοπικά για να κερδίσετε τέλη επαλήθευσης.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Κανείς δεν μπορεί να μου δώσει τον κωδικό ασφαλείας;';
	@override String get useSupplementalMode => 'Χρήση συμπληρωματικής λειτουργίας';
	@override String get returnToSecurityCodeMode => 'Επιστροφή στη λειτουργία κωδικού ασφαλείας';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Παρακαλώ εισάγετε τον αντίστοιχο αριθμό κινητού τηλεφώνου. Ο κωδικός χώρας μπορεί να παραλειφθεί.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Ο αριθμός κινητού του ${name} δεν είναι σωστός';
	@override String get matchingVerificationStrategyIs => 'Η αντίστοιχη στρατηγική επαλήθευσης είναι:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Το υπόλοιπο είναι μεγαλύτερο από 3 ICP, δεν χρειάζεται να χύσετε καύσιμο προς το παρόν.';
	@override String get escrowAccount => 'Escrow Account';
	@override String get fuelRelay => 'Fuel Relay';
	@override String get pourFuel => 'Pour fuel';
	@override String get fuelState => 'Κατάσταση καυσίμου';
	@override String get pouringFuelTips => 'Η έκχυση καυσίμου δεν σας φέρνει πλεονεκτήματα ή μειονεκτήματα, σκοπός της είναι να εμπλουτίσει την εμπειρία του συστήματος Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Χορηγός προγραμματιστών παρακολουθώντας διαφημίσεις';
	@override String get status => 'status';
	@override String get date => 'ημερομηνία';
}

// Path: <root>
class _StringsEs implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsEs.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.es,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <es>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsEs _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'fig. principio';
	@override String get switchLanguage => 'Cambiar de idioma';
	@override String get languageSwitch => 'Cambio de idioma';
	@override String get slogan => 'Construir una economía descentralizada en el delta';
	@override String get countryRegionCode => 'Código país/zona';
	@override String get countryRegionSelection => 'Selección de países y regiones';
	@override String get nextStep => 'el siguiente paso';
	@override String get yourPhoneNumber => 'Tu número de teléfono.';
	@override String get pleaseSelectCountryAndRegion => 'Seleccione su país/región';
	@override String get pleaseEnterPhoneNumber => 'Introduzca un número de teléfono válido.';
	@override String get referrerDid => 'Remitente DID';
	@override String get pleaseEnterTheReferrersDid => 'Por favor, introduzca una identidad descentralizada válida del remitente';
	@override String get thisDidIsInvalid => 'Este DID no es válido.';
	@override String get nicknameFormatTips => 'El apodo no debe estar vacío y su longitud no debe superar los 16 dígitos.';
	@override String get additionalIinformation => 'Información complementaria';
	@override String get invitationSubject => 'Una invitación a la creación de consenso Delta';
	@override String invitationLetter({required Object did}) => 'Hola, ¡participo en la construcción del consenso Delta!\n Delta es una nueva plataforma de moneda digital de código abierto que se ejecuta en ICP y permite gestionar y utilizar varias monedas digitales sin contraseñas, claves privadas o mnemónicos. Por favor, haga clic en este enlace https://delta.kim/auto/download para instalar la aplicación y ahora usted está invitado a unirse a la creación de consenso y acuñación de monedas también.\n Referrer DID: ${did}';
	@override String get dSMSverification => 'Validación de la AAMD';
	@override String get getAccessNumbers => 'Obtenga algunos números de acceso';
	@override String get getAccessNumberPromptMessage => 'Haz clic en el botón "Obtener" para rotar un conjunto de números de acceso de verificación por SMS en la cola.';
	@override String get optionalAccessNumbers => 'Número de acceso opcional';
	@override String get accessNumber => 'número de acceso';
	@override String get TELCO => 'operador (de una central eléctrica, red de transporte, etc.)';
	@override String get score => 'puntuación';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('es'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Marque '),
			nBuilder(n),
			const TextSpan(text: ' números de acceso y haga clic en el botón "'),
			span('text'),
			const TextSpan(text: '" para pasar al siguiente paso.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Marque '),
			nBuilder(n),
			const TextSpan(text: ' números de acceso y haga clic en el botón "'),
			span('text'),
			const TextSpan(text: '" para pasar al siguiente paso.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta es un experimento de moneda digital global descentralizada de código abierto y un ecosistema de aplicaciones de criptomoneda.';
	@override String get deltaGoalsDesc => 'El objetivo es hacer posible que la gente utilice Delta para co-construir nuevas monedas digitales que sean universales, justas, seguras, rápidas y ecológicas. Y proporcionar diversos escenarios de aplicación eficaces para estas monedas digitales y las criptomonedas anteriores.';
	@override String get details => 'datos';
	@override String get get => 'ganar';
	@override String get select => 'opción';
	@override String get send => 'enviando';
	@override String get complete => 'cumplir';
	@override String get selectedAccessNumberPrompt => 'Cuando se selecciona, se muestra el número de acceso completo y se genera una cadena de autenticación.';
	@override String get location => 'colocación';
	@override String get verificationString => 'cadena de validación';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Utilice su número de teléfono '),
		num,
		const TextSpan(text: ' y envíe '),
		label,
		const TextSpan(text: ' a '),
		accessNumber,
		const TextSpan(text: ' para completar la verificación.'),
	]);
	@override String get ihaveSentTheSMS => 'He enviado un mensaje de texto';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'La cadena de validación es válida durante 6 minutos, tiempo restante: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => '¡Demasiado rápido para esperar ${x} segundos para continuar!';
	@override String get waitingForVerificationSMS => 'Esperando SMS de verificación...';
	@override String get partSuccsForVerificationSMS => 'Se ha superado la verificación por SMS de uno de los terminales de acceso.';
	@override String get creatingAccessToken => 'Se está creando el token de acceso...';
	@override String get intoDelta => 'Dentro de Delta';
	@override String get deltaAccountIsLoggedIn => 'Su cuenta Delta ha iniciado sesión';
	@override String get iHavLoggedOut => 'Estoy fuera.';
	@override String get startTwoFactorVerification => 'Inicio de la doble verificación';
	@override String get securityCircleVerification => 'Validación del Círculo de Seguridad';
	@override String get generateSecurityCode => 'Generar código de seguridad';
	@override String get generateSecurityCodeHintText => 'El código de seguridad generado se enviará a un miembro de su círculo de seguridad seleccionado al azar.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'No ha configurado un círculo de seguridad, su cuenta es muy insegura, por favor introduzca cualquier marcador de posición de 6 dígitos y vaya al siguiente paso.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'El código de seguridad ha sido generado, por favor contacte con los siguientes familiares y amigos para solicitarles que le extraigan el código de seguridad para pasar la verificación. ¡válido durante 30 minutos!';
	@override String get itGetSecurityCodeTip => 'Consejo: Puede obtener el código de seguridad haciendo doble clic en el apodo de su cuenta en la página Delta App -> Menu -> Provide Security.';
	@override String get securityCircleMemberList => 'Lista de miembros del círculo de seguridad:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Seleccione un familiar o amigo en la lista de miembros para generar y proporcionarle un código de seguridad para verificar su verdadera identidad. El propósito es evitar que otros controlen la cuenta cuando se pierde o le roban el número de teléfono móvil.';
	@override String formatIsXdigits({required Object num}) => 'Formato como ${num} dígitos';
	@override String get signInSuccessfully => 'Conéctese correctamente.';
	@override String get twoFAandLogin => 'Doble autenticación e inicio de sesión';
	@override String get verificationSuccessful => 'Verifique el éxito.';
	@override String get validationFailed => 'Validación fallida.';
	@override String get dappInfo => 'DApp Información';
	@override String get securityCircle => 'anillo de seguridad';
	@override String get securityCode => 'código de seguridad';
	@override String get provideSecurity => 'proporcionar seguridad';
	@override String get addManully => 'Añadir manualmente';
	@override String get addFromContacts => 'Añadir desde la Agenda';
	@override String get addSecurityCircle => 'Añadir círculo de seguridad';
	@override String get inputType => 'Tipo de entrada';
	@override String get mobileNumber => 'número de teléfono móvil';
	@override String get did => 'Dirección';
	@override String get pleaseEnterValidDID => 'Introduzca un identificador de identidad descentralizada válido';
	@override String get pleaseEnterValidWalletAddress => 'Introduzca una dirección de monedero válida';
	@override String get appellation => 'forma de dirección';
	@override String get appellationHint => '¿Cómo lo llamas, como "bebé"?';
	@override String get addSecurityCircleTips => 'Por favor, no añadas a tu círculo de seguridad a personas en las que no confíes.';
	@override String get referralTeam => 'Equipos recomendados';
	@override String get profile => 'Información sobre la cuenta';
	@override String get menu => 'menú';
	@override String get directly => 'directo';
	@override String get indirectly => 'indirecta';
	@override String get inviteContacts => 'Invitación Contacto';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Tu invitado es '),
		nickname,
		const TextSpan(text: ' y has referido directamente a '),
		num1,
		const TextSpan(text: ' personas, de las cuales '),
		num2,
		const TextSpan(text: ' están actualmente en línea.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Ha remitido indirectamente a '),
		num1,
		const TextSpan(text: ' personas, de las cuales '),
		num2,
		const TextSpan(text: ' están actualmente en línea.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Invita a tus amigos a unirse a Delta y mejorar juntos el consenso social. Por cada recomendación directa, la tasa de minería de una persona aumenta la tasa base en '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Invita a amigos a unirse a Delta y mejorar juntos el consenso social. Cada recomendación indirecta de una persona aumentará la tasa de extracción en '),
		rate2,
		const TextSpan(text: ' de la tasa base.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => '¿Estás seguro de que quieres borrar "${name}"?';
	@override String get safetyCircleRoleQ => '¿Para qué sirve el anillo de seguridad?';
	@override String get safetyCircleRoleA => 'Proteja su cuenta proporcionando autenticación secundaria en situaciones delicadas.';
	@override String get howSecurityCirclesWorkQ => '¿Cómo funcionan los anillos de seguridad?';
	@override String get howSecurityCirclesWorkA => 'En el caso de que sea necesaria una verificación del Círculo de Seguridad, el programa Delta Smart Contracts seleccionará al azar a un miembro de la lista de amigos del Círculo de Seguridad para que le ayude a proporcionarle un código de seguridad que complete la verificación de identidad por usted. Cuando le pida el código de seguridad al miembro, éste podrá confirmar si usted es usted o no. Al mismo tiempo, el programa le indicará: "Rechace proporcionar el código de seguridad si no es usted", para proteger la seguridad de su cuenta. Por tanto, asegúrate siempre de que los miembros de tu círculo de seguridad son personas de confianza.';
	@override String get securityCircleBeUsedQ => '¿Cuándo se utilizará?';
	@override String get securityCircleBeUsedA1 => '1. Cuando se pierde el control de la APP Delta, suele ocurrir que el teléfono móvil se pierde o es robado.';
	@override String get securityCircleBeUsedA2 => '2. En el caso de algunas operaciones sensibles, el programa Delta Smart Contract necesita confirmar que es usted.';
	@override String get provideSafetyTip1 => 'Cuando tu compañero te pida su código de seguridad, asegúrate de confirmar que es el suyo.';
	@override String get provideSafetyTip2 => 'Estás proporcionando seguridad a los amigos mencionados, que te han establecido como la persona de mayor confianza en su círculo de seguridad y necesitan que les proporciones una confirmación de seguridad en caso de que se encuentren con operaciones delicadas en su cuenta.';
	@override String get provideSafetyTip3 => 'Haz doble clic en el avatar de la otra persona para extraer el código de seguridad cuando sea necesario.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'La otra parte no tiene actualmente un código de seguridad que deba ser extraído.';
	@override String get existSecurityCodeTip => 'Por favor, asegúrese de que el amigo o familiar que le pide el código de seguridad es el mismo que usted. Para la protección de su amigo o familiar, debe negarse a facilitar el código de seguridad si no se lo proporciona el propio amigo o familiar.';
	@override String get avatarSettings => 'Configuración del avatar';
	@override String get NFTAvatarPropertyRightsText => 'Descargo de responsabilidad: El uso de la NFT en cuestión como avatar es sólo por preferencia personal y no tiene nada que ver con la titularidad de los derechos de propiedad intelectual de dicha NFT.';
	@override String get projectWebsite => 'Página web del proyecto:';
	@override String get whitepaper => 'Libro blanco:';
	@override String get indexID => 'Índice Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Índice entre ${start} y ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Introduce el identificador de índice de tu NFT favorito y el programa lo cargará automáticamente como avatar para ti.';
	@override String get miningRate => 'tasa de extracción';
	@override String get miningDetails => 'Detalles mineros';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Tasa de extracción total: '),
		rate,
		const TextSpan(text: ' δ/día'),
	]);
	@override String get EndOfMiningSession => 'Se acabó la minería cíclica:';
	@override String get tapToMineDeltaCoin => 'Haz clic para minar monedas Delta ↑.';
	@override String get clickToStartMining => 'Haz clic para empezar a minar';
	@override String get miningHasStoppedPromptDesc => 'La minería se ha detenido, cada 24 horas es un ciclo de minería, haga clic en el icono del rayo para iniciar una nueva ronda de mining.Delta de la minería es un mecanismo de asignación que no consume energía aritmética adicional y el tráfico de red de su dispositivo.';
	@override String get aboutBaseRate => '¿Sobre el tipo básico?';
	@override String get baseRateDescription => 'Como se acordó en el libro blanco, la regla de disminución de la tasa base para la minería Delta se dividirá en dos fases.\nFase 1: La tasa será de 32δ/día cuando el número de participantes (inscripciones) sea de 3.000 o menos. Partiendo de esta base, la tasa base se reducirá a la mitad cada vez que el número de personas se multiplique por 10.\nFase 2: Cuando el número de participantes alcanza los 30 millones o más, la tasa base se reduce a la mitad cada vez que el número de participantes se multiplica por 3. Hasta que la última excavación detiene la producción.';
	@override String get baseRate => 'tarifa básica (como en RDSI)';
	@override String get directReferralRewards => 'Bonificación por recomendación directa';
	@override String get directReferralRewardDesc => 'Por cada recomendación directa, tu tarifa de minería se incrementará en 1/3 adicional de la tarifa base mientras estén minando.\n\n Además, el estado de minería de sus referidos también contará para su bonificación por referidos directos.';
	@override String get indirectReferralRewards => 'Bonificación indirecta por recomendación';
	@override String get indirectReferralRewardDesc => 'Cuando un referido indirecto está minando, tu tasa de minado se incrementa en 1/10 adicional de la tasa base.\n\n Para su equipo de referidos directos, cada persona a la que vuelven a referir representa un referido indirecto para usted.';
	@override String get mine => 'extraer (mineral u otro recurso de una mina)';
	@override String get thisMiningInformation => 'Información minera actual';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Participó en la minería: '),
		x,
		const TextSpan(text: ' veces'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Ganancia total esta vez: '),
		x,
		const TextSpan(text: ' monedas Delta'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Ganancias base: '),
		x,
		const TextSpan(text: ' monedas'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contribución directa del equipo: '),
		x,
		const TextSpan(text: ' monedas'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contribución indirecta del equipo: '),
		x,
		const TextSpan(text: ' monedas'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Tiempo entre excavaciones: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Tiempo efectivo de extracción: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} horas';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Para la seguridad de los activos, los miembros del círculo de seguridad deben mantener entre 3 y 5 personas de confianza en todo momento.';
	@override String get index => 'indexación';
	@override String get amount => 'suma de dinero';
	@override String get balance => 'saldos';
	@override String get timeStamp => 'marca de tiempo';
	@override String get summary => 'resúmenes';
	@override String get miningHasStopped => 'La minería se ha detenido.';
	@override String get miningHasStoppedDesc => 'Tu minería está actualmente parada, empieza a ganar ahora.';
	@override String get startMining => 'Empezar a minar';
	@override String get changeMobileNumber => 'Cambio de número de teléfono móvil';
	@override String get currentMobileNumber => 'Número de teléfono móvil actual';
	@override String get newMobileNumber => 'Nuevo número de teléfono móvil';
	@override String get securityCodeFormatIs6digits => 'El formato del código de seguridad es de 6 dígitos.';
	@override String get startVrification => 'Iniciar verificación';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Este número de móvil ya existe, DID asociado: ${dId}';
	@override String get noDataYet => 'No hay datos disponibles';
	@override String get previousMobileNumber => 'Número de teléfono móvil anterior';
	@override String get changeLog => 'Registro de cambios';
	@override String get referralLinkToShare => 'Enlaces recomendados para compartir';
	@override String get referrer => 'remitente';
	@override String get isoCountryCode => 'Código ISO del país';
	@override String get avatarLogo => 'logotipo de cabecera';
	@override String get creationTime => 'Tiempo de creación';
	@override String get lastUpdate => 'Última actualización';
	@override String get numberOfSecurityCircleMembers => 'Número de miembros de los círculos de seguridad';
	@override String get theLatestMining => 'Última excavación';
	@override String get effectiveMiningDays => 'Número de días de extracción efectiva';
	@override String get modifyNickname => 'Cambiar apodo';
	@override String get didNotChange => '¡Sin cambios!';
	@override String get kycVerification => 'Verificación KYC';
	@override String get faceID => 'Face ID';
	@override String get touchID => 'Identificación por huella dactilar';
	@override String get biometricsAuthorizationTest => 'Pruebas de autenticación biométrica';
	@override String get currentState => 'estado actual';
	@override String get biometricsAuthenticationLocalizedReason => 'Utilice el desbloqueo de su dispositivo para verificar su identidad.';
	@override String get graph => 'archivo de gráficos (por ejemplo, mapas, documentos o figuras botánicas)';
	@override String get referralRelationshipGraph => 'Mapa de relaciones de referencia';
	@override String get nativeContacts => 'Contactos locales';
	@override String get registrationAndMiningTrends => 'Registro y tendencias mineras';
	@override String get inMining => 'minería';
	@override String get registrationVolume => 'volumen de registro';
	@override String get unmined => 'sin explotar';
	@override String get mined => 'minado';
	@override String get communityMining => 'Minería comunitaria';
	@override String get consensusPromotionFund => 'Fondo de Promoción del Consenso';
	@override String get ecologicalAwardFund => 'Fondo de Incentivos Ecológicos';
	@override String get icpFuelCrowdfunding => 'Financiación colectiva de ICP Fuel';
	@override String get coreDeveloperRewards => 'Recompensas para desarrolladores';
	@override String get totalAllocation => 'Distribución general';
	@override String get miningRatio => 'Ratio de extracción';
	@override Map<String, String> get billion => {
		'30': '30.000 millones',
		'60': '60.000 millones',
		'180': '180.000 millones.',
		'300': '300.000 millones',
	};
	@override String get watchAdsToSupportDevelopers => 'Ver anuncios para apoyar a los desarrolladores';
	@override String get loadingAdcomponents => 'Cargando componentes de anuncios...';
	@override String get timeIsNotUp => 'No se ha acabado el tiempo.';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Fallo al cargar, ¡posiblemente red bloqueada!';
	@override String get pendingUSCTrecords => 'Registros pendientes del USCT';
	@override String get pendingUSCTrecordsDesc => 'Los registros USCT pendientes se confirmarán contra la plataforma publicitaria en un plazo de 15 a 30 días y los registros válidos se transferirán a la lista de registros USCT y el importe USCT correspondiente se añadirá al saldo de la cuenta.';
	@override String get validity => 'validez';
	@override String get advertiser => 'anunciantes';
	@override String get earned => 'ganado';
	@override String get withdraw => 'retirar fondos';
	@override String get validUSCTrecords => 'Registros efectivos del USCT';
	@override String get USCTmining => 'Minería USCT';
	@override String get aboutUSCTmining => '¿Sobre la minería de la USCT?';
	@override String get aboutUSCTminingItme1 => '1. USDT es una stablecoin en dólares estadounidenses muy popular en todo el mundo que puede cambiarse fácilmente por monedas soberanas nacionales en las principales bolsas de criptomonedas del mundo.';
	@override String get aboutUSCTminingItme2 => '2. USCT es una medida temporal de los ingresos de la minería USCT, conocida como crédito USD, que finalmente se convertirá en USDT de acuerdo con la cantidad de liquidación real y las normas de distribución de la plataforma de publicidad y la proporción correspondiente.';
	@override String get aboutUSCTminingItme3 => '3. USCT Mining es una función de realización de anuncios de tráfico de la comunidad Delta. Aprovecha la gran base de usuarios de la comunidad Delta para proporcionar múltiples beneficios a los anunciantes, a los desarrolladores de Delta y a los ausentes. Está diseñado para proporcionar una cierta cantidad de ingresos efectivos a los trabajadores ausentes en la fase inicial, cuando el ecosistema Delta aún no se ha formado y prosperado; al mismo tiempo, también proporciona cierto apoyo financiero a los desarrolladores para garantizar que puedan seguir prestando servicios de desarrollo durante un largo periodo de tiempo y, en última instancia, poder realizar todos los planes del libro blanco; y también proporciona un canal de promoción eficaz para los anunciantes de productos.';
	@override String get aboutUSCTminingItme4 => '4. Las normas de distribución están diseñadas para que el 40% de la recaudación total se destine a comisiones de servicios técnicos a promotores y el 60% restante a recompensas por absentismo de la comunidad. 5. Parte de la recompensa de absentismo del modelo de distribución multinivel similar a DTC, la recompensa de absentismo se dividirá en tres partes de acuerdo con la proporción de 6:3:1, cada vez que una de las recompensas de absentismo de la minería USCT 6 partes asignadas al absentismo de los anuncios actuales, 3 partes asignadas al referente superior, 1 parte asignada al referente de segundo nivel. Del mismo modo, también puede obtener la misma recompensa de recomendante para los amigos que recomiende a través de la minería USCT. El beneficio de esta distribución multinivel es que cualquiera puede ganar una cantidad relativamente grande de USDT mediante el desarrollo de un equipo de línea descendente.';
	@override String get aboutUSCTminingItme5 => '5. El periodo de liquidación es de 7 días, es decir, cada 7 días se comprueba la validez con la plataforma publicitaria, y se registrará en el saldo la validez confirmada de los ingresos y el importe real. El importe mínimo para cada retirada es de 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Filas ${x} a ${y}.';
	@override String get wallet => 'monederos';
	@override String get multiChainWallet => 'monedero multicadena';
	@override String get deposit => 'depósito (por ejemplo, en una cuenta bancaria)';
	@override String get transfer => 'transferencia (dinero a una cuenta bancaria)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} en la dirección del monedero';
	@override String get transactions => 'Registros de transacciones';
	@override String get network => 'reticulación';
	@override String get walletAddress => 'Dirección de la cartera';
	@override String get currentAddress => 'dirección actual';
	@override String get depositAddress => 'Dirección de recarga';
	@override String get receivingMoneyAddress => 'dirección del beneficiario';
	@override String get applyTempDepositAddress => 'Dirección para solicitar una recarga temporal';
	@override String get tempDepositAddressTip => '1. Esta es una dirección de depósito compartido. Por favor, no deposite el importe después de que el contrato de alquiler haya expirado o después de que le hayan desvinculado. Si esto ocurre, el importe se perderá.';
	@override String get tempDepositAddressTip2 => '2. Antes de realizar un depósito, asegúrese de que el [Nombre de la cadena] y el [Nombre de la moneda] coinciden exactamente; en el caso de los tokens de contrato, también debe asegurarse de que el [Estándar del contrato] y la [Dirección del contrato] coinciden exactamente.';
	@override String get tempDepositAddressTip3 => '3. Por favor, no intente depositar fondos que no coincidan con ninguno de los parámetros de los consejos anteriores, de lo contrario se perderá el importe.';
	@override String get tempDepositAddressTip4 => '4. Si necesita depositar otros tipos de activos, cambie a la página de la divisa correspondiente y parametrice las opciones para solicitar una nueva dirección.';
	@override String get applyExtensionOfValidity => 'Solicitud de prórroga';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Esta dirección expirará después de '),
		diff,
		const TextSpan(text: ' y será '),
		tap('manually extend'),
		const TextSpan(text: ' válida durante 12 horas antes de expirar.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Sólo puede renovarse con 12 horas de antelación';
	@override String get theReceivingAddressValidForLongtime => 'Esta dirección es válida durante mucho tiempo.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Esta dirección de cobro es válida durante mucho tiempo y se abona automáticamente en tiempo real.';
	@override String get confirmDeposited => 'Confirmación del depósito';
	@override String get unbindThisDepositAddress => 'Desagregar esta dirección de recarga';
	@override String get confirmDepositedTip => 'Si se han transferido fondos, haga clic en el botón de arriba para activar el abono en su monedero transcurridos 10 minutos.';
	@override String get unbindDepositAddressTip => 'Para reducir la sobrecarga del contrato inteligente, desvincule la dirección de recarga si no va a depositar más fondos durante el periodo de validez.';
	@override String get transferToAddress => 'ir a la dirección';
	@override String get longPressToPaste => 'Pulsación larga para pegar';
	@override String get all => 'completo';
	@override String balanceX({required Object x}) => 'Saldo ${x}';
	@override String get transferOut => 'resultar';
	@override String depositXcoins({required Object x}) => 'Acreditado ${x}';
	@override String get sender => 'remitente';
	@override String get recipient => 'destinatario';
	@override String get memo => 'nota';
	@override String get kind => 'modo (de vida)';
	@override String get transferAmountExceedsAvailableBalance => 'Transferencias superiores al saldo disponible';
	@override String get pleaseEnterValidAmount => 'Introduzca un importe válido';
	@override String get networkFee => 'Tasa de tramitación de la red';
	@override String get fee => 'gastos de tramitación';
	@override String validLengthXcharacters({required Object x}) => 'Dirección longitud válida ${x} caracteres';
	@override String get historys => 'registro histórico';
	@override String get dtcCreditdetail => 'Detalles de los puntos Delta';
	@override String get usdCreditdetail => 'Detalles de los puntos USD';
	@override String get dappSquare => 'Plaza dApp';
	@override String get amountRaised => 'Importe recaudado';
	@override String get disbursedAmount => 'Importe emitido';
	@override String get participationTimes => 'Número de participantes';
	@override String get completionRate => 'tasa de finalización';
	@override String get exchangeRate => 'tipo de cambio';
	@override String get icpCrowdfunding => 'Crowdfunding del ICP';
	@override String get crowdfunding => 'financiación colectiva';
	@override String get trendsCurve => 'curva de tendencia';
	@override String get fullScreenView => 'pantalla completa';
	@override String get walletBalance => 'Saldo de la cartera:';
	@override String get manageWallet => 'Gestionar cartera';
	@override String get fundraiseAmount => 'recaudación de fondos';
	@override String get exchangeRewardAmount => 'Canjear el importe de la recompensa';
	@override String get fundraise => 'Recaudar fondos';
	@override String rangeIntegersX({required Object x}) => 'Rango: entero ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Participa con éxito en la recaudación de fondos y recibe una recompensa de ${amount}DTCT';
	@override String get amountSummary => 'Resumen de importes';
	@override String get changePreferred => 'Cambio de preferencia';
	@override String get changePreferredAddress => 'Cambiar dirección preferida';
	@override String get preferredAddressTip => 'Los fondos se transferirán automáticamente a la dirección preferida cuando se cobren utilizando un número de móvil registrado o un DID.';
	@override String get newAddress => 'Nueva dirección';
	@override String get newAddressTip => 'Para evitar abusos, cuando hay más de una dirección de monedero, se cobra una comisión de transacción por cada nueva dirección creada.';
	@override String get createNew => 'de nueva construcción';
	@override String get chainNetworkName => 'nombre de la red de cadenas';
	@override String get from => 'proceder de (un lugar)';
	@override String get to => 'hasta (un tiempo)';
	@override String get noAvailableDepositAmountDetected => 'No se ha detectado ningún importe de depósito disponible.';
	@override String get crossChainReceiveMoneyMonitoring => 'La colección de cadenas cruzadas está escuchando ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Recibido ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Confirmación en curso ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Notas (lectura obligada para los novatos)';
	@override String get whyUseSharedAddresses => '¿Por qué utilizar una dirección compartida?';
	@override String get useSharedrAdvantage => 'Las ventajas de utilizar direcciones compartidas al depositar a través de cadenas son las siguientes:';
	@override String get useSharedrAdvantage1 => '1. Reducir el desperdicio de las tasas de transferencia y reducir el coste de uso para los usuarios. Debido a la utilización de la dirección exclusiva, que dará lugar a demasiada dispersión de los fondos, por lo general con el fin de facilitar la posterior transferencia de otros usuarios en la retirada de fondos, cuando el usuario recarga la segunda transferencia de fondos tienen que ser agrupados en uno o un pequeño número de gestión de direcciones.';
	@override String get useSharedrAdvantage2 => '2. En el esquema compartido, el programa sólo necesita mantener un conjunto relativamente pequeño de direcciones que se pueden emparejar rápidamente con las transferencias salientes y la escucha de recogida ligera, lo que reduce la sobrecarga de recursos computacionales. En cambio, ocurriría lo contrario si se utilizaran direcciones exclusivas.';
	@override String get tokenType => 'Tipo de ficha';
	@override String get contract => 'contractual';
	@override String get contractStandard => 'norma contractual';
	@override String get contractAddress => 'dirección del contrato';
	@override String get native => 'protozoos';
	@override String get confirmUnbindingPleaseEnterYes => 'Para confirmar la desvinculación, introduzca "sí".';
	@override String get listAllWorkingTempReceivingAddresses => 'Lista de todas las direcciones de recarga de la cadena';
	@override String get setNote => 'Configurar notas';
	@override String lengthCannotExceedXbytes({required Object x}) => 'No puede tener más de ${x} bytes';
	@override String get transferFee => 'tasa de transferencia';
	@override String get crossChainFee => 'tasa por cruce de cadenas';
	@override String get crossChainTransferOutError => 'error de transferencia de enlaces cruzados';
	@override String get chainName => 'nombre de la cadena';
	@override String get message => 'mensajes';
	@override String get dontShowAgain => 'ya no aparece';
	@override String get queuing => 'cola';
	@override String get optional => 'opcional';
	@override String get publiclyVisible => 'públicamente visible';
	@override String get rates => 'tarifa';
	@override String get minimum => 'mínimo';
	@override String get maximum => 'límite superior';
	@override String get minimumBlockConfirmations => 'Número mínimo de confirmaciones de bloque';
	@override String get dsmsVerifyTerminal => 'Terminal de validación DSMS';
	@override String get overall => 'paraguas';
	@override String get my => 'mi';
	@override String get checkValidatorQualifications => 'Comprobación de los privilegios del autenticador';
	@override String get getVerifierPermissions => 'Obtener privilegios de autenticador';
	@override String get qualification => 'dotaciones naturales';
	@override String get upperLimit => 'límite';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Número máximo de terminales de acceso permitidos';
	@override String get numberOfExistingAccessTerminals => 'Número de terminales de acceso existentes';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Antes de solicitar privilegios de autenticador, debe preparar un teléfono móvil Android inactivo y un número de acceso dedicado, y descargar e instalar la aplicación DSMS Access Terminal.';
	@override String get downloadLink => 'enlace de descarga';
	@override String get alreadyReadyFollowingTheAboveTips => 'Está listo según los consejos anteriores';
	@override String get globalUniversal => 'para uso global';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Actualmente no hay suficientes autenticadores locales para participar en el servicio de acceso de autenticación DSMS, por favor seleccione el servicio de acceso "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'como número de acceso exclusivo';
	@override String pleaseCheckTip({required Object tip}) => 'Marque la casilla "${tip}".';
	@override String get inputLengthTooShort => 'Longitud de entrada demasiado corta';
	@override String get shortName => 'acrónimos';
	@override String pleaseEnterXname({required Object name}) => 'Por favor, introduzca ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'La solicitud está siendo enviada, por favor espere...';
	@override String get applyForDSMSVerifierPermission => 'Solicitar privilegios de validador de DSMS';
	@override String get confirmInformation => 'Confirmación de la información';
	@override String get lastHeartbeat => 'latido final';
	@override String get expirationTime => 'tiempo debido';
	@override String get country => 'naciones';
	@override String get accessTerminals => 'terminal de acceso';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Número total de terminales de número de acceso DSMS';
	@override String get textContent => 'Contenido del texto';
	@override String get scanQRcodeToLogin => 'Pase el dedo para iniciar sesión';
	@override String get confirmLogin => 'Confirmar inicio de sesión';
	@override String get authorizeSubApplicationToLogin => 'Autorizar esta sub-solicitud para iniciar sesión';
	@override String get authorizationSuccessful => 'La autorización se ha realizado correctamente.';
	@override String get launchSMSprogram => 'Lanzamiento del programa SMS';
	@override String get notApplied => 'Ninguna solicitud';
	@override String get validityPeriod => 'período de validez';
	@override String get renewal => 'solicitud de renovación';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Escanee el código para autorizar el inicio de sesión en el terminal';
	@override String get rewards => 'incentivos';
	@override String get roles => 'carácter';
	@override String get developerCenter => 'Centro de desarrollo';
	@override String get appName => 'Nombre de la aplicación';
	@override String get pleaseSelect => 'seleccione';
	@override String get category => 'categoría';
	@override String get keywords => 'byword';
	@override String get pleaseEnterAkeyword => 'Introduzca una palabra clave';
	@override String get createApplication => 'Creación de aplicaciones';
	@override String get appType => 'Tipo de aplicación';
	@override String get numberOfCategoriesMustBetween1and3 => 'El número de categorías debe estar comprendido entre 1 y 3';
	@override String get appLogoSpecifications => 'Formato de imagen: png, tamaño: menos de 100 KB, resolución (píxeles): 256*256';
	@override String get localAlbum => 'Álbumes de fotos locales';
	@override String get networkPath => 'ruta de red';
	@override String get imageURLkAddress => 'URL de la imagen';
	@override String get urlAddressFormatIsIncorrect => 'Dirección URL con formato incorrecto';
	@override String get imageFormatOnlySupportsPng => 'Las imágenes sólo se admiten en formato "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'La longitud debe estar comprendida entre ${a}-${b} caracteres.';
	@override String get introduction => 'breve';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'El tamaño de la imagen no puede ser superior a ${a}, actualmente ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'La resolución de la imagen debe ser: ${p1}(píxeles), actualmente ${p2}';
	@override String get becomeDeveloper => 'Conviértase en desarrollador';
	@override String get developerInformation => 'Información para desarrolladores';
	@override String get teamName => 'Nombre del equipo';
	@override String get website => 'nodo';
	@override String get other => 'que no sean';
	@override String get githubVerification => 'Verificación en Github';
	@override String get exampleUrl => 'Ejemplo de Url';
	@override String githubVerificationTip({required Object did}) => 'Utilice su cuenta de GitHub para crear un archivo \'delta.did\' en su repositorio con el contenido de \'${did}\'; a continuación, pegue la dirección Url de githubusercontent de ese archivo en este cuadro de entrada para la autenticación.';
	@override String get createApp => 'Creación de aplicaciones';
	@override String get appManagement => 'gestión de aplicaciones';
	@override String get statusLogs => 'Registro de estado';
	@override String get bad => 'no sirve';
	@override String get normal => 'habitual';
	@override String get good => 'un excelente';
	@override String get onceCreatedItCannotBeChanged => 'Una vez creado, no se puede modificar.';
	@override String get manageApplicationEntity => 'Gestión de entidades de aplicación';
	@override String get currentVersion => 'versión actual';
	@override String get submitVersion => 'Versión presentada';
	@override String get packageOnlySupportZipCompressedFile => 'El paquete sólo admite archivos comprimidos en zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'No se ha encontrado el archivo \'${name}\' en el paquete zip.';
	@override String get fileList => 'Lista de documentos:';
	@override String get programPackage => 'Paquete de programación:';
	@override String get automaticallyExtractFromVersionFile => 'Extraído automáticamente de los archivos \'.version\'.';
	@override String get dappVersionFormatTip => 'El formato del número de versión debe ser un decimal con una precisión de 2 dígitos, sin superar un máximo de 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'El número de versión debe ser mayor que la versión actual \'${v}\'';
	@override String get versionNotes => 'Pie de imprenta:';
	@override String get updateRelease => 'nueva versión';
	@override String get loadAndRun => 'Cargar y ejecutar';
	@override String get notYetSubmittedProgramPackage => 'Aún no se ha presentado el programa.';
	@override String get authorizeMinidAppLogin => 'Autorizar el inicio de sesión en la miniapp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Para confirmar la autorización, introduzca "sí".';
	@override String get authorizeNow => 'Autorización inmediata';
	@override String get operation => 'Operación.';
	@override String get statusChange => 'Cambio de estado';
	@override String get changeTo => 'Cambia a:';
	@override String get notes => 'Observaciones.';
	@override String get changesNotEffective => '¡El cambio no es válido !';
	@override String get released => 'Publicado en';
	@override String get inPublicBeta => 'beta abierta';
	@override String get developers => 'Desarrollado por.';
	@override String get reviewList => 'Lista de comentarios.';
	@override String get postReview => 'Deja un comentario';
	@override String get scoreNow => 'Tarifas';
	@override String get description => 'Descripción.';
	@override String get noData => '(^-^)\n No hay datos disponibles';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Se ha actualizado la versión de ${a} a ${b}.';
	@override String get loadNewVersion => 'Cargar nueva versión';
	@override String get name => 'Nombre.';
	@override String get canisterId => 'Id. del depósito';
	@override String get updateTime => 'tiempo de actualización';
	@override String get contractCanistersState => 'Estado del depósito contractual';
	@override String get userDistribution => 'distribución de usuarios';
	@override String get settings => 'Configuración';
	@override String get security => 'Seguridad';
	@override String get invite => 'invitaciones';
	@override String get more => 'Más...';
	@override String get receiveAddress => 'Recibir dirección:';
	@override String get hangingAmount => 'colgando';
	@override String get hangingAmountTips => 'Las Cantidades Pendientes son registros temporales de las recompensas generadas por la minería de su equipo subordinado, una vez que haya realizado una sesión de minería estas cantidades se recogerán en las Cantidades Pendientes.';
	@override String get pendingAmount => 'pendiente';
	@override String get pendingAmountTips => 'Los importes pendientes son los que aún no se han confirmado contra los anunciantes, y los que tengan coincidencias válidas se transferirán a registros USCT válidos, excluyendo las partes no válidas, si las hubiera.';
	@override String get received => 'recibido';
	@override String get processing => 'en curso';
	@override String get replied => 'encuestado';
	@override String get rejected => 'rechazo';
	@override String get unknown => 'uncharted';
	@override String get insufficientBalance => 'Equilibrio insuficiente.';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'El saldo de ${x} es insuficiente para cubrir las tasas de la red de enlaces cruzados';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Todavía no se ha completado una transacción y no se puede transferir en este momento';
	@override String get thisfunctionNotSupportExternalCalls => 'Esta función no admite llamadas externas';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'No hay ninguna coincidencia para una dirección que se pueda utilizar para pagar tasas de cadena cruzada, por favor, cambie a otra red de cadena para intentarlo.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'La coincidencia actual con el importe máximo que se puede transferir en una sola transacción es de ${x}.';
	@override String get memoMustNotBeMoreThan64bytes => 'Las observaciones no deben superar los 64 bytes';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'El saldo es insuficiente y el importe es de: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'No puede vincular más de 3 direcciones.\nSi necesita vincular una nueva dirección de pago.\nDesvincule primero otra dirección.';
	@override String parametersA_exception({required Object x}) => 'Parámetros: ${x}, excepción';
	@override String get parameterException => 'Excepción de parámetro';
	@override String get transferAmountMustBeLargerThan0 => 'El importe de la transferencia debe ser superior a 0';
	@override String get authorizationHasExpired => 'Autorización caducada';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'La aplicación no ha sido autorizada por el propietario';
	@override String get authenticationTokenIsInvalid => 'Token de autenticación no válido';
	@override String get verifyInfoIsInvalidOrExpired => 'Información de validación no válida o caducada';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Verificar que el número de terminales de acceso ha superado el límite de uno entre diez mil.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'La participación en la minería debe ser superior a 3 días';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'El número de miembros del círculo de seguridad no puede ser inferior a tres';
	@override String get avatarIsNotSet => 'Avatar no fijado';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'El número de remisiones directas no puede ser inferior a 3';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'El plazo es insuficiente y sólo puedes cambiar de número de teléfono móvil una vez al año.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Este número de teléfono móvil ya existe y no se puede duplicar';
	@override String get securityCodeIsIncorrect => 'Código de seguridad incorrecto';
	@override String get securityCodeMayHaveExpired => 'El código de seguridad puede haber caducado';
	@override String get sessionIdIsInvalidOrExpired => 'Identificador de sesión no válido o caducado';
	@override String get sessionHasBeenAuthorized => 'Se autorizó la finalización de la sesión.';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Sólo puede renovarse dentro de los ${x} días anteriores al vencimiento del plazo';
	@override String get notYetGrantedDeveloperPermissions => 'Aún no hay derechos de desarrollador';
	@override String fieldXcannotBeEmpty({required Object x}) => 'El campo ${x} no puede ser nulo';
	@override String get emailFormatError => 'Error de formato de correo electrónico';
	@override String theXformatIsIncorrect({required Object x}) => 'Error de formato \'${x}';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'El campo "${x}" debe tener entre ${y} y ${z} caracteres.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'El rango de selección \'${x}\' debe estar comprendido entre ${y} y ${z}.';
	@override String get unchanged_sameAsOldContent => 'Sin cambios, ¡el mismo contenido que antes!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: ¡\'${y}\' ya existe!';
	@override String get mobileNumberHasNotJoinedDelta => '¡Este número de móvil no ha sido añadido a Delta!';
	@override String get referrerIdCannotBeEmpty => 'El ID de referencia no puede estar vacío.';
	@override String get referrerIdDoesNotExist => 'El ID de referencia no existe.';
	@override String get didIsIncorrectOrInvalid => 'El DID es incorrecto o inválido.';
	@override String get accessTokenIsIncorrectOrInvalid => 'El accessToken es incorrecto o inválido.';
	@override String get minimumWithdrawalAmountIs1USD => 'Mínimo 1USD para una sola retirada';
	@override String get miningTimeIsNotYet => 'Aún no es hora de minar.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Ya existe, ¡por favor no lo añada de nuevo!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'No se puede utilizar el número de registro como número de acceso de autenticación';
	@override String get canotAddYourSelf => 'No puedes agregarte';
	@override String get logOut => 'Cerrar sesión';
	@override String get confirmLogout => 'Confirmar cierre de sesión';
	@override String get logOutTipsText => 'Nota: Según el informe técnico, cada verificación de inicio de sesión de su cuenta consumirá una cierta cantidad de sus monedas DTC que se pagará al verificador como incentivo, así que no intente iniciar y cerrar sesión innecesariamente, haciendo clic en el botón de abajo cerrará sesión inmediatamente.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Por favor, introduzca "sí" para confirmar el cierre de sesión.';
	@override String get tip => 'llamar la atención sobre algo';
	@override String get cancel => 'anulaciones';
	@override String get close => 'coagulación';
	@override String get selected => 'seleccionado';
	@override String get edit => 'compilador';
	@override String get submit => 'presentar (un informe, etc.)';
	@override String get goBack => 'regresión (en psicología)';
	@override String get copiedToClipboard => 'Se ha copiado en el portapapeles.';
	@override String get nickname => 'término cariñoso';
	@override String get confirm => 'reconocer';
	@override String get cannotBeEmpty => 'No puede estar vacío';
	@override String get deleteSuccessful => '¡Borrado con éxito!';
	@override String get successfullyModified => 'La modificación ha sido un éxito.';
	@override String get executionSuccessful => 'La aplicación fue un éxito.';
	@override String get preview => 'avances';
	@override String get followSystem => 'sistema de seguimiento';
	@override String get change => 'variación';
	@override String get replace => 'recambios';
	@override String get view => 'comprobar';
	@override String get manage => 'dirección';
	@override String get modify => 'modificaciones';
	@override String get replacedSuccessfully => '¡Reemplazo con éxito!';
	@override String get authentication => 'autenticación';
	@override String get reacquire => 'recuperar';
	@override String get tryAgain => 'Inténtalo de nuevo.';
	@override String get querying => 'Se están haciendo averiguaciones...';
	@override String get writingToOnChain_pleaseWait => 'Se está escribiendo en la cadena, por favor espere ...';
	@override String get versionCheck => 'detección de versiones';
	@override String get alreadyLatestVersion => '¡Ya está la última versión!';
	@override String get foundNewVersion => 'Descubra la nueva versión:';
	@override String get upgradeLink => 'Enlace de actualización:';
	@override String get deviceDescription => 'Descripción del equipamiento.';
	@override String get notification30SecondsBeforeMiningStops => '¡Ejecute el recordatorio de notificación 30 segundos antes de que se detenga la minería!';
	@override String get goMining => 'Ir a minar';
	@override String get deltaMiningReminder => 'Recordatorio de minería Delta';
	@override String get clickToMine_miningIsAboutToStop => '¡Haga clic aquí para minar, la minería se detendrá pronto!';
	@override String get incorrect_input => '¡Entrada incorrecta!';
	@override String get are_you_sure_delete => '¿Estás seguro de eliminar?';
	@override String get delete_account => 'Eliminar cuenta';
	@override String get how_to_operate_it => '¿Ves cómo operarlo?';
	@override String get deletion_warning_tip => 'Si elimina su cuenta, perderá todas sus monedas Delta y también se perderán todas las ganancias de otros miembros';
	@override String get launchWhatsAppProgram => 'Iniciar el programa WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Los números de acceso con este icono también admiten la verificación de mensajes de WhatsApp. Al enviar mensajes internacionales, se recomienda utilizar WhatsApp para aumentar la tasa de éxito y reducir los costos.';
	@override String get ihaveSentVerificationString => 'He enviado una cadena de verificación';
	@override String get totalOfPeople => 'Total de personas: ';
	@override String get numberOfPeopleMining => 'Número de personas minando';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Puedes usar un navegador en otro dispositivo para escanear el código QR y pasarlo al programa SMS';
	@override String get toggle => 'Alternar';
	@override String get DSMSverifier => 'DSMS Verificador';
	@override String get activate => 'Activar';
	@override String get activated => 'Activado';
	@override String get generateActivationCommand => 'Generar comando de activación';
	@override String get activationCommand => 'Comando de activación';
	@override String get activationSentedTip => 'Después de enviar el SMS de activación, verifique el estado de activación en el dispositivo terminal de acceso';
	@override String get biometricsNotEnabledTip => 'La biometría (rostro o huella digital) no está habilitada en su dispositivo. Habilítela para continuar';
	@override String get error => 'Error';
	@override String get exceptionOccurredWhenCallingBiometric => '¡Se produjo una excepción al llamar a la función biométrica (rostro o huella digital)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: 'Se verifican '),
		checkedNum,
		const TextSpan(text: ' números de acceso, se debe seleccionar '),
		shouldNum,
		const TextSpan(text: '.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '¿Se ha enviado ${text} a los ${n} números de acceso anteriores?';
	@override String get interface => 'Interfaz:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Tiempo de espera agotado o discrepancia en el número del remitente';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'El número de móvil del miembro del círculo de seguridad que ingresaste no coincide: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Inicie sesión dentro de los 10 minutos posteriores al cierre de sesión para evitar la verificación de dos factores.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Se deben completar al menos ${n} números de teléfono móvil';
	@override String get noAccessNumberInYourRegionYet => 'Aún no hay ningún número de acceso en tu región';
	@override String get notEnoughAccessNumbersInYourRegion => 'No hay suficientes números de acceso en su región';
	@override String get tipsForDeployDSMSterminal => 'El sistema ha cargado automáticamente algunos números de acceso de otros países. Para brindar servicios de verificación mejores y más económicos, se recomienda que usted o la persona que lo refirió implementen el terminal DSMS localmente para obtener comisiones de verificación.';
	@override String get noOneCanProvideMeTheSecurityCode => '¿Nadie puede proporcionarme el código de seguridad?';
	@override String get useSupplementalMode => 'Usar modo suplementario';
	@override String get returnToSecurityCodeMode => 'Regresar al modo de código de seguridad';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Por favor, introduzca el número de móvil asociado. El código de país puede omitirse.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'El número de móvil de ${name} es incorrecto';
	@override String get matchingVerificationStrategyIs => 'La estrategia de verificación de coincidencia es:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'El saldo es mayor a 3 ICP, no es necesario agregar combustible por ahora.';
	@override String get escrowAccount => 'Cuenta de depósito en garantía';
	@override String get fuelRelay => 'Relé de combustible';
	@override String get pourFuel => 'Vierte combustible';
	@override String get fuelState => 'Estado del combustible';
	@override String get pouringFuelTips => 'Verter combustible no aporta ninguna ventaja ni desventaja, su propósito es enriquecer la experiencia del sistema Delta';
	@override String get sponsorDevelopersByWatchingAds => 'Patrocina a desarrolladores viendo anuncios';
	@override String get status => 'Estado';
	@override String get date => 'Fecha';
}

// Path: <root>
class _StringsFr implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsFr.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.fr,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <fr>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsFr _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'fig. début';
	@override String get switchLanguage => 'Changer de langue';
	@override String get languageSwitch => 'Changement de langue';
	@override String get slogan => 'Construire une économie décentralisée dans le delta';
	@override String get countryRegionCode => 'Code pays/zone';
	@override String get countryRegionSelection => 'Sélection de pays et de régions';
	@override String get nextStep => 'l\'étape suivante';
	@override String get yourPhoneNumber => 'Votre numéro de téléphone.';
	@override String get pleaseSelectCountryAndRegion => 'Veuillez sélectionner votre pays/région';
	@override String get pleaseEnterPhoneNumber => 'Veuillez saisir un numéro de téléphone valide !';
	@override String get referrerDid => 'Référent DID';
	@override String get pleaseEnterTheReferrersDid => 'Veuillez saisir l\'identité décentralisée d\'un référent valide';
	@override String get thisDidIsInvalid => 'Cette DID n\'est pas valide.';
	@override String get nicknameFormatTips => 'Le pseudonyme ne doit pas être vide et ne doit pas comporter plus de 16 chiffres.';
	@override String get additionalIinformation => 'Informations complémentaires';
	@override String get invitationSubject => 'Une invitation à la recherche d\'un consensus au sein du Delta';
	@override String invitationLetter({required Object did}) => 'Bonjour, je participe à la construction du consensus Delta !\n Delta est une nouvelle plateforme de monnaie numérique open source fonctionnant sur ICP, qui vous permet de gérer et d\'utiliser diverses monnaies numériques sans mots de passe, clés privées ou mnémoniques. Veuillez cliquer sur ce lien https://delta.kim/auto/download pour installer l\'application et vous êtes maintenant invité à participer à la construction du consensus et à la frappe des monnaies.\n Référent DID : ${did}';
	@override String get dSMSverification => 'Validation du DSMS';
	@override String get getAccessNumbers => 'Obtenir des numéros d\'accès';
	@override String get getAccessNumberPromptMessage => 'Cliquez sur le bouton "Obtenir" ci-dessous pour faire tourner une série de numéros d\'accès de vérification par SMS dans la file d\'attente.';
	@override String get optionalAccessNumbers => 'Numéro d\'accès optionnel';
	@override String get accessNumber => 'numéro d\'accès';
	@override String get TELCO => 'opérateur (d\'une centrale électrique, d\'un réseau de transport, etc.)';
	@override String get score => 'score';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('fr'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Veuillez cocher '),
			nBuilder(n),
			const TextSpan(text: ' numéros d\'accès et cliquer sur le bouton "'),
			span('text'),
			const TextSpan(text: '" pour passer à l\'étape suivante.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Veuillez cocher '),
			nBuilder(n),
			const TextSpan(text: ' numéros d\'accès et cliquer sur le bouton "'),
			span('text'),
			const TextSpan(text: '" pour passer à l\'étape suivante. '),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta est une expérience de monnaie numérique mondiale décentralisée et open source, ainsi qu\'un écosystème d\'applications de crypto-monnaie.';
	@override String get deltaGoalsDesc => 'L\'objectif est de permettre aux gens d\'utiliser Delta pour co-construire de nouvelles monnaies numériques universelles, équitables, sûres, rapides et écologiques. Et de fournir divers scénarios d\'application efficaces pour ces monnaies numériques et les crypto-monnaies précédentes.';
	@override String get details => 'particularités';
	@override String get get => 'gain';
	@override String get select => 'option';
	@override String get send => 'envoi';
	@override String get complete => 'remplir';
	@override String get selectedAccessNumberPrompt => 'Lorsque cette option est sélectionnée, le numéro d\'accès complet s\'affiche et une chaîne d\'authentification est générée.';
	@override String get location => 'placement';
	@override String get verificationString => 'chaîne de validation';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Veuillez utiliser votre numéro de téléphone '),
		num,
		const TextSpan(text: ' et envoyer '),
		label,
		const TextSpan(text: ' à '),
		accessNumber,
		const TextSpan(text: ' pour terminer la vérification.'),
	]);
	@override String get ihaveSentTheSMS => 'J\'ai envoyé un message texte';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'La chaîne de validation est valable pendant 6 minutes, temps restant : '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Trop rapide pour attendre ${x} secondes pour continuer !';
	@override String get waitingForVerificationSMS => 'En attente du SMS de vérification...';
	@override String get partSuccsForVerificationSMS => 'La vérification par SMS de l\'un des terminaux d\'accès a été effectuée !';
	@override String get creatingAccessToken => 'Création d\'un jeton d\'accès...';
	@override String get intoDelta => 'A l\'intérieur de Delta';
	@override String get deltaAccountIsLoggedIn => 'Votre compte Delta est connecté';
	@override String get iHavLoggedOut => 'Je ne suis plus dans le coup.';
	@override String get startTwoFactorVerification => 'Démarrage de la double vérification';
	@override String get securityCircleVerification => 'Validation du cercle de sécurité';
	@override String get generateSecurityCode => 'Générer un code de sécurité';
	@override String get generateSecurityCodeHintText => 'Le code de sécurité généré sera envoyé à un membre de votre cercle de sécurité choisi au hasard.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Vous n\'avez pas défini de cercle de sécurité, votre compte n\'est pas du tout sécurisé. Veuillez saisir un code de 6 chiffres et passer à l\'étape suivante.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Le code de sécurité a été généré, veuillez contacter la famille et les amis suivants pour leur demander d\'extraire le code de sécurité afin que vous puissiez passer la vérification. valable pendant 30 minutes !';
	@override String get itGetSecurityCodeTip => 'Conseil : vous pouvez obtenir le code de sécurité en double-cliquant sur le pseudonyme de votre compte dans l\'application Delta -> Menu -> Fournir la sécurité.';
	@override String get securityCircleMemberList => 'Liste des membres du cercle de sécurité:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Veuillez sélectionner un parent ou un ami dans la liste des membres pour générer et vous fournir un code de sécurité afin de vérifier votre véritable identité. Le but est d\'empêcher le compte d\'être contrôlé par d\'autres lorsque le numéro de téléphone mobile est perdu ou volé.';
	@override String formatIsXdigits({required Object num}) => 'Format sous forme de chiffres ${num}';
	@override String get signInSuccessfully => 'Connexion réussie !';
	@override String get twoFAandLogin => 'Double authentification et connexion';
	@override String get verificationSuccessful => 'Vérifier le succès !';
	@override String get validationFailed => 'La validation a échoué !';
	@override String get dappInfo => 'Informations sur le DApp';
	@override String get securityCircle => 'anneau de sécurité';
	@override String get securityCode => 'code de sécurité';
	@override String get provideSecurity => 'assurer la sécurité';
	@override String get addManully => 'Ajouter manuellement';
	@override String get addFromContacts => 'Ajouter à partir du carnet d\'adresses';
	@override String get addSecurityCircle => 'Ajouter un cercle de sécurité';
	@override String get inputType => 'Type d\'entrée';
	@override String get mobileNumber => 'numéro de téléphone mobile';
	@override String get did => 'Identité de l\'adresse';
	@override String get pleaseEnterValidDID => 'Veuillez saisir une identité décentralisée valide';
	@override String get pleaseEnterValidWalletAddress => 'Veuillez saisir une adresse de portefeuille valide';
	@override String get appellation => 'formulaire d\'adresse';
	@override String get appellationHint => 'Comment l\'appelez-vous, comme "bébé" ?';
	@override String get addSecurityCircleTips => 'N\'ajoutez pas de personnes en qui vous n\'avez pas confiance à votre cercle de sécurité.';
	@override String get referralTeam => 'Équipes recommandées';
	@override String get profile => 'Informations sur le compte';
	@override String get menu => 'menu';
	@override String get directly => 'direct';
	@override String get indirectly => 'indirecte';
	@override String get inviteContacts => 'Invitation Contact';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Votre invité est '),
		nickname,
		const TextSpan(text: ' et vous avez référé directement '),
		num1,
		const TextSpan(text: ' personnes, dont '),
		num2,
		const TextSpan(text: ' sont actuellement en ligne.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Vous avez référencé indirectement '),
		num1,
		const TextSpan(text: ' personnes, dont '),
		num2,
		const TextSpan(text: ' sont actuellement en ligne.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Invitez vos amis à rejoindre Delta et améliorez ensemble le consensus social. Pour chaque recommandation directe, le taux d\'extraction d\'une personne augmente le taux de base de '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Invitez des amis à rejoindre Delta et, ensemble, améliorez le consensus social en augmentant le taux de base de '),
		rate2,
		const TextSpan(text: ' pour chaque personne indirectement recommandée.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Êtes-vous sûr de vouloir supprimer "${name}" ?';
	@override String get safetyCircleRoleQ => 'À quoi sert l\'anneau de sécurité ?';
	@override String get safetyCircleRoleA => 'Protégez votre compte en fournissant une authentification secondaire dans les situations sensibles.';
	@override String get howSecurityCirclesWorkQ => 'Comment fonctionnent les anneaux de sécurité ?';
	@override String get howSecurityCirclesWorkA => 'Dans le cas où une vérification par le Cercle de sécurité est nécessaire, le programme Delta Smart Contracts sélectionnera au hasard un membre de la liste de copains du Cercle de sécurité pour l\'aider à vous fournir un code de sécurité afin de compléter la vérification d\'identité à votre place. Lorsque vous demanderez le code de sécurité au membre, il pourra confirmer si vous êtes bien vous ou non. En même temps, le programme vous demandera : "Refusez de fournir le code de sécurité s\'il ne s\'agit pas de vous", afin de protéger la sécurité de votre compte. Vous devez donc toujours vous assurer que les membres de votre cercle de sécurité sont des personnes de confiance.';
	@override String get securityCircleBeUsedQ => 'Quand sera-t-il utilisé ?';
	@override String get securityCircleBeUsedA1 => '1) Lorsque vous perdez le contrôle de votre Delta APP, il s\'agit généralement de la perte ou du vol de votre téléphone portable.';
	@override String get securityCircleBeUsedA2 => '2) Dans le cas de certaines opérations sensibles, le programme Delta Smart Contract doit confirmer qu\'il s\'agit bien de vous.';
	@override String get provideSafetyTip1 => 'Lorsque votre copain vous demande son code de sécurité, assurez-vous de confirmer qu\'il s\'agit bien du sien.';
	@override String get provideSafetyTip2 => 'Vous assurez la sécurité des amis susmentionnés, qui vous ont désigné comme la personne la plus digne de confiance dans leur cercle de sécurité et qui ont besoin que vous leur fournissiez une confirmation de sécurité au cas où ils effectueraient des opérations sensibles sur leur compte.';
	@override String get provideSafetyTip3 => 'Double-cliquez sur l\'avatar de l\'autre personne pour extraire le code de sécurité si nécessaire.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'L\'autre partie n\'a pas de code de sécurité à extraire !';
	@override String get existSecurityCodeTip => 'Assurez-vous que l\'ami ou le membre de la famille qui vous demande le code de sécurité est le même que l\'ami ou le membre de la famille. Pour la protection de votre ami ou du membre de la famille, vous devez refuser de fournir le code de sécurité si l\'ami ou le membre de la famille n\'est pas le même que l\'ami ou le membre de la famille.';
	@override String get avatarSettings => 'Paramètres de l\'avatar';
	@override String get NFTAvatarPropertyRightsText => 'Clause de non-responsabilité : l\'utilisation du NFT en question comme avatar est uniquement une préférence personnelle et n\'a rien à voir avec la détention des droits de propriété intellectuelle de ce NFT.';
	@override String get projectWebsite => 'Site web du projet:';
	@override String get whitepaper => 'livre blanc:';
	@override String get indexID => 'Index Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Index entre ${start} et ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Saisissez l\'identifiant de votre NFT préféré et le programme le chargera automatiquement comme avatar pour vous.';
	@override String get miningRate => 'taux d\'exploitation minière';
	@override String get miningDetails => 'Détails de l\'exploitation minière';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Taux d\'extraction total : '),
		rate,
		const TextSpan(text: ' δ/jour'),
	]);
	@override String get EndOfMiningSession => 'Le cycle minier est terminé :';
	@override String get tapToMineDeltaCoin => 'Cliquez pour extraire des pièces de Delta ↑';
	@override String get clickToStartMining => 'Cliquez pour commencer l\'exploitation minière !';
	@override String get miningHasStoppedPromptDesc => 'L\'exploitation minière s\'est arrêtée, chaque 24 heures est un cycle d\'exploitation minière, cliquez sur l\'icône de l\'éclair pour commencer un nouveau cycle d\'exploitation minière.l\'exploitation minière de Delta est un mécanisme d\'allocation qui ne consomme pas de puissance arithmétique supplémentaire et de trafic réseau de votre appareil.';
	@override String get aboutBaseRate => 'À propos du taux de base ?';
	@override String get baseRateDescription => 'Comme convenu dans le livre blanc, la règle de diminution du taux de base pour le Delta Mining sera divisée en deux phases.\nPhase 1 : Le taux sera de 32δ/jour lorsque le nombre de participants (inscriptions) est inférieur ou égal à 3 000. Sur cette base, le taux de base est divisé par deux chaque fois que le nombre de personnes augmente d\'un facteur 10.\nPhase 2 : Lorsque le nombre de participants atteint 30 millions ou plus, le taux de base est divisé par deux chaque fois que le nombre de participants augmente d\'un facteur 3. Jusqu\'à ce que la dernière fouille arrête la production.';
	@override String get baseRate => 'débit de base (comme pour le RNIS)';
	@override String get directReferralRewards => 'Prime de parrainage direct';
	@override String get directReferralRewardDesc => 'Pour chaque parrainage direct, votre taux de minage sera augmenté d\'un tiers supplémentaire du taux de base pendant qu\'ils minent.\n\n De plus, le statut minier de vos filleuls sera également pris en compte dans le calcul de votre bonus de parrainage direct.';
	@override String get indirectReferralRewards => 'Prime de parrainage indirect';
	@override String get indirectReferralRewardDesc => 'Lorsqu\'un référent indirect exploite une mine, votre taux d\'exploitation est augmenté d\'un dixième du taux de base.\n\n Votre équipe de référents directs, chaque personne qu\'ils référencent à nouveau représente un référent indirect pour vous.';
	@override String get mine => 'extraire (minerai ou autre ressource d\'une mine)';
	@override String get thisMiningInformation => 'Informations actuelles sur l\'exploitation minière';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Participation à l\'exploitation minière : '),
		x,
		const TextSpan(text: ' fois'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Gain total cette fois-ci : '),
		x,
		const TextSpan(text: ' Delta coins'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Gains de base : '),
		x,
		const TextSpan(text: ' pièces'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contribution directe de l\'équipe : '),
		x,
		const TextSpan(text: ' pièces'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contribution indirecte de l\'équipe : '),
		x,
		const TextSpan(text: ' pièces'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Durée de l\'intervalle entre les fouilles : '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Heures d\'extraction effectives : '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} heures';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Pour la sécurité des biens, les membres du cercle de sécurité doivent avoir en permanence 3 à 5 personnes de confiance.';
	@override String get index => 'indexation';
	@override String get amount => 'somme d\'argent';
	@override String get balance => 'soldes';
	@override String get timeStamp => 'horodatage';
	@override String get summary => 'résumés';
	@override String get miningHasStopped => 'L\'exploitation minière a cessé.';
	@override String get miningHasStoppedDesc => 'Votre activité minière est actuellement arrêtée et vous commencerez à gagner de l\'argent immédiatement.';
	@override String get startMining => 'Commencer l\'exploitation minière';
	@override String get changeMobileNumber => 'Changement de numéro de téléphone mobile';
	@override String get currentMobileNumber => 'Numéro de téléphone mobile actuel';
	@override String get newMobileNumber => 'Nouveau numéro de téléphone mobile';
	@override String get securityCodeFormatIs6digits => 'Le format du code de sécurité est de 6 chiffres !';
	@override String get startVrification => 'Début de la vérification';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Ce numéro mobile existe déjà, DID associé : ${dId}';
	@override String get noDataYet => 'Pas de données disponibles';
	@override String get previousMobileNumber => 'Numéro de téléphone mobile précédent';
	@override String get changeLog => 'Enregistrement des modifications';
	@override String get referralLinkToShare => 'Liens recommandés à partager';
	@override String get referrer => 'référent';
	@override String get isoCountryCode => 'Code pays ISO';
	@override String get avatarLogo => 'logo de l\'en-tête';
	@override String get creationTime => 'Temps de création';
	@override String get lastUpdate => 'Dernière mise à jour';
	@override String get numberOfSecurityCircleMembers => 'Nombre de membres des cercles de sécurité';
	@override String get theLatestMining => 'Dernier coup de pioche';
	@override String get effectiveMiningDays => 'Nombre de jours d\'exploitation minière effective';
	@override String get modifyNickname => 'Changer de pseudo';
	@override String get didNotChange => 'Pas de changement !';
	@override String get kycVerification => 'Vérification KYC';
	@override String get faceID => 'Face ID';
	@override String get touchID => 'Identification par empreinte digitale';
	@override String get biometricsAuthorizationTest => 'Essais d\'authentification biométrique';
	@override String get currentState => 'état actuel';
	@override String get biometricsAuthenticationLocalizedReason => 'Utilisez le déverrouillage de votre appareil pour vérifier votre identité.';
	@override String get graph => 'des archives de graphiques (par exemple des cartes, des documents ou des figures botaniques)';
	@override String get referralRelationshipGraph => 'Cartographie des relations d\'orientation';
	@override String get nativeContacts => 'Contacts locaux';
	@override String get registrationAndMiningTrends => 'Tendances en matière d\'enregistrement et d\'exploitation minière';
	@override String get inMining => 'l\'exploitation minière';
	@override String get registrationVolume => 'volume d\'enregistrement';
	@override String get unmined => 'inexploité';
	@override String get mined => 'miné';
	@override String get communityMining => 'Exploitation minière communautaire';
	@override String get consensusPromotionFund => 'Fonds de promotion du consensus';
	@override String get ecologicalAwardFund => 'Fonds d\'incitation écologique';
	@override String get icpFuelCrowdfunding => 'ICP Fuel Crowdfunding';
	@override String get coreDeveloperRewards => 'Récompenses pour les développeurs de base';
	@override String get totalAllocation => 'Répartition globale';
	@override String get miningRatio => 'Taux d\'exploitation minière';
	@override Map<String, String> get billion => {
		'30': '30 milliards d\'euros',
		'60': '60 milliards d\'euros',
		'180': '180 milliards d\'euros.',
		'300': '300 milliards d\'euros',
	};
	@override String get watchAdsToSupportDevelopers => 'Regarder des publicités pour soutenir les développeurs';
	@override String get loadingAdcomponents => 'Chargement des composants de l\'annonce...';
	@override String get timeIsNotUp => 'Le temps n\'est pas écoulé !';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Le chargement a échoué, le réseau est peut-être bloqué !';
	@override String get pendingUSCTrecords => 'Dossiers en attente de l\'USCT';
	@override String get pendingUSCTrecordsDesc => 'Les enregistrements USCT en attente seront confirmés par la plateforme publicitaire dans un délai de 15 à 30 jours, les enregistrements valides seront transférés dans la liste des enregistrements USCT et le montant USCT approprié sera ajouté au solde du compte.';
	@override String get validity => 'validité';
	@override String get advertiser => 'annonceurs';
	@override String get earned => 'gagnés';
	@override String get withdraw => 'retirer';
	@override String get validUSCTrecords => 'Registres effectifs de l\'USCT';
	@override String get USCTmining => 'USCT Mining';
	@override String get aboutUSCTmining => 'Sur les mines de l\'USCT ?';
	@override String get aboutUSCTminingItme1 => '1) USDT est un stablecoin en dollars américains mondialement populaire qui peut être facilement échangé contre des monnaies souveraines nationales sur les principaux échanges de crypto-monnaies dans le monde entier.';
	@override String get aboutUSCTminingItme2 => '2) USCT est une mesure temporaire du produit du minage USCT, connu sous le nom de crédit USD, qui sera finalement converti en USDT en fonction du montant de règlement réel et des règles de distribution de la plate-forme publicitaire et de la proportion correspondante.';
	@override String get aboutUSCTminingItme3 => '3) USCT Mining est une fonction de réalisation d\'annonces de trafic de la communauté Delta. Elle tire parti de la vaste base d\'utilisateurs de la communauté Delta pour offrir de multiples avantages aux annonceurs, aux développeurs de Delta et aux absents. Il est conçu pour fournir un certain revenu effectif aux travailleurs absents au début, lorsque l\'écosystème Delta n\'est pas encore formé et prospère ; en même temps, il fournit également un certain soutien financier aux développeurs pour s\'assurer qu\'ils peuvent continuer à fournir des services de développement pendant une longue période, et finalement être en mesure de réaliser tous les plans dans le livre blanc ; et il fournit également un canal promotionnel efficace pour les annonceurs de produits.';
	@override String get aboutUSCTminingItme4 => '4) Les règles de distribution sont conçues de manière à ce que 40 % des recettes totales soient utilisées comme commissions de service technique pour les développeurs et les 60 % restants comme récompenses pour l\'absentéisme au sein de la communauté. La récompense pour absentéisme fait partie du modèle de distribution multiniveau similaire au DTC, la récompense pour absentéisme sera divisée en trois parties selon le ratio 6:3:1, chaque fois qu\'une récompense pour absentéisme du minage USCT 6 parties allouées à l\'absentéisme des annonces actuelles, 3 parties allouées au référent supérieur, 1 partie allouée au référent de second niveau. De même, vous pouvez obtenir la même récompense pour les amis que vous recommandez par le biais de USCT mining. L\'avantage de cette distribution à plusieurs niveaux est que n\'importe qui peut gagner une quantité relativement importante d\'USDT en développant une équipe de downline.';
	@override String get aboutUSCTminingItme5 => '5) La période de règlement est de 7 jours, c\'est-à-dire que tous les 7 jours, la validité est vérifiée auprès de la plateforme publicitaire, et la validité confirmée du produit et le montant réel seront enregistrés dans le solde. Le montant minimum pour chaque retrait est de 10 USD.';
	@override String linesXtoY({required Object x, required Object y}) => 'Lignes ${x} à ${y}.';
	@override String get wallet => 'sacs à main';
	@override String get multiChainWallet => 'portefeuille multichaîne';
	@override String get deposit => 'dépôt (par exemple sur un compte bancaire)';
	@override String get transfer => 'transfert (argent sur un compte bancaire)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} dans l\'adresse du portefeuille';
	@override String get transactions => 'Registres des transactions';
	@override String get network => 'réticulation';
	@override String get walletAddress => 'Adresse du portefeuille';
	@override String get currentAddress => 'adresse actuelle';
	@override String get depositAddress => 'Adresse de recharge';
	@override String get receivingMoneyAddress => 'adresse du bénéficiaire';
	@override String get applyTempDepositAddress => 'Adresse pour la demande d\'un complément temporaire';
	@override String get tempDepositAddressTip => '1) Il s\'agit d\'une adresse de dépôt partagé. Veuillez ne pas déposer le montant après l\'expiration du bail ou après la déliaison. Dans ce cas, le montant sera perdu.';
	@override String get tempDepositAddressTip2 => '2) Avant d\'effectuer un dépôt, veuillez vous assurer que le [Nom de la chaîne] et le [Nom de la pièce] correspondent exactement ; dans le cas des jetons de contrat, vous devez également vous assurer que la [Norme du contrat] et l\'[Adresse du contrat] correspondent exactement.';
	@override String get tempDepositAddressTip3 => '3) N\'essayez pas de déposer des fonds qui ne correspondent à aucun des paramètres mentionnés dans les conseils ci-dessus, sinon le montant sera perdu.';
	@override String get tempDepositAddressTip4 => '4) Si vous devez déposer d\'autres types d\'actifs, veuillez passer à la page de la devise correspondante et aux options de paramètres pour demander une nouvelle adresse.';
	@override String get applyExtensionOfValidity => 'Demande de prolongation de la période de validité';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Cette adresse expirera après '),
		diff,
		const TextSpan(text: ' et sera '),
		tap('manually extend'),
		const TextSpan(text: ' valide pendant 12 heures avant l\'expiration.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Le renouvellement ne peut se faire que 12 heures à l\'avance';
	@override String get theReceivingAddressValidForLongtime => 'Cette adresse est valable pour une longue période.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Cette adresse de collecte est valable pour une longue durée et est automatiquement créditée en temps réel.';
	@override String get confirmDeposited => 'Confirmation des dépôts';
	@override String get unbindThisDepositAddress => 'Dégrouper cette adresse de recharge';
	@override String get confirmDepositedTip => 'Si les fonds ont été transférés, cliquez sur le bouton ci-dessus pour déclencher la facturation à votre portefeuille après 10 minutes.';
	@override String get unbindDepositAddressTip => 'Afin de réduire les frais de fonctionnement du contrat intelligent, veuillez délier l\'adresse de recharge si vous ne déposez plus de fonds pendant la période de validité.';
	@override String get transferToAddress => 'aller à l\'adresse';
	@override String get longPressToPaste => 'Appui long pour coller';
	@override String get all => 'complet';
	@override String balanceX({required Object x}) => 'Solde ${x}';
	@override String get transferOut => 'tourner';
	@override String depositXcoins({required Object x}) => 'Crédité ${x}';
	@override String get sender => 'expéditeur';
	@override String get recipient => 'destinataire';
	@override String get memo => 'note';
	@override String get kind => 'mode (de vie)';
	@override String get transferAmountExceedsAvailableBalance => 'Transferts excédant le solde disponible';
	@override String get pleaseEnterValidAmount => 'Veuillez saisir un montant valide';
	@override String get networkFee => 'Frais de gestion du réseau';
	@override String get fee => 'frais de dossier';
	@override String validLengthXcharacters({required Object x}) => 'Longueur valide de l\'adresse ${x} caractères';
	@override String get historys => 'historique';
	@override String get dtcCreditdetail => 'Détails des points Delta';
	@override String get usdCreditdetail => 'Détails des points USD';
	@override String get dappSquare => 'dApp Square';
	@override String get amountRaised => 'Montant collecté';
	@override String get disbursedAmount => 'Montant émis';
	@override String get participationTimes => 'Nombre de participants';
	@override String get completionRate => 'taux d\'achèvement';
	@override String get exchangeRate => 'taux de change';
	@override String get icpCrowdfunding => 'ICP Crowdfunding';
	@override String get crowdfunding => 'crowdfunding';
	@override String get trendsCurve => 'courbe de tendance';
	@override String get fullScreenView => 'Vue plein écran';
	@override String get walletBalance => 'Solde du portefeuille :';
	@override String get manageWallet => 'Gérer le portefeuille';
	@override String get fundraiseAmount => 'collecte de fonds';
	@override String get exchangeRewardAmount => 'Utilisation du montant de la récompense';
	@override String get fundraise => 'collecte de fonds';
	@override String rangeIntegersX({required Object x}) => 'Plage : entier ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Participez avec succès à la collecte de fonds et soyez récompensé ${amount}DTCT';
	@override String get amountSummary => 'Résumé des montants';
	@override String get changePreferred => 'Changement de préférence';
	@override String get changePreferredAddress => 'Changement d\'adresse préférée';
	@override String get preferredAddressTip => 'Les fonds seront automatiquement transférés à l\'adresse préférée lorsque les fonds sont collectés à l\'aide d\'un numéro de téléphone mobile ou d\'un DID enregistré.';
	@override String get newAddress => 'Nouvelle adresse';
	@override String get newAddressTip => 'Pour éviter les abus, lorsqu\'il y a plus d\'une adresse de portefeuille, des frais de transaction sont prélevés pour chaque nouvelle adresse créée.';
	@override String get createNew => 'nouvellement construit';
	@override String get chainNetworkName => 'nom du réseau en chaîne';
	@override String get from => 'venir de (un lieu)';
	@override String get to => 'jusqu\'à (un moment)';
	@override String get noAvailableDepositAmountDetected => 'Aucun montant de dépôt disponible n\'a été détecté !';
	@override String get crossChainReceiveMoneyMonitoring => 'La collection de chaînes croisées est à l\'écoute ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Reçu ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Confirmation en cours ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Notes (à lire absolument pour les débutants)';
	@override String get whyUseSharedAddresses => 'Pourquoi utiliser une adresse partagée ?';
	@override String get useSharedrAdvantage => 'Les avantages de l\'utilisation d\'adresses partagées lors du dépôt entre chaînes sont les suivants :';
	@override String get useSharedrAdvantage1 => '1. réduire le gaspillage des frais de transfert et abaisser le coût d\'utilisation pour les utilisateurs. En raison de l\'utilisation d\'adresses exclusives, il y aura une trop grande dispersion des fonds, généralement pour faciliter le transfert ultérieur d\'autres utilisateurs dans le retrait des fonds, lorsque l\'utilisateur recharge le deuxième transfert de fonds doit être regroupé dans une ou un petit nombre d\'adresses de gestion.';
	@override String get useSharedrAdvantage2 => '2) Dans le schéma partagé, le programme ne doit maintenir qu\'une réserve d\'adresses relativement petite qui peut être rapidement associée aux transferts sortants et à l\'écoute de la collecte légère, ce qui réduit la surcharge de ressources informatiques. Le contraire serait vrai si des adresses exclusives étaient utilisées.';
	@override String get tokenType => 'Type de jeton';
	@override String get contract => 'entrepreneur';
	@override String get contractStandard => 'norme contractuelle';
	@override String get contractAddress => 'adresse du contrat';
	@override String get native => 'protozoaires';
	@override String get confirmUnbindingPleaseEnterYes => 'Pour confirmer la déliaison, veuillez saisir "oui".';
	@override String get listAllWorkingTempReceivingAddresses => 'Liste de toutes les adresses de recharge de la chaîne de travail';
	@override String get setNote => 'Mise en place de notes';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Ne peut être plus long que ${x} octets';
	@override String get transferFee => 'frais de transfert';
	@override String get crossChainFee => 'redevance inter-chaîne';
	@override String get crossChainTransferOutError => 'erreur de transfert de liaison transversale';
	@override String get chainName => 'nom de la chaîne';
	@override String get message => 'messages';
	@override String get dontShowAgain => 'n\'est plus affiché';
	@override String get queuing => 'file d\'attente';
	@override String get optional => 'facultatif';
	@override String get publiclyVisible => 'publiquement visible';
	@override String get rates => 'tarif';
	@override String get minimum => 'minimum';
	@override String get maximum => 'limite supérieure';
	@override String get minimumBlockConfirmations => 'Nombre minimum de confirmations de blocs';
	@override String get dsmsVerifyTerminal => 'Terminal de validation DSMS';
	@override String get overall => 'parapluie';
	@override String get my => 'mon';
	@override String get checkValidatorQualifications => 'Vérification des qualifications des privilèges de l\'authentificateur';
	@override String get getVerifierPermissions => 'Obtenir les privilèges de l\'authentificateur';
	@override String get qualification => 'les dotations naturelles';
	@override String get upperLimit => 'limite';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Nombre maximal de terminaux d\'accès autorisés';
	@override String get numberOfExistingAccessTerminals => 'Nombre de terminaux d\'accès en place';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Avant de demander des privilèges d\'authentification, vous devez préparer un téléphone portable Android inactif et un numéro d\'accès dédié, puis télécharger et installer l\'application DSMS Access Terminal.';
	@override String get downloadLink => 'lien de téléchargement';
	@override String get alreadyReadyFollowingTheAboveTips => 'Il est prêt selon les conseils ci-dessus';
	@override String get globalUniversal => 'pour une utilisation globale';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Actuellement, il n\'y a pas assez d\'authentificateurs locaux pour participer au service d\'accès à l\'authentification DSMS, veuillez sélectionner le service d\'accès "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'comme numéro d\'accès seulement';
	@override String pleaseCheckTip({required Object tip}) => 'Veuillez cocher la case "${tip}".';
	@override String get inputLengthTooShort => 'Longueur d\'entrée trop courte';
	@override String get shortName => 'acronymes';
	@override String pleaseEnterXname({required Object name}) => 'Veuillez saisir ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'La demande est en cours d\'envoi, veuillez patienter...';
	@override String get applyForDSMSVerifierPermission => 'Demander les privilèges d\'un validateur DSMS';
	@override String get confirmInformation => 'Confirmation des informations';
	@override String get lastHeartbeat => 'dernier battement de cœur';
	@override String get expirationTime => 'délai prévu';
	@override String get country => 'nations';
	@override String get accessTerminals => 'terminal d\'accès';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Nombre total de terminaux d\'accès au DSMS';
	@override String get textContent => 'Contenu du texte';
	@override String get scanQRcodeToLogin => 'Glisser pour se connecter';
	@override String get confirmLogin => 'Confirmer la connexion';
	@override String get authorizeSubApplicationToLogin => 'Autoriser cette sous-candidature à se connecter';
	@override String get authorizationSuccessful => 'L\'autorisation a été délivrée avec succès !';
	@override String get launchSMSprogram => 'Lancement du programme SMS';
	@override String get notApplied => 'Pas de demande';
	@override String get validityPeriod => 'période de validité';
	@override String get renewal => 'demande de renouvellement';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Scanner le code pour autoriser la connexion au terminal';
	@override String get rewards => 'incitations';
	@override String get roles => 'caractère';
	@override String get developerCenter => 'Centre des développeurs';
	@override String get appName => 'Nom de l\'application';
	@override String get pleaseSelect => 'veuillez sélectionner';
	@override String get category => 'catégorie';
	@override String get keywords => 'mot-clé';
	@override String get pleaseEnterAkeyword => 'Veuillez saisir un mot-clé';
	@override String get createApplication => 'Création d\'applications';
	@override String get appType => 'Type d\'application';
	@override String get numberOfCategoriesMustBetween1and3 => 'Le nombre de catégories doit être compris entre 1 et 3';
	@override String get appLogoSpecifications => 'Format de l\'image : png, taille : jusqu\'à 100KB, résolution (pixel) : 256*256';
	@override String get localAlbum => 'Albums de photos locales';
	@override String get networkPath => 'chemin du réseau';
	@override String get imageURLkAddress => 'URL de l\'image';
	@override String get urlAddressFormatIsIncorrect => 'Adresse URL mal formatée';
	@override String get imageFormatOnlySupportsPng => 'Les images ne sont prises en charge qu\'au format "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'La longueur doit être comprise entre ${a}-${b} caractères.';
	@override String get introduction => 'bref';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'La taille de l\'image ne peut être supérieure à ${a}, actuellement ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'La résolution de l\'image doit être : ${p1}(pixels), actuellement ${p2}';
	@override String get becomeDeveloper => 'Devenir développeur';
	@override String get developerInformation => 'Informations sur le développeur';
	@override String get teamName => 'Nom de l\'équipe';
	@override String get website => 'nœud';
	@override String get other => 'autres que';
	@override String get githubVerification => 'Vérification Github';
	@override String get exampleUrl => 'Exemple d\'Url';
	@override String githubVerificationTip({required Object did}) => 'Veuillez utiliser votre compte GitHub pour créer un fichier \'delta.did\' dans votre dépôt avec le contenu \'${did}\' ; ensuite, collez l\'adresse Url githubusercontent de ce fichier dans cette boîte de saisie pour l\'authentification.';
	@override String get createApp => 'Création d\'applications';
	@override String get appManagement => 'gestion des applications';
	@override String get statusLogs => 'Journal de bord';
	@override String get bad => 'pas bon';
	@override String get normal => 'habituel';
	@override String get good => 'un excellent';
	@override String get onceCreatedItCannotBeChanged => 'Une fois créé, il ne peut être modifié !';
	@override String get manageApplicationEntity => 'Gestion des entités d\'application';
	@override String get currentVersion => 'version actuelle';
	@override String get submitVersion => 'Version soumise';
	@override String get packageOnlySupportZipCompressedFile => 'Le paquet ne prend en charge que les fichiers compressés au format zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Le fichier \'${name}\' n\'a pas été trouvé dans le paquet zip.';
	@override String get fileList => 'Liste des documents :';
	@override String get programPackage => 'Paquet de programmation :';
	@override String get automaticallyExtractFromVersionFile => 'Extrait automatiquement des fichiers \'.version\'.';
	@override String get dappVersionFormatTip => 'Le format du numéro de version doit être décimal avec une précision de 2 chiffres, sans dépasser un maximum de 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Le numéro de version doit être supérieur à la version actuelle \'${v}\'';
	@override String get versionNotes => 'Impression :';
	@override String get updateRelease => 'nouvelle version';
	@override String get loadAndRun => 'Charger et exécuter';
	@override String get notYetSubmittedProgramPackage => 'Le paquet de programmes n\'a pas encore été soumis !';
	@override String get authorizeMinidAppLogin => 'Autoriser la connexion à mini-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Pour confirmer l\'autorisation, veuillez indiquer "oui".';
	@override String get authorizeNow => 'Autorisation immédiate';
	@override String get operation => 'Fonctionnement.';
	@override String get statusChange => 'Changement de statut';
	@override String get changeTo => 'Modifier en :';
	@override String get notes => 'Remarques.';
	@override String get changesNotEffective => 'La modification n\'est pas valide !';
	@override String get released => 'Publié';
	@override String get inPublicBeta => 'bêta ouverte';
	@override String get developers => 'Développé par.';
	@override String get reviewList => 'Liste de commentaires.';
	@override String get postReview => 'Laisser un commentaire';
	@override String get scoreNow => 'Noter maintenant';
	@override String get description => 'Description.';
	@override String get noData => '(^-^)\n Pas de données disponibles';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'La version a été mise à jour de ${a} à ${b}.';
	@override String get loadNewVersion => 'Charger la nouvelle version';
	@override String get name => 'Nom.';
	@override String get canisterId => 'Tank Id.';
	@override String get updateTime => 'temps de mise à jour';
	@override String get contractCanistersState => 'Statut du réservoir contractuel';
	@override String get userDistribution => 'répartition des utilisateurs';
	@override String get settings => 'Paramètres';
	@override String get security => 'Sécurité';
	@override String get invite => 'invitations';
	@override String get more => 'Plus...';
	@override String get receiveAddress => 'Adresse de réception :';
	@override String get hangingAmount => 'suspendu';
	@override String get hangingAmountTips => 'Les montants en attente sont des enregistrements temporaires des récompenses générées par l\'exploitation minière de votre équipe subordonnée. Une fois que vous avez effectué une session d\'exploitation minière, ces montants seront collectés dans les montants en attente.';
	@override String get pendingAmount => 'en attente';
	@override String get pendingAmountTips => 'Les montants en attente sont ceux qui n\'ont pas encore été confirmés par rapport aux annonceurs, et ceux qui sont valablement appariés seront transférés dans l\'enregistrement USCT valide, et toute partie non valide sera exclue.';
	@override String get received => 'reçu';
	@override String get processing => 'en cours';
	@override String get replied => 'répondant';
	@override String get rejected => 'rejet';
	@override String get unknown => 'inexploré';
	@override String get insufficientBalance => 'Bilan insuffisant !';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Le solde de ${x} est insuffisant pour couvrir les frais du réseau de liaison croisée';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Une transaction n\'a pas encore été effectuée et ne peut pas être transférée pour le moment.';
	@override String get thisfunctionNotSupportExternalCalls => 'Cette fonction ne peut pas être appelée de l\'extérieur.';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Il n\'y a pas de correspondance pour une adresse qui peut être utilisée pour payer des frais inter-chaînes, veuillez passer à un autre réseau de chaînes pour essayer.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'La correspondance actuelle avec le montant maximum pouvant être transféré en une seule transaction est de ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Les remarques ne doivent pas dépasser 64 octets';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Solde insuffisant, montant : ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Vous ne pouvez pas lier plus de 3 adresses.\nSi vous devez lier une nouvelle adresse de paiement.\nVeuillez d\'abord délier une autre adresse';
	@override String parametersA_exception({required Object x}) => 'Paramètres : ${x}, exception';
	@override String get parameterException => 'Exception de paramètre !';
	@override String get transferAmountMustBeLargerThan0 => 'Le montant du transfert doit être supérieur à 0';
	@override String get authorizationHasExpired => 'L\'autorisation a expiré';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'L\'application n\'a pas été autorisée par le propriétaire';
	@override String get authenticationTokenIsInvalid => 'Jeton d\'authentification invalide';
	@override String get verifyInfoIsInvalidOrExpired => 'Informations de validation invalides ou expirées';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Vérifier que le nombre de terminaux d\'accès a dépassé la limite d\'un sur dix mille.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'La participation à l\'exploitation minière doit être supérieure à 3 jours';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Le nombre de membres du cercle de sécurité ne peut être inférieur à trois';
	@override String get avatarIsNotSet => 'Avatar non défini';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Le nombre de références directes ne peut être inférieur à 3';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Le délai est insuffisant et vous ne pouvez changer de numéro de téléphone mobile qu\'une fois par an.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Ce numéro de téléphone mobile existe déjà et ne peut être dupliqué';
	@override String get securityCodeIsIncorrect => 'Code de sécurité incorrect';
	@override String get securityCodeMayHaveExpired => 'Le code de sécurité a peut-être expiré';
	@override String get sessionIdIsInvalidOrExpired => 'Identifiant de session invalide ou expiré';
	@override String get sessionHasBeenAuthorized => 'La session a été autorisée à s\'achever !';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Ne peut être renouvelé que dans les ${x} jours précédant l\'expiration de la période de validité';
	@override String get notYetGrantedDeveloperPermissions => 'Pas encore de droits de développeur';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Le champ ${x} ne peut pas être nul';
	@override String get emailFormatError => 'Erreur de format d\'e-mail';
	@override String theXformatIsIncorrect({required Object x}) => 'Erreur de formatage "${x}".';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Le champ "${x}" doit comporter entre ${y} et ${z} caractères.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'La plage de sélection "${x}" doit être comprise entre ${y} et ${z}.';
	@override String get unchanged_sameAsOldContent => 'Inchangé, même contenu que l\'ancien !';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x} : \'${y}\' existe déjà !';
	@override String get mobileNumberHasNotJoinedDelta => 'Ce numéro de portable n\'a pas été ajouté à Delta !';
	@override String get referrerIdCannotBeEmpty => 'L\'ID du référent ne peut pas être vide !';
	@override String get referrerIdDoesNotExist => 'L\'ID du référent n\'existe pas !';
	@override String get didIsIncorrectOrInvalid => 'La DID est incorrecte ou invalide !';
	@override String get accessTokenIsIncorrectOrInvalid => 'Le code d\'accès est incorrect ou invalide !';
	@override String get minimumWithdrawalAmountIs1USD => 'Minimum 1USD pour un retrait unique';
	@override String get miningTimeIsNotYet => 'Il n\'est pas encore temps de miner.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Existe déjà, ne l\'ajoutez pas à nouveau !';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Impossible d\'utiliser le numéro d\'enregistrement comme numéro d\'accès à l\'authentification';
	@override String get canotAddYourSelf => 'Impossible de s\'ajouter';
	@override String get logOut => 'Déconnexion';
	@override String get confirmLogout => 'Confirmer la déconnexion';
	@override String get logOutTipsText => 'Veuillez noter : Selon le livre blanc, chaque vérification de votre compte consommera une certaine quantité de vos pièces DTC qui seront payées au vérificateur en tant qu\'incitation, donc n\'essayez pas de vous connecter et de vous déconnecter inutilement, en cliquant sur le bouton ci-dessous vous vous déconnecterez immédiatement.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Veuillez saisir "oui" pour confirmer la déconnexion.';
	@override String get tip => 'attirer l\'attention sur qqch.';
	@override String get cancel => 'annulations';
	@override String get close => 'coagulation';
	@override String get selected => 'sélectionné';
	@override String get edit => 'compilateur';
	@override String get submit => 'soumettre (un rapport, etc.)';
	@override String get goBack => 'régression (en psychologie)';
	@override String get copiedToClipboard => 'Il a été copié dans le presse-papiers.';
	@override String get nickname => 'terme affectueux';
	@override String get confirm => 'reconnaître';
	@override String get cannotBeEmpty => 'Ne peut être vide';
	@override String get deleteSuccessful => 'Supprimé avec succès !';
	@override String get successfullyModified => 'La modification est réussie !';
	@override String get executionSuccessful => 'La mise en œuvre a été couronnée de succès !';
	@override String get preview => 'avant-premières';
	@override String get followSystem => 'système de suivi';
	@override String get change => 'variation';
	@override String get replace => 'changement (d\'adresse, etc.)';
	@override String get view => 'vérifier';
	@override String get manage => 'managérial';
	@override String get modify => 'modifications';
	@override String get replacedSuccessfully => 'Remplacement réussi !';
	@override String get authentication => 'l\'authentification';
	@override String get reacquire => 'récupérer';
	@override String get tryAgain => 'Réessayez.';
	@override String get querying => 'Des demandes de renseignements sont en cours ...';
	@override String get writingToOnChain_pleaseWait => 'Il est en cours d\'écriture dans la chaîne, veuillez patienter ...';
	@override String get versionCheck => 'détection de la version';
	@override String get alreadyLatestVersion => 'Déjà la dernière version !';
	@override String get foundNewVersion => 'Découvrez la nouvelle version :';
	@override String get upgradeLink => 'Lien de mise à niveau :';
	@override String get deviceDescription => 'Description de l\'équipement.';
	@override String get notification30SecondsBeforeMiningStops => 'Exécutez un rappel de notification 30 secondes avant l\'arrêt du minage !';
	@override String get goMining => 'Allez miner';
	@override String get deltaMiningReminder => 'Rappel de Delta Mining';
	@override String get clickToMine_miningIsAboutToStop => 'Cliquez ici pour miner, le minage s\'arrêtera bientôt !';
	@override String get incorrect_input => 'Saisie incorrecte !';
	@override String get are_you_sure_delete => 'Êtes-vous sûr de vouloir supprimer ?';
	@override String get delete_account => 'Supprimer le compte';
	@override String get how_to_operate_it => 'Voyez comment l\'utiliser ?';
	@override String get deletion_warning_tip => 'Si vous supprimez votre compte, vous perdrez toutes vos pièces Delta et tous les gains des autres membres seront également perdus.';
	@override String get launchWhatsAppProgram => 'Lancer le programme WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Les numéros d\'accès avec cette icône prennent également en charge la vérification des messages WhatsApp. Lors de l\'envoi de messages internationaux, il est recommandé d\'utiliser WhatsApp pour augmenter le taux de réussite et réduire les coûts.';
	@override String get ihaveSentVerificationString => 'J\'ai envoyé une chaîne de vérification';
	@override String get totalOfPeople => 'Total de personnes: ';
	@override String get numberOfPeopleMining => 'Nombre de personnes minières';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Vous pouvez utiliser un navigateur sur un autre appareil pour scanner le code QR et le transmettre au programme SMS';
	@override String get toggle => 'Basculer';
	@override String get DSMSverifier => 'Vérificateur DSMS';
	@override String get activate => 'Activer';
	@override String get activated => 'Activé';
	@override String get generateActivationCommand => 'Générer la commande d\'activation';
	@override String get activationCommand => 'Commande d\'activation';
	@override String get activationSentedTip => 'Une fois le SMS d\'activation envoyé, veuillez vérifier l\'état d\'activation sur le terminal d\'accès.';
	@override String get biometricsNotEnabledTip => 'La biométrie (visage ou empreinte digitale) n\'est pas activée sur votre appareil. Veuillez l\'activer pour continuer.';
	@override String get error => 'Erreur';
	@override String get exceptionOccurredWhenCallingBiometric => 'Une exception s\'est produite lors de l\'appel de la fonction biométrique (visage ou empreinte digitale) !';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: 'Les numéros d\'accès '),
		checkedNum,
		const TextSpan(text: ' sont vérifiés, '),
		shouldNum,
		const TextSpan(text: ' doit être sélectionné.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text} a-t-il été envoyé aux ${n} numéros d\'accès ci-dessus ?';
	@override String get interface => 'Interface :';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Délai d\'attente dépassé ou numéro d\'expéditeur incohérent';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Le numéro de téléphone portable du membre du cercle de sécurité que vous avez renseigné ne correspond pas : ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Connectez-vous dans les 10 minutes suivant votre déconnexion pour éviter la vérification à deux facteurs.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Au moins ${n} numéros de téléphone mobile doivent être renseignés';
	@override String get noAccessNumberInYourRegionYet => 'Il n\'y a pas encore de numéro d\'accès dans votre région';
	@override String get notEnoughAccessNumbersInYourRegion => 'Pas assez de numéros d\'accès dans votre région';
	@override String get tipsForDeployDSMSterminal => 'Le système a automatiquement chargé pour vous des numéros d\'accès d\'autres pays. Afin de vous offrir des services de vérification plus performants et moins coûteux, il est recommandé que vous ou votre référent déployiez le terminal DSMS localement pour percevoir des frais de vérification. ';
	@override String get noOneCanProvideMeTheSecurityCode => 'Personne ne peut me fournir le code de sécurité ?';
	@override String get useSupplementalMode => 'Utiliser le mode supplémentaire';
	@override String get returnToSecurityCodeMode => 'Retour au mode code de sécurité';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Veuillez saisir le numéro de téléphone mobile associé. L\'indicatif du pays peut être omis.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Le numéro de téléphone portable de ${name} est incorrect';
	@override String get matchingVerificationStrategyIs => 'La stratégie de vérification correspondante est: ';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Le solde est supérieur à 3 ICP, pas besoin de verser de carburant pour le moment.';
	@override String get escrowAccount => 'Compte séquestre';
	@override String get fuelRelay => 'Relais de carburant';
	@override String get pourFuel => 'Verser du carburant';
	@override String get fuelState => 'État du carburant';
	@override String get pouringFuelTips => 'Verser du carburant ne vous apporte aucun avantage ni inconvénient, son but est d\'enrichir l\'expérience du système Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Sponsorisez des développeurs en regardant des publicités';
	@override String get status => 'Statut';
	@override String get date => 'Date';
}

// Path: <root>
class _StringsIt implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsIt.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.it,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <it>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsIt _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'inizio fig.';
	@override String get switchLanguage => 'Cambia lingua';
	@override String get languageSwitch => 'Cambio di lingua';
	@override String get slogan => 'Costruire un\'economia decentrata nel Delta';
	@override String get countryRegionCode => 'Codice paese/area';
	@override String get countryRegionSelection => 'Selezione di paesi e regioni';
	@override String get nextStep => 'il passo successivo';
	@override String get yourPhoneNumber => 'Il vostro numero di telefono.';
	@override String get pleaseSelectCountryAndRegion => 'Selezionare il proprio paese/regione';
	@override String get pleaseEnterPhoneNumber => 'Inserire un numero di telefono valido!';
	@override String get referrerDid => 'Referente DID';
	@override String get pleaseEnterTheReferrersDid => 'Inserire l\'id dell\'identità decentralizzata di un referente valido';
	@override String get thisDidIsInvalid => 'Questo DID non è valido.';
	@override String get nicknameFormatTips => 'Il nickname non deve essere vuoto e non deve superare le 16 cifre.';
	@override String get additionalIinformation => 'Informazioni aggiuntive';
	@override String get invitationSubject => 'Un invito alla creazione di consenso nel Delta';
	@override String invitationLetter({required Object did}) => 'Salve, partecipo alla creazione del consenso di Delta!\n Delta è una nuova piattaforma open source per le valute digitali che gira su ICP e che consente di gestire e utilizzare varie valute digitali senza password, chiavi private o mnemoniche. Cliccate su questo link https://delta.kim/auto/download per installare l\'applicazione e ora siete invitati a partecipare alla creazione del consenso e al conio delle valute.\n Referente DID: ${did}';
	@override String get dSMSverification => 'Convalida del DSMS';
	@override String get getAccessNumbers => 'Ottenere alcuni numeri di accesso';
	@override String get getAccessNumberPromptMessage => 'Fare clic sul pulsante "Ottieni" qui sotto per ruotare una serie di numeri di accesso di verifica via SMS nella coda.';
	@override String get optionalAccessNumbers => 'Numero di accesso opzionale';
	@override String get accessNumber => 'numero di accesso';
	@override String get TELCO => 'operatore (di una centrale elettrica, di una rete di trasporto, ecc.)';
	@override String get score => 'punteggio';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('it'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Selezionare '),
			nBuilder(n),
			const TextSpan(text: ' numeri di accesso e fare clic sul pulsante "'),
			span('text'),
			const TextSpan(text: '" per passare alla fase successiva.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Selezionare '),
			nBuilder(n),
			const TextSpan(text: ' numeri di accesso e fare clic sul pulsante "'),
			span('text'),
			const TextSpan(text: '" per passare alla fase successiva.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta è un esperimento di valuta digitale globale open source e decentralizzata e un ecosistema di applicazioni per criptovalute.';
	@override String get deltaGoalsDesc => 'L\'obiettivo è rendere possibile l\'uso di Delta per co-costruire nuove valute digitali che siano universali, eque, sicure, veloci ed ecologiche. E fornire diversi scenari applicativi efficaci per queste valute digitali e per le precedenti criptovalute.';
	@override String get details => 'particolari';
	@override String get get => 'guadagno';
	@override String get select => 'opzione';
	@override String get send => 'invio';
	@override String get complete => 'adempiere';
	@override String get selectedAccessNumberPrompt => 'Quando viene selezionato, viene visualizzato il numero di accesso completo e viene generata una stringa di autenticazione.';
	@override String get location => 'posizionamento';
	@override String get verificationString => 'stringa di convalida';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Utilizzare il numero di telefono '),
		num,
		const TextSpan(text: ' e inviare '),
		label,
		const TextSpan(text: ' a '),
		accessNumber,
		const TextSpan(text: ' per completare la verifica.'),
	]);
	@override String get ihaveSentTheSMS => 'Ho inviato un messaggio di testo';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'La stringa di validazione è valida per 6 minuti, tempo rimanente: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Troppo veloce per aspettare ${x} secondi per continuare!';
	@override String get waitingForVerificationSMS => 'In attesa dell\'SMS di verifica...';
	@override String get partSuccsForVerificationSMS => 'Uno dei terminali di accesso ha superato la verifica SMS!';
	@override String get creatingAccessToken => 'Token di accesso in corso di creazione...';
	@override String get intoDelta => 'All\'interno di Delta';
	@override String get deltaAccountIsLoggedIn => 'Il tuo account Delta è connesso';
	@override String get iHavLoggedOut => 'Sono fuori.';
	@override String get startTwoFactorVerification => 'Avvio della doppia verifica';
	@override String get securityCircleVerification => 'Convalida del cerchio di sicurezza';
	@override String get generateSecurityCode => 'Generare il codice di sicurezza';
	@override String get generateSecurityCodeHintText => 'Il codice di sicurezza generato sarà inviato a un membro della vostra cerchia di sicurezza scelto a caso.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Non avete impostato un circolo di sicurezza, il vostro account è molto insicuro, inserite un qualsiasi segnaposto di 6 cifre e passate alla fase successiva.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Il codice di sicurezza è stato generato, si prega di contattare i seguenti familiari e amici per richiedere di estrarre il codice di sicurezza per superare la verifica. valido per 30 minuti!';
	@override String get itGetSecurityCodeTip => 'Suggerimento: è possibile ottenere il codice di sicurezza facendo doppio clic sul nickname del proprio account nell\'App Delta -> Menu -> Fornisci sicurezza.';
	@override String get securityCircleMemberList => 'Elenco dei membri del circolo di sicurezza:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Seleziona un parente o un amico nell\'elenco dei membri per generare e fornirti un codice di sicurezza per verificare la tua vera identità. Lo scopo è impedire che l\'account venga controllato da altri in caso di smarrimento o furto del numero di cellulare.';
	@override String formatIsXdigits({required Object num}) => 'Formato come ${num} cifre';
	@override String get signInSuccessfully => 'Effettuare il login con successo!';
	@override String get twoFAandLogin => 'Doppia autenticazione e login';
	@override String get verificationSuccessful => 'Verificare il successo!';
	@override String get validationFailed => 'Convalida fallita!';
	@override String get dappInfo => 'Informazioni sulla DApp';
	@override String get securityCircle => 'anello di sicurezza';
	@override String get securityCode => 'codice di sicurezza';
	@override String get provideSecurity => 'fornire sicurezza';
	@override String get addManully => 'Aggiungere manualmente';
	@override String get addFromContacts => 'Aggiungi dalla rubrica';
	@override String get addSecurityCircle => 'Aggiungere il cerchio di sicurezza';
	@override String get inputType => 'Tipo di ingresso';
	@override String get mobileNumber => 'numero di telefono cellulare';
	@override String get did => 'Indirizzo id';
	@override String get pleaseEnterValidDID => 'Inserire un\'identità decentralizzata valida';
	@override String get pleaseEnterValidWalletAddress => 'Inserire un indirizzo di portafoglio valido';
	@override String get appellation => 'forma di indirizzo';
	@override String get appellationHint => 'Come lo chiamate, come "bambino"?';
	@override String get addSecurityCircleTips => 'Non aggiungere alla tua cerchia di sicurezza persone di cui non ti fidi.';
	@override String get referralTeam => 'Squadre consigliate';
	@override String get profile => 'Informazioni sul conto';
	@override String get menu => 'menu';
	@override String get directly => 'diretto';
	@override String get indirectly => 'indiretto';
	@override String get inviteContacts => 'Contatto per l\'invito';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Il vostro invitato è '),
		nickname,
		const TextSpan(text: ' e avete indirizzato direttamente '),
		num1,
		const TextSpan(text: ' persone, di cui '),
		num2,
		const TextSpan(text: ' sono attualmente online.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Avete indirizzato indirettamente '),
		num1,
		const TextSpan(text: ' persone, di cui '),
		num2,
		const TextSpan(text: ' sono attualmente online.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Invitate i vostri amici a unirsi a Delta e migliorate insieme il consenso sociale. Per ogni referral diretto, il tasso di estrazione di una persona aumenta il tasso base di '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Invita gli amici a unirsi a Delta e migliorare insieme il consenso sociale Ogni raccomandazione indiretta di una persona aumenterà la tariffa di mining di '),
		rate2,
		const TextSpan(text: ' della tariffa base.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Siete sicuri di voler cancellare "${name}"?';
	@override String get safetyCircleRoleQ => 'Qual è lo scopo dell\'anello di sicurezza?';
	@override String get safetyCircleRoleA => 'Proteggete il vostro account fornendo un\'autenticazione secondaria in situazioni delicate.';
	@override String get howSecurityCirclesWorkQ => 'Come funzionano gli anelli di sicurezza?';
	@override String get howSecurityCirclesWorkA => 'Nel caso in cui sia necessaria una verifica Circle of Safety, il programma Delta Smart Contracts selezionerà in modo casuale un membro dell\'elenco di amici Circle of Safety per aiutarvi a fornire un codice di sicurezza per completare la verifica dell\'identità al posto vostro. Quando si chiede il codice di sicurezza al membro, questo può confermare se l\'utente è proprio lui o meno. Allo stesso tempo, il programma chiederà: "Rifiuta di fornire il codice di sicurezza se non sei tu", in modo da proteggere la sicurezza del tuo account. Pertanto, è necessario assicurarsi sempre che i membri della propria cerchia di sicurezza siano persone di cui ci si può fidare.';
	@override String get securityCircleBeUsedQ => 'Quando verrà utilizzato?';
	@override String get securityCircleBeUsedA1 => '1. Quando si perde il controllo dell\'APP Delta, di solito il telefono cellulare viene smarrito o rubato.';
	@override String get securityCircleBeUsedA2 => '2. Nel caso di alcune operazioni sensibili, il programma Delta Smart Contract deve confermare di essere l\'utente.';
	@override String get provideSafetyTip1 => 'Quando il vostro amico vi chiede il codice di sicurezza, assicuratevi di confermare che sia il suo.';
	@override String get provideSafetyTip2 => 'State garantendo la sicurezza agli amici di cui sopra, che vi hanno definito come la persona più fidata nella loro cerchia di sicurezza e hanno bisogno di una conferma di sicurezza da parte vostra nel caso in cui dovessero effettuare operazioni sensibili sul loro conto.';
	@override String get provideSafetyTip3 => 'Fare doppio clic sull\'avatar dell\'altra persona per estrarre il codice di sicurezza quando necessario.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'L\'interlocutore non dispone attualmente di un codice di sicurezza che deve essere estratto!';
	@override String get existSecurityCodeTip => 'Assicuratevi che l\'amico o il familiare che vi chiede il codice di sicurezza sia lo stesso dell\'amico o del familiare. Per proteggere l\'amico o il familiare, dovreste rifiutarvi di fornire il codice di sicurezza se l\'amico o il familiare non è lo stesso dell\'amico o del familiare.';
	@override String get avatarSettings => 'Impostazioni dell\'avatar';
	@override String get NFTAvatarPropertyRightsText => 'Disclaimer: l\'uso del NFT in questione come avatar è solo a titolo di preferenza personale e non ha nulla a che vedere con il possesso dei diritti di proprietà intellettuale di tale NFT.';
	@override String get projectWebsite => 'Sito web del progetto:';
	@override String get whitepaper => 'carta bianca:';
	@override String get indexID => 'Indice Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Indice tra ${start} e ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Inserite l\'indice del vostro NFT preferito e il programma lo caricherà automaticamente come avatar.';
	@override String get miningRate => 'tasso di estrazione mineraria';
	@override String get miningDetails => 'Dettagli sull\'estrazione';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Tasso di estrazione totale: '),
		rate,
		const TextSpan(text: ' δ/giorno'),
	]);
	@override String get EndOfMiningSession => 'Il ciclo minerario è finito:';
	@override String get tapToMineDeltaCoin => 'Clicca per estrarre le monete Delta ↑';
	@override String get clickToStartMining => 'Clicca per iniziare a estrarre!';
	@override String get miningHasStoppedPromptDesc => 'Il mining si è fermato, ogni 24 ore è un ciclo di mining, fare clic sull\'icona del fulmine per avviare un nuovo ciclo di mining.Il mining di Delta è un meccanismo di allocazione che non consuma energia aritmetica aggiuntiva e traffico di rete dal dispositivo.';
	@override String get aboutBaseRate => 'Per quanto riguarda il tasso di base?';
	@override String get baseRateDescription => 'Come concordato nel whitepaper, la regola della diminuzione della tariffa di base per il Delta mining sarà divisa in due fasi.\nFase 1: il tasso sarà di 32δ/giorno quando il numero di partecipanti (registrazioni) è pari o inferiore a 3.000. Partendo da questa base, la tariffa di base viene dimezzata ogni volta che il numero di persone aumenta di 10 volte.\nFase 2: quando il numero di partecipanti raggiunge i 30 milioni o più, il tasso base viene dimezzato ogni volta che il numero di partecipanti aumenta di un fattore 3. Fino a quando lo scavo finale non interrompe la produzione.';
	@override String get baseRate => 'tariffa di base (come in ISDN)';
	@override String get directReferralRewards => 'Bonus di rinvio diretto';
	@override String get directReferralRewardDesc => 'Per ogni referral diretto, il vostro tasso di estrazione sarà aumentato di un ulteriore 1/3 del tasso base quando sono in modalità di estrazione.\n\n Inoltre, lo stato di mining dei vostri referral conterà anche per il vostro bonus di referral diretto.';
	@override String get indirectReferralRewards => 'Bonus di rinvio indiretto';
	@override String get indirectReferralRewardDesc => 'Quando un referente indiretto sta estraendo, il vostro tasso di estrazione viene incrementato di un ulteriore 1/10 del tasso base.\n\n Per il vostro team di referral diretti, ogni persona che vi referenzia rappresenta un referral indiretto per voi.';
	@override String get mine => 'estrarre (minerale o altra risorsa da una miniera)';
	@override String get thisMiningInformation => 'Informazioni attuali sulle miniere';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Partecipazione all\'estrazione mineraria: '),
		x,
		const TextSpan(text: ' volte'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Guadagno totale questa volta: '),
		x,
		const TextSpan(text: ' monete Delta'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Guadagno base: '),
		x,
		const TextSpan(text: ' monete'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contributo diretto della squadra: '),
		x,
		const TextSpan(text: ' monete'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contributo indiretto della squadra: '),
		x,
		const TextSpan(text: ' monete'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Periodo di tempo tra gli scavi: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Ore effettive di estrazione: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} ore';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Per la sicurezza dei beni, i membri della cerchia di sicurezza devono mantenere sempre 3-5 persone di fiducia.';
	@override String get index => 'indicizzazione';
	@override String get amount => 'somma di denaro';
	@override String get balance => 'saldi';
	@override String get timeStamp => 'timestamp';
	@override String get summary => 'astratti';
	@override String get miningHasStopped => 'L\'attività estrattiva è stata interrotta.';
	@override String get miningHasStoppedDesc => 'La tua attività mineraria è attualmente ferma, inizia a guadagnare ora.';
	@override String get startMining => 'Avviare l\'estrazione mineraria';
	@override String get changeMobileNumber => 'Cambio del numero di cellulare';
	@override String get currentMobileNumber => 'Numero di cellulare attuale';
	@override String get newMobileNumber => 'Nuovo numero di cellulare';
	@override String get securityCodeFormatIs6digits => 'Il formato del codice di sicurezza è di 6 cifre!';
	@override String get startVrification => 'Avvio della verifica';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Questo numero di cellulare esiste già, DID associato: ${dId}';
	@override String get noDataYet => 'Nessun dato disponibile';
	@override String get previousMobileNumber => 'Numero di cellulare precedente';
	@override String get changeLog => 'Registrazione delle modifiche';
	@override String get referralLinkToShare => 'Link consigliati da condividere';
	@override String get referrer => 'referente';
	@override String get isoCountryCode => 'Codice paese ISO';
	@override String get avatarLogo => 'logo della testata';
	@override String get creationTime => 'Tempo di creazione';
	@override String get lastUpdate => 'Ultimo aggiornamento';
	@override String get numberOfSecurityCircleMembers => 'Numero di membri dei circoli di sicurezza';
	@override String get theLatestMining => 'Ultimo scavo';
	@override String get effectiveMiningDays => 'Numero di giorni di estrazione effettiva';
	@override String get modifyNickname => 'Cambiare soprannome';
	@override String get didNotChange => 'Nessun cambiamento!';
	@override String get kycVerification => 'Verifica KYC';
	@override String get faceID => 'Face ID';
	@override String get touchID => 'ID impronta digitale';
	@override String get biometricsAuthorizationTest => 'Test di autenticazione biometrica';
	@override String get currentState => 'stato attuale';
	@override String get biometricsAuthenticationLocalizedReason => 'Utilizza lo sblocco del tuo dispositivo per verificare la tua identità.';
	@override String get graph => 'archivio di grafici (ad esempio mappe, documenti o figure botaniche)';
	@override String get referralRelationshipGraph => 'Mappatura delle relazioni di referral';
	@override String get nativeContacts => 'Contatti locali';
	@override String get registrationAndMiningTrends => 'Tendenze di registrazione e di estrazione';
	@override String get inMining => 'estrazione mineraria';
	@override String get registrationVolume => 'volume di registrazione';
	@override String get unmined => 'non sfruttato';
	@override String get mined => 'estratto';
	@override String get communityMining => 'Estrazione mineraria comunitaria';
	@override String get consensusPromotionFund => 'Fondo per la promozione del consenso';
	@override String get ecologicalAwardFund => 'Fondo di incentivazione ecologica';
	@override String get icpFuelCrowdfunding => 'Crowdfunding per il carburante ICP';
	@override String get coreDeveloperRewards => 'Premi per gli sviluppatori Core';
	@override String get totalAllocation => 'Distribuzione complessiva';
	@override String get miningRatio => 'Rapporto di estrazione';
	@override Map<String, String> get billion => {
		'30': '30 miliardi di euro',
		'60': '60 miliardi di euro',
		'180': '180 miliardi di euro.',
		'300': '300 miliardi di euro',
	};
	@override String get watchAdsToSupportDevelopers => 'Guardare gli annunci per sostenere gli sviluppatori';
	@override String get loadingAdcomponents => 'Caricamento dei componenti pubblicitari...';
	@override String get timeIsNotUp => 'Il tempo non è scaduto!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Caricamento fallito, forse rete bloccata!';
	@override String get pendingUSCTrecords => 'In attesa dei documenti dell\'USCT';
	@override String get pendingUSCTrecordsDesc => 'I record USCT in attesa saranno confermati dalla piattaforma pubblicitaria entro 15-30 giorni e i record validi saranno trasferiti nell\'elenco dei record USCT e l\'importo USCT appropriato sarà aggiunto al saldo del conto.';
	@override String get validity => 'validità';
	@override String get advertiser => 'inserzionisti';
	@override String get earned => 'guadagnato';
	@override String get withdraw => 'ritirare i fondi';
	@override String get validUSCTrecords => 'Registri effettivi dell\'USCT';
	@override String get USCTmining => 'Miniere USCT';
	@override String get aboutUSCTmining => 'Sulle miniere dell\'USCT?';
	@override String get aboutUSCTminingItme1 => '1. USDT è una stablecoin in dollari statunitensi diffusa in tutto il mondo che può essere facilmente scambiata con le valute sovrane nazionali sui principali exchange di criptovalute in tutto il mondo.';
	@override String get aboutUSCTminingItme2 => '2. USCT è una misura temporanea dei proventi del mining USCT, nota come credito USD, che alla fine sarà convertita in USDT in base all\'importo effettivo del regolamento e alle regole di distribuzione della piattaforma pubblicitaria e alla proporzione corrispondente.';
	@override String get aboutUSCTminingItme3 => '3. USCT Mining è una funzione di realizzazione di annunci di traffico della comunità Delta. Sfrutta l\'ampia base di utenti della comunità Delta per fornire molteplici vantaggi agli inserzionisti, agli sviluppatori di Delta e agli assenteisti. È stato progettato per fornire una certa quantità di reddito effettivo ai lavoratori assenti nella fase iniziale, quando l\'ecosistema Delta non si è ancora formato e prosperato; allo stesso tempo, fornisce anche un certo sostegno finanziario agli sviluppatori per garantire che possano continuare a fornire servizi di sviluppo per un lungo periodo di tempo e, infine, essere in grado di realizzare tutti i piani del whitepaper; e fornisce anche un efficace canale promozionale per gli inserzionisti del prodotto.';
	@override String get aboutUSCTminingItme4 => '4. Le regole di distribuzione sono state concepite in modo tale che il 40% del ricavato totale sia utilizzato come commissione per i servizi tecnici degli sviluppatori e il restante 60% sia utilizzato come ricompensa per l\'assenteismo della comunità. La parte della ricompensa per le assenze del modello di distribuzione multilivello simile a DTC, la ricompensa per le assenze sarà divisa in tre parti secondo il rapporto 6:3:1, ogni volta che una delle ricompense per le assenze dell\'estrazione USCT 6 parti assegnate all\'assenteismo degli annunci attuali, 3 parti assegnate al referente superiore, 1 parte assegnata al referente di secondo livello. Allo stesso modo, è possibile ottenere la stessa ricompensa per i referenti degli amici segnalati tramite USCT mining. Il vantaggio di questa distribuzione multilivello è che chiunque può guadagnare una quantità relativamente elevata di USDT sviluppando un team di downline.';
	@override String get aboutUSCTminingItme5 => '5. Il periodo di regolamento è di 7 giorni, vale a dire che ogni 7 giorni la validità viene verificata con la piattaforma pubblicitaria e la validità confermata dei proventi e l\'importo effettivo saranno registrati nel saldo. L\'importo minimo per ogni prelievo è di 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Righe da ${x} a ${y}.';
	@override String get wallet => 'borse';
	@override String get multiChainWallet => 'portafoglio multi-catena';
	@override String get deposit => 'deposito (ad esempio su un conto bancario)';
	@override String get transfer => 'trasferimento (denaro a un conto bancario)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} nell\'indirizzo del portafoglio';
	@override String get transactions => 'Registri delle transazioni';
	@override String get network => 'reticolazione';
	@override String get walletAddress => 'Indirizzo del portafoglio';
	@override String get currentAddress => 'indirizzo attuale';
	@override String get depositAddress => 'Indirizzo di ricarica';
	@override String get receivingMoneyAddress => 'indirizzo del beneficiario';
	@override String get applyTempDepositAddress => 'Indirizzo per la richiesta di ricarica temporanea';
	@override String get tempDepositAddressTip => '1. Questo è un indirizzo di deposito condiviso. Si prega di non depositare l\'importo dopo la scadenza del contratto di locazione o dopo essere stati svincolati. In tal caso, l\'importo andrà perso.';
	@override String get tempDepositAddressTip2 => '2. Prima di effettuare un deposito, assicuratevi che [Nome della catena] e [Nome della moneta] corrispondano esattamente; nel caso dei token contrattuali, dovete anche assicurarvi che [Standard del contratto] e [Indirizzo del contratto] corrispondano esattamente.';
	@override String get tempDepositAddressTip3 => '3. Non tentate di depositare fondi che non corrispondono a nessuno dei parametri indicati nei suggerimenti precedenti, altrimenti l\'importo andrà perso.';
	@override String get tempDepositAddressTip4 => '4. Se avete bisogno di depositare altri tipi di beni, passate alla pagina della valuta corrispondente e alle opzioni dei parametri per richiedere un nuovo indirizzo.';
	@override String get applyExtensionOfValidity => 'Richiesta di proroga del periodo di validità';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Questo indirizzo scadrà dopo '),
		diff,
		const TextSpan(text: ' e sarà '),
		tap('estendi manualmente'),
		const TextSpan(text: ' valido per 12 ore prima della scadenza.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Può essere rinnovato solo con 12 ore di anticipo';
	@override String get theReceivingAddressValidForLongtime => 'Questo indirizzo è valido per molto tempo.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Questo indirizzo di raccolta è valido a lungo e viene accreditato automaticamente in tempo reale.';
	@override String get confirmDeposited => 'Conferma dei depositi';
	@override String get unbindThisDepositAddress => 'Disaggregare questo indirizzo di ricarica';
	@override String get confirmDepositedTip => 'Se i fondi sono stati trasferiti, cliccate sul pulsante qui sopra per attivare l\'addebito sul vostro portafoglio dopo 10 minuti.';
	@override String get unbindDepositAddressTip => 'Al fine di ridurre i costi di gestione del contratto smart, si prega di disincagliare l\'indirizzo di ricarica se non si intende depositare altri fondi durante il periodo di validità.';
	@override String get transferToAddress => 'vai all\'indirizzo';
	@override String get longPressToPaste => 'Premere a lungo per incollare';
	@override String get all => 'completo';
	@override String balanceX({required Object x}) => 'Saldo ${x}';
	@override String get transferOut => 'spegnersi';
	@override String depositXcoins({required Object x}) => 'Accreditato ${x}';
	@override String get sender => 'mittente';
	@override String get recipient => 'destinatario';
	@override String get memo => 'nota';
	@override String get kind => 'modo (di vita)';
	@override String get transferAmountExceedsAvailableBalance => 'Trasferimenti in eccesso rispetto al saldo disponibile';
	@override String get pleaseEnterValidAmount => 'Inserire un importo valido';
	@override String get networkFee => 'Commissione di gestione della rete';
	@override String get fee => 'spese di gestione';
	@override String validLengthXcharacters({required Object x}) => 'Lunghezza dell\'indirizzo valida ${x} caratteri';
	@override String get historys => 'record storico';
	@override String get dtcCreditdetail => 'Dettagli sui punti Delta';
	@override String get usdCreditdetail => 'Punti USD Dettagli';
	@override String get dappSquare => 'dApp Plaza';
	@override String get amountRaised => 'Importo raccolto';
	@override String get disbursedAmount => 'Importo emesso';
	@override String get participationTimes => 'Numero di partecipanti';
	@override String get completionRate => 'tasso di completamento';
	@override String get exchangeRate => 'tasso di cambio';
	@override String get icpCrowdfunding => 'ICP Crowdfunding';
	@override String get crowdfunding => 'crowdfunding';
	@override String get trendsCurve => 'curva di tendenza';
	@override String get fullScreenView => 'visualizzazione a schermo intero';
	@override String get walletBalance => 'Saldo del portafoglio:';
	@override String get manageWallet => 'Gestire il portafoglio';
	@override String get fundraiseAmount => 'raccolta fondi';
	@override String get exchangeRewardAmount => 'Riscattare l\'importo della ricompensa';
	@override String get fundraise => 'raccolta fondi';
	@override String rangeIntegersX({required Object x}) => 'Intervallo: intero ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Partecipate con successo alla raccolta fondi e sarete ricompensati con ${amount}DTCT';
	@override String get amountSummary => 'Riepilogo degli importi';
	@override String get changePreferred => 'Cambio di preferenza';
	@override String get changePreferredAddress => 'Modifica dell\'indirizzo preferito';
	@override String get preferredAddressTip => 'I fondi saranno trasferiti automaticamente all\'indirizzo preferito quando i fondi vengono raccolti utilizzando un numero di cellulare o un DID registrato.';
	@override String get newAddress => 'Nuovo indirizzo';
	@override String get newAddressTip => 'Per evitare abusi, quando esiste più di un indirizzo di portafoglio, viene applicata una commissione di transazione per ogni nuovo indirizzo creato.';
	@override String get createNew => 'di nuova costruzione';
	@override String get chainNetworkName => 'nome della rete a catena';
	@override String get from => 'provenire da (un luogo)';
	@override String get to => 'fino a quando (un tempo)';
	@override String get noAvailableDepositAmountDetected => 'Non è stato rilevato alcun importo di deposito disponibile!';
	@override String get crossChainReceiveMoneyMonitoring => 'La collezione di catene incrociate è in ascolto ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Ricevuto ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Conferma in corso ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Note (da leggere assolutamente per i neofiti)';
	@override String get whyUseSharedAddresses => 'Perché utilizzare un indirizzo condiviso?';
	@override String get useSharedrAdvantage => 'I vantaggi dell\'uso di indirizzi condivisi quando si deposita attraverso le catene sono i seguenti:';
	@override String get useSharedrAdvantage1 => '1. Ridurre lo spreco di commissioni di trasferimento e abbassare il costo di utilizzo per gli utenti. A causa dell\'utilizzo di un indirizzo esclusivo, si verifica un\'eccessiva dispersione di fondi; in genere, per facilitare il successivo trasferimento di altri utenti nel prelievo di fondi, quando l\'utente ricarica il secondo trasferimento di fondi deve essere riunito in uno o in un piccolo numero di indirizzi di gestione.';
	@override String get useSharedrAdvantage2 => '2. Nello schema condiviso, il programma deve mantenere solo un pool relativamente piccolo di indirizzi che possono essere abbinati rapidamente ai trasferimenti in uscita e all\'ascolto della raccolta leggera, riducendo così l\'overhead delle risorse computazionali. Al contrario, se si utilizzassero indirizzi esclusivi, sarebbe vero il contrario.';
	@override String get tokenType => 'Tipo di gettone';
	@override String get contract => 'contrattuale';
	@override String get contractStandard => 'standard contrattuale';
	@override String get contractAddress => 'indirizzo del contratto';
	@override String get native => 'protozoi';
	@override String get confirmUnbindingPleaseEnterYes => 'Per confermare il disimpegno, inserire "sì".';
	@override String get listAllWorkingTempReceivingAddresses => 'Elenco di tutti gli indirizzi di ricarica funzionanti a catena incrociata';
	@override String get setNote => 'Impostazione delle note';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Non può essere più lungo di ${x} byte';
	@override String get transferFee => 'tassa di trasferimento';
	@override String get crossChainFee => 'tariffa trasversale alla catena';
	@override String get crossChainTransferOutError => 'errore di trasferimento del cross-link';
	@override String get chainName => 'nome della catena';
	@override String get message => 'messaggi';
	@override String get dontShowAgain => 'non più visualizzato';
	@override String get queuing => 'coda';
	@override String get optional => 'opzionale';
	@override String get publiclyVisible => 'visibile pubblicamente';
	@override String get rates => 'tariffa';
	@override String get minimum => 'minimo';
	@override String get maximum => 'limite superiore';
	@override String get minimumBlockConfirmations => 'Numero minimo di conferme di blocco';
	@override String get dsmsVerifyTerminal => 'Terminale di convalida DSMS';
	@override String get overall => 'ombrello';
	@override String get my => 'mio';
	@override String get checkValidatorQualifications => 'Verifica delle qualifiche di privilegio dell\'autenticatore';
	@override String get getVerifierPermissions => 'Ottenere i privilegi dell\'autenticatore';
	@override String get qualification => 'dotazioni naturali';
	@override String get upperLimit => 'limite';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Numero massimo di terminali di accesso consentiti';
	@override String get numberOfExistingAccessTerminals => 'Numero di terminali di accesso presenti';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Prima di richiedere i privilegi di autenticatore, è necessario preparare un telefono cellulare Android inattivo e un numero di accesso dedicato, nonché scaricare e installare l\'applicazione DSMS Access Terminal.';
	@override String get downloadLink => 'link per il download';
	@override String get alreadyReadyFollowingTheAboveTips => 'E\' pronto secondo i suggerimenti di cui sopra';
	@override String get globalUniversal => 'per uso globale';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Attualmente non ci sono abbastanza autenticatori locali per partecipare al servizio di accesso all\'autenticazione DSMS; selezionare il servizio di accesso "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'come numero di solo accesso';
	@override String pleaseCheckTip({required Object tip}) => 'Spuntare la casella "${tip}".';
	@override String get inputLengthTooShort => 'Lunghezza dell\'ingresso troppo breve';
	@override String get shortName => 'acronimi';
	@override String pleaseEnterXname({required Object name}) => 'Inserire ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'La domanda è in corso di inoltro, si prega di attendere...';
	@override String get applyForDSMSVerifierPermission => 'Richiedere i privilegi di validatore DSMS';
	@override String get confirmInformation => 'Conferma delle informazioni';
	@override String get lastHeartbeat => 'battito cardiaco finale';
	@override String get expirationTime => 'tempo dovuto';
	@override String get country => 'nazioni';
	@override String get accessTerminals => 'terminale di accesso';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Numero totale di terminali del numero di accesso DSMS';
	@override String get textContent => 'Contenuto del testo';
	@override String get scanQRcodeToLogin => 'Passare il dito per accedere';
	@override String get confirmLogin => 'Confermare l\'accesso';
	@override String get authorizeSubApplicationToLogin => 'Autorizzare l\'accesso a questa sotto-applicazione';
	@override String get authorizationSuccessful => 'L\'autorizzazione è andata a buon fine!';
	@override String get launchSMSprogram => 'Lancio del programma SMS';
	@override String get notApplied => 'Nessuna applicazione';
	@override String get validityPeriod => 'periodo di validità';
	@override String get renewal => 'domanda di rinnovo';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Scansione del codice per autorizzare l\'accesso al terminale';
	@override String get rewards => 'incentivi';
	@override String get roles => 'carattere';
	@override String get developerCenter => 'Centro sviluppatori';
	@override String get appName => 'Nome dell\'applicazione';
	@override String get pleaseSelect => 'selezionare';
	@override String get category => 'categoria';
	@override String get keywords => 'sinonimo';
	@override String get pleaseEnterAkeyword => 'Inserire una parola chiave';
	@override String get createApplication => 'Creazione di applicazioni';
	@override String get appType => 'Tipo di applicazione';
	@override String get numberOfCategoriesMustBetween1and3 => 'Il numero di categorie deve essere compreso tra 1 e 3.';
	@override String get appLogoSpecifications => 'Formato immagine: png, dimensione: entro 100KB, risoluzione (pixel): 256*256';
	@override String get localAlbum => 'Album fotografici locali';
	@override String get networkPath => 'percorso di rete';
	@override String get imageURLkAddress => 'URL immagine';
	@override String get urlAddressFormatIsIncorrect => 'Indirizzo URL formattato in modo errato';
	@override String get imageFormatOnlySupportsPng => 'Le immagini sono supportate solo in formato "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'La lunghezza deve essere compresa tra ${a}-${b} caratteri.';
	@override String get introduction => 'breve';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'La dimensione dell\'immagine non può essere superiore a ${a}, attualmente ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'La risoluzione dell\'immagine deve essere: ${p1}(pixel), attualmente ${p2}';
	@override String get becomeDeveloper => 'Diventare uno sviluppatore';
	@override String get developerInformation => 'Informazioni sullo sviluppatore';
	@override String get teamName => 'Nome della squadra';
	@override String get website => 'nodo';
	@override String get other => 'diversi da';
	@override String get githubVerification => 'Verifica Github';
	@override String get exampleUrl => 'Esempio di URL';
	@override String githubVerificationTip({required Object did}) => 'Utilizzate il vostro account GitHub per creare un file "delta.did" nel vostro repository con il contenuto di "${did}"; quindi, incollate l\'indirizzo URL di githubusercontent di tale file in questa casella di input per l\'autenticazione.';
	@override String get createApp => 'Creazione di applicazioni';
	@override String get appManagement => 'gestione delle applicazioni';
	@override String get statusLogs => 'Registro di stato';
	@override String get bad => 'non va bene';
	@override String get normal => 'abituale';
	@override String get good => 'un eccellente';
	@override String get onceCreatedItCannotBeChanged => 'Una volta creato, non può essere modificato!';
	@override String get manageApplicationEntity => 'Gestione delle entità dell\'applicazione';
	@override String get currentVersion => 'versione attuale';
	@override String get submitVersion => 'Versione presentata';
	@override String get packageOnlySupportZipCompressedFile => 'Il pacchetto supporta solo file compressi in formato zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Il file \'${name}\' non è stato trovato nel pacchetto zip.';
	@override String get fileList => 'Elenco dei documenti:';
	@override String get programPackage => 'Pacchetto di programmazione:';
	@override String get automaticallyExtractFromVersionFile => 'Estratto automaticamente dai file \'.version\'.';
	@override String get dappVersionFormatTip => 'Il formato del numero di versione deve essere decimale con una precisione di 2 cifre, non superiore a un massimo di 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Il numero di versione deve essere maggiore della versione corrente \'${v}\'.';
	@override String get versionNotes => 'Impronta:';
	@override String get updateRelease => 'nuova versione';
	@override String get loadAndRun => 'Caricare ed eseguire';
	@override String get notYetSubmittedProgramPackage => 'Il pacchetto di programmi non è ancora stato presentato!';
	@override String get authorizeMinidAppLogin => 'Autorizzare l\'accesso alla mini-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Per confermare l\'autorizzazione, inserire "sì".';
	@override String get authorizeNow => 'Autorizzazione immediata';
	@override String get operation => 'Operazione.';
	@override String get statusChange => 'Cambiamento di stato';
	@override String get changeTo => 'Modificare in:';
	@override String get notes => 'Osservazioni.';
	@override String get changesNotEffective => 'La modifica non è valida!';
	@override String get released => 'Pubblicato';
	@override String get inPublicBeta => 'open beta';
	@override String get developers => 'Sviluppato da.';
	@override String get reviewList => 'Elenco dei commenti.';
	@override String get postReview => 'Lascia un commento';
	@override String get scoreNow => 'Vota ora';
	@override String get description => 'Descrizione.';
	@override String get noData => '(^-^)\n Nessun dato disponibile';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'La versione è stata aggiornata da ${a} a ${b}.';
	@override String get loadNewVersion => 'Carica la nuova versione';
	@override String get name => 'Nome.';
	@override String get canisterId => 'Id serbatoio.';
	@override String get updateTime => 'tempo di aggiornamento';
	@override String get contractCanistersState => 'Stato del serbatoio del contratto';
	@override String get userDistribution => 'distribuzione degli utenti';
	@override String get settings => 'Impostazione';
	@override String get security => 'Sicurezza';
	@override String get invite => 'inviti';
	@override String get more => 'Altro...';
	@override String get receiveAddress => 'Indirizzo di ricezione:';
	@override String get hangingAmount => 'appeso';
	@override String get hangingAmountTips => 'Gli Importi in sospeso sono registrazioni temporanee delle ricompense generate dall\'estrazione mineraria da parte della vostra squadra subordinata; una volta effettuata una sessione di estrazione, questi importi saranno raccolti negli Importi in sospeso.';
	@override String get pendingAmount => 'in attesa';
	@override String get pendingAmountTips => 'Gli importi in sospeso sono quelli che non sono ancora stati confermati rispetto agli inserzionisti; quelli che sono validamente abbinati saranno trasferiti al record USCT valido e qualsiasi parte non valida sarà esclusa.';
	@override String get received => 'ricevuto';
	@override String get processing => 'in corso';
	@override String get replied => 'rispondente';
	@override String get rejected => 'rifiuto';
	@override String get unknown => 'inesplorato';
	@override String get insufficientBalance => 'Equilibrio insufficiente!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Il saldo di ${x} è insufficiente a coprire le spese per la rete di cross-link';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Una transazione non è ancora stata completata e non può essere trasferita in questo momento.';
	@override String get thisfunctionNotSupportExternalCalls => 'Questa funzione non è supportata per essere chiamata esternamente';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Non c\'è corrispondenza per un indirizzo che può essere utilizzato per pagare le tariffe della catena, si prega di passare a un\'altra rete di catena per provare.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'L\'attuale corrispondenza con l\'importo massimo che può essere trasferito in una singola transazione è ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Le osservazioni non devono superare i 64 byte';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Il saldo è insufficiente e l\'importo è: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Non è possibile associare più di 3 indirizzi.\nSe è necessario associare un nuovo indirizzo di pagamento.\nSi prega di disassociare prima un altro indirizzo';
	@override String parametersA_exception({required Object x}) => 'Parametri: ${x}, eccezione';
	@override String get parameterException => 'Eccezione di parametro!';
	@override String get transferAmountMustBeLargerThan0 => 'L\'importo del trasferimento deve essere maggiore di 0';
	@override String get authorizationHasExpired => 'L\'autorizzazione è scaduta';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'L\'applicazione non è stata autorizzata dal proprietario';
	@override String get authenticationTokenIsInvalid => 'Token di autenticazione non valido';
	@override String get verifyInfoIsInvalidOrExpired => 'Informazioni di convalida non valide o scadute';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Verificare che il numero di terminali di accesso abbia superato il limite di uno su diecimila.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'La partecipazione all\'attività mineraria deve essere superiore a 3 giorni.';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Il numero di membri della cerchia di sicurezza non può essere inferiore a tre.';
	@override String get avatarIsNotSet => 'Avatar non impostato';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Il numero di rinvii diretti non può essere inferiore a 3.';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Il limite di tempo è insufficiente e si può cambiare il numero di cellulare solo una volta all\'anno.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Questo numero di cellulare esiste già e non può essere duplicato';
	@override String get securityCodeIsIncorrect => 'Codice di sicurezza errato';
	@override String get securityCodeMayHaveExpired => 'Il codice di sicurezza potrebbe essere scaduto';
	@override String get sessionIdIsInvalidOrExpired => 'Id di sessione non valido o scaduto';
	@override String get sessionHasBeenAuthorized => 'La sessione è stata autorizzata per il completamento!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Può essere rinnovato solo entro ${x} giorni prima della scadenza del contratto.';
	@override String get notYetGrantedDeveloperPermissions => 'Non ci sono ancora diritti per gli sviluppatori';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Il campo ${x} non può essere nullo';
	@override String get emailFormatError => 'Errore di formato dell\'e-mail';
	@override String theXformatIsIncorrect({required Object x}) => 'Errore di formattazione \'${x}';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Il campo "${x}" deve avere una lunghezza compresa tra ${y} e ${z} caratteri.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'L\'intervallo di selezione \'${x}\' deve essere compreso tra ${y} e ${z}.';
	@override String get unchanged_sameAsOldContent => 'Invariato, stesso contenuto del precedente!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' esiste già!';
	@override String get mobileNumberHasNotJoinedDelta => 'Questo numero di cellulare non è stato aggiunto a Delta!';
	@override String get referrerIdCannotBeEmpty => 'L\'ID referente non può essere vuoto!';
	@override String get referrerIdDoesNotExist => 'L\'ID del referente non esiste!';
	@override String get didIsIncorrectOrInvalid => 'La DID non è corretta o non è valida!';
	@override String get accessTokenIsIncorrectOrInvalid => 'L\'accessToken non è corretto o non è valido!';
	@override String get minimumWithdrawalAmountIs1USD => 'Minimo 1USD per un singolo prelievo';
	@override String get miningTimeIsNotYet => 'Non è ancora il momento di estrarre.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Esiste già, non aggiungerlo di nuovo!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Non è possibile utilizzare il numero di registrazione come numero di accesso per l\'autenticazione.';
	@override String get canotAddYourSelf => 'Non puoi aggiungerti';
	@override String get logOut => 'Disconnettersi';
	@override String get confirmLogout => 'Confermare il logout';
	@override String get logOutTipsText => 'Nota bene: come indicato nel whitepaper, ogni verifica del vostro conto consumerà una certa quantità di monete DTC da pagare al verificatore come incentivo, quindi non cercate di accedere e uscire inutilmente, cliccando sul pulsante qui sotto uscirete immediatamente.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Inserire "sì" per confermare la disconnessione.';
	@override String get tip => 'attirare l\'attenzione su qcs.';
	@override String get cancel => 'cancellazioni';
	@override String get close => 'coagulo';
	@override String get selected => 'selezionato';
	@override String get edit => 'compilatore';
	@override String get submit => 'presentare (un rapporto, ecc.)';
	@override String get goBack => 'regressione (in psicologia)';
	@override String get copiedToClipboard => 'È stato copiato negli appunti.';
	@override String get nickname => 'termine affettuoso';
	@override String get confirm => 'riconoscere';
	@override String get cannotBeEmpty => 'Non può essere vuoto';
	@override String get deleteSuccessful => 'Eliminato con successo!';
	@override String get successfullyModified => 'La modifica ha avuto successo!';
	@override String get executionSuccessful => 'L\'implementazione è stata un successo!';
	@override String get preview => 'anteprime';
	@override String get followSystem => 'sistema di follow-up';
	@override String get change => 'variazione';
	@override String get replace => 'sostituzioni';
	@override String get view => 'controllare';
	@override String get manage => 'manageriale';
	@override String get modify => 'modifiche';
	@override String get replacedSuccessfully => 'Sostituzione riuscita!';
	@override String get authentication => 'autenticazione';
	@override String get reacquire => 'recuperare';
	@override String get tryAgain => 'Riprova.';
	@override String get querying => 'Sono in corso indagini ...';
	@override String get writingToOnChain_pleaseWait => 'La catena è in fase di scrittura, attendere...';
	@override String get versionCheck => 'rilevamento della versione';
	@override String get alreadyLatestVersion => 'Già l\'ultima versione!';
	@override String get foundNewVersion => 'Scoprite la nuova versione:';
	@override String get upgradeLink => 'Link per l\'aggiornamento:';
	@override String get deviceDescription => 'Descrizione delle attrezzature.';
	@override String get notification30SecondsBeforeMiningStops => 'Esegui un promemoria di notifica 30 secondi prima dell\'interruzione dell\'estrazione!';
	@override String get goMining => 'Vai all\'estrazione';
	@override String get deltaMiningReminder => 'Promemoria Delta Mining';
	@override String get clickToMine_miningIsAboutToStop => 'Clicca qui per estrarre, l\'estrazione si fermerà presto!';
	@override String get incorrect_input => 'Input non corretto!';
	@override String get are_you_sure_delete => 'Sei sicuro di voler eliminare?';
	@override String get delete_account => 'Elimina account';
	@override String get how_to_operate_it => 'Hai visto come usarlo?';
	@override String get deletion_warning_tip => 'Se elimini il tuo account, perderai tutte le tue monete Delta e tutti i guadagni degli altri membri andranno persi.';
	@override String get launchWhatsAppProgram => 'Avvia il programma WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'I numeri di accesso con questa icona supportano anche la verifica dei messaggi WhatsApp. Quando si inviano messaggi internazionali, si consiglia di utilizzare WhatsApp per aumentare il tasso di successo e ridurre i costi.';
	@override String get ihaveSentVerificationString => 'Ho inviato una stringa di verifica';
	@override String get totalOfPeople => 'Totale persone: ';
	@override String get numberOfPeopleMining => 'Numero di persone che estraggono';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Puoi usare un browser su un altro dispositivo per scansionare il codice QR e passarlo al programma SMS';
	@override String get toggle => 'toggle';
	@override String get DSMSverifier => 'DSMS Verificatore';
	@override String get activate => 'Attivare';
	@override String get activated => 'Attivato';
	@override String get generateActivationCommand => 'Genera comando di attivazione';
	@override String get activationCommand => 'Comando di attivazione';
	@override String get activationSentedTip => 'Dopo l\'invio dell\'SMS di attivazione, controllare lo stato di attivazione sul dispositivo terminale di accesso.';
	@override String get biometricsNotEnabledTip => 'La biometria (volto o impronta digitale) non è abilitata sul tuo dispositivo. Abilitala per continuare.';
	@override String get error => 'Errore';
	@override String get exceptionOccurredWhenCallingBiometric => 'Si è verificata un\'eccezione durante la chiamata della funzione biometrica (volto o impronta digitale)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' numeri di accesso sono controllati, '),
		shouldNum,
		const TextSpan(text: ' dovrebbe essere selezionato.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text} è stato inviato ai ${n} numeri di accesso sopra?';
	@override String get interface => 'Interfaccia:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Timeout di attesa o mancata corrispondenza del numero del mittente';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Il numero di cellulare del membro del cerchio di sicurezza che hai compilato non corrisponde: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Accedi entro 10 minuti dopo aver effettuato il logout per evitare la verifica a due fattori.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Devono essere compilati almeno ${n} numeri di telefono cellulare';
	@override String get noAccessNumberInYourRegionYet => 'Non esiste ancora alcun numero di accesso nella tua regione';
	@override String get notEnoughAccessNumbersInYourRegion => 'Non ci sono abbastanza numeri di accesso nella tua regione';
	@override String get tipsForDeployDSMSterminal => 'Il sistema ha caricato automaticamente alcuni numeri di accesso da altri paesi per te. Per fornire servizi di verifica migliori e a basso costo, si consiglia a te o al tuo referente di distribuire il terminale DSMS localmente per guadagnare commissioni di verifica.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Nessuno può fornirmi il codice di sicurezza?';
	@override String get useSupplementalMode => 'Usa la modalità supplementare';
	@override String get returnToSecurityCodeMode => 'Ritorna alla modalità codice di sicurezza';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Inserisci il numero di cellulare associato. Il prefisso internazionale può essere omesso.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Il numero di cellulare di ${name} è errato';
	@override String get matchingVerificationStrategyIs => 'La strategia di verifica corrispondente è:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Il saldo è maggiore di 3 ICP, per ora non c\'è bisogno di versare carburante.';
	@override String get escrowAccount => 'Conto di deposito a garanzia';
	@override String get fuelRelay => 'Relè carburante';
	@override String get pourFuel => 'Versare carburante';
	@override String get fuelState => 'Stato carburante';
	@override String get pouringFuelTips => 'Il versamento del carburante non comporta alcun vantaggio o svantaggio, il suo scopo è arricchire l\'esperienza del sistema Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Sponsorizza gli sviluppatori guardando gli annunci';
	@override String get status => 'Stato';
	@override String get date => 'Data';
}

// Path: <root>
class _StringsJa implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsJa.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.ja,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <ja>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsJa _root = this; // ignore: unused_field

	// Translations
	@override String get home => '図頭';
	@override String get switchLanguage => '言語切り替え';
	@override String get languageSwitch => '言語の切り替え';
	@override String get slogan => 'デルタにおける分散型経済の構築';
	@override String get countryRegionCode => '国/地域コード';
	@override String get countryRegionSelection => '国・地域の選択';
	@override String get nextStep => '次のステップ';
	@override String get yourPhoneNumber => '電話番号';
	@override String get pleaseSelectCountryAndRegion => '国/地域を選択してください';
	@override String get pleaseEnterPhoneNumber => '有効な電話番号を入力してください！';
	@override String get referrerDid => 'リファラーDID';
	@override String get pleaseEnterTheReferrersDid => '有効な紹介者の分散ID IDを入力してください。';
	@override String get thisDidIsInvalid => 'このDIDは無効である。';
	@override String get nicknameFormatTips => 'ニックネームは空白であってはならず、16桁を超えてはならない。';
	@override String get additionalIinformation => '追加情報';
	@override String get invitationSubject => 'デルタ合意形成への招待';
	@override String invitationLetter({required Object did}) => 'こんにちは、私はデルタ合意形成に参加しています！\n DeltaはICP上で動作する新しいオープンソースのデジタル通貨プラットフォームで、パスワードや秘密鍵、ニーモニックなしで様々なデジタル通貨を管理、使用することができます。このリンク https://delta.kim/auto/download をクリックしてアプリケーションをインストールし、合意形成と通貨鋳造に参加してください。\n リファラーDID: ${did}';
	@override String get dSMSverification => 'DSMSの検証';
	@override String get getAccessNumbers => 'アクセス番号の取得';
	@override String get getAccessNumberPromptMessage => '下の「取得」ボタンをクリックして、SMS認証アクセス番号のセットをキューに回転させます。';
	@override String get optionalAccessNumbers => 'オプションのアクセス番号';
	@override String get accessNumber => 'アクセス番号';
	@override String get TELCO => '事業者';
	@override String get score => 'スコア';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ja'),
		one: () => TextSpan(children: [
			nBuilder(n),
			const TextSpan(text: ' 個のアクセス番号を確認し、"'),
			span('text'),
			const TextSpan(text: '" ボタンをクリックして次のステップに進んでください。'),
		]),
		other: () => TextSpan(children: [
			nBuilder(n),
			const TextSpan(text: ' のアクセス番号を確認し、"'),
			span('text'),
			const TextSpan(text: '" ボタンをクリックして次のステップに進んでください。'),
		]),
	);
	@override String get whatIsDeltaDesc => 'デルタは、オープンソース、分散型、グローバルなデジタル通貨の実験であり、暗号通貨アプリケーションのエコシステムである。';
	@override String get deltaGoalsDesc => 'その目標は、人々がデルタを使って、普遍的で、公正で、安全で、高速で、環境に優しい新しいデジタル通貨を共同構築できるようにすることである。そして、これらのデジタル通貨やこれまでの暗号通貨に対して、様々な効果的なアプリケーション・シナリオを提供することです。';
	@override String get details => 'しょうさい';
	@override String get get => 'ゲイン';
	@override String get select => 'オプション';
	@override String get send => '送信';
	@override String get complete => '果たす';
	@override String get selectedAccessNumberPrompt => '選択すると、完全なアクセス番号が表示され、認証文字列が生成される。';
	@override String get location => 'プレースメント';
	@override String get verificationString => 'バリデーション文字列';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: '電話番号'),
		num,
		const TextSpan(text: 'を使用し、'),
		label,
		const TextSpan(text: 'を'),
		accessNumber,
		const TextSpan(text: 'に送信して認証を完了してください。'),
	]);
	@override String get ihaveSentTheSMS => 'テキストメッセージを送信した';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: '検証文字列は 6 分以内に有効です。残り時間は '),
		time,
		const TextSpan(text: ' です。'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => '速すぎて${x}秒待っても続行できない！';
	@override String get waitingForVerificationSMS => '確認のSMSを待つ...';
	@override String get partSuccsForVerificationSMS => 'アクセス端末のSMS認証に合格しました！';
	@override String get creatingAccessToken => 'アクセストークン作成中';
	@override String get intoDelta => 'インサイド・デルタ';
	@override String get deltaAccountIsLoggedIn => 'Delta アカウントにログインしています';
	@override String get iHavLoggedOut => '私は抜ける。';
	@override String get startTwoFactorVerification => 'ダブル検証の開始';
	@override String get securityCircleVerification => '安全検証の輪';
	@override String get generateSecurityCode => 'セキュリティコードの生成';
	@override String get generateSecurityCodeHintText => '生成されたセキュリティ・コードは、あなたのセキュリティ・サークルの中からランダムに選ばれたメンバーに送信されます。';
	@override String get notSetSecurityCircleEnterPlaceholderTip => '6桁のプレースホルダーを入力して、次のステップに進んでください。';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'セキュリティコードが生成されましたので、以下の家族や友人に連絡して、セキュリティコードを抽出してもらい、認証を通過してください！';
	@override String get itGetSecurityCodeTip => 'ヒント: セキュリティコードは、デルタ航空アプリ -> メニュー -> セキュリティの提供ページでアカウントのニックネームをダブルクリックすることで取得できます。';
	@override String get securityCircleMemberList => 'セキュリティ サークル メンバー リスト:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'メンバー リストから親戚または友人を選択して、本当の身元を確認するためのセキュリティ コードを生成して提供してください。目的は、携帯電話番号が紛失または盗難されたときに、他人によってアカウントが管理されるのを防ぐことです。';
	@override String formatIsXdigits({required Object num}) => '形式は ${num} 桁です';
	@override String get signInSuccessfully => 'ログインに成功しました！';
	@override String get twoFAandLogin => '二重認証とログイン';
	@override String get verificationSuccessful => '成功を確認する！';
	@override String get validationFailed => '検証に失敗した！';
	@override String get dappInfo => 'DApp情報';
	@override String get securityCircle => 'セキュリティリング';
	@override String get securityCode => 'セキュリティコード';
	@override String get provideSecurity => 'セキュリティの提供';
	@override String get addManully => '手動で追加する';
	@override String get addFromContacts => 'アドレス帳から追加';
	@override String get addSecurityCircle => '安全の輪を広げる';
	@override String get inputType => '入力タイプ';
	@override String get mobileNumber => '携帯電話番号';
	@override String get did => '住所';
	@override String get pleaseEnterValidDID => '有効な分散ID IDを入力してください。';
	@override String get pleaseEnterValidWalletAddress => '有効なウォレットアドレスを入力してください。';
	@override String get appellation => 'アドレスの形式';
	@override String get appellationHint => '"赤ちゃん "みたいなもの？';
	@override String get addSecurityCircleTips => '信頼できない人をセキュリティ・サークルに追加しないでください。';
	@override String get referralTeam => '推薦チーム';
	@override String get profile => '口座情報';
	@override String get menu => 'メニュー';
	@override String get directly => 'ダイレクト';
	@override String get indirectly => '間接的';
	@override String get inviteContacts => '招待連絡先';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'あなたの招待者はニックネーム'),
		nickname,
		const TextSpan(text: 'で、あなたは直接'),
		num1,
		const TextSpan(text: '人を紹介し、そのうち'),
		num2,
		const TextSpan(text: '人が現在オンラインです。'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'あなたは'),
		num1,
		const TextSpan(text: '人を間接的に紹介し、そのうち'),
		num2,
		const TextSpan(text: '人が現在オンラインである。'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: '友人をデルタに招待し、一緒に社会的合意を高めてください。 1 人の直接の推奨ごとに、マイニング レートが基本レートの '),
		rate1,
		const TextSpan(text: ' ずつ増加します。 '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: '友人をデルタに招待し、一緒に社会的合意を高めましょう。1 人の間接的な推奨ごとに、マイニング レートが基本レートの '),
		rate2,
		const TextSpan(text: ' ずつ増加します。'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => '本当に"${name}"を削除しますか？';
	@override String get safetyCircleRoleQ => '安全リングの目的は何ですか？';
	@override String get safetyCircleRoleA => '機密性の高い状況で二次認証を提供し、アカウントを保護します。';
	@override String get howSecurityCirclesWorkQ => 'セーフティリングの仕組み';
	@override String get howSecurityCirclesWorkA => 'サークル・オブ・セーフティ認証が必要な場合、デルタスマートコントラクトプログラムは、サークル・オブ・セーフティのバディリストからランダムにメンバーを選択し、あなたに代わって本人確認を完了するためのセーフティコードを提供します。あなたがメンバーに安全コードを求めると、メンバーはあなたが本人かどうかを確認することができます。同時に、あなたのアカウントのセキュリティを保護するため、「本人でない場合はセキュリティコードの提供を拒否してください」というプロンプトが表示されます。そのため、セキュリティ・サークルのメンバーが信頼できる人物であることを常に確認する必要があります。';
	@override String get securityCircleBeUsedQ => 'いつ使うのか？';
	@override String get securityCircleBeUsedA1 => '1.デルタAPPのコントロールを失う場合、通常は携帯電話の紛失や盗難が考えられます。';
	@override String get securityCircleBeUsedA2 => '2.デルタスマートコントラクトプログラムは、機密性の高い操作を行う場合、それがあなた自身であることを確認する必要があります。';
	@override String get provideSafetyTip1 => 'バディがセキュリティコードを要求してきたら、それがバディ自身のものであることを確認してください。';
	@override String get provideSafetyTip2 => 'あなたは、上記の友人たちにセキュリティを提供している。彼らは、あなたをセキュリティ・サークルで最も信頼できる人物として設定し、そのアカウントで機密業務に遭遇した場合に備えて、あなたにセキュリティの確認を行ってもらう必要がある。';
	@override String get provideSafetyTip3 => '必要に応じて、相手のアバターをダブルクリックしてセキュリティコードを抽出します。';
	@override String get doesNotSecurityCodeNeedsRetrieved => '相手は現在、抜き取る必要のあるセキュリティーコードを持っていない！';
	@override String get existSecurityCodeTip => 'なお、セキュリティ・コードをお尋ねになるご友人やご家族が、ご本人であることをご確認ください。 ご友人やご家族を保護するため、ご友人やご家族ご本人からセキュリティ・コードをご提供いただけない場合は、セキュリティ・コードのご提供をお断りください。';
	@override String get avatarSettings => 'アバター設定';
	@override String get NFTAvatarPropertyRightsText => '免責事項：当該NFTをアバターとして使用することは、あくまで個人の嗜好であり、当該NFTの知的財産権を所有することとは関係ありません。';
	@override String get projectWebsite => 'プロジェクトのウェブサイト:';
	@override String get whitepaper => 'ホワイトペーパー:';
	@override String get indexID => 'インデックスID';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'インデックスの範囲は ${start} から ${end} までです';
	@override String get inputToLoadNFTAvatarTip => 'お気に入りのNFTのインデックスIDを入力すると、プログラムが自動的にアバターとして読み込みます。';
	@override String get miningRate => '採掘率';
	@override String get miningDetails => '鉱山の詳細';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: '合計採掘レート： '),
		rate,
		const TextSpan(text: ' δ/日'),
	]);
	@override String get EndOfMiningSession => 'サイクルマイニングは終わった：';
	@override String get tapToMineDeltaCoin => 'クリックしてデルタコインを採掘';
	@override String get clickToStartMining => 'クリックして採掘を開始する！';
	@override String get miningHasStoppedPromptDesc => '採掘は停止しています。24時間ごとに採掘サイクルがあり、稲妻のアイコンをクリックして新しいラウンドの採掘を開始します。デルタの採掘は、追加の演算能力とお使いのデバイスからのネットワークトラフィックを消費しない割り当てメカニズムです。';
	@override String get aboutBaseRate => 'ベースレートは？';
	@override String get baseRateDescription => 'ホワイトペーパーで合意されたように、デルタマイニングの基本レート減少ルールは2段階に分けられる。\nフェーズ1：参加者（登録者）数が3,000人以下の場合、レートは32δ/日となる。これを基本として、人数が10人増えるごとに基本レートを半減させる。\n第2段階：参加者数が3,000万人以上になると、参加者数が3倍になるたびに基本料金が半額になる。最終掘削が生産を停止するまで。';
	@override String get baseRate => 'きほんりょうきん';
	@override String get directReferralRewards => '直接紹介ボーナス';
	@override String get directReferralRewardDesc => '各紹介者が採掘モードにある場合、あなたの採掘レートはさらに基本レートの1/3まで上昇します。\n\n さらに、紹介者の採掘状況も直接紹介ボーナスの対象となります。';
	@override String get indirectReferralRewards => '間接的な紹介報酬';
	@override String get indirectReferralRewardDesc => '間接的な紹介者が採掘している場合、あなたの採掘レートはさらに基本レートの1/10だけアップします。\n\n あなたの直接紹介チームは、彼らが再紹介する各人があなたにとって間接紹介となります。';
	@override String get mine => '掘り出す';
	@override String get thisMiningInformation => '現在の採掘情報';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'マイニング参加回数： '),
		x,
		const TextSpan(text: '回'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '今回の獲得合計： '),
		x,
		const TextSpan(text: ' デルタコイン'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '基本収益： '),
		x,
		const TextSpan(text: 'コイン'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'チームの直接貢献： '),
		x,
		const TextSpan(text: ' コイン'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '間接的なチーム貢献： '),
		x,
		const TextSpan(text: 'コイン'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '掘るまでの期間： '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '有効採掘時間： '),
		x,
	]);
	@override String xhours({required Object x}) => '${x}時間';
	@override String get keep3_5peopleInTheSafetyCircleTip => '資産の安全保障のために、セキュリティ・サークルのメンバーは、常に3～5人の信頼できる人を維持する必要がある。';
	@override String get index => 'インデクシング';
	@override String get amount => '金額';
	@override String get balance => 'バランス';
	@override String get timeStamp => 'タイムスタンプ';
	@override String get summary => '抄録';
	@override String get miningHasStopped => '採掘は止まっている。';
	@override String get miningHasStoppedDesc => 'マイニングは現在停止しています。';
	@override String get startMining => '採掘開始';
	@override String get changeMobileNumber => '携帯電話番号の変更';
	@override String get currentMobileNumber => '現在の携帯電話番号';
	@override String get newMobileNumber => '新しい携帯電話番号';
	@override String get securityCodeFormatIs6digits => 'セキュリティ・コードの形式は6桁！';
	@override String get startVrification => '検証開始';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'この携帯電話番号はすでに存在し、関連するDIDは${dId}です。';
	@override String get noDataYet => 'データなし';
	@override String get previousMobileNumber => '以前の携帯電話番号';
	@override String get changeLog => '変更の記録';
	@override String get referralLinkToShare => '共有するための推奨リンク';
	@override String get referrer => 'リファラー';
	@override String get isoCountryCode => 'ISO国コード';
	@override String get avatarLogo => 'ヘッダーロゴ';
	@override String get creationTime => '作成時間';
	@override String get lastUpdate => '最終更新日';
	@override String get numberOfSecurityCircleMembers => 'セキュリティ・サークルのメンバー数';
	@override String get theLatestMining => '最後の発掘';
	@override String get effectiveMiningDays => '有効採掘日数';
	@override String get modifyNickname => 'ニックネームの変更';
	@override String get didNotChange => '変更はない！';
	@override String get kycVerification => 'KYC検証';
	@override String get faceID => 'フェイスID';
	@override String get touchID => '指紋ID';
	@override String get biometricsAuthorizationTest => 'バイオメトリクス認証テスト';
	@override String get currentState => '現在の状態';
	@override String get biometricsAuthenticationLocalizedReason => 'デバイスのロック解除を使用して本人確認を行います。';
	@override String get graph => '画像アーカイブ';
	@override String get referralRelationshipGraph => '紹介関係マッピング';
	@override String get nativeContacts => '地元の連絡先';
	@override String get registrationAndMiningTrends => '登録とマイニングの動向';
	@override String get inMining => '採掘';
	@override String get registrationVolume => '登録量';
	@override String get unmined => '未開発';
	@override String get mined => '有色';
	@override String get communityMining => 'コミュニティマイニング';
	@override String get consensusPromotionFund => 'コンセンサス推進基金';
	@override String get ecologicalAwardFund => 'エコロジー奨励基金';
	@override String get icpFuelCrowdfunding => 'ICP燃料クラウドファンディング';
	@override String get coreDeveloperRewards => 'コア開発者報酬';
	@override String get totalAllocation => '全体的な分布';
	@override String get miningRatio => '鉱業比率';
	@override Map<String, String> get billion => {
		'30': '300億ドル',
		'60': '600億ドル',
		'180': '1800億ドル',
		'300': '3,000億ドル',
	};
	@override String get watchAdsToSupportDevelopers => '開発者をサポートする広告を見る';
	@override String get loadingAdcomponents => '広告コンポーネントの読み込み...';
	@override String get timeIsNotUp => '時間切れではない！';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => '読み込みに失敗しました。ネットワークがブロックされている可能性があります！';
	@override String get pendingUSCTrecords => '保留中のUSCTの記録';
	@override String get pendingUSCTrecordsDesc => '保留中のUSCTレコードは、15～30日以内に広告プラットフォームに対して確認され、有効なレコードはUSCTレコードリストに転送され、対応するUSCT金額がアカウント残高に追加されます。';
	@override String get validity => '妥当性';
	@override String get advertiser => '広告主';
	@override String get earned => '獲得';
	@override String get withdraw => '現金の引出し';
	@override String get validUSCTrecords => 'USCTの効果的な記録';
	@override String get USCTmining => 'USCTマイニング';
	@override String get aboutUSCTmining => 'USCTの採掘について？';
	@override String get aboutUSCTminingItme1 => '1.USDTは世界的に人気のある米ドルのステーブルコインで、世界中の主要な暗号通貨取引所で各国のソブリン通貨と簡単に交換できます。';
	@override String get aboutUSCTminingItme2 => '2.USCTは、USDクレジットとして知られるUSCTマイニングの収益の一時的な措置であり、広告プラットフォームの実際の決済額と分配ルール、および対応する割合に従って、最終的にUSDTに変換されます。';
	@override String get aboutUSCTminingItme3 => '3. USCTマイニングは、デルタコミュニティのトラフィック広告実現機能です。デルタコミュニティの大規模なユーザーベースを活用し、広告主、デルタ開発者、不在者に複数の利益を提供します。USCTマイニングは、デルタのエコシステムがまだ形成され、繁栄していない初期段階において、不在者に一定の効果的な収入を提供するように設計されています。同時に、開発者が長期にわたって開発サービスを提供し続け、最終的にホワイトペーパーのすべての計画を実現できるように、開発者に一定の経済的支援を提供します。';
	@override String get aboutUSCTminingItme4 => '4.分配ルールは、総売上の40パーセントが開発者の技術サービス手数料として、残りの60パーセントがコミュニティの欠勤報奨金として使用されるように設計されている。DTCと同様のマルチレベル分配モデルの欠勤報奨金の部分は、欠勤報奨金は6：3：1の比率に従って3つの部分に分割され、USCTマイニングの欠勤報奨金の各1つは、現在の広告の欠勤に割り当てられた6部分、優れた紹介者に割り当てられた3部分、2番目のレベルの紹介者に割り当てられた1部分。同様に、USCTマイニングを通じて紹介した友人にも同じ紹介者報酬を得ることができます。このマルチレベル分配の利点は、ダウンライン・チームを育成することにより、誰でも比較的多額のUSDTを獲得できることです。';
	@override String get aboutUSCTminingItme5 => '5.決済期間は7日間です。つまり、7日間ごとに有効性が広告プラットフォームで確認され、確認された有効な収益と実際の金額が残高に記録されます。各出金の最低金額は10USDTです。';
	@override String linesXtoY({required Object x, required Object y}) => '${x} から ${y} 行目';
	@override String get wallet => '財布';
	@override String get multiChainWallet => 'マルチチェーンウォレット';
	@override String get deposit => 'ちょきん';
	@override String get transfer => '振り込む';
	@override String xcoinInWallet({required Object coinCode}) => 'ウォレットアドレスに${coinCode}を入れる。';
	@override String get transactions => '取引記録';
	@override String get network => '網目';
	@override String get walletAddress => '財布の住所';
	@override String get currentAddress => '現住所';
	@override String get depositAddress => 'リチャージ住所';
	@override String get receivingMoneyAddress => '受取人住所';
	@override String get applyTempDepositAddress => '一時増額申請先';
	@override String get tempDepositAddressTip => '1.この住所は共有の保証金住所です。リース期間満了後や、拘束解除後のご入金はご遠慮ください。その場合、金額は失われます。';
	@override String get tempDepositAddressTip2 => '2.入金を行う前に、[チェーン名]と[コイン名]が完全に一致していることを確認してください。コントラクトトークンの場合は、[コントラクトスタンダード]と[コントラクトアドレス]が完全に一致していることも確認する必要があります。';
	@override String get tempDepositAddressTip3 => '3.上記のヒントのパラメータに一致しない資金を入金しようとしないでください。';
	@override String get tempDepositAddressTip4 => '4.他の種類の資産を入金する必要がある場合は、対応する通貨ページとパラメータオプションに切り替えて、新しい住所を申請してください。';
	@override String get applyExtensionOfValidity => '有効期間延長申請';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'このアドレスの有効期限は'),
		diff,
		const TextSpan(text: 'の後であり、'),
		tap('manual extend'),
		const TextSpan(text: 'は有効期限の12時間前まで有効である。'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => '更新は12時間前まで';
	@override String get theReceivingAddressValidForLongtime => 'この住所は長期間有効である。';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'このコレクション・アドレスは長期間有効で、リアルタイムで自動的に入金される。';
	@override String get confirmDeposited => '入金の確認';
	@override String get unbindThisDepositAddress => 'このトップアップアドレスをアンバンドルする';
	@override String get confirmDepositedTip => '資金が送金された場合、上のボタンをクリックすると10分後にウォレットに請求が行われます。';
	@override String get unbindDepositAddressTip => 'スマートコントラクトのランニングオーバーヘッドを削減するため、有効期間中にこれ以上資金を入金しない場合は、トップアップアドレスのバインドを解除してください。';
	@override String get transferToAddress => 'アドレスへ';
	@override String get longPressToPaste => '長押しでペースト';
	@override String get all => 'フル';
	@override String balanceX({required Object x}) => '残高 ${x}';
	@override String get transferOut => 'ひっくりかえす';
	@override String depositXcoins({required Object x}) => 'クレジット ${x}';
	@override String get sender => '送信者';
	@override String get recipient => '受取人';
	@override String get memo => '備考';
	@override String get kind => 'みち';
	@override String get transferAmountExceedsAvailableBalance => '利用可能残高を超える振替';
	@override String get pleaseEnterValidAmount => '有効な金額を入力してください。';
	@override String get networkFee => 'ネットワーク手数料';
	@override String get fee => '手数料';
	@override String validLengthXcharacters({required Object x}) => 'アドレスの有効長 ${x} 文字';
	@override String get historys => '歴史的記録';
	@override String get dtcCreditdetail => 'デルタ・ポイント詳細';
	@override String get usdCreditdetail => 'USDポイント詳細';
	@override String get dappSquare => 'dAppスクエア';
	@override String get amountRaised => '調達額';
	@override String get disbursedAmount => '発行額';
	@override String get participationTimes => '参加者数';
	@override String get completionRate => '完走率';
	@override String get exchangeRate => '為替レート';
	@override String get icpCrowdfunding => 'ICPクラウドファンディング';
	@override String get crowdfunding => 'クラウドファンディング';
	@override String get trendsCurve => 'トレンド曲線';
	@override String get fullScreenView => '全画面表示';
	@override String get walletBalance => '財布の残高';
	@override String get manageWallet => 'ウォレットの管理';
	@override String get fundraiseAmount => '資金調達';
	@override String get exchangeRewardAmount => 'リワードの交換';
	@override String get fundraise => '資金調達';
	@override String rangeIntegersX({required Object x}) => '範囲：整数 ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => '募金に成功し、奨励金を獲得しました${amount}DTCT';
	@override String get amountSummary => '金額の概要';
	@override String get changePreferred => '嗜好の変更';
	@override String get changePreferredAddress => '希望住所の変更';
	@override String get preferredAddressTip => '登録された携帯電話番号またはDIDを使用して資金が回収されると、資金は希望する住所に自動的に送金される。';
	@override String get newAddress => '新しいアドレス';
	@override String get newAddressTip => '不正使用を防ぐため、複数のウォレットアドレスが存在する場合、新しいアドレスが作成されるごとに取引手数料が発生します。';
	@override String get createNew => '新築';
	@override String get chainNetworkName => 'チェーンネットワーク名';
	@override String get from => '出づ';
	@override String get to => 'まで';
	@override String get noAvailableDepositAmountDetected => '利用可能な預金額は検出されなかった！';
	@override String get crossChainReceiveMoneyMonitoring => 'クロス・チェーン・コレクションは、...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '受取 ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '確認中 ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'ノート（初心者必読）';
	@override String get whyUseSharedAddresses => 'なぜ共有アドレスを使うのか？';
	@override String get useSharedrAdvantage => 'チェーン間の預け入れに共有アドレスを使う利点は以下の通り：';
	@override String get useSharedrAdvantage1 => '1.転送手数料の無駄を削減し、ユーザーの使用コストを下げる。排他的なアドレスの使用のため、それはあまりにも多くの資金の分散につながる、一般的に資金の引き出しで他のユーザーの後続の転送を容易にするために、ユーザーが充電するときに資金の2番目の転送は、1つまたはアドレス管理の少数にプールする必要があります。';
	@override String get useSharedrAdvantage2 => '2.共有スキームでは、プログラムは、発信転送と軽い収集リスニングで素早くマッチさせることができるアドレスの比較的小さなプールを維持するだけでよく、計算リソースのオーバーヘッドを減らすことができる。対照的に、排他的アドレスが使用された場合はその逆となる。';
	@override String get tokenType => 'トークン・タイプ';
	@override String get contract => '契約';
	@override String get contractStandard => '契約基準';
	@override String get contractAddress => '契約住所';
	@override String get native => '原始動物';
	@override String get confirmUnbindingPleaseEnterYes => 'バインド解除を確認するには、「はい」を入力してください。';
	@override String get listAllWorkingTempReceivingAddresses => '作業中のクロスチェーン・リチャージ・アドレスをすべてリストアップする';
	@override String get setNote => 'ノートの設定';
	@override String lengthCannotExceedXbytes({required Object x}) => '長さは ${x} バイトを超えることはできません';
	@override String get transferFee => '移籍金';
	@override String get crossChainFee => 'クロスチェーン料金';
	@override String get crossChainTransferOutError => 'クロスリンク転送エラー';
	@override String get chainName => 'チェーン名';
	@override String get message => 'メッセージ';
	@override String get dontShowAgain => '表示されなくなった';
	@override String get queuing => 'キュー';
	@override String get optional => '任意';
	@override String get publiclyVisible => '公開';
	@override String get rates => '料金表';
	@override String get minimum => '最小';
	@override String get maximum => '上限';
	@override String get minimumBlockConfirmations => '最低ブロック確認数';
	@override String get dsmsVerifyTerminal => 'DSMS検証ターミナル';
	@override String get overall => '傘';
	@override String get my => '私の';
	@override String get checkValidatorQualifications => '認証者の権限資格のチェック';
	@override String get getVerifierPermissions => '認証権限取得';
	@override String get qualification => '天賦の才能';
	@override String get upperLimit => '制限';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'アクセス許可端末の最大数';
	@override String get numberOfExistingAccessTerminals => '設置されているアクセス端末の数';
	@override String get applyingForDSMSVerifierPermissionsTips => '認証権限を申請する前に、アイドル状態のAndroid携帯電話と専用のアクセス番号を用意し、DSMS Access Terminalアプリケーションをダウンロードしてインストールする必要があります。';
	@override String get downloadLink => 'ダウンロードリンク';
	@override String get alreadyReadyFollowingTheAboveTips => '上記のヒント通りに準備完了';
	@override String get globalUniversal => 'グローバル用';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: '現在、DSMS 検証アクセス サービスに参加するためのローカル検証者が不足しています。サービスにアクセスするには、「'),
		gu,
		const TextSpan(text: '」を選択してください。'),
	]);
	@override String get asDedicatedNumberForAccess => 'アクセス専用番号として';
	@override String pleaseCheckTip({required Object tip}) => '「${tip}」にチェックを入れてください';
	@override String get inputLengthTooShort => '入力の長さが短すぎる';
	@override String get shortName => '頭字語';
	@override String pleaseEnterXname({required Object name}) => '${name} を入力してください';
	@override String get applicationIsBeingSubmitted_pleaseWait => '申請中です、お待ちください...';
	@override String get applyForDSMSVerifierPermission => 'DSMS Validator 特権を申請する';
	@override String get confirmInformation => '情報の確認';
	@override String get lastHeartbeat => '最後の鼓動';
	@override String get expirationTime => '期限';
	@override String get country => '列国';
	@override String get accessTerminals => 'アクセスターミナル';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'DSMSアクセス番号端末の総数';
	@override String get textContent => 'テキストコンテンツ';
	@override String get scanQRcodeToLogin => 'スワイプでログイン';
	@override String get confirmLogin => 'ログインの確認';
	@override String get authorizeSubApplicationToLogin => 'このサブアプリケーションのログインを許可する';
	@override String get authorizationSuccessful => '認可は成功した！';
	@override String get launchSMSprogram => 'SMSプログラムの開始';
	@override String get notApplied => '応募なし';
	@override String get validityPeriod => '有効期間';
	@override String get renewal => '更新申請';
	@override String get scanCodeToAuthorizeTerminalLogin => 'コードをスキャンして端末のログインを承認する';
	@override String get rewards => 'インセンティブ';
	@override String get roles => '性格';
	@override String get developerCenter => 'デベロッパーセンター';
	@override String get appName => 'アプリケーション名';
	@override String get pleaseSelect => '選択してください';
	@override String get category => 'カテゴリー';
	@override String get keywords => '笑い草';
	@override String get pleaseEnterAkeyword => 'キーワードを入力してください';
	@override String get createApplication => 'アプリケーションの作成';
	@override String get appType => 'アプリケーション・タイプ';
	@override String get numberOfCategoriesMustBetween1and3 => 'カテゴリの数は1から3の間でなければならない。';
	@override String get appLogoSpecifications => '画像形式：png、サイズ：100KB以内、解像度（ピクセル）：256*256';
	@override String get localAlbum => 'ローカル・フォトアルバム';
	@override String get networkPath => 'ネットワークパス';
	@override String get imageURLkAddress => '画像URL';
	@override String get urlAddressFormatIsIncorrect => 'URLアドレスの書式が正しくない';
	@override String get imageFormatOnlySupportsPng => '画像は "png "フォーマットにのみ対応しています。';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => '長さは${a}-${b}文字の間でなければならない。';
	@override String get introduction => '簡単';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => '画像サイズは${a}より大きくできません、現在は${b}です。';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => '画像の解像度は${p1}(ピクセル)、現在は${p2}でなければならない。';
	@override String get becomeDeveloper => '開発者になる';
	@override String get developerInformation => '開発者情報';
	@override String get teamName => 'チーム名';
	@override String get website => 'ノード';
	@override String get other => 'を除く';
	@override String get githubVerification => 'Githubによる検証';
	@override String get exampleUrl => 'URLの例';
	@override String githubVerificationTip({required Object did}) => 'GitHubアカウントを使って、あなたのリポジトリに\'${did}\'という内容の\'delta.did\'ファイルを作成し、そのファイルのgithubusercontent URLアドレスをこの入力ボックスに貼り付けて認証してください。';
	@override String get createApp => 'アプリケーションの作成';
	@override String get appManagement => 'アプリケーション管理';
	@override String get statusLogs => 'ステータスログ';
	@override String get bad => 'ダメ';
	@override String get normal => '通常';
	@override String get good => '優れた';
	@override String get onceCreatedItCannotBeChanged => '一度作成されると変更できない！';
	@override String get manageApplicationEntity => 'アプリケーション・エンティティの管理';
	@override String get currentVersion => '現行バージョン';
	@override String get submitVersion => '投稿バージョン';
	@override String get packageOnlySupportZipCompressedFile => '本パッケージは zip 圧縮ファイルのみをサポートします。';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'ファイル \'${name}\' が zip パッケージに見つかりませんでした。';
	@override String get fileList => '文書のリスト';
	@override String get programPackage => 'プログラミング・パッケージ：';
	@override String get automaticallyExtractFromVersionFile => '.version\'ファイルから自動的に抽出されます。';
	@override String get dappVersionFormatTip => 'バージョン番号の形式は、最大99.99を超えない2桁精度の10進数でなければならない。';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'バージョン番号は現在のバージョン \'${v}\' より大きくなければならない。';
	@override String get versionNotes => 'インプリント：';
	@override String get updateRelease => 'ニューバージョン';
	@override String get loadAndRun => 'ロードして実行する';
	@override String get notYetSubmittedProgramPackage => 'プログラムパッケージはまだ提出されていない！';
	@override String get authorizeMinidAppLogin => 'mini-dAppのログインを許可する';
	@override String get confirmAuthorizationPleaseEnterYes => '承認を確認するには、「はい」を入力してください。';
	@override String get authorizeNow => '即時認可';
	@override String get operation => 'オペレーション';
	@override String get statusChange => 'ステータス変更';
	@override String get changeTo => 'に変更する：';
	@override String get notes => '備考';
	@override String get changesNotEffective => 'この変更は無効である！';
	@override String get released => '出版';
	@override String get inPublicBeta => 'オープンベータ';
	@override String get developers => '開発者';
	@override String get reviewList => 'コメント一覧';
	@override String get postReview => 'コメントを残す';
	@override String get scoreNow => 'レート';
	@override String get description => '説明';
	@override String get noData => '(^-^)\n データなし';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'バージョンが${a}から${b}に更新されました。';
	@override String get loadNewVersion => '新バージョンのロード';
	@override String get name => '名前';
	@override String get canisterId => 'タンクID。';
	@override String get updateTime => '更新時間';
	@override String get contractCanistersState => '契約タンクの状況';
	@override String get userDistribution => 'ユーザー分布';
	@override String get settings => 'セッティング';
	@override String get security => '安全性';
	@override String get invite => '招待状';
	@override String get more => 'もっと...';
	@override String get receiveAddress => 'アドレスを受け取る：';
	@override String get hangingAmount => '未決済額';
	@override String get hangingAmountTips => '未決済金額は、部下チームによる採掘で発生した報酬の一時的な記録で、採掘セッションを行うと、これらの金額は未決済金額に集められます。';
	@override String get pendingAmount => '金額未定';
	@override String get pendingAmountTips => '未決済の金額とは、広告主との照合がまだ済んでいないもので、有効に照合されたものは有効なUSCTレコードに移され、無効な部分は除外される。';
	@override String get received => '受け取った';
	@override String get processing => '進行中';
	@override String get replied => '回答者';
	@override String get rejected => '拒否';
	@override String get unknown => '未開拓';
	@override String get insufficientBalance => 'バランス不足！';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => '${x} の残高はクロスチェーン ネットワーク料金を支払うのに不十分です';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => '取引がまだ完了しておらず、現時点では譲渡できない。';
	@override String get thisfunctionNotSupportExternalCalls => 'この関数は外部から呼び出すことはできません。';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'クロスチェーン料金の支払いに使用できるアドレスに一致するものがありません。';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => '現在、1回の取引で送金できる最高額は${x}である。';
	@override String get memoMustNotBeMoreThan64bytes => '備考は64バイトを超えてはならない';
	@override String insufficientBalance_theAmountIsX({required Object x}) => '残高が不十分です。金額は ${x} です';
	@override String get boundRreceivingAddressesExceed3Tip => '3つ以上のアドレスをバインドすることはできません。\n新しい支払い先をバインドする必要がある場合。\n先に別のアドレスをバインド解除してください。';
	@override String parametersA_exception({required Object x}) => 'パラメータ： ${x}, 例外';
	@override String get parameterException => 'パラメータの例外！';
	@override String get transferAmountMustBeLargerThan0 => '転送量は0より大きくなければならない';
	@override String get authorizationHasExpired => '認可は失効している';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'このアプリは所有者によって承認されていません。';
	@override String get authenticationTokenIsInvalid => '無効な認証トークン';
	@override String get verifyInfoIsInvalidOrExpired => '無効または期限切れのバリデーション情報';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'アクセス端末の台数が1万台に1台の制限を超えたことを確認する。';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => '採掘への参加は3日以上でなければならない';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'セキュリティー・サークルのメンバーは3人以下にはできない。';
	@override String get avatarIsNotSet => 'アバターが設定されていない';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => '直接の紹介者数が3人を下回ることはない。';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => '携帯電話番号の変更は1年に1度しかできない。';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'この携帯電話番号はすでに存在しており、複製することはできません。';
	@override String get securityCodeIsIncorrect => 'セキュリティコードの誤り';
	@override String get securityCodeMayHaveExpired => 'セキュリティコードの有効期限が切れている可能性があります。';
	@override String get sessionIdIsInvalidOrExpired => '無効または期限切れのセッションID';
	@override String get sessionHasBeenAuthorized => 'このセッションは終了が承認された！';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => '期間満了の${x}日前までしか更新できない。';
	@override String get notYetGrantedDeveloperPermissions => '開発者の権利はまだない';
	@override String fieldXcannotBeEmpty({required Object x}) => 'フィールド ${x} を NULL にすることはできません。';
	@override String get emailFormatError => '電子メールのフォーマットエラー';
	@override String theXformatIsIncorrect({required Object x}) => '\'${x}\' 書式エラー';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'フィールド"${x}"の長さは${y}から${z}文字の間でなければならない。';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => '「${x}」の選択範囲は ${y} から ${z} まででなければなりません';
	@override String get unchanged_sameAsOldContent => '変更なし、以前と同じ内容！';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' はすでに存在します。';
	@override String get mobileNumberHasNotJoinedDelta => 'この携帯電話番号はデルタに追加されていません！';
	@override String get referrerIdCannotBeEmpty => 'リファラーIDを空にすることはできない！';
	@override String get referrerIdDoesNotExist => 'リファラーIDが存在しません！';
	@override String get didIsIncorrectOrInvalid => 'DIDが正しくないか無効である！';
	@override String get accessTokenIsIncorrectOrInvalid => 'accessToken が不正または無効です！';
	@override String get minimumWithdrawalAmountIs1USD => '1回の引き出しで最低1USD';
	@override String get miningTimeIsNotYet => 'まだ採掘する時期じゃない。';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'すでに存在するので、再度追加しないでください！';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => '登録番号を認証アクセス番号として使用できない';
	@override String get canotAddYourSelf => '自分自身を追加できません';
	@override String get logOut => 'ログアウト';
	@override String get confirmLogout => 'ログアウトの確認';
	@override String get logOutTipsText => '注意：ホワイトペーパーにあるように、アカウントのログイン検証のたびに、検証者にインセンティブとして支払われるDTCコインが一定量消費されます。';
	@override String get ConfirmLogoutPleaseEnterYes => 'ログアウトを確認するには「はい」を入力してください。';
	@override String get tip => '注意を引く';
	@override String get cancel => 'キャンセル';
	@override String get close => '凝固';
	@override String get selected => '選ばれた';
	@override String get edit => 'コンパイラ';
	@override String get submit => 'だす';
	@override String get goBack => '退行';
	@override String get copiedToClipboard => 'クリップボードにコピーされた。';
	@override String get nickname => '愛称';
	@override String get confirm => '認識する';
	@override String get cannotBeEmpty => '空であってはならない';
	@override String get deleteSuccessful => '正常に削除されました！';
	@override String get successfullyModified => '修正は成功した！';
	@override String get executionSuccessful => '実施は成功した！';
	@override String get preview => 'プレビュー';
	@override String get followSystem => 'フォローアップシステム';
	@override String get change => 'バリエーション';
	@override String get replace => 'リプレイスメント';
	@override String get view => '調べる';
	@override String get manage => '経営上';
	@override String get modify => '修正';
	@override String get replacedSuccessfully => '交換は成功した！';
	@override String get authentication => '認証';
	@override String get reacquire => '取り出す';
	@override String get tryAgain => 'もう一度やってみよう。';
	@override String get querying => '問い合わせ中 ...';
	@override String get writingToOnChain_pleaseWait => 'チェーンに書き込まれています。';
	@override String get versionCheck => 'バージョン検出';
	@override String get alreadyLatestVersion => 'すでに最新版だ！';
	@override String get foundNewVersion => '新バージョンをご覧ください：';
	@override String get upgradeLink => 'アップグレードリンク';
	@override String get deviceDescription => '設備の説明';
	@override String get notification30SecondsBeforeMiningStops => 'マイニングが停止する30秒前に通知リマインダーを実行します!';
	@override String get goMining => 'マイニングに行く';
	@override String get deltaMiningReminder => 'デルタ マイニング リマインダー';
	@override String get clickToMine_miningIsAboutToStop => 'マイニングするにはここをクリックしてください。マイニングは間もなく停止します!';
	@override String get incorrect_input => '入力が間違っています!';
	@override String get are_you_sure_delete => '本当に削除しますか?';
	@override String get delete_account => 'アカウントを削除';
	@override String get how_to_operate_it => '操作方法を確認しますか?';
	@override String get deletion_warning_tip => 'アカウントを削除すると、Delta コインがすべて失われ、他のメンバーからの収益もすべて失われます。';
	@override String get launchWhatsAppProgram => 'WhatsApp プログラムを起動する';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'このアイコンの付いたアクセス番号は、WhatsApp メッセージ検証もサポートしています。国際メッセージを送信する場合は、成功率を高めてコストを削減するために WhatsApp を使用することをお勧めします。';
	@override String get ihaveSentVerificationString => '検証文字列を送信しました';
	@override String get totalOfPeople => '合計人数: ';
	@override String get numberOfPeopleMining => '採掘している人の数';
	@override String get useBrowserScanQRcodeToSMSprogram => '別のデバイスのブラウザを使用して QR コードをスキャンし、それを SMS プログラムに渡すことができます';
	@override String get toggle => 'トグル';
	@override String get DSMSverifier => 'DSMS 検証者';
	@override String get activate => 'アクティブ化';
	@override String get activated => 'アクティブ化されました';
	@override String get generateActivationCommand => 'アクティベーションコマンドを生成する';
	@override String get activationCommand => 'アクティベーションコマンド';
	@override String get activationSentedTip => 'アクティベーション SMS が送信されたら、アクセス端末デバイスでアクティベーション ステータスを確認してください。';
	@override String get biometricsNotEnabledTip => 'お使いのデバイスでは生体認証 (顔または指紋) が有効になっていません。続行するには有効にしてください。';
	@override String get error => 'エラー';
	@override String get exceptionOccurredWhenCallingBiometric => '生体認証 (顔または指紋) 機能の呼び出し時に例外が発生しました!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' 個のアクセス番号がチェックされており、'),
		shouldNum,
		const TextSpan(text: ' 個を選択する必要があります。'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text} は上記の ${n} 個のアクセス番号に送信されましたか?';
	@override String get interface => 'インターフェース:';
	@override String get waitingTimeoutOrSenderNumberMismatch => '待機タイムアウトまたは送信者番号が一致しません';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => '入力したセキュリティ サークル メンバーの携帯電話番号が一致しません: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => '2要素認証を回避するには、ログアウト後10分以内にログインしてください。';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => '少なくとも ${n} 個の携帯電話番号を入力する必要があります';
	@override String get noAccessNumberInYourRegionYet => 'あなたの地域にはまだアクセス番号がありません';
	@override String get notEnoughAccessNumbersInYourRegion => 'あなたの地域ではアクセス数が足りません';
	@override String get tipsForDeployDSMSterminal => 'システムは、他の国からのアクセス番号を自動的にロードしました。より優れた低コストの検証サービスを提供するために、あなたまたは紹介者が DSMS 端末をローカルに展開して検証料金を得ることをお勧めします。';
	@override String get noOneCanProvideMeTheSecurityCode => '誰も私にセキュリティ コードを提供してくれませんか?';
	@override String get useSupplementalMode => '補足モードを使用する';
	@override String get returnToSecurityCodeMode => 'セキュリティ コード モードに戻る';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => '関連付けられている携帯電話番号を入力してください。国番号は省略できます。';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => '${name} の携帯電話番号が正しくありません';
	@override String get matchingVerificationStrategyIs => '一致する検証戦略は次のとおりです:';
	@override String get balanceGreater3ICP_noNeedPourFuel => '残高が 3 ICP より大きいため、今のところ燃料を注ぐ必要はありません。';
	@override String get escrowAccount => 'エスクローアカウント';
	@override String get fuelRelay => '燃料リレー';
	@override String get pourFuel => '燃料を注ぐ';
	@override String get fuelState => '燃料状態';
	@override String get pouringFuelTips => '燃料を注ぐことでメリットやデメリットが生じることはありません。その目的は、Delta システムのエクスペリエンスを充実させることです。';
	@override String get sponsorDevelopersByWatchingAds => '広告を見て開発者をスポンサーする';
	@override String get status => 'ステータス';
	@override String get date => '日付';
}

// Path: <root>
class _StringsKo implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsKo.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.ko,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <ko>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsKo _root = this; // ignore: unused_field

	// Translations
	@override String get home => '무화과 시작';
	@override String get switchLanguage => '언어 전환';
	@override String get languageSwitch => '언어 전환';
	@override String get slogan => '델타의 탈중앙화 경제 구축';
	@override String get countryRegionCode => '국가/지역 코드';
	@override String get countryRegionSelection => '국가 및 지역 선택';
	@override String get nextStep => '다음 단계';
	@override String get yourPhoneNumber => '휴대폰 번호.';
	@override String get pleaseSelectCountryAndRegion => '국가/지역을 선택하세요.';
	@override String get pleaseEnterPhoneNumber => '유효한 전화번호를 입력하세요!';
	@override String get referrerDid => '리퍼러 DID';
	@override String get pleaseEnterTheReferrersDid => '유효한 추천인의 탈중앙화 ID를 입력하세요.';
	@override String get thisDidIsInvalid => '이 DID는 유효하지 않습니다.';
	@override String get nicknameFormatTips => '닉네임은 비워서는 안 되며 길이가 16자리를 초과해서는 안 됩니다.';
	@override String get additionalIinformation => '추가 정보';
	@override String get invitationSubject => '델타항공 공감대 형성 초대';
	@override String invitationLetter({required Object did}) => '안녕하세요, 저는 Delta 합의구축에 참여하고 있습니다! \n Delta는 ICP에서 실행되는 오픈소스 새로운 디지털 통화 플랫폼으로 비밀번호, 개인 키, 니모닉 없이 다양한 디지털 통화를 관리하고 사용할 수 있습니다. https://delta.kim/auto/download 링크를 클릭하여 애플리케이션을 설치하시면 합의 구축 및 코인 발행에 참여하실 수 있습니다. \n 추천자 DID: ${did}';
	@override String get dSMSverification => 'DSMS 유효성 검사';
	@override String get getAccessNumbers => '액세스 번호 얻기';
	@override String get getAccessNumberPromptMessage => '아래의 \'가져오기\' 버튼을 클릭하여 대기열에서 SMS 인증 액세스 번호 집합을 회전합니다.';
	@override String get optionalAccessNumbers => '선택적 액세스 번호';
	@override String get accessNumber => '액세스 번호';
	@override String get TELCO => '운영자(발전소, 운송 네트워크 등)';
	@override String get score => '점수';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ko'),
		one: () => TextSpan(children: [
			const TextSpan(text: '다음 단계로 진행하려면 '),
			nBuilder(n),
			const TextSpan(text: ' 개의 액세스 번호를 선택하고 "'),
			span('text'),
			const TextSpan(text: '" 버튼을 클릭하세요.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: '다음 단계로 진행하려면 '),
			nBuilder(n),
			const TextSpan(text: ' 개의 액세스 번호를 선택하고 "'),
			span('text'),
			const TextSpan(text: '" 버튼을 클릭하세요.'),
		]),
	);
	@override String get whatIsDeltaDesc => '델타는 오픈 소스 탈중앙화 글로벌 디지털 화폐 실험이자 암호화폐 애플리케이션 생태계입니다.';
	@override String get deltaGoalsDesc => '목표는 사람들이 델타를 사용하여 보편적이고, 공정하며, 안전하고, 빠르고, 친환경적인 새로운 디지털 화폐를 공동으로 구축할 수 있도록 하는 것입니다. 그리고 이러한 디지털 화폐와 기존 암호화폐에 대한 다양하고 효과적인 적용 시나리오를 제공하는 것입니다.';
	@override String get details => '세부 정보';
	@override String get get => 'gain';
	@override String get select => '옵션';
	@override String get send => '보내기';
	@override String get complete => '이행';
	@override String get selectedAccessNumberPrompt => '선택하면 전체 액세스 번호가 표시되고 인증 문자열이 생성됩니다.';
	@override String get location => '배치';
	@override String get verificationString => '유효성 검사 문자열';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: '휴대폰 번호 '),
		num,
		const TextSpan(text: '을 사용하여 '),
		label,
		const TextSpan(text: '을 '),
		accessNumber,
		const TextSpan(text: '로 전송하여 인증을 완료하세요.'),
	]);
	@override String get ihaveSentTheSMS => '문자 메시지를 보냈습니다.';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: '유효성 검사 문자열은 6분 동안 유효하며, 남은 시간: '),
		time,
		const TextSpan(text: '입니다.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => '너무 빨라서 계속하려면 ${x}초를 기다려야 합니다!';
	@override String get waitingForVerificationSMS => '인증 SMS를 기다리는 중...';
	@override String get partSuccsForVerificationSMS => '액세스 단말기 중 하나의 SMS 인증이 통과되었습니다!';
	@override String get creatingAccessToken => '액세스 토큰 생성 중...';
	@override String get intoDelta => '델타항공 내부';
	@override String get deltaAccountIsLoggedIn => '귀하의 Delta 계정이 로그인되었습니다';
	@override String get iHavLoggedOut => '전 빠질게요.';
	@override String get startTwoFactorVerification => '이중 인증 시작';
	@override String get securityCircleVerification => '안전 검증의 원';
	@override String get generateSecurityCode => '보안 코드 생성';
	@override String get generateSecurityCodeHintText => '생성된 보안 코드는 보안 서클에서 무작위로 선택된 구성원에게 전송됩니다.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => '보안 서클을 설정하지 않았거나 계정이 매우 안전하지 않은 경우 6자리 자리 표시자를 입력하고 다음 단계로 이동하세요.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => '보안 코드가 생성되었으니 다음 가족 및 친구에게 연락하여 인증을 통과할 수 있도록 보안 코드 추출을 요청하세요. 30분 동안 유효합니다!';
	@override String get itGetSecurityCodeTip => '팁: 델타항공 앱 -> 메뉴 -> 보안 정보 제공 페이지에서 계정 닉네임을 두 번 클릭하여 보안 코드를 받으실 수 있습니다.';
	@override String get securityCircleMemberList => '보안 서클 구성원 목록:';
	@override String get selectA_friendToProvideSecurityCodeTip => '회원 목록에서 친척이나 친구를 선택하여 본인 확인을 위한 보안코드를 생성 및 제공해주세요. 휴대폰 번호 분실 또는 도난 시 계정이 타인에 의해 통제되는 것을 방지하기 위한 것입니다.';
	@override String formatIsXdigits({required Object num}) => '형식은 ${num}자리입니다.';
	@override String get signInSuccessfully => '로그인에 성공했습니다!';
	@override String get twoFAandLogin => '이중 인증 및 로그인';
	@override String get verificationSuccessful => '성공 확인!';
	@override String get validationFailed => '유효성 검사에 실패했습니다!';
	@override String get dappInfo => '디앱 정보';
	@override String get securityCircle => '보안 링';
	@override String get securityCode => '보안 코드';
	@override String get provideSecurity => '보안 제공';
	@override String get addManully => '수동으로 추가';
	@override String get addFromContacts => '주소록에서 추가';
	@override String get addSecurityCircle => '안전 서클 추가';
	@override String get inputType => '입력 유형';
	@override String get mobileNumber => '휴대폰 번호';
	@override String get did => '주소 ID';
	@override String get pleaseEnterValidDID => '유효한 탈중앙화 ID를 입력하세요.';
	@override String get pleaseEnterValidWalletAddress => '유효한 지갑 주소를 입력하세요.';
	@override String get appellation => '주소 형식';
	@override String get appellationHint => '"베이비"라고 부르나요?';
	@override String get addSecurityCircleTips => '신뢰할 수 없는 사람을 보안 서클에 추가하지 마세요.';
	@override String get referralTeam => '추천 팀';
	@override String get profile => '계정 정보';
	@override String get menu => '메뉴';
	@override String get directly => '직접';
	@override String get indirectly => '간접';
	@override String get inviteContacts => '초대 연락처';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: '당신의 초대인은 '),
		nickname,
		const TextSpan(text: '입니다. '),
		num1,
		const TextSpan(text: ' 사람을 직접 추천했습니다. 여기서 현재 온라인 '),
		num2,
		const TextSpan(text: ' 사람입니다.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: '간접적으로 '),
		num1,
		const TextSpan(text: '명을 추천했으며, 이 중 '),
		num2,
		const TextSpan(text: '명이 현재 온라인 상태입니다.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: '친구를 델타에 초대하여 함께 사회적 합의를 높이자.1인 채굴 속도를 직접 추천할 때마다 기초 속도를 높이는 '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: '친구를 델타에 초대하여 함께 사회적 공감대를 높이고, 각 칸마다 한 사람의 채굴 속도가 기초 속도를 높이는 '),
		rate2,
		const TextSpan(text: '를 추천합니다.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => '"${name}"을(를) 삭제하시겠습니까?';
	@override String get safetyCircleRoleQ => '안전 링의 용도는 무엇인가요?';
	@override String get safetyCircleRoleA => '민감한 상황에서 2차 인증을 제공하여 계정을 보호하세요.';
	@override String get howSecurityCirclesWorkQ => '안전 링은 어떻게 작동하나요?';
	@override String get howSecurityCirclesWorkA => '안전 서클 인증이 필요한 경우, 델타 스마트 계약 프로그램은 안전 서클 친구 목록에서 무작위로 회원을 선택하여 본인 확인을 완료할 수 있도록 안전 코드를 제공합니다. 회원에게 보안 코드를 요청하면 본인 여부를 확인할 수 있습니다. 동시에 계정 보안을 보호하기 위해 "본인이 아닌 경우 보안 코드 제공을 거부하세요"라는 메시지가 표시됩니다. 따라서 보안 서클의 구성원이 신뢰할 수 있는 사람인지 항상 확인해야 합니다.';
	@override String get securityCircleBeUsedQ => '언제 사용되나요?';
	@override String get securityCircleBeUsedA1 => '1. 델타항공 앱에 대한 통제력을 상실하는 경우 일반적으로 휴대폰을 분실하거나 도난당하는 경우가 많습니다.';
	@override String get securityCircleBeUsedA2 => '2. 일부 민감한 작업의 경우 델타 스마트 계약 프로그램에서 본인임을 확인해야 합니다.';
	@override String get provideSafetyTip1 => '친구가 보안 코드를 요청할 경우, 해당 보안 코드가 본인 것인지 확인하세요.';
	@override String get provideSafetyTip2 => '귀하는 위의 친구에게 보안을 제공하고 있으며, 해당 친구는 귀하를 보안 서클에서 가장 신뢰할 수 있는 사람으로 설정하여 계정에서 민감한 작업이 발생할 경우 보안 확인을 요청하고 있습니다.';
	@override String get provideSafetyTip3 => '필요한 경우 상대방의 아바타를 두 번 클릭하여 보안 코드를 추출합니다.';
	@override String get doesNotSecurityCodeNeedsRetrieved => '상대방에게 현재 추출해야 하는 보안 코드가 없습니다!';
	@override String get existSecurityCodeTip => '보안 코드를 요청하는 친구나 가족이 본인인지 확인하세요. 친구나 가족을 보호하기 위해 친구나 가족이 본인이 아닌 경우 보안 코드 제공을 거부해야 합니다.';
	@override String get avatarSettings => '아바타 설정';
	@override String get NFTAvatarPropertyRightsText => '면책 조항: 해당 NFT를 아바타로 사용하는 것은 개인적인 취향에 따른 것이며, 해당 NFT의 지적 재산권 소유와는 무관합니다.';
	@override String get projectWebsite => '프로젝트 웹사이트:';
	@override String get whitepaper => '흰 종이:';
	@override String get indexID => '인덱스 ID';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => '색인 범위는 ${start}에서 ${end} 사이입니다.';
	@override String get inputToLoadNFTAvatarTip => '좋아하는 NFT의 인덱스 ID를 입력하면 프로그램이 자동으로 아바타로 로드합니다.';
	@override String get miningRate => '채굴 속도';
	@override String get miningDetails => '마이닝 세부 정보';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: '총 채굴 속도: '),
		rate,
		const TextSpan(text: ' δ/일'),
	]);
	@override String get EndOfMiningSession => '사이클 마이닝이 종료되었습니다:';
	@override String get tapToMineDeltaCoin => '클릭하여 델타 코인 채굴하기 ↑';
	@override String get clickToStartMining => '채굴을 시작하려면 클릭하세요!';
	@override String get miningHasStoppedPromptDesc => '채굴이 중지되었으며, 24시간마다 채굴 주기로 번개 아이콘을 클릭하여 새로운 채굴을 시작하세요.델타의 채굴은 장치에서 추가적인 연산 능력과 네트워크 트래픽을 소비하지 않는 할당 메커니즘입니다.';
	@override String get aboutBaseRate => '기본 요율은 어떻게 되나요?';
	@override String get baseRateDescription => '백서에서 합의한 대로 델타 마이닝의 기본 이자율 감소 규칙은 두 단계로 나뉩니다.\n1단계: 참여자(등록자) 수가 3,000명 이하일 때는 32δ/일이 적용됩니다. 이를 시작 기준으로 삼아 참여자 수가 10배 증가할 때마다 기본 요율이 절반으로 줄어듭니다.\n2단계: 참가자 수가 3천만 명 이상에 도달하면 참가자 수가 3배 증가할 때마다 기본 요율이 절반으로 줄어듭니다. 최종 발굴이 생산을 중단할 때까지.';
	@override String get baseRate => '기본 요금(ISDN과 동일)';
	@override String get directReferralRewards => '직접 추천 보너스';
	@override String get directReferralRewardDesc => '직접 추천을 받을 때마다 채굴하는 동안 기본 채굴률의 1/3만큼 추가로 채굴률이 증가합니다.\n\n 또한, 추천인의 채굴 상태도 직접 추천 보너스에 포함됩니다.';
	@override String get indirectReferralRewards => '간접 추천 보너스';
	@override String get indirectReferralRewardDesc => '간접 추천을 통해 채굴하는 경우, 채굴 속도가 기본 속도의 1/10만큼 추가로 증가합니다.\n\n 직접 추천 팀이 재추천하는 각 사람은 간접 추천으로 간주됩니다.';
	@override String get mine => '추출(광산에서 광석 또는 기타 자원)';
	@override String get thisMiningInformation => '현재 채굴 정보';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '채굴에 참여: '),
		x,
		const TextSpan(text: '회'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '이번 총 수익: '),
		x,
		const TextSpan(text: ' 델타 코인'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '기본 수익: '),
		x,
		const TextSpan(text: ' 코인'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '팀에 직접 기부: '),
		x,
		const TextSpan(text: ' 코인'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '간접 팀 기여: '),
		x,
		const TextSpan(text: ' 코인'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '파기 사이의 시간: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '유효 채굴 시간: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x}시간';
	@override String get keep3_5peopleInTheSafetyCircleTip => '자산 보안을 위해 보안 서클 멤버는 항상 3~5명의 신뢰할 수 있는 사람을 유지해야 합니다.';
	@override String get index => '인덱싱';
	@override String get amount => '금액 합계';
	@override String get balance => '잔액';
	@override String get timeStamp => '타임스탬프';
	@override String get summary => '초록';
	@override String get miningHasStopped => '채굴이 중단되었습니다.';
	@override String get miningHasStoppedDesc => '현재 채굴이 중단되었으며 즉시 수익이 시작됩니다.';
	@override String get startMining => '채굴 시작';
	@override String get changeMobileNumber => '휴대폰 번호 변경';
	@override String get currentMobileNumber => '현재 휴대폰 번호';
	@override String get newMobileNumber => '새 휴대폰 번호';
	@override String get securityCodeFormatIs6digits => '보안 코드 형식은 6자리입니다!';
	@override String get startVrification => '인증 시작';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => '이 휴대폰 번호는 이미 존재하며 연결된 DID: ${dId}입니다.';
	@override String get noDataYet => '사용 가능한 데이터 없음';
	@override String get previousMobileNumber => '이전 휴대폰 번호';
	@override String get changeLog => '변경 사항 기록';
	@override String get referralLinkToShare => '공유할 추천 링크';
	@override String get referrer => '참조자';
	@override String get isoCountryCode => 'ISO 국가 코드';
	@override String get avatarLogo => '헤더 로고';
	@override String get creationTime => '생성 시간';
	@override String get lastUpdate => '마지막 업데이트';
	@override String get numberOfSecurityCircleMembers => '보안 서클의 구성원 수';
	@override String get theLatestMining => '마지막 발굴';
	@override String get effectiveMiningDays => '유효 채굴 일수';
	@override String get modifyNickname => '닉네임 변경';
	@override String get didNotChange => '변경 없음!';
	@override String get kycVerification => 'KYC 인증';
	@override String get faceID => '얼굴 ID';
	@override String get touchID => '지문 ID';
	@override String get biometricsAuthorizationTest => '생체 인증 테스트';
	@override String get currentState => '현재 상태';
	@override String get biometricsAuthenticationLocalizedReason => '기기의 잠금 해제를 사용하여 신원을 확인하세요.';
	@override String get graph => '그래픽 아카이브(예: 지도, 문서 또는 식물도감)';
	@override String get referralRelationshipGraph => '추천 관계 매핑';
	@override String get nativeContacts => '로컬 연락처';
	@override String get registrationAndMiningTrends => '등록 및 채굴 동향';
	@override String get inMining => '마이닝';
	@override String get registrationVolume => '등록 규모';
	@override String get unmined => '악용되지 않음';
	@override String get mined => '채굴';
	@override String get communityMining => '커뮤니티 마이닝';
	@override String get consensusPromotionFund => '합의 촉진 기금';
	@override String get ecologicalAwardFund => '생태 인센티브 기금';
	@override String get icpFuelCrowdfunding => 'ICP 연료 크라우드 펀딩';
	@override String get coreDeveloperRewards => '핵심 개발자 보상';
	@override String get totalAllocation => '전체 분포';
	@override String get miningRatio => '채굴 비율';
	@override Map<String, String> get billion => {
		'30': '300억',
		'60': '600억',
		'180': '1,800억.',
		'300': '3,000억',
	};
	@override String get watchAdsToSupportDevelopers => '개발자 지원을 위한 광고 보기';
	@override String get loadingAdcomponents => '광고 구성 요소 로드 중...';
	@override String get timeIsNotUp => '시간이 얼마 남지 않았습니다!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => '로드에 실패했습니다. 네트워크가 차단되었을 수 있습니다!';
	@override String get pendingUSCTrecords => '보류 중인 USCT 기록';
	@override String get pendingUSCTrecordsDesc => '보류 중인 USCT 기록은 15~30일 이내에 광고 플랫폼에서 확인되며, 유효한 기록은 USCT 기록 목록으로 전송되고 계정 잔액에 적절한 USCT 금액이 추가됩니다.';
	@override String get validity => '유효성';
	@override String get advertiser => '광고주';
	@override String get earned => '획득';
	@override String get withdraw => '자금 인출';
	@override String get validUSCTrecords => '효과적인 USCT 기록';
	@override String get USCTmining => 'USCT 마이닝';
	@override String get aboutUSCTmining => 'USCT 마이닝이란?';
	@override String get aboutUSCTminingItme1 => '1. USDT는 전 세계 주요 암호화폐 거래소에서 각국 법정화폐로 쉽게 교환할 수 있는 전 세계적으로 인기 있는 미국 달러 스테이블코인입니다.';
	@override String get aboutUSCTminingItme2 => '2. USCT는 USD 크레딧으로 알려진 USCT 채굴 수익금의 임시 척도이며, 광고 플랫폼의 실제 정산 금액 및 분배 규칙과 해당 비율에 따라 최종적으로 USDT로 전환됩니다.';
	@override String get aboutUSCTminingItme3 => '3. USCT 마이닝은 델타 커뮤니티의 트래픽 광고 실현 기능입니다. 델타 커뮤니티의 대규모 사용자 기반을 활용하여 광고주, 델타 개발자 및 부재자에게 다양한 혜택을 제공합니다. 아직 델타 생태계가 형성되고 발전하지 않은 초기 단계의 부재자에게 일정량의 유효 수입을 제공하고, 동시에 개발자에게는 장기간 개발 서비스를 지속적으로 제공하고 궁극적으로 백서의 모든 계획을 실현할 수 있도록 일정한 재정적 지원을 제공하며, 제품 광고주에게는 효과적인 홍보 채널을 제공할 수 있도록 설계되었습니다.';
	@override String get aboutUSCTminingItme4 => '4. 분배 규칙은 총 수익금의 40%를 개발자 기술 서비스 수수료로, 나머지 60%를 커뮤니티 결석 보상으로 사용하도록 설계되었습니다. 결석 보상 부분은 DTC와 유사한 다단계 분배 모델로, 결석 보상은 6:3:1의 비율에 따라 세 부분으로 나뉘며, 현재 광고의 결석자에게 할당된 6부, 상위 추천인에게 할당된 3부, 2단계 추천인에게 할당된 1부의 결석 보상 중 각각 1부를 USCT 마이닝의 결석 보상으로 배분합니다. 마찬가지로, USCT 마이닝을 통해 추천한 친구에게도 동일한 추천인 보상을 받을 수 있습니다. 이러한 다단계 분배의 장점은 누구나 다운라인 팀을 개발하여 비교적 많은 양의 USDT를 얻을 수 있다는 것입니다.';
	@override String get aboutUSCTminingItme5 => '5. 정산 기간은 7일이며, 즉 7일마다 광고 플랫폼에서 유효성을 확인하고 확인된 수익금의 유효성과 실제 금액이 잔액에 기록됩니다. 각 인출의 최소 금액은 10USDT입니다.';
	@override String linesXtoY({required Object x, required Object y}) => '행 ${x}~${y}를 입력합니다.';
	@override String get wallet => '지갑';
	@override String get multiChainWallet => '멀티체인 지갑';
	@override String get deposit => '입금(예: 은행 계좌)';
	@override String get transfer => '송금(은행 계좌로 송금)';
	@override String xcoinInWallet({required Object coinCode}) => '지갑 주소의 ${coinCode}';
	@override String get transactions => '거래 기록';
	@override String get network => '망상';
	@override String get walletAddress => '지갑 주소';
	@override String get currentAddress => '현재 주소';
	@override String get depositAddress => '충전 주소';
	@override String get receivingMoneyAddress => '수취인 주소';
	@override String get applyTempDepositAddress => '임시 충전 요청을 위한 주소';
	@override String get tempDepositAddressTip => '1. 공유 입금 주소입니다. 임대가 만료되었거나 해지된 후에는 금액을 입금하지 마세요. 이 경우 해당 금액은 손실됩니다.';
	@override String get tempDepositAddressTip2 => '2. 입금 전 [체인명]과 [코인명]이 정확히 일치하는지 확인하시고, 컨트랙트 토큰의 경우 [계약 기준]과 [계약 주소]도 정확히 일치하는지 확인하시기 바랍니다.';
	@override String get tempDepositAddressTip3 => '3. 위 팁의 매개변수와 일치하지 않는 금액을 입금하려고 시도하지 마세요. 그렇지 않으면 해당 금액이 손실됩니다.';
	@override String get tempDepositAddressTip4 => '4. 다른 유형의 자산을 입금해야 하는 경우, 해당 통화 페이지와 매개변수 옵션으로 전환하여 새 주소를 신청하세요.';
	@override String get applyExtensionOfValidity => '유효 기간 연장 신청';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: '이 주소는 '),
		diff,
		const TextSpan(text: ' 이후에 만료되며 만료 전 12시간 동안 '),
		tap('수동으로 연장'),
		const TextSpan(text: ' 유효합니다.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => '12시간 전에만 갱신 가능';
	@override String get theReceivingAddressValidForLongtime => '이 주소는 오랫동안 유효합니다.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => '이 수집 주소는 오랫동안 유효하며 실시간으로 자동으로 적립됩니다.';
	@override String get confirmDeposited => '입금 확인';
	@override String get unbindThisDepositAddress => '이 충전 주소의 번들 해제';
	@override String get confirmDepositedTip => '자금이 이체된 경우 위의 버튼을 클릭하면 10분 후에 지갑으로 청구가 트리거됩니다.';
	@override String get unbindDepositAddressTip => '스마트 컨트랙트의 실행 오버헤드를 줄이기 위해 유효 기간 동안 더 이상 자금을 입금하지 않을 경우 충전 주소의 바인딩을 해제하시기 바랍니다.';
	@override String get transferToAddress => '주소로 이동';
	@override String get longPressToPaste => '길게 눌러 붙여넣기';
	@override String get all => '전체';
	@override String balanceX({required Object x}) => '잔액 ${x}';
	@override String get transferOut => '턴아웃';
	@override String depositXcoins({required Object x}) => '크레딧 ${x}';
	@override String get sender => '발신자';
	@override String get recipient => '수신자';
	@override String get memo => '참고';
	@override String get kind => '(삶의) 방식';
	@override String get transferAmountExceedsAvailableBalance => '사용 가능한 잔액을 초과하는 이체';
	@override String get pleaseEnterValidAmount => '유효한 금액을 입력하세요.';
	@override String get networkFee => '네트워크 처리 수수료';
	@override String get fee => '취급 수수료';
	@override String validLengthXcharacters({required Object x}) => '주소 유효 길이 ${x}자';
	@override String get historys => '역사 기록';
	@override String get dtcCreditdetail => '델타항공 포인트 상세 정보';
	@override String get usdCreditdetail => 'USD 포인트 세부 정보';
	@override String get dappSquare => '디앱 플라자';
	@override String get amountRaised => '모금 금액';
	@override String get disbursedAmount => '발행 금액';
	@override String get participationTimes => '참가자 수';
	@override String get completionRate => '완료율';
	@override String get exchangeRate => '환율';
	@override String get icpCrowdfunding => 'ICP 크라우드 펀딩';
	@override String get crowdfunding => '크라우드 펀딩';
	@override String get trendsCurve => '추세 곡선';
	@override String get fullScreenView => '전체 화면 보기';
	@override String get walletBalance => '지갑 잔액:';
	@override String get manageWallet => '지갑 관리';
	@override String get fundraiseAmount => '모금';
	@override String get exchangeRewardAmount => '보상 금액 사용';
	@override String get fundraise => '모금';
	@override String rangeIntegersX({required Object x}) => '범위: 정수 ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => '모금에 성공적으로 참여하여 ${amount}DTCT 보상을 받았습니다.';
	@override String get amountSummary => '금액 요약';
	@override String get changePreferred => '기본 설정 변경';
	@override String get changePreferredAddress => '기본 설정 주소 변경';
	@override String get preferredAddressTip => '등록된 휴대폰 번호 또는 DID를 사용하여 자금이 모금되면 원하는 주소로 자금이 자동으로 이체됩니다.';
	@override String get newAddress => '새 주소';
	@override String get newAddressTip => '남용을 방지하기 위해 지갑 주소가 두 개 이상일 경우, 새 주소를 생성할 때마다 거래 수수료가 발생합니다.';
	@override String get createNew => '새로 구축';
	@override String get chainNetworkName => '체인 네트워크 이름';
	@override String get from => '출신 (장소)';
	@override String get to => '(시간)까지';
	@override String get noAvailableDepositAmountDetected => '사용 가능한 입금액이 감지되지 않았습니다!';
	@override String get crossChainReceiveMoneyMonitoring => '크로스 체인 수집이 듣고 있습니다 ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '수신('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '확인 진행 중('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => '참고 사항(초보자를 위한 필수 읽기)';
	@override String get whyUseSharedAddresses => '공유 주소를 사용하는 이유는 무엇인가요?';
	@override String get useSharedrAdvantage => '여러 체인에 걸쳐 입금할 때 공유 주소를 사용하면 다음과 같은 이점이 있습니다:';
	@override String get useSharedrAdvantage1 => '1. 이체 수수료 낭비를 줄이고 사용자의 사용 비용을 낮추십시오. 전용 주소의 사용으로 인해 자금이 너무 많이 분산되어 일반적으로 자금 인출시 다른 사용자의 후속 이체를 용이하게하기 위해 사용자가 두 번째 자금 이체를 재충전 할 때 자금을 하나 또는 소수의 주소 관리로 풀링해야 할 필요가 있습니다.';
	@override String get useSharedrAdvantage2 => '2. 공유 방식에서는 프로그램은 발신 전송 및 라이트 콜렉션 수신과 빠르게 일치할 수 있는 비교적 작은 주소 풀만 유지하면 되므로 계산 리소스 오버헤드를 줄일 수 있습니다. 반대로 독점 주소를 사용하면 그 반대가 됩니다.';
	@override String get tokenType => '토큰 유형';
	@override String get contract => '계약';
	@override String get contractStandard => '계약 표준';
	@override String get contractAddress => '계약 주소';
	@override String get native => '원생동물';
	@override String get confirmUnbindingPleaseEnterYes => '구속력 해제를 확인하려면 "예"를 입력하세요.';
	@override String get listAllWorkingTempReceivingAddresses => '작동 중인 모든 크로스체인 충전 주소 나열';
	@override String get setNote => '노트 설정';
	@override String lengthCannotExceedXbytes({required Object x}) => '길이는 ${x}바이트를 초과할 수 없습니다.';
	@override String get transferFee => '송금 수수료';
	@override String get crossChainFee => '크로스 체인 수수료';
	@override String get crossChainTransferOutError => '교차 링크 전송 오류';
	@override String get chainName => '체인 이름';
	@override String get message => '메시지';
	@override String get dontShowAgain => '더 이상 표시되지 않음';
	@override String get queuing => '대기열';
	@override String get optional => '선택 사항';
	@override String get publiclyVisible => '공개적으로 표시';
	@override String get rates => '관세';
	@override String get minimum => '최소';
	@override String get maximum => '상한';
	@override String get minimumBlockConfirmations => '최소 차단 확인 횟수';
	@override String get dsmsVerifyTerminal => 'DSMS 유효성 검사 터미널';
	@override String get overall => '우산';
	@override String get my => 'my';
	@override String get checkValidatorQualifications => '인증자 권한 자격 확인';
	@override String get getVerifierPermissions => '인증자 권한 얻기';
	@override String get qualification => '자연 기부';
	@override String get upperLimit => 'limit';
	@override String get maximumNumberOfTerminalsAllowedToAccess => '허용되는 최대 액세스 단말기 수';
	@override String get numberOfExistingAccessTerminals => '사용 중인 액세스 단말기 수';
	@override String get applyingForDSMSVerifierPermissionsTips => '인증자 권한을 신청하기 전에 유휴 Android 휴대폰과 전용 액세스 번호를 준비하고 DSMS 액세스 터미널 애플리케이션을 다운로드하여 설치해야 합니다.';
	@override String get downloadLink => '다운로드 링크';
	@override String get alreadyReadyFollowingTheAboveTips => '위의 팁에 따라 준비되었습니다.';
	@override String get globalUniversal => '글로벌 사용';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: '현재 DSMS 인증 액세스 서비스에 참여할 수 있는 로컬 인증자가 충분하지 않습니다. 서비스에 액세스하려면 "'),
		gu,
		const TextSpan(text: '"를 선택하세요.'),
	]);
	@override String get asDedicatedNumberForAccess => '액세스 전용 번호로';
	@override String pleaseCheckTip({required Object tip}) => '"${tip}" 상자를 체크해 주세요.';
	@override String get inputLengthTooShort => '입력 길이가 너무 짧음';
	@override String get shortName => '약어';
	@override String pleaseEnterXname({required Object name}) => '${name}을 입력하세요.';
	@override String get applicationIsBeingSubmitted_pleaseWait => '신청서를 제출하는 중입니다... 잠시만 기다려주세요...';
	@override String get applyForDSMSVerifierPermission => 'DSMS 유효성 검사기 권한 신청하기';
	@override String get confirmInformation => '정보 확인';
	@override String get lastHeartbeat => '최종 하트비트';
	@override String get expirationTime => '마감 시간';
	@override String get country => '국가';
	@override String get accessTerminals => '액세스 터미널';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'DSMS 액세스 번호 단말기의 총 개수';
	@override String get textContent => '텍스트 콘텐츠';
	@override String get scanQRcodeToLogin => '스와이프하여 로그인';
	@override String get confirmLogin => '로그인 확인';
	@override String get authorizeSubApplicationToLogin => '로그인할 수 있도록 이 하위 애플리케이션을 승인합니다.';
	@override String get authorizationSuccessful => '인증이 성공했습니다!';
	@override String get launchSMSprogram => 'SMS 프로그램 시작하기';
	@override String get notApplied => '신청 없음';
	@override String get validityPeriod => '유효 기간';
	@override String get renewal => '갱신 신청';
	@override String get scanCodeToAuthorizeTerminalLogin => '코드를 스캔하여 단말기 로그인 인증';
	@override String get rewards => '인센티브';
	@override String get roles => '캐릭터';
	@override String get developerCenter => '개발자 센터';
	@override String get appName => '애플리케이션 이름';
	@override String get pleaseSelect => '선택해 주세요';
	@override String get category => '카테고리';
	@override String get keywords => '바이워드';
	@override String get pleaseEnterAkeyword => '키워드를 입력하세요.';
	@override String get createApplication => '애플리케이션 만들기';
	@override String get appType => '애플리케이션 유형';
	@override String get numberOfCategoriesMustBetween1and3 => '카테고리 수는 1~3개 사이여야 합니다.';
	@override String get appLogoSpecifications => '이미지 형식: png, 크기: 100KB 이내, 해상도(픽셀): 256*256';
	@override String get localAlbum => '로컬 사진 앨범';
	@override String get networkPath => '네트워크 경로';
	@override String get imageURLkAddress => '이미지 URL';
	@override String get urlAddressFormatIsIncorrect => '잘못된 형식의 URL 주소';
	@override String get imageFormatOnlySupportsPng => '이미지는 "png" 형식만 지원됩니다.';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => '길이는 ${a}-${b} 문자 사이여야 합니다.';
	@override String get introduction => '개요';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => '이미지 크기는 ${a}(현재 ${b})보다 클 수 없습니다.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => '이미지 해상도: ${p1}(픽셀), 현재 ${p2}여야 합니다.';
	@override String get becomeDeveloper => '개발자 되기';
	@override String get developerInformation => '개발자 정보';
	@override String get teamName => '팀 이름';
	@override String get website => '노드';
	@override String get other => '기타';
	@override String get githubVerification => '깃허브 인증';
	@override String get exampleUrl => '예제 URL';
	@override String githubVerificationTip({required Object did}) => 'GitHub 계정을 사용하여 리포지토리에 \'${did}\'의 내용으로 \'delta.did\' 파일을 생성한 다음 해당 파일의 githubusercontent URL 주소를 이 입력란에 붙여넣어 인증하세요.';
	@override String get createApp => '애플리케이션 만들기';
	@override String get appManagement => '애플리케이션 관리';
	@override String get statusLogs => '상태 로그';
	@override String get bad => '아니오';
	@override String get normal => '평소';
	@override String get good => '우수한';
	@override String get onceCreatedItCannotBeChanged => '일단 생성되면 변경할 수 없습니다!';
	@override String get manageApplicationEntity => '애플리케이션 엔티티 관리';
	@override String get currentVersion => '현재 버전';
	@override String get submitVersion => '제출된 버전';
	@override String get packageOnlySupportZipCompressedFile => '이 패키지는 zip 압축 파일만 지원합니다.';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'zip 패키지에서 \'${name}\' 파일을 찾을 수 없습니다.';
	@override String get fileList => '문서 목록:';
	@override String get programPackage => '프로그래밍 패키지:';
	@override String get automaticallyExtractFromVersionFile => '\'.version\' 파일에서 자동으로 추출됨';
	@override String get dappVersionFormatTip => '버전 번호의 형식은 최대 99.99를 넘지 않는 정밀도 2자리 소수점이어야 합니다.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => '버전 번호는 현재 버전 \'${v}\'보다 커야 합니다.';
	@override String get versionNotes => '각인:';
	@override String get updateRelease => '새 버전';
	@override String get loadAndRun => '로드 및 실행';
	@override String get notYetSubmittedProgramPackage => '프로그램 패키지가 아직 제출되지 않았습니다!';
	@override String get authorizeMinidAppLogin => '미니 앱 로그인 승인';
	@override String get confirmAuthorizationPleaseEnterYes => '승인을 확인하려면 "예"를 입력하세요.';
	@override String get authorizeNow => '즉각적인 승인';
	@override String get operation => '운영.';
	@override String get statusChange => '상태 변경';
	@override String get changeTo => '로 변경합니다:';
	@override String get notes => '비고.';
	@override String get changesNotEffective => '변경 사항이 유효하지 않습니다!';
	@override String get released => '게시됨';
	@override String get inPublicBeta => '오픈 베타';
	@override String get developers => '개발사.';
	@override String get reviewList => '댓글 목록.';
	@override String get postReview => '댓글 남기기';
	@override String get scoreNow => '지금 평가하기';
	@override String get description => '설명.';
	@override String get noData => '(^-^)\n 사용 가능한 데이터 없음';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => '버전이 ${a}에서 ${b}로 업데이트되었습니다.';
	@override String get loadNewVersion => '새 버전 로드';
	@override String get name => '이름.';
	@override String get canisterId => '탱크 ID.';
	@override String get updateTime => '업데이트 시간';
	@override String get contractCanistersState => '계약 탱크 상태';
	@override String get userDistribution => '사용자 배포';
	@override String get settings => '설정';
	@override String get security => '안전';
	@override String get invite => '초대장';
	@override String get more => '더 보기...';
	@override String get receiveAddress => '수신 주소:';
	@override String get hangingAmount => '보류 중인 금액';
	@override String get hangingAmountTips => '보류 중인 금액은 하위 팀이 채굴을 통해 생성한 보상의 임시 기록으로, 채굴 세션을 완료하면 이 금액이 보류 중인 금액에 모이게 됩니다.';
	@override String get pendingAmount => '금액 결정 예정';
	@override String get pendingAmountTips => '보류 중인 금액은 광고주에 대해 아직 확정되지 않은 금액으로, 유효하게 매칭된 금액은 유효한 USCT 레코드로 이전되며, 유효하지 않은 부분은 제외됩니다.';
	@override String get received => '받은';
	@override String get processing => '진행 중';
	@override String get replied => '응답자';
	@override String get rejected => '거부';
	@override String get unknown => '미지의 세계';
	@override String get insufficientBalance => '밸런스가 부족합니다!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => '${x}의 잔액이 크로스체인 네트워크 수수료를 지불하기에 부족합니다.';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => '거래가 아직 완료되지 않았으며 현재로서는 이체할 수 없습니다.';
	@override String get thisfunctionNotSupportExternalCalls => '이 함수는 외부에서 호출하는 것을 지원하지 않습니다.';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => '크로스체인 수수료 결제에 사용할 수 있는 주소가 일치하지 않으니 다른 체인 네트워크로 전환하여 시도해 보세요.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => '현재 단일 트랜잭션에서 이체할 수 있는 최대 금액과 일치하는 금액은 ${x}입니다.';
	@override String get memoMustNotBeMoreThan64bytes => '비고는 64바이트를 초과할 수 없습니다.';
	@override String insufficientBalance_theAmountIsX({required Object x}) => '잔액이 부족하며 금액은 ${x}입니다.';
	@override String get boundRreceivingAddressesExceed3Tip => '주소를 3개 이상 바인딩할 수 없습니다.\n새 결제 주소를 바인딩해야 하는 경우.\n먼저 다른 주소의 바인딩을 해제하세요.';
	@override String parametersA_exception({required Object x}) => '매개변수: ${x}, 예외';
	@override String get parameterException => '매개변수 예외!';
	@override String get transferAmountMustBeLargerThan0 => '이체 금액은 0보다 커야 합니다.';
	@override String get authorizationHasExpired => '인증이 만료되었습니다.';
	@override String get theAppHasNotBeenAuthorizedByOwner => '소유자가 앱을 승인하지 않았습니다.';
	@override String get authenticationTokenIsInvalid => '잘못된 인증 토큰';
	@override String get verifyInfoIsInvalidOrExpired => '유효하지 않거나 만료된 유효성 검사 정보';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => '액세스 단말기 수가 1만분의 1 제한을 초과했는지 확인합니다.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => '채굴에 참여한 기간이 3일 이상이어야 합니다.';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => '보안 서클의 구성원 수는 3명 이상이어야 합니다.';
	@override String get avatarIsNotSet => '아바타가 설정되지 않음';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => '직접 추천 횟수는 3건 이상이어야 합니다.';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => '시간 제한이 충분하지 않으며 휴대폰 번호는 1년에 한 번만 변경할 수 있습니다.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => '이 휴대폰 번호는 이미 존재하며 복제할 수 없습니다.';
	@override String get securityCodeIsIncorrect => '잘못된 보안 코드';
	@override String get securityCodeMayHaveExpired => '보안 코드가 만료되었을 수 있습니다.';
	@override String get sessionIdIsInvalidOrExpired => '유효하지 않거나 만료된 세션 ID';
	@override String get sessionHasBeenAuthorized => '세션 완료가 승인되었습니다!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => '기간 만료 전 ${x}일 이내에만 갱신할 수 있습니다.';
	@override String get notYetGrantedDeveloperPermissions => '아직 개발자 권한이 없습니다.';
	@override String fieldXcannotBeEmpty({required Object x}) => '필드 ${x}는 널일 수 없습니다.';
	@override String get emailFormatError => '이메일 형식 오류';
	@override String theXformatIsIncorrect({required Object x}) => '\'${x}\' 서식 오류';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => '"${x}" 필드의 길이는 ${y}에서 ${z}자 사이여야 합니다.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => '\'${x}\' 선택 범위는 ${y}에서 ${z} 사이여야 합니다.';
	@override String get unchanged_sameAsOldContent => '기존과 동일한 내용으로 변경되지 않았습니다!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\'가 이미 존재합니다!';
	@override String get mobileNumberHasNotJoinedDelta => '이 휴대폰 번호는 델타항공에 추가되지 않았습니다!';
	@override String get referrerIdCannotBeEmpty => '리퍼러 ID는 비어 있으면 안 됩니다!';
	@override String get referrerIdDoesNotExist => '리퍼러 ID가 존재하지 않습니다!';
	@override String get didIsIncorrectOrInvalid => 'DID가 잘못되었거나 유효하지 않습니다!';
	@override String get accessTokenIsIncorrectOrInvalid => '액세스 토큰이 잘못되었거나 유효하지 않습니다!';
	@override String get minimumWithdrawalAmountIs1USD => '1회 출금 시 최소 1USD';
	@override String get miningTimeIsNotYet => '아직 채굴할 때가 아닙니다.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => '이미 존재하므로 다시 추가하지 마세요!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => '등록 번호를 인증 액세스 번호로 사용할 수 없습니다.';
	@override String get canotAddYourSelf => '본인을 추가할 수 없습니다.';
	@override String get logOut => '로그아웃';
	@override String get confirmLogout => '로그아웃 확인';
	@override String get logOutTipsText => '참고: 백서에 따라 계정을 로그인 인증할 때마다 인증자에게 인센티브로 지급되는 일정 금액의 DTC 코인이 소모되므로 불필요하게 로그인과 로그아웃을 시도하지 마시고 아래 버튼을 클릭하면 즉시 로그아웃됩니다.';
	@override String get ConfirmLogoutPleaseEnterYes => '로그아웃을 확인하려면 "예"를 입력하세요.';
	@override String get tip => 'STH에 주목하세요.';
	@override String get cancel => '취소';
	@override String get close => 'cloture';
	@override String get selected => '선택';
	@override String get edit => '컴파일러';
	@override String get submit => '제출(보고서 등)';
	@override String get goBack => '회귀(심리학 분야)';
	@override String get copiedToClipboard => '클립보드에 복사되었습니다.';
	@override String get nickname => '애정 기간';
	@override String get confirm => '인식';
	@override String get cannotBeEmpty => '비어 있을 수 없음';
	@override String get deleteSuccessful => '성공적으로 삭제되었습니다!';
	@override String get successfullyModified => '수정에 성공했습니다!';
	@override String get executionSuccessful => '구현은 성공적이었습니다!';
	@override String get preview => '미리 보기';
	@override String get followSystem => '후속 조치 시스템';
	@override String get change => '변형';
	@override String get replace => '교체';
	@override String get view => '체크 아웃';
	@override String get manage => '관리';
	@override String get modify => '수정';
	@override String get replacedSuccessfully => '교체 성공!';
	@override String get authentication => '인증';
	@override String get reacquire => '검색';
	@override String get tryAgain => '다시 시도하세요.';
	@override String get querying => '문의 중 ...';
	@override String get writingToOnChain_pleaseWait => '체인에 기록 중입니다, 기다려주세요 ...';
	@override String get versionCheck => '버전 감지';
	@override String get alreadyLatestVersion => '이미 최신 버전입니다!';
	@override String get foundNewVersion => '새 버전을 살펴보세요:';
	@override String get upgradeLink => '업그레이드 링크:';
	@override String get deviceDescription => '장비 설명.';
	@override String get notification30SecondsBeforeMiningStops => '채굴이 중단되기 30초 전에 알림 알림을 실행하세요!';
	@override String get goMining => '채굴 시작';
	@override String get deltaMiningReminder => '델타 마이닝 알림';
	@override String get clickToMine_miningIsAboutToStop => '내려면 여기를 클릭하세요. 채굴이 곧 중단됩니다!';
	@override String get incorrect_input => '잘못된 입력입니다!';
	@override String get are_you_sure_delete => '삭제하시겠습니까?';
	@override String get delete_account => '계정 삭제';
	@override String get how_to_operate_it => '작동 방법을 보셨나요?';
	@override String get deletion_warning_tip => '계정을 삭제하면 모든 델타 코인을 잃게 되며 다른 회원의 모든 수입도 잃게 됩니다.';
	@override String get launchWhatsAppProgram => 'WhatsApp 프로그램 시작';
	@override String get sms => '문자';
	@override String get whatsApp_verification_tips => '이 아이콘이 있는 접속 번호는 WhatsApp 메시지 검증도 지원합니다. 국제 메시지를 보낼 때는 WhatsApp을 사용하여 성공률을 높이고 비용을 절감하는 것이 좋습니다.';
	@override String get ihaveSentVerificationString => '확인 문자열을 보냈습니다';
	@override String get totalOfPeople => '전체 인원: ';
	@override String get numberOfPeopleMining => '채굴하는 사람 수';
	@override String get useBrowserScanQRcodeToSMSprogram => '다른 기기에서 브라우저를 사용하여 QR 코드를 스캔하고 SMS 프로그램으로 전달할 수 있습니다';
	@override String get toggle => '토글';
	@override String get DSMSverifier => 'DSMS 검증자';
	@override String get activate => '활성화';
	@override String get activated => '활성화됨';
	@override String get generateActivationCommand => '활성화 명령 생성';
	@override String get activationCommand => '활성화 명령';
	@override String get activationSentedTip => '활성화 SMS가 전송된 후, 접속 단말 장치에서 활성화 상태를 확인하세요.';
	@override String get biometricsNotEnabledTip => '기기에서 생체 인식(얼굴 또는 지문)이 활성화되어 있지 않습니다. 계속하려면 활성화해 주세요.';
	@override String get error => '오류';
	@override String get exceptionOccurredWhenCallingBiometric => '생체 인식(얼굴 또는 지문) 함수를 호출하는 중 예외가 발생했습니다!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: '개의 액세스 번호가 체크되어 있습니다. '),
		shouldNum,
		const TextSpan(text: '개를 선택해야 합니다.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text}가 위의 ${n} 접속 번호로 전송되었습니까?';
	@override String get interface => '인터페이스:';
	@override String get waitingTimeoutOrSenderNumberMismatch => '대기 시간 초과 또는 발신자 번호 불일치';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => '입력하신 보안 서클 멤버의 휴대폰 번호가 일치하지 않습니다: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => '로그아웃 후 10분 이내에 로그인하면 2단계 인증을 피할 수 있습니다.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => '최소 ${n}개의 휴대폰 번호를 입력해야 합니다';
	@override String get noAccessNumberInYourRegionYet => '귀하의 지역에는 아직 접속 번호가 없습니다';
	@override String get notEnoughAccessNumbersInYourRegion => '귀하의 지역에 접속 번호가 충분하지 않습니다';
	@override String get tipsForDeployDSMSterminal => '시스템이 다른 국가의 일부 접속 번호를 자동으로 로드했습니다. 더 나은 저렴한 검증 서비스를 제공하기 위해 귀하 또는 추천인이 검증 수수료를 받기 위해 DSMS 터미널을 현지에 배포하는 것이 좋습니다.';
	@override String get noOneCanProvideMeTheSecurityCode => '누구도 나에게 보안 코드를 제공할 수 없나요?';
	@override String get useSupplementalMode => '보충 모드 사용';
	@override String get returnToSecurityCodeMode => '보안 코드 모드로 돌아가기';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => '연관된 모바일 번호를 입력하세요. 국가 코드는 생략할 수 있습니다.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => '${name}의 휴대폰 번호가 올바르지 않습니다';
	@override String get matchingVerificationStrategyIs => '매칭 검증 전략은 다음과 같습니다.';
	@override String get balanceGreater3ICP_noNeedPourFuel => '3 ICP보다 큰 잔액, 당장은 연료를 부을 필요가 없습니다.';
	@override String get escrowAccount => '에스크로 계정';
	@override String get fuelRelay => '연료 릴레이';
	@override String get pourFuel => '연료를 붓다';
	@override String get fuelState => '연료 상태';
	@override String get pouringFuelTips => '연료를 주입하는 것은 어떠한 이점이나 단점을 가져다주지 않습니다. 그 목적은 델타 시스템 경험을 풍부하게 하는 것입니다.';
	@override String get sponsorDevelopersByWatchingAds => '광고를 시청하여 개발자 후원';
	@override String get status => '상태';
	@override String get date => '날짜';
}

// Path: <root>
class _StringsNl implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsNl.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.nl,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <nl>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsNl _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'afb. begin';
	@override String get switchLanguage => 'Taal omschakelen';
	@override String get languageSwitch => 'Taalwisseling';
	@override String get slogan => 'Bouwen aan een gedecentraliseerde economie in delta';
	@override String get countryRegionCode => 'Land/gebiedscode';
	@override String get countryRegionSelection => 'Selectie van landen en regio\'s';
	@override String get nextStep => 'de volgende stap';
	@override String get yourPhoneNumber => 'Uw telefoonnummer.';
	@override String get pleaseSelectCountryAndRegion => 'Selecteer uw land/regio';
	@override String get pleaseEnterPhoneNumber => 'Voer een geldig telefoonnummer in!';
	@override String get referrerDid => 'Verwijzende DID';
	@override String get pleaseEnterTheReferrersDid => 'Voer een geldige gedecentraliseerde identiteits-id van de verwijzer in';
	@override String get thisDidIsInvalid => 'Deze DID is ongeldig.';
	@override String get nicknameFormatTips => 'De bijnaam mag niet leeg zijn en mag niet langer zijn dan 16 cijfers.';
	@override String get additionalIinformation => 'Aanvullende informatie';
	@override String get invitationSubject => 'Een uitnodiging voor Delta Consensus Building';
	@override String invitationLetter({required Object did}) => 'Hallo, ik doe mee aan Delta Consensus Building!\n Delta is een nieuw open source platform voor digitale valuta dat draait op ICP, waarmee je verschillende digitale valuta kunt beheren en gebruiken zonder wachtwoorden, privésleutels of mnemonics. Klik op deze link https://delta.kim/auto/download om de applicatie te installeren en nu ben je uitgenodigd om mee te doen aan consensusvorming en het slaan van munteenheden.\n Verwijzende DID: ${did}';
	@override String get dSMSverification => 'DSMS-validatie';
	@override String get getAccessNumbers => 'Zorg voor toegangsnummers';
	@override String get getAccessNumberPromptMessage => 'Klik op de knop "Verkrijgen" hieronder om een reeks toegangsnummers voor SMS-verificatie in de wachtrij te draaien.';
	@override String get optionalAccessNumbers => 'Optioneel toegangsnummer';
	@override String get accessNumber => 'toegangsnummer';
	@override String get TELCO => 'exploitant (van een elektriciteitscentrale, transportnetwerk enz.)';
	@override String get score => 'score';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('nl'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Vink '),
			nBuilder(n),
			const TextSpan(text: ' toegangsnummers aan en klik op de knop "'),
			span('text'),
			const TextSpan(text: '" om door te gaan naar de volgende stap.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Vink '),
			nBuilder(n),
			const TextSpan(text: ' toegangsnummers aan en klik op de knop "'),
			span('text'),
			const TextSpan(text: '" om door te gaan naar de volgende stap.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta is een open source, gedecentraliseerd, wereldwijd experiment met digitale valuta en een ecosysteem van cryptocurrency-toepassingen.';
	@override String get deltaGoalsDesc => 'Het doel is om het mogelijk te maken voor mensen om Delta te gebruiken om nieuwe digitale munteenheden te bouwen die universeel, eerlijk, veilig, snel en groen zijn. En om verschillende effectieve toepassingsscenario\'s te bieden voor deze digitale valuta en eerdere cryptocurrencies.';
	@override String get details => 'gegevens';
	@override String get get => 'winst';
	@override String get select => 'optie';
	@override String get send => 'verzenden';
	@override String get complete => 'vervullen';
	@override String get selectedAccessNumberPrompt => 'Bij selectie wordt het volledige toegangsnummer weergegeven en wordt er een verificatietekenreeks gegenereerd.';
	@override String get location => 'plaatsing';
	@override String get verificationString => 'validatiestring';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Gebruik uw telefoonnummer '),
		num,
		const TextSpan(text: ' en stuur '),
		label,
		const TextSpan(text: ' naar '),
		accessNumber,
		const TextSpan(text: ' om de verificatie te voltooien.'),
	]);
	@override String get ihaveSentTheSMS => 'Ik heb een sms verstuurd';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Validatiestring is 6 minuten geldig, resterende tijd: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Te snel om ${x} seconden te wachten om verder te gaan!';
	@override String get waitingForVerificationSMS => 'Wachten op verificatie-sms...';
	@override String get partSuccsForVerificationSMS => 'De SMS-verificatie van een van de toegangsterminals is geslaagd!';
	@override String get creatingAccessToken => 'Toegangstoken wordt aangemaakt...';
	@override String get intoDelta => 'Binnen Delta';
	@override String get deltaAccountIsLoggedIn => 'Uw Delta-account is ingelogd';
	@override String get iHavLoggedOut => 'Ik ben weg.';
	@override String get startTwoFactorVerification => 'Beginnen met dubbele verificatie';
	@override String get securityCircleVerification => 'Cirkel van veiligheidsvalidatie';
	@override String get generateSecurityCode => 'Beveiligingscode genereren';
	@override String get generateSecurityCodeHintText => 'De gegenereerde beveiligingscode wordt naar een willekeurig gekozen lid van je beveiligingskring gestuurd.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'U hebt geen beveiligingscirkel ingesteld, uw account is erg onveilig, voer een willekeurige plaatshouder met 6 cijfers in en ga naar de volgende stap.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'De beveiligingscode is gegenereerd, neem contact op met de volgende familie en vrienden om hen te vragen de beveiligingscode voor u te extraheren om door de verificatie te komen. 30 minuten geldig!';
	@override String get itGetSecurityCodeTip => 'Tip: Je kunt de beveiligingscode krijgen door te dubbelklikken op je accountnaam op de Delta App -> Menu -> Beveiliging geven pagina.';
	@override String get securityCircleMemberList => 'Ledenlijst van de beveiligingskring:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Selecteer een familielid of vriend in de ledenlijst om een ​​beveiligingscode te genereren en u te voorzien om uw ware identiteit te verifiëren. Het doel is om te voorkomen dat het account door anderen wordt beheerd wanneer het mobiele telefoonnummer verloren of gestolen is.';
	@override String formatIsXdigits({required Object num}) => 'Formaat als ${num} cijfers';
	@override String get signInSuccessfully => 'Succesvol inloggen!';
	@override String get twoFAandLogin => 'Dubbele verificatie en inloggen';
	@override String get verificationSuccessful => 'Controleer succes!';
	@override String get validationFailed => 'Validatie mislukt!';
	@override String get dappInfo => 'DApp-informatie';
	@override String get securityCircle => 'veiligheidsring';
	@override String get securityCode => 'beveiligingscode';
	@override String get provideSecurity => 'beveiliging bieden';
	@override String get addManully => 'Handmatig toevoegen';
	@override String get addFromContacts => 'Toevoegen vanuit adresboek';
	@override String get addSecurityCircle => 'Cirkel van veiligheid toevoegen';
	@override String get inputType => 'Type invoer';
	@override String get mobileNumber => 'mobiel telefoonnummer';
	@override String get did => 'Adres id';
	@override String get pleaseEnterValidDID => 'Voer een geldige gedecentraliseerde identiteits-id in';
	@override String get pleaseEnterValidWalletAddress => 'Voer een geldig portefeuilleadres in';
	@override String get appellation => 'vorm van adres';
	@override String get appellationHint => 'Hoe noem je het, zoals "baby"?';
	@override String get addSecurityCircleTips => 'Voeg geen mensen die je niet vertrouwt toe aan je beveiligingsgroep.';
	@override String get referralTeam => 'Aanbevolen teams';
	@override String get profile => 'Accountgegevens';
	@override String get menu => 'menu';
	@override String get directly => 'direct';
	@override String get indirectly => 'indirect';
	@override String get inviteContacts => 'Uitnodiging Contact';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Je genodigde is '),
		nickname,
		const TextSpan(text: ' en je hebt direct '),
		num1,
		const TextSpan(text: ' mensen doorverwezen, waarvan '),
		num2,
		const TextSpan(text: ' momenteel online zijn.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Je hebt indirect '),
		num1,
		const TextSpan(text: ' mensen doorverwezen, waarvan '),
		num2,
		const TextSpan(text: ' momenteel online zijn.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Nodig vrienden uit om zich bij Delta aan te sluiten en samen de sociale consensus te verbeteren. Elke directe aanbeveling van één persoon verhoogt het mijnbouwtarief met '),
		rate1,
		const TextSpan(text: ' van het basistarief. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Nodig vrienden uit om zich bij Delta aan te sluiten en samen de sociale consensus te verbeteren. Elke indirecte aanbeveling van één persoon verhoogt het mijnbouwtarief met '),
		rate2,
		const TextSpan(text: ' van het basistarief.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Weet je zeker dat je "${name}" wilt verwijderen?';
	@override String get safetyCircleRoleQ => 'Wat is het doel van de veiligheidsring?';
	@override String get safetyCircleRoleA => 'Bescherm je account door secundaire verificatie te bieden in gevoelige situaties.';
	@override String get howSecurityCirclesWorkQ => 'Hoe werken veiligheidsringen?';
	@override String get howSecurityCirclesWorkA => 'In het geval dat een Circle of Safety verificatie nodig is, zal het Delta Smart Contracts programma willekeurig een lid van de Circle of Safety buddy lijst selecteren om je te helpen met een veiligheidscode om de identiteitsverificatie voor je te voltooien. Wanneer je het lid om de veiligheidscode vraagt, kan het bevestigen of jij het bent of niet. Tegelijkertijd zal het programma vragen: "Weiger de beveiligingscode te geven als u het niet bent", om de veiligheid van uw account te beschermen. Zorg er dus altijd voor dat de leden van je beveiligingskring mensen zijn die je kunt vertrouwen.';
	@override String get securityCircleBeUsedQ => 'Wanneer wordt het gebruikt?';
	@override String get securityCircleBeUsedA1 => '1. Wanneer je de controle over je Delta APP verliest, is het meestal zo dat je mobiele telefoon verloren of gestolen is.';
	@override String get securityCircleBeUsedA2 => '2. Bij sommige gevoelige operaties moet het Delta Smart Contract-programma bevestigen dat jij het bent.';
	@override String get provideSafetyTip1 => 'Wanneer je buddy je om zijn beveiligingscode vraagt, zorg er dan voor dat je bevestigt dat het zijn eigen code is.';
	@override String get provideSafetyTip2 => 'Je biedt beveiliging aan de bovenstaande vrienden, die jou als de meest vertrouwde persoon in hun beveiligingskring hebben ingesteld en die jou nodig hebben om hun beveiliging te bevestigen voor het geval ze te maken krijgen met gevoelige operaties op hun account.';
	@override String get provideSafetyTip3 => 'Dubbelklik indien nodig op de avatar van de andere persoon om de beveiligingscode uit te pakken.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'De andere partij heeft momenteel geen beveiligingscode die moet worden uitgepakt!';
	@override String get existSecurityCodeTip => 'Zorg ervoor dat de vriend of het familielid die u om de beveiligingscode vraagt dezelfde is als de vriend of het familielid. Om de veiligheid van uw vriend of familielid te beschermen, moet u weigeren de beveiligingscode te geven als de vriend of het familielid niet dezelfde is als de vriend of het familielid.';
	@override String get avatarSettings => 'Avatar-instellingen';
	@override String get NFTAvatarPropertyRightsText => 'Disclaimer: Het gebruik van de NFT in kwestie als avatar is alleen voor persoonlijke voorkeur en heeft niets te maken met het bezitten van de intellectuele eigendomsrechten van die NFT.';
	@override String get projectWebsite => 'Projectwebsite:';
	@override String get whitepaper => 'wit papier:';
	@override String get indexID => 'Index Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Index tussen ${start} en ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Voer het indexnummer van je favoriete NFT in en het programma laadt het automatisch als avatar voor je.';
	@override String get miningRate => 'mijnbouwtarief';
	@override String get miningDetails => 'Mijnbouw Details';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Totaal mijnbouwtarief: '),
		rate,
		const TextSpan(text: ' δ/dag'),
	]);
	@override String get EndOfMiningSession => 'Cycle mining is voorbij:';
	@override String get tapToMineDeltaCoin => 'Klik om Delta-munten te delven ↑';
	@override String get clickToStartMining => 'Klik om te beginnen met mijnen!';
	@override String get miningHasStoppedPromptDesc => 'Mijnbouw is gestopt, elke 24 uur is een mijnbouwcyclus, klik op het bliksempictogram om een nieuwe mijnbouwronde te starten.Delta\'s mijnbouw is een toewijzingsmechanisme dat geen extra rekenkracht en netwerkverkeer van je apparaat verbruikt.';
	@override String get aboutBaseRate => 'Over de basisrente?';
	@override String get baseRateDescription => 'Zoals overeengekomen in de whitepaper, zal de regel voor het verlagen van het basistarief voor Delta mining worden verdeeld in twee fasen.\nFase 1: Het tarief zal 32δ/dag zijn wanneer het aantal deelnemers (registraties) 3000 of minder is. Met dit als startbasis wordt het basistarief gehalveerd elke keer dat het aantal mensen met een factor 10 toeneemt.\nFase 2: Wanneer het aantal deelnemers 30 miljoen of meer bedraagt, wordt het basistarief gehalveerd telkens als het aantal deelnemers met een factor 3 toeneemt. Tot de laatste opgraving de productie stopt.';
	@override String get baseRate => 'basistarief (zoals in ISDN)';
	@override String get directReferralRewards => 'Directe Verwijsbonus';
	@override String get directReferralRewardDesc => 'Voor elke directe verwijzing wordt je mijnbouwtarief verhoogd met 1/3 van het basistarief terwijl ze aan het mijnen zijn.\n\n Daarnaast telt de mining status van je referrals ook mee voor je directe referral bonus.';
	@override String get indirectReferralRewards => 'Indirecte verwijzingsbeloningen';
	@override String get indirectReferralRewardDesc => 'Wanneer een indirecte verwijzing aan het mijnen is, wordt je mijnsnelheid verhoogd met een extra 1/10e van de basissnelheid.\n\n Je directe doorverwijzingsteam, elke persoon die ze doorverwijzen vertegenwoordigt een indirecte doorverwijzing voor jou.';
	@override String get mine => 'winnen (erts of andere bron uit een mijn)';
	@override String get thisMiningInformation => 'Actuele mijnbouwinformatie';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Deelgenomen aan mijnbouw: '),
		x,
		const TextSpan(text: ' keer'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Totale winst deze keer: '),
		x,
		const TextSpan(text: ' Delta munten'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Basisinkomsten: '),
		x,
		const TextSpan(text: ' munten'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Directe teambijdrage: '),
		x,
		const TextSpan(text: ' munten'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Indirecte teambijdrage: '),
		x,
		const TextSpan(text: ' munten'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Tijdsduur tussen opgravingen: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Effectieve mijnbouwuren: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} uur';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Voor de beveiliging van activa moeten de leden van de beveiligingscirkel altijd 3-5 vertrouwde personen aanhouden.';
	@override String get index => 'indexering';
	@override String get amount => 'som geld';
	@override String get balance => 'saldi';
	@override String get timeStamp => 'tijdstempel';
	@override String get summary => 'samenvattingen';
	@override String get miningHasStopped => 'De mijnbouw is gestopt.';
	@override String get miningHasStoppedDesc => 'Je mijnbouw is momenteel gestopt, begin nu met verdienen.';
	@override String get startMining => 'Mijnbouw starten';
	@override String get changeMobileNumber => 'Verandering van mobiel telefoonnummer';
	@override String get currentMobileNumber => 'Huidig mobiel telefoonnummer';
	@override String get newMobileNumber => 'Nieuw mobiel telefoonnummer';
	@override String get securityCodeFormatIs6digits => 'De beveiligingscode bestaat uit 6 cijfers!';
	@override String get startVrification => 'Verificatie starten';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Dit mobiele nummer bestaat al, bijbehorende DID: ${dId}';
	@override String get noDataYet => 'Geen gegevens beschikbaar';
	@override String get previousMobileNumber => 'Vorig mobiel telefoonnummer';
	@override String get changeLog => 'Verslag van wijzigingen';
	@override String get referralLinkToShare => 'Aanbevolen koppelingen om te delen';
	@override String get referrer => 'verwijzer';
	@override String get isoCountryCode => 'ISO-landcode';
	@override String get avatarLogo => 'koptekst logo';
	@override String get creationTime => 'Tijd van creatie';
	@override String get lastUpdate => 'Laatste update';
	@override String get numberOfSecurityCircleMembers => 'Aantal leden van beveiligingskringen';
	@override String get theLatestMining => 'Laatste opgraving';
	@override String get effectiveMiningDays => 'Aantal dagen effectieve mijnbouw';
	@override String get modifyNickname => 'Bijnaam wijzigen';
	@override String get didNotChange => 'Geen verandering!';
	@override String get kycVerification => 'KYC-verificatie';
	@override String get faceID => 'Gezicht ID';
	@override String get touchID => 'Vingerafdruk ID';
	@override String get biometricsAuthorizationTest => 'Biometrische verificatie testen';
	@override String get currentState => 'huidige status';
	@override String get biometricsAuthenticationLocalizedReason => 'Gebruik de ontgrendeling van uw apparaat om uw identiteit te verifiëren.';
	@override String get graph => 'archief van afbeeldingen (bijv. kaarten, documenten of botanische figuren)';
	@override String get referralRelationshipGraph => 'Verwijzingsrelatie in kaart brengen';
	@override String get nativeContacts => 'Lokale contacten';
	@override String get registrationAndMiningTrends => 'Registratie en mijnbouwtrends';
	@override String get inMining => 'mijnbouw';
	@override String get registrationVolume => 'registratievolume';
	@override String get unmined => 'Onbenut';
	@override String get mined => 'gedolven';
	@override String get communityMining => 'Mijnbouw in de Gemeenschap';
	@override String get consensusPromotionFund => 'Consensus Promotiefonds';
	@override String get ecologicalAwardFund => 'Ecologisch Stimuleringsfonds';
	@override String get icpFuelCrowdfunding => 'ICP Brandstof Crowdfunding';
	@override String get coreDeveloperRewards => 'Beloningen voor ontwikkelaars';
	@override String get totalAllocation => 'Algemene verdeling';
	@override String get miningRatio => 'Mijnbouwratio';
	@override Map<String, String> get billion => {
		'30': '30 miljard',
		'60': '60 miljard',
		'180': '180 miljard.',
		'300': '300 miljard',
	};
	@override String get watchAdsToSupportDevelopers => 'Bekijk advertenties om ontwikkelaars te ondersteunen';
	@override String get loadingAdcomponents => 'Advertentiecomponenten laden...';
	@override String get timeIsNotUp => 'De tijd is nog niet voorbij!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Laden mislukt, mogelijk netwerk geblokkeerd!';
	@override String get pendingUSCTrecords => 'In afwachting van USCT-gegevens';
	@override String get pendingUSCTrecordsDesc => 'Hangende USCT-records worden binnen 15-30 dagen bevestigd met het advertentieplatform en geldige records worden overgezet naar de USCT-recordlijst en het juiste USCT-bedrag wordt toegevoegd aan het accountsaldo.';
	@override String get validity => 'geldigheid';
	@override String get advertiser => 'adverteerders';
	@override String get earned => 'verdiend';
	@override String get withdraw => 'geld opnemen';
	@override String get validUSCTrecords => 'Effectieve USCT-gegevens';
	@override String get USCTmining => 'USCT Mijnbouw';
	@override String get aboutUSCTmining => 'Over USCT-mijnbouw?';
	@override String get aboutUSCTminingItme1 => '1. USDT is een wereldwijd populaire U.S. dollar stablecoin die gemakkelijk kan worden ingewisseld voor nationale soevereine valuta op grote cryptocurrency beurzen over de hele wereld.';
	@override String get aboutUSCTminingItme2 => '2. USCT is een tijdelijke maatregel van de opbrengst van USCT mining, bekend als USD-krediet, dat uiteindelijk zal worden omgezet in USDT volgens het werkelijke afrekeningsbedrag en de distributieregels van het advertentieplatform en de overeenkomstige verhouding.';
	@override String get aboutUSCTminingItme3 => '3. USCT Mining is een verkeersadvertentiefunctie van de Delta-gemeenschap. Het maakt gebruik van de grote gebruikersbasis van de Delta-gemeenschap om meerdere voordelen te bieden voor adverteerders, Delta-ontwikkelaars en afwezigen. Het is ontworpen om een bepaald bedrag aan effectieve inkomsten te verschaffen aan afwezige werknemers in het vroege stadium waarin het Delta-ecosysteem nog niet is gevormd en bloeit; tegelijkertijd biedt het ook bepaalde financiële steun aan ontwikkelaars om ervoor te zorgen dat zij gedurende een lange periode ontwikkelingsdiensten kunnen blijven leveren en uiteindelijk alle plannen in de whitepaper kunnen realiseren; en het biedt ook een effectief promotiekanaal voor de productadverteerders.';
	@override String get aboutUSCTminingItme4 => '4. De verdelingsregels zijn zo ontworpen dat 40 procent van de totale opbrengst wordt gebruikt als commissies voor technische diensten voor ontwikkelaars en de resterende 60 procent als verzuimbeloningen voor de gemeenschap. Verzuimbeloning deel van het multi-level distributiemodel vergelijkbaar met DTC, zal het verzuim beloning worden verdeeld in drie delen volgens de verhouding van 6:3:1, elke keer dat een van het verzuim beloning van USCT mijnbouw 6 delen toegewezen aan het verzuim van de huidige advertenties, 3 delen toegewezen aan de superieure verwijzer, 1 deel toegewezen aan het tweede niveau verwijzer. Op dezelfde manier kun je dezelfde referrerbeloning krijgen voor de vrienden die je doorverwijst via USCT mining. Het voordeel van deze verdeling op meerdere niveaus is dat iedereen een relatief groot bedrag aan USDT kan verdienen door een downline team te ontwikkelen.';
	@override String get aboutUSCTminingItme5 => '5. De afwikkelingsperiode is 7 dagen, d.w.z. elke 7 dagen wordt de geldigheid gecontroleerd met het advertentieplatform en de bevestigde geldigheid van de opbrengst en het werkelijke bedrag worden opgenomen in het saldo. Het minimumbedrag voor elke opname is 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Rijen ${x} tot ${y}.';
	@override String get wallet => 'portemonnees';
	@override String get multiChainWallet => 'multichain portemonnee';
	@override String get deposit => 'storting (bijv. op een bankrekening)';
	@override String get transfer => 'overschrijving (geld naar een bankrekening)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} in het adres van de portemonnee';
	@override String get transactions => 'Transactiegegevens';
	@override String get network => 'waterafvoer';
	@override String get walletAddress => 'Portemonnee adres';
	@override String get currentAddress => 'huidig adres';
	@override String get depositAddress => 'Oplaadadres';
	@override String get receivingMoneyAddress => 'adres begunstigde';
	@override String get applyTempDepositAddress => 'Adres voor het aanvragen van een tijdelijke opwaardering';
	@override String get tempDepositAddressTip => '1. Dit is een gedeeld borgadres. Stort het bedrag niet nadat het huurcontract is verlopen of nadat je bent ontbonden. Als dit gebeurt, gaat het bedrag verloren.';
	@override String get tempDepositAddressTip2 => '2. Voordat u een storting doet, moet u ervoor zorgen dat de [Ketennaam] en [Muntnaam] precies overeenkomen; in het geval van contract tokens, moet u er ook voor zorgen dat de [Contract Standaard] en [Contract Adres] precies overeenkomen.';
	@override String get tempDepositAddressTip3 => '3. Probeer geen geld te storten dat niet overeenkomt met een van de parameters in de bovenstaande tips, anders zal het bedrag verloren gaan.';
	@override String get tempDepositAddressTip4 => '4. Als u andere soorten activa moet storten, ga dan naar de bijbehorende valutapagina en parameteropties om een nieuw adres aan te vragen.';
	@override String get applyExtensionOfValidity => 'Aanvraag voor verlenging van de geldigheidsperiode';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Dit adres verloopt na '),
		diff,
		const TextSpan(text: ' en is '),
		tap('handmatig verlengen'),
		const TextSpan(text: ' nog 12 uur geldig voordat het verloopt.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Kan alleen 12 uur van tevoren worden verlengd';
	@override String get theReceivingAddressValidForLongtime => 'Dit adres is lang geldig.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Dit ophaaladres is lang geldig en wordt automatisch in realtime gecrediteerd.';
	@override String get confirmDeposited => 'Bevestiging van stortingen';
	@override String get unbindThisDepositAddress => 'Ontbundel dit herlaadadres';
	@override String get confirmDepositedTip => 'Als het geld is overgemaakt, klik dan op de bovenstaande knop om het bedrag na 10 minuten naar je portemonnee over te maken.';
	@override String get unbindDepositAddressTip => 'Om de lopende overhead van het slimme contract te verminderen, verzoeken we je het opwaardeeradres te deblokkeren als je geen geld meer stort tijdens de geldigheidsperiode.';
	@override String get transferToAddress => 'ga naar adres';
	@override String get longPressToPaste => 'Lang indrukken om te plakken';
	@override String get all => 'volledig';
	@override String balanceX({required Object x}) => 'Saldo ${x}';
	@override String get transferOut => 'blijken';
	@override String depositXcoins({required Object x}) => 'Bijgeschreven ${x}';
	@override String get sender => 'afzender';
	@override String get recipient => 'ontvanger';
	@override String get memo => 'noot';
	@override String get kind => 'manier (van leven)';
	@override String get transferAmountExceedsAvailableBalance => 'Overboekingen boven beschikbaar saldo';
	@override String get pleaseEnterValidAmount => 'Voer een geldig bedrag in';
	@override String get networkFee => 'Netwerkbehandelingskosten';
	@override String get fee => 'administratiekosten';
	@override String validLengthXcharacters({required Object x}) => 'Geldige lengte adres ${x} tekens';
	@override String get historys => 'historisch record';
	@override String get dtcCreditdetail => 'Details Delta-punten';
	@override String get usdCreditdetail => 'USD Punten Details';
	@override String get dappSquare => 'dApp-plein';
	@override String get amountRaised => 'Opgehaald bedrag';
	@override String get disbursedAmount => 'Uitgegeven bedrag';
	@override String get participationTimes => 'Aantal deelnemers';
	@override String get completionRate => 'voltooiingspercentage';
	@override String get exchangeRate => 'wisselkoers';
	@override String get icpCrowdfunding => 'ICP Crowdfunding';
	@override String get crowdfunding => 'crowdfunding';
	@override String get trendsCurve => 'trendcurve';
	@override String get fullScreenView => 'schermvullende weergave';
	@override String get walletBalance => 'Saldo portemonnee:';
	@override String get manageWallet => 'Portemonnee beheren';
	@override String get fundraiseAmount => 'fondsenwerving';
	@override String get exchangeRewardAmount => 'Het beloningsbedrag inwisselen';
	@override String get fundraise => 'fondsenwerving';
	@override String rangeIntegersX({required Object x}) => 'Bereik: geheel getal ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Doe succesvol mee aan fondsenwerving en ontvang een beloning van ${amount}DTCT';
	@override String get amountSummary => 'Overzicht van bedragen';
	@override String get changePreferred => 'Verandering van voorkeur';
	@override String get changePreferredAddress => 'Voorkeursadres wijzigen';
	@override String get preferredAddressTip => 'Geld wordt automatisch overgemaakt naar het voorkeursadres wanneer geld wordt opgehaald met een geregistreerd mobiel nummer of DID.';
	@override String get newAddress => 'Nieuw adres';
	@override String get newAddressTip => 'Om misbruik te voorkomen, wordt er bij meer dan één portemonnee-adres een transactiekost aangerekend voor elk nieuw aangemaakt adres.';
	@override String get createNew => 'nieuw gebouwd';
	@override String get chainNetworkName => 'naam ketennetwerk';
	@override String get from => 'van (een plaats) komen';
	@override String get to => 'tot (een tijd)';
	@override String get noAvailableDepositAmountDetected => 'Er is geen beschikbaar depositobedrag gedetecteerd!';
	@override String get crossChainReceiveMoneyMonitoring => 'Cross-chain collectie luistert ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Ontvangen ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Bevestiging bezig ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Opmerkingen (must read voor beginners)';
	@override String get whyUseSharedAddresses => 'Waarom een gedeeld adres gebruiken?';
	@override String get useSharedrAdvantage => 'De voordelen van het gebruik van gedeelde adressen bij het storten over ketens heen zijn de volgende:';
	@override String get useSharedrAdvantage1 => '1. Verminder de verspilling van overdrachtskosten en verlaag de kosten van het gebruik voor gebruikers. Vanwege het gebruik van exclusieve adres, zal het leiden tot te veel spreiding van de middelen, in het algemeen om de latere overdracht van andere gebruikers te vergemakkelijken in de intrekking van de middelen, wanneer de gebruiker de tweede overdracht van middelen oplaadt moeten worden gebundeld in een of een klein aantal adres management.';
	@override String get useSharedrAdvantage2 => '2. In het gedeelde schema hoeft het programma slechts een relatief kleine pool van adressen te onderhouden die snel kunnen worden gematcht met uitgaande overdrachten en lichte verzameling luisterend, wat de overhead van rekenkracht vermindert. Het tegenovergestelde zou waar zijn als exclusieve adressen werden gebruikt.';
	@override String get tokenType => 'Type token';
	@override String get contract => 'aannemer';
	@override String get contractStandard => 'contractstandaard';
	@override String get contractAddress => 'contractadres';
	@override String get native => 'protozoa';
	@override String get confirmUnbindingPleaseEnterYes => 'Voer "ja" in om de ontkoppeling te bevestigen.';
	@override String get listAllWorkingTempReceivingAddresses => 'Lijst van alle werkende cross-chain herlaadadadressen';
	@override String get setNote => 'Notities instellen';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Kan niet langer zijn dan ${x} bytes';
	@override String get transferFee => 'transfersom';
	@override String get crossChainFee => 'ketenoverschrijdende vergoeding';
	@override String get crossChainTransferOutError => 'cross-link overdrachtsfout';
	@override String get chainName => 'ketennaam';
	@override String get message => 'berichten';
	@override String get dontShowAgain => 'niet langer weergegeven';
	@override String get queuing => 'wachtrij';
	@override String get optional => 'optioneel';
	@override String get publiclyVisible => 'publiekelijk zichtbaar';
	@override String get rates => 'tarief';
	@override String get minimum => 'minimum';
	@override String get maximum => 'bovengrens';
	@override String get minimumBlockConfirmations => 'Minimum aantal blokbevestigingen';
	@override String get dsmsVerifyTerminal => 'DSMS Valideringsterminal';
	@override String get overall => 'paraplu';
	@override String get my => 'mijn';
	@override String get checkValidatorQualifications => 'Kwalificaties van authenticatiebevoegdheden controleren';
	@override String get getVerifierPermissions => 'Verkrijg authenticator-rechten';
	@override String get qualification => 'natuurlijke begiftigingen';
	@override String get upperLimit => 'begrenzen';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Maximum aantal toegestane toegangsterminals';
	@override String get numberOfExistingAccessTerminals => 'Aantal geplaatste toegangsterminals';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Voordat u authenticatorrechten aanvraagt, moet u een ongebruikte Android mobiele telefoon en een speciaal toegangsnummer voorbereiden en de DSMS Access Terminal-toepassing downloaden en installeren.';
	@override String get downloadLink => 'downloadlink';
	@override String get alreadyReadyFollowingTheAboveTips => 'Het is klaar volgens de bovenstaande tips';
	@override String get globalUniversal => 'voor wereldwijd gebruik';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Momenteel zijn er niet genoeg lokale authenticators om deel te nemen aan de DSMS authenticatie toegangsdienst, selecteer alstublieft de "'),
		gu,
		const TextSpan(text: '" toegangsdienst.'),
	]);
	@override String get asDedicatedNumberForAccess => 'als alleen-toegangsnummer';
	@override String pleaseCheckTip({required Object tip}) => 'Vink het vakje "${tip}" aan.';
	@override String get inputLengthTooShort => 'Invoerlengte te kort';
	@override String get shortName => 'acroniemen';
	@override String pleaseEnterXname({required Object name}) => 'Voer ${name} in';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Aanvraag wordt ingediend, een ogenblik geduld alstublieft...';
	@override String get applyForDSMSVerifierPermission => 'Vraag DSMS-validatorrechten aan';
	@override String get confirmInformation => 'Bevestiging van informatie';
	@override String get lastHeartbeat => 'laatste hartslag';
	@override String get expirationTime => 'tijd verschuldigd';
	@override String get country => 'naties';
	@override String get accessTerminals => 'toegangsterminal';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Totaal aantal terminals met DSMS-toegangsnummer';
	@override String get textContent => 'Inhoud tekst';
	@override String get scanQRcodeToLogin => 'Vegen om in te loggen';
	@override String get confirmLogin => 'Bevestig login';
	@override String get authorizeSubApplicationToLogin => 'Deze subapplicatie machtigen om in te loggen';
	@override String get authorizationSuccessful => 'De autorisatie was succesvol!';
	@override String get launchSMSprogram => 'Lancering van het SMS-programma';
	@override String get notApplied => 'Geen toepassing';
	@override String get validityPeriod => 'geldigheidsperiode';
	@override String get renewal => 'verlengingsaanvraag';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Scan code om aanmelden bij terminal te autoriseren';
	@override String get rewards => 'prikkels';
	@override String get roles => 'karakter';
	@override String get developerCenter => 'Centrum voor ontwikkelaars';
	@override String get appName => 'Naam toepassing';
	@override String get pleaseSelect => 'selecteer';
	@override String get category => 'categorie';
	@override String get keywords => 'bijwoord';
	@override String get pleaseEnterAkeyword => 'Voer een trefwoord in';
	@override String get createApplication => 'Toepassingen maken';
	@override String get appType => 'Type toepassing';
	@override String get numberOfCategoriesMustBetween1and3 => 'Het aantal categorieën moet tussen 1 en 3 liggen';
	@override String get appLogoSpecifications => 'Afbeeldingsformaat: png, grootte: binnen 100KB, resolutie (pixel): 256*256';
	@override String get localAlbum => 'Lokale fotoalbums';
	@override String get networkPath => 'netwerkpad';
	@override String get imageURLkAddress => 'Afbeelding URL';
	@override String get urlAddressFormatIsIncorrect => 'Onjuist geformatteerd URL-adres';
	@override String get imageFormatOnlySupportsPng => 'Afbeeldingen worden alleen ondersteund in "png"-formaat.';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'De lengte moet liggen tussen ${a}-${b} tekens.';
	@override String get introduction => 'korte';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'De afbeeldingsgrootte kan niet groter zijn dan ${a}, momenteel ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'De beeldresolutie moet zijn: ${p1}(pixels), momenteel ${p2}';
	@override String get becomeDeveloper => 'Ontwikkelaar worden';
	@override String get developerInformation => 'Informatie voor ontwikkelaars';
	@override String get teamName => 'Teamnaam';
	@override String get website => 'knooppunt';
	@override String get other => 'anders dan';
	@override String get githubVerification => 'Github-verificatie';
	@override String get exampleUrl => 'Voorbeeld Url';
	@override String githubVerificationTip({required Object did}) => 'Gebruik alsjeblieft je GitHub account om een \'delta.did\' bestand in je repository te maken met de inhoud van \'${did}\'; plak dan het githubusercontent Url adres van dat bestand in deze invoervak voor verificatie.';
	@override String get createApp => 'Toepassingen maken';
	@override String get appManagement => 'applicatiebeheer';
	@override String get statusLogs => 'Statuslogboek';
	@override String get bad => 'niet goed';
	@override String get normal => 'gebruikelijk';
	@override String get good => 'een uitstekende';
	@override String get onceCreatedItCannotBeChanged => 'Eenmaal gemaakt, kan het niet meer veranderd worden!';
	@override String get manageApplicationEntity => 'Applicatie-entiteiten beheren';
	@override String get currentVersion => 'huidige versie';
	@override String get submitVersion => 'Ingediende versie';
	@override String get packageOnlySupportZipCompressedFile => 'Het pakket ondersteunt alleen gecomprimeerde zip-bestanden';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Het bestand \'${name}\' is niet gevonden in het zip-pakket.';
	@override String get fileList => 'Lijst van documenten:';
	@override String get programPackage => 'Programmeerpakket:';
	@override String get automaticallyExtractFromVersionFile => 'Automatisch geëxtraheerd uit \'.version\' bestanden';
	@override String get dappVersionFormatTip => 'Het formaat van het versienummer moet een decimaal getal zijn met een precisie van 2 cijfers, met een maximum van 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Het versienummer moet groter zijn dan de huidige versie \'${v}\'.';
	@override String get versionNotes => 'Afdruk:';
	@override String get updateRelease => 'nieuwe versie';
	@override String get loadAndRun => 'Laden en uitvoeren';
	@override String get notYetSubmittedProgramPackage => 'Het programmapakket is nog niet ingediend!';
	@override String get authorizeMinidAppLogin => 'Inloggegevens mini-dApp autoriseren';
	@override String get confirmAuthorizationPleaseEnterYes => 'Voer "ja" in om de autorisatie te bevestigen.';
	@override String get authorizeNow => 'Onmiddellijke autorisatie';
	@override String get operation => 'Bediening.';
	@override String get statusChange => 'Statuswijziging';
	@override String get changeTo => 'Veranderen in:';
	@override String get notes => 'Opmerkingen.';
	@override String get changesNotEffective => 'De wijziging is niet geldig!';
	@override String get released => 'Gepubliceerd';
	@override String get inPublicBeta => 'open bèta';
	@override String get developers => 'Ontwikkeld door.';
	@override String get reviewList => 'Lijst met opmerkingen.';
	@override String get postReview => 'Laat een reactie achter';
	@override String get scoreNow => 'Nu beoordelen';
	@override String get description => 'Beschrijving.';
	@override String get noData => '(^-^)\n Geen gegevens beschikbaar';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Versie is bijgewerkt van ${a} naar ${b}.';
	@override String get loadNewVersion => 'Nieuwe versie laden';
	@override String get name => 'Naam.';
	@override String get canisterId => 'Tank Id.';
	@override String get updateTime => 'updatetijd';
	@override String get contractCanistersState => 'Status contracttank';
	@override String get userDistribution => 'gebruikersdistributie';
	@override String get settings => 'Instelling';
	@override String get security => 'Veiligheid';
	@override String get invite => 'uitnodigingen';
	@override String get more => 'Meer...';
	@override String get receiveAddress => 'Adres ontvangen:';
	@override String get hangingAmount => 'hangend';
	@override String get hangingAmountTips => 'Bedragen in afwachting zijn tijdelijke records van beloningen gegenereerd door mijnbouw door je ondergeschikte team, zodra je een mijnbouwsessie hebt gedaan worden deze bedragen verzameld in de Bedragen in afwachting.';
	@override String get pendingAmount => 'in afwachting';
	@override String get pendingAmountTips => 'Hangende bedragen zijn bedragen die nog niet zijn bevestigd door adverteerders, en bedragen die geldig gematcht zijn worden overgebracht naar het geldige USCT record, en ongeldige delen worden uitgesloten.';
	@override String get received => 'ontvangen';
	@override String get processing => 'in uitvoering';
	@override String get replied => 'respondent';
	@override String get rejected => 'afwijzing';
	@override String get unknown => 'onbekend';
	@override String get insufficientBalance => 'Onvoldoende balans!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => '${x} saldo is onvoldoende om crosslink netwerkkosten te dekken';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Een transactie is nog niet voltooid en kan op dit moment niet worden overgedragen.';
	@override String get thisfunctionNotSupportExternalCalls => 'Deze functie wordt niet ondersteund om extern te worden aangeroepen';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Er is geen match voor een adres dat kan worden gebruikt om cross-chain fees te betalen, schakel over naar een ander ketennetwerk om het te proberen.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'De huidige overeenkomst met het maximumbedrag dat in een enkele transactie kan worden overgeboekt is ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Opmerkingen mogen niet groter zijn dan 64 bytes';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Het saldo is onvoldoende en het bedrag is: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Je kunt niet meer dan 3 adressen binden.\nAls u een nieuw betaaladres wilt koppelen.\nOntkoppel eerst een ander adres';
	@override String parametersA_exception({required Object x}) => 'Parameters: ${x}, uitzondering';
	@override String get parameterException => 'Parameter Uitzondering!';
	@override String get transferAmountMustBeLargerThan0 => 'Het transferbedrag moet groter zijn dan 0';
	@override String get authorizationHasExpired => 'Autorisatie is verlopen';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'De app is niet geautoriseerd door de eigenaar';
	@override String get authenticationTokenIsInvalid => 'Ongeldig verificatietoken';
	@override String get verifyInfoIsInvalidOrExpired => 'Ongeldige of verlopen validatie-informatie';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Controleer of het aantal toegangsterminals de limiet van één op tienduizend heeft overschreden';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'Deelname aan mijnbouw moet meer dan 3 dagen zijn';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Het aantal leden van de veiligheidscirkel mag niet minder dan drie zijn';
	@override String get avatarIsNotSet => 'Avatar niet ingesteld';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Het aantal directe verwijzingen mag niet minder zijn dan 3';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'De tijdslimiet is onvoldoende en je kunt je mobiele telefoonnummer maar één keer per jaar wijzigen.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Dit mobiele telefoonnummer bestaat al en kan niet worden gedupliceerd';
	@override String get securityCodeIsIncorrect => 'Onjuiste beveiligingscode';
	@override String get securityCodeMayHaveExpired => 'Beveiligingscode is mogelijk verlopen';
	@override String get sessionIdIsInvalidOrExpired => 'Ongeldige of verlopen sessie-id';
	@override String get sessionHasBeenAuthorized => 'De sessie werd goedgekeurd voor voltooiing!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Kan alleen worden verlengd binnen ${x} dagen voor het verstrijken van de termijn';
	@override String get notYetGrantedDeveloperPermissions => 'Nog geen rechten voor ontwikkelaars';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Veld ${x} kan niet nul zijn';
	@override String get emailFormatError => 'Fout in e-mailindeling';
	@override String theXformatIsIncorrect({required Object x}) => 'Opmaakfout \'${x}';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Het veld "${x}" moet tussen ${y} en ${z} karakters lang zijn.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Het \'${x}\' selectiebereik moet tussen ${y} en ${z} liggen.';
	@override String get unchanged_sameAsOldContent => 'Ongewijzigd, dezelfde inhoud als voorheen!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' bestaat al!';
	@override String get mobileNumberHasNotJoinedDelta => 'Dit mobiele nummer is nog niet toegevoegd aan Delta!';
	@override String get referrerIdCannotBeEmpty => 'De referrer-ID kan niet leeg zijn!';
	@override String get referrerIdDoesNotExist => 'Referrer ID bestaat niet!';
	@override String get didIsIncorrectOrInvalid => 'De DID is onjuist of ongeldig!';
	@override String get accessTokenIsIncorrectOrInvalid => 'Het toegangsToken is onjuist of ongeldig!';
	@override String get minimumWithdrawalAmountIs1USD => 'Minimaal 1USD voor een enkele opname';
	@override String get miningTimeIsNotYet => 'Het is nog geen tijd om te mijnen.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Bestaat al, voeg het niet opnieuw toe!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Kan registratienummer niet gebruiken als toegangsnummer voor verificatie';
	@override String get canotAddYourSelf => 'Kan uzelf niet toevoegen';
	@override String get logOut => 'Afmelden';
	@override String get confirmLogout => 'Uitloggen bevestigen';
	@override String get logOutTipsText => 'Let op: Volgens de whitepaper verbruikt elke loginverificatie van uw account een bepaalde hoeveelheid van uw DTC-munten die aan de verificateur wordt uitbetaald als stimulans, dus probeer niet onnodig in en uit te loggen, als u op de onderstaande knop klikt, wordt u onmiddellijk uitgelogd.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Voer "ja" in om het uitloggen te bevestigen.';
	@override String get tip => 'de aandacht op iets vestigen';
	@override String get cancel => 'annuleringen';
	@override String get close => 'stolling';
	@override String get selected => 'geselecteerd';
	@override String get edit => 'compiler';
	@override String get submit => 'indienen (een rapport enz.)';
	@override String get goBack => 'regressie (in psychologie)';
	@override String get copiedToClipboard => 'Het is gekopieerd naar het klembord.';
	@override String get nickname => 'koosnaam';
	@override String get confirm => 'herkennen';
	@override String get cannotBeEmpty => 'Kan niet leeg zijn';
	@override String get deleteSuccessful => 'Met succes verwijderd!';
	@override String get successfullyModified => 'De aanpassing was succesvol!';
	@override String get executionSuccessful => 'De implementatie was succesvol!';
	@override String get preview => 'voorbeschouwingen';
	@override String get followSystem => 'opvolgingssysteem';
	@override String get change => 'variatie';
	@override String get replace => 'verandering (van adres enz.)';
	@override String get view => 'uitchecken';
	@override String get manage => 'management';
	@override String get modify => 'wijzigingen';
	@override String get replacedSuccessfully => 'Vervanging geslaagd!';
	@override String get authentication => 'authenticatie';
	@override String get reacquire => 'ophalen';
	@override String get tryAgain => 'Probeer het opnieuw.';
	@override String get querying => 'Er wordt navraag gedaan ...';
	@override String get writingToOnChain_pleaseWait => 'Het wordt naar de ketting geschreven, even geduld ...';
	@override String get versionCheck => 'versiedetectie';
	@override String get alreadyLatestVersion => 'Nu al de nieuwste versie!';
	@override String get foundNewVersion => 'Ontdek de nieuwe versie:';
	@override String get upgradeLink => 'Link voor upgrade:';
	@override String get deviceDescription => 'Uitrusting Beschrijving.';
	@override String get notification30SecondsBeforeMiningStops => 'Voer een meldingsherinnering uit 30 seconden voordat de mijnbouw stopt!';
	@override String get goMining => 'Ga mijnen';
	@override String get deltaMiningReminder => 'Delta Mining-herinnering';
	@override String get clickToMine_miningIsAboutToStop => 'Klik hier om te minen, het minen stopt binnenkort!';
	@override String get incorrect_input => 'Onjuiste invoer!';
	@override String get are_you_sure_delete => 'Weet u zeker dat u wilt verwijderen?';
	@override String get delete_account => 'Account verwijderen';
	@override String get how_to_operate_it => 'Zie je hoe je het bedient?';
	@override String get deletion_warning_tip => 'Als u uw account verwijdert, verliest u al uw Delta-munten en alle inkomsten van andere leden.';
	@override String get launchWhatsAppProgram => 'WhatsApp-programma starten';
	@override String get sms => 'Sms\'en';
	@override String get whatsApp_verification_tips => 'Toegangsnummers met dit pictogram ondersteunen ook WhatsApp-berichtverificatie. Bij het verzenden van internationale berichten wordt aanbevolen om WhatsApp te gebruiken om het succespercentage te verhogen en de kosten te verlagen.';
	@override String get ihaveSentVerificationString => 'Ik heb een verificatiestring verzonden';
	@override String get totalOfPeople => 'Totaal aantal personen: ';
	@override String get numberOfPeopleMining => 'Aantal mensen die minen';
	@override String get useBrowserScanQRcodeToSMSprogram => 'U kunt een browser op een ander apparaat gebruiken om de QR-code te scannen en door te geven aan het SMS-programma';
	@override String get toggle => 'Toggle';
	@override String get DSMSverifier => 'DSMS-verificateur';
	@override String get activate => 'Activeren';
	@override String get activated => 'Geactiveerd';
	@override String get generateActivationCommand => 'Activeringsopdracht genereren';
	@override String get activationCommand => 'Activeringsopdracht';
	@override String get activationSentedTip => 'Controleer de activeringsstatus op het toegangsterminalapparaat nadat de activerings-sms is verzonden.';
	@override String get biometricsNotEnabledTip => 'Biometrie (gezicht of vingerafdruk) is niet ingeschakeld op uw apparaat. Schakel het in om door te gaan.';
	@override String get error => 'Fout';
	@override String get exceptionOccurredWhenCallingBiometric => 'Er is een uitzondering opgetreden bij het aanroepen van de biometrische functie (gezicht of vingerafdruk)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' toegangsnummers zijn gecontroleerd, '),
		shouldNum,
		const TextSpan(text: ' moet worden geselecteerd.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Is ${text} verzonden naar de ${n} toegangsnummers hierboven?';
	@override String get interface => 'Interface:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Wachttime-out of afzendernummer komt niet overeen';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Het mobiele nummer van het beveiligingscirkellid dat u hebt ingevuld, komt niet overeen: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Meld u binnen 10 minuten aan na het uitloggen om tweefactorauthenticatie te voorkomen.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Er moeten minimaal ${n} mobiele telefoonnummers worden ingevuld';
	@override String get noAccessNumberInYourRegionYet => 'Er is nog geen toegangsnummer in uw regio';
	@override String get notEnoughAccessNumbersInYourRegion => 'Niet genoeg toegangsnummers in uw regio';
	@override String get tipsForDeployDSMSterminal => 'Het systeem heeft automatisch een aantal toegangsnummers uit andere landen voor u geladen. Om betere en goedkopere verificatieservices te bieden, wordt aanbevolen dat u of uw verwijzende persoon de DSMS-terminal lokaal implementeert om verificatiekosten te verdienen.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Kan niemand mij de beveiligingscode geven?';
	@override String get useSupplementalMode => 'Gebruik aanvullende modus';
	@override String get returnToSecurityCodeMode => 'Terug naar beveiligingscodemodus';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Voer het bijbehorende mobiele nummer in. De landcode kan worden weggelaten.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => '${name}\'s mobiele nummer is onjuist';
	@override String get matchingVerificationStrategyIs => 'De overeenkomende verificatiestrategie is:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'De balans is groter dan 3 ICP, er hoeft voorlopig geen brandstof te worden bijgevuld.';
	@override String get escrowAccount => 'Escrow-rekening';
	@override String get fuelRelay => 'Brandstofrelais';
	@override String get pourFuel => 'Brandstof gieten';
	@override String get fuelState => 'Brandstofstatus';
	@override String get pouringFuelTips => 'Het tanken van brandstof levert u geen voor- of nadelen op. Het doel is om de ervaring met het Delta-systeem te verrijken.';
	@override String get sponsorDevelopersByWatchingAds => 'Sponsor ontwikkelaars door advertenties te bekijken';
	@override String get status => 'Status';
	@override String get date => 'Datum';
}

// Path: <root>
class _StringsPl implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsPl.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.pl,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <pl>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsPl _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'rys. początek';
	@override String get switchLanguage => 'Przełącz język';
	@override String get languageSwitch => 'Zmiana języka';
	@override String get slogan => 'Budowanie zdecentralizowanej gospodarki w delcie';
	@override String get countryRegionCode => 'Kod kraju/obszaru';
	@override String get countryRegionSelection => 'Wybór krajów i regionów';
	@override String get nextStep => 'następny krok';
	@override String get yourPhoneNumber => 'Twój numer telefonu.';
	@override String get pleaseSelectCountryAndRegion => 'Wybierz swój kraj/region';
	@override String get pleaseEnterPhoneNumber => 'Wprowadź prawidłowy numer telefonu!';
	@override String get referrerDid => 'Referrer DID';
	@override String get pleaseEnterTheReferrersDid => 'Wprowadź prawidłowy identyfikator zdecentralizowanej tożsamości polecającego';
	@override String get thisDidIsInvalid => 'Ten DID jest nieprawidłowy.';
	@override String get nicknameFormatTips => 'Pseudonim nie może być pusty, a jego długość nie może przekraczać 16 cyfr.';
	@override String get additionalIinformation => 'Dodatkowe informacje';
	@override String get invitationSubject => 'Zaproszenie do budowania konsensusu w Delcie';
	@override String invitationLetter({required Object did}) => 'Witam, biorę udział w budowaniu konsensusu Delta!\n Delta to nowa platforma walut cyfrowych o otwartym kodzie źródłowym działająca na ICP, która umożliwia zarządzanie i korzystanie z różnych walut cyfrowych bez haseł, kluczy prywatnych lub mnemoników. Kliknij ten link https://delta.kim/auto/download, aby zainstalować aplikację, a teraz możesz dołączyć do budowania konsensusu i bicia walut.\n Referrer DID: ${did}';
	@override String get dSMSverification => 'Walidacja DSMS';
	@override String get getAccessNumbers => 'Uzyskaj numery dostępu';
	@override String get getAccessNumberPromptMessage => 'Kliknij przycisk "Pobierz" poniżej, aby obrócić zestaw numerów dostępu do weryfikacji SMS w kolejce.';
	@override String get optionalAccessNumbers => 'Opcjonalny numer dostępu';
	@override String get accessNumber => 'numer dostępu';
	@override String get TELCO => 'operator (elektrowni, sieci transportowej itp.)';
	@override String get score => 'wynik';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('pl'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Zaznacz '),
			nBuilder(n),
			const TextSpan(text: ' numery dostępu i kliknij przycisk "'),
			span('text'),
			const TextSpan(text: '", aby przejść do następnego kroku.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Zaznacz '),
			nBuilder(n),
			const TextSpan(text: ' numery dostępu i kliknij przycisk "'),
			span('text'),
			const TextSpan(text: '", aby przejść do następnego kroku.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta to otwarty, zdecentralizowany, globalny eksperyment z walutą cyfrową i ekosystem aplikacji kryptowalutowych.';
	@override String get deltaGoalsDesc => 'Celem jest umożliwienie ludziom korzystania z Delty do współtworzenia nowych walut cyfrowych, które są uniwersalne, sprawiedliwe, bezpieczne, szybkie i ekologiczne. A także zapewnienie różnych skutecznych scenariuszy zastosowań dla tych walut cyfrowych i poprzednich kryptowalut.';
	@override String get details => 'szczegóły';
	@override String get get => 'zysk';
	@override String get select => 'opcja';
	@override String get send => 'wysyłanie';
	@override String get complete => 'spełnienie';
	@override String get selectedAccessNumberPrompt => 'Po wybraniu wyświetlany jest pełny numer dostępu i generowany jest ciąg uwierzytelniający.';
	@override String get location => 'umieszczenie';
	@override String get verificationString => 'ciąg walidacji';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Użyj swojego numeru telefonu '),
		num,
		const TextSpan(text: ' i wyślij '),
		label,
		const TextSpan(text: ' do '),
		accessNumber,
		const TextSpan(text: ', aby dokończyć weryfikację.'),
	]);
	@override String get ihaveSentTheSMS => 'Wysłałem wiadomość tekstową';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Ciąg walidacji jest ważny przez 6 minut, pozostały czas: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Zbyt szybko, by czekać ${x} sekund na kontynuację!';
	@override String get waitingForVerificationSMS => 'Czekam na SMS weryfikacyjny...';
	@override String get partSuccsForVerificationSMS => 'Jeden z terminali dostępowych przeszedł weryfikację SMS!';
	@override String get creatingAccessToken => 'Token dostępu jest tworzony...';
	@override String get intoDelta => 'Inside Delta';
	@override String get deltaAccountIsLoggedIn => 'Twoje konto Delta jest zalogowane';
	@override String get iHavLoggedOut => 'Odpadam.';
	@override String get startTwoFactorVerification => 'Rozpoczęcie podwójnej weryfikacji';
	@override String get securityCircleVerification => 'Weryfikacja kręgu bezpieczeństwa';
	@override String get generateSecurityCode => 'Generowanie kodu bezpieczeństwa';
	@override String get generateSecurityCodeHintText => 'Wygenerowany kod bezpieczeństwa zostanie wysłany do losowo wybranego członka Twojego kręgu bezpieczeństwa.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Nie skonfigurowałeś koła bezpieczeństwa, Twoje konto jest bardzo niezabezpieczone, wprowadź dowolny 6-cyfrowy symbol zastępczy i przejdź do następnego kroku.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Kod bezpieczeństwa został wygenerowany, skontaktuj się z następującą rodziną i przyjaciółmi, aby poprosić o wyodrębnienie kodu bezpieczeństwa w celu przejścia weryfikacji. ważne przez 30 minut!';
	@override String get itGetSecurityCodeTip => 'Wskazówka: Kod bezpieczeństwa można uzyskać, klikając dwukrotnie pseudonim konta w aplikacji Delta -> Menu -> Podaj zabezpieczenia.';
	@override String get securityCircleMemberList => 'Lista członków kręgu bezpieczeństwa:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Proszę wybrać krewnego lub znajomego na liście członków, aby wygenerował i przekazał Ci kod bezpieczeństwa w celu sprawdzenia Twojej prawdziwej tożsamości. Celem jest uniemożliwienie kontrolowania konta przez inne osoby w przypadku zgubienia lub kradzieży numeru telefonu komórkowego.';
	@override String formatIsXdigits({required Object num}) => 'Format jako ${num} cyfr';
	@override String get signInSuccessfully => 'Zaloguj się pomyślnie!';
	@override String get twoFAandLogin => 'Podwójne uwierzytelnianie i logowanie';
	@override String get verificationSuccessful => 'Zweryfikuj sukces!';
	@override String get validationFailed => 'Weryfikacja nie powiodła się!';
	@override String get dappInfo => 'Informacje o aplikacji';
	@override String get securityCircle => 'pierścień zabezpieczający';
	@override String get securityCode => 'kod bezpieczeństwa';
	@override String get provideSecurity => 'zapewnienie bezpieczeństwa';
	@override String get addManully => 'Dodaj ręcznie';
	@override String get addFromContacts => 'Dodaj z książki adresowej';
	@override String get addSecurityCircle => 'Dodaj krąg bezpieczeństwa';
	@override String get inputType => 'Typ wejścia';
	@override String get mobileNumber => 'numer telefonu komórkowego';
	@override String get did => 'Identyfikator adresu';
	@override String get pleaseEnterValidDID => 'Wprowadź prawidłowy zdecentralizowany identyfikator tożsamości';
	@override String get pleaseEnterValidWalletAddress => 'Wprowadź prawidłowy adres portfela';
	@override String get appellation => 'forma adresu';
	@override String get appellationHint => 'Jak to nazwać, jak "dziecko"?';
	@override String get addSecurityCircleTips => 'Nie dodawaj do swojego kręgu bezpieczeństwa osób, którym nie ufasz.';
	@override String get referralTeam => 'Polecane zespoły';
	@override String get profile => 'Informacje o koncie';
	@override String get menu => 'menu';
	@override String get directly => 'bezpośredni';
	@override String get indirectly => 'pośredni';
	@override String get inviteContacts => 'Zaproszenie Kontakt';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Twój zaproszony to '),
		nickname,
		const TextSpan(text: ' i bezpośrednio poleciłeś '),
		num1,
		const TextSpan(text: ' osób, z których '),
		num2,
		const TextSpan(text: ' jest obecnie online.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Pośrednio poleciłeś '),
		num1,
		const TextSpan(text: ' osób, z których '),
		num2,
		const TextSpan(text: ' jest obecnie online.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Zaproś znajomych, aby dołączyli do Delta i wspólnie poprawili konsensus społeczny. Za każde bezpośrednie polecenie stawka wydobycia jednej osoby zwiększa stawkę bazową o '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Zaproś znajomych do dołączenia do Delta i wspólnie poprawiajcie konsensus społeczny. Każda pośrednia rekomendacja jednej osoby zwiększy stawkę wydobycia o '),
		rate2,
		const TextSpan(text: ' stawki podstawowej.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Czy na pewno chcesz usunąć "${name}"?';
	@override String get safetyCircleRoleQ => 'Jaki jest cel pierścienia zabezpieczającego?';
	@override String get safetyCircleRoleA => 'Chroń swoje konto, zapewniając dodatkowe uwierzytelnianie w poufnych sytuacjach.';
	@override String get howSecurityCirclesWorkQ => 'Jak działają pierścienie zabezpieczające?';
	@override String get howSecurityCirclesWorkA => 'W przypadku, gdy wymagana jest weryfikacja Circle of Safety, program Delta Smart Contracts losowo wybierze członka listy znajomych Circle of Safety, aby pomóc w dostarczeniu kodu bezpieczeństwa w celu dokończenia weryfikacji tożsamości. Gdy poprosisz członka o kod bezpieczeństwa, może on potwierdzić, czy jesteś tobą, czy nie. Jednocześnie program wyświetli monit: "Odmów podania kodu bezpieczeństwa, jeśli to nie ty", aby chronić bezpieczeństwo konta. Dlatego zawsze powinieneś upewnić się, że członkowie twojego kręgu bezpieczeństwa to osoby, którym możesz zaufać.';
	@override String get securityCircleBeUsedQ => 'Kiedy będzie używany?';
	@override String get securityCircleBeUsedA1 => '1) W przypadku utraty kontroli nad aplikacją Delta APP, zazwyczaj dochodzi do zgubienia lub kradzieży telefonu komórkowego.';
	@override String get securityCircleBeUsedA2 => '2. w przypadku niektórych wrażliwych operacji, program Delta Smart Contract musi potwierdzić, że jesteś użytkownikiem.';
	@override String get provideSafetyTip1 => 'Gdy Twój znajomy poprosi Cię o podanie kodu bezpieczeństwa, upewnij się, że jest to jego własny kod.';
	@override String get provideSafetyTip2 => 'Zapewniasz bezpieczeństwo wyżej wymienionym znajomym, którzy ustawili Cię jako najbardziej zaufaną osobę w swoim kręgu bezpieczeństwa i potrzebują potwierdzenia bezpieczeństwa na wypadek, gdyby napotkali poufne operacje na swoim koncie.';
	@override String get provideSafetyTip3 => 'Kliknij dwukrotnie awatar drugiej osoby, aby w razie potrzeby wyodrębnić kod zabezpieczający.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'Druga strona nie posiada obecnie kodu bezpieczeństwa, który należy wyodrębnić!';
	@override String get existSecurityCodeTip => 'Należy upewnić się, że znajomy lub członek rodziny, który prosi o podanie kodu zabezpieczającego, jest taki sam jak znajomy lub członek rodziny. W celu ochrony znajomego lub członka rodziny należy odmówić podania kodu zabezpieczającego, jeśli znajomy lub członek rodziny nie jest taki sam jak znajomy lub członek rodziny.';
	@override String get avatarSettings => 'Ustawienia awatara';
	@override String get NFTAvatarPropertyRightsText => 'Zastrzeżenie: Użycie danego NFT jako awatara służy wyłącznie osobistym preferencjom i nie ma nic wspólnego z posiadaniem praw własności intelektualnej do tego NFT.';
	@override String get projectWebsite => 'Strona internetowa projektu:';
	@override String get whitepaper => 'biała księga:';
	@override String get indexID => 'Indeks Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Indeks pomiędzy ${start} i ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Wprowadź identyfikator indeksu swojego ulubionego NFT, a program automatycznie załaduje go jako awatar.';
	@override String get miningRate => 'wskaźnik wydobycia';
	@override String get miningDetails => 'Szczegóły dotyczące wydobycia';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Całkowita stawka za wydobycie: '),
		rate,
		const TextSpan(text: ' δ/dzień'),
	]);
	@override String get EndOfMiningSession => 'Wydobycie cykliczne dobiegło końca:';
	@override String get tapToMineDeltaCoin => 'Kliknij, aby wydobywać monety Delta ↑';
	@override String get clickToStartMining => 'Kliknij, aby rozpocząć wydobycie!';
	@override String get miningHasStoppedPromptDesc => 'Wydobywanie zostało zatrzymane, co 24 godziny odbywa się cykl wydobywania, kliknij ikonę błyskawicy, aby rozpocząć nową rundę wydobywania. Wydobywanie Delta to mechanizm alokacji, który nie zużywa dodatkowej mocy arytmetycznej i ruchu sieciowego z urządzenia.';
	@override String get aboutBaseRate => 'O stopie bazowej?';
	@override String get baseRateDescription => 'Jak uzgodniono w białej księdze, zasada zmniejszania stawki bazowej dla Delta mining zostanie podzielona na dwie fazy.\nFaza 1: Stawka będzie wynosić 32δ/dzień, gdy liczba uczestników (rejestracji) wynosi 3000 lub mniej. Używając tej wartości jako podstawy wyjściowej, stawka podstawowa będzie zmniejszana o połowę za każdym razem, gdy liczba osób wzrośnie o współczynnik 10.\nFaza 2: Gdy liczba uczestników osiągnie 30 milionów lub więcej, stawka bazowa jest zmniejszana o połowę za każdym razem, gdy liczba uczestników wzrośnie o współczynnik 3. Aż do ostatecznego wykopu.';
	@override String get baseRate => 'stawka podstawowa (jak w ISDN)';
	@override String get directReferralRewards => 'Premia za bezpośrednie polecenie';
	@override String get directReferralRewardDesc => 'Za każde bezpośrednie polecenie stawka wydobycia zostanie zwiększona o dodatkową 1/3 stawki bazowej, gdy są one w trybie wydobycia.\n\n Ponadto status wydobycia poleconych osób będzie również wliczany do premii za bezpośrednie polecenie.';
	@override String get indirectReferralRewards => 'Pośrednie nagrody za polecenie';
	@override String get indirectReferralRewardDesc => 'Gdy pośredni polecony wydobywa, twoja stawka wydobycia jest zwiększana o dodatkową 1/10 stawki podstawowej.\n\n Każdy bezpośrednio polecony zespół, każda osoba, którą ponownie poleci, reprezentuje pośrednie polecenie.';
	@override String get mine => 'wydobywać (rudę lub inny surowiec z kopalni)';
	@override String get thisMiningInformation => 'Bieżące informacje o wydobyciu';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Udział w wydobywaniu: '),
		x,
		const TextSpan(text: ' razy'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Całkowity zysk tym razem: '),
		x,
		const TextSpan(text: ' monet delta'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Podstawowy zarobek: '),
		x,
		const TextSpan(text: ' monet'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Bezpośredni wkład drużyny: '),
		x,
		const TextSpan(text: ' monet'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Pośredni wkład drużyny: '),
		x,
		const TextSpan(text: ' monet'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Długość czasu między wykopaliskami: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Efektywny czas wydobycia: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} godzin';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Aby zapewnić bezpieczeństwo zasobów, członkowie kręgu bezpieczeństwa powinni przez cały czas utrzymywać 3-5 zaufanych osób.';
	@override String get index => 'indeksowanie';
	@override String get amount => 'suma pieniędzy';
	@override String get balance => 'salda';
	@override String get timeStamp => 'znacznik czasu';
	@override String get summary => 'streszczenia';
	@override String get miningHasStopped => 'Wydobycie zostało wstrzymane.';
	@override String get miningHasStoppedDesc => 'Twoje wydobycie jest obecnie zatrzymane, zacznij zarabiać już teraz.';
	@override String get startMining => 'Rozpoczęcie wydobycia';
	@override String get changeMobileNumber => 'Zmiana numeru telefonu komórkowego';
	@override String get currentMobileNumber => 'Aktualny numer telefonu komórkowego';
	@override String get newMobileNumber => 'Nowy numer telefonu komórkowego';
	@override String get securityCodeFormatIs6digits => 'Format kodu bezpieczeństwa składa się z 6 cyfr!';
	@override String get startVrification => 'Rozpoczęcie weryfikacji';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Ten numer telefonu komórkowego już istnieje, powiązany DID: ${dId}';
	@override String get noDataYet => 'Brak dostępnych danych';
	@override String get previousMobileNumber => 'Poprzedni numer telefonu komórkowego';
	@override String get changeLog => 'Rejestr zmian';
	@override String get referralLinkToShare => 'Zalecane linki do udostępnienia';
	@override String get referrer => 'polecający';
	@override String get isoCountryCode => 'Kod kraju ISO';
	@override String get avatarLogo => 'logo nagłówka';
	@override String get creationTime => 'Czas tworzenia';
	@override String get lastUpdate => 'Ostatnia aktualizacja';
	@override String get numberOfSecurityCircleMembers => 'Liczba członków kręgów bezpieczeństwa';
	@override String get theLatestMining => 'Ostatni wykop';
	@override String get effectiveMiningDays => 'Liczba dni efektywnego wydobycia';
	@override String get modifyNickname => 'Zmiana pseudonimu';
	@override String get didNotChange => 'Bez zmian!';
	@override String get kycVerification => 'Weryfikacja KYC';
	@override String get faceID => 'Face ID';
	@override String get touchID => 'Identyfikator odcisku palca';
	@override String get biometricsAuthorizationTest => 'Testowanie uwierzytelniania biometrycznego';
	@override String get currentState => 'aktualny stan';
	@override String get biometricsAuthenticationLocalizedReason => 'Użyj odblokowania urządzenia, aby potwierdzić swoją tożsamość.';
	@override String get graph => 'archiwum grafik (np. map, dokumentów lub rycin botanicznych)';
	@override String get referralRelationshipGraph => 'Mapowanie relacji polecających';
	@override String get nativeContacts => 'Kontakty lokalne';
	@override String get registrationAndMiningTrends => 'Rejestracja i trendy w górnictwie';
	@override String get inMining => 'górnictwo';
	@override String get registrationVolume => 'wielkość rejestracji';
	@override String get unmined => 'niewykorzystany';
	@override String get mined => 'wydobywany';
	@override String get communityMining => 'Górnictwo wspólnotowe';
	@override String get consensusPromotionFund => 'Fundusz Promocji Konsensusu';
	@override String get ecologicalAwardFund => 'Ekologiczny fundusz motywacyjny';
	@override String get icpFuelCrowdfunding => 'Crowdfunding ICP Fuel';
	@override String get coreDeveloperRewards => 'Nagrody dla głównych deweloperów';
	@override String get totalAllocation => 'Ogólna dystrybucja';
	@override String get miningRatio => 'Współczynnik wydobycia';
	@override Map<String, String> get billion => {
		'30': '30 miliardów',
		'60': '60 miliardów',
		'180': '180 mld euro.',
		'300': '300 miliardów',
	};
	@override String get watchAdsToSupportDevelopers => 'Oglądaj reklamy, by wspierać deweloperów';
	@override String get loadingAdcomponents => 'Ładowanie komponentów reklamowych...';
	@override String get timeIsNotUp => 'Czas się nie skończył!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Nie udało się załadować, prawdopodobnie sieć zablokowana!';
	@override String get pendingUSCTrecords => 'Oczekujące zapisy USCT';
	@override String get pendingUSCTrecordsDesc => 'Oczekujące rekordy USCT zostaną potwierdzone na platformie reklamowej w ciągu 15-30 dni, a prawidłowe rekordy zostaną przeniesione na listę rekordów USCT, a odpowiednia kwota USCT zostanie dodana do salda konta.';
	@override String get validity => 'ważność';
	@override String get advertiser => 'reklamodawcy';
	@override String get earned => 'zarobiony';
	@override String get withdraw => 'wycofać';
	@override String get validUSCTrecords => 'Skuteczne zapisy USCT';
	@override String get USCTmining => 'USCT Mining';
	@override String get aboutUSCTmining => 'O górnictwie USCT?';
	@override String get aboutUSCTminingItme1 => '1. USDT to popularny na całym świecie stablecoin dolara amerykańskiego, który można łatwo wymienić na krajowe waluty suwerenne na głównych giełdach kryptowalut na całym świecie.';
	@override String get aboutUSCTminingItme2 => '2. USCT jest tymczasową miarą wpływów z wydobycia USCT, znaną jako kredyt USD, który ostatecznie zostanie zamieniony na USDT zgodnie z rzeczywistą kwotą rozliczenia i zasadami dystrybucji platformy reklamowej oraz odpowiednią proporcją.';
	@override String get aboutUSCTminingItme3 => '3. USCT Mining to funkcja realizacji reklam drogowych w społeczności Delta. Wykorzystuje ona dużą bazę użytkowników społeczności Delta w celu zapewnienia wielu korzyści dla reklamodawców, deweloperów Delta i nieobecnych. Ma ona na celu zapewnienie pewnej kwoty efektywnego dochodu dla nieobecnych pracowników na wczesnym etapie, gdy ekosystem Delta jeszcze się nie ukształtował i nie prosperował; jednocześnie zapewnia również pewne wsparcie finansowe dla deweloperów, aby zapewnić, że będą oni mogli nadal świadczyć usługi rozwojowe przez długi okres czasu, a ostatecznie będą w stanie zrealizować wszystkie plany zawarte w białej księdze; a także zapewnia skuteczny kanał promocyjny dla reklamodawców produktów.';
	@override String get aboutUSCTminingItme4 => '4) Zasady dystrybucji zostały zaprojektowane w taki sposób, że 40% całkowitych wpływów jest wykorzystywane jako prowizje za usługi techniczne dewelopera, a pozostałe 60% jest wykorzystywane jako nagrody za absencję w społeczności. Część nagrody za nieobecność w wielopoziomowym modelu dystrybucji podobnym do DTC, nagroda za nieobecność zostanie podzielona na trzy części zgodnie ze stosunkiem 6:3:1, za każdym razem, gdy jedna z nagród za nieobecność w USCT mining 6 części zostanie przydzielona do nieobecności w bieżących reklamach, 3 części przydzielone nadrzędnemu polecającemu, 1 część przydzielona polecającemu drugiego poziomu. Podobnie, możesz również otrzymać taką samą nagrodę dla polecającego za znajomych, których polecisz za pośrednictwem USCT mining. Zaletą tej wielopoziomowej dystrybucji jest to, że każdy może zarobić stosunkowo dużą ilość USDT, rozwijając zespół downline.';
	@override String get aboutUSCTminingItme5 => '5. Okres rozliczeniowy wynosi 7 dni, tj. co 7 dni ważność jest sprawdzana na platformie reklamowej, a potwierdzona ważność wpływów i rzeczywista kwota zostaną zapisane na saldzie. Minimalna kwota dla każdej wypłaty wynosi 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Wiersze od ${x} do ${y}.';
	@override String get wallet => 'torebki';
	@override String get multiChainWallet => 'portfel wielołańcuchowy';
	@override String get deposit => 'depozyt (np. na rachunku bankowym)';
	@override String get transfer => 'przelew (pieniądze na konto bankowe)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} w adresie portfela';
	@override String get transactions => 'Rejestry transakcji';
	@override String get network => 'siatkówka';
	@override String get walletAddress => 'Adres portfela';
	@override String get currentAddress => 'aktualny adres';
	@override String get depositAddress => 'Adres doładowania';
	@override String get receivingMoneyAddress => 'adres odbiorcy płatności';
	@override String get applyTempDepositAddress => 'Adres do składania wniosków o tymczasowe doładowanie';
	@override String get tempDepositAddressTip => '1) Jest to wspólny adres depozytowy. Nie należy wpłacać kwoty po wygaśnięciu umowy najmu lub po rozwiązaniu umowy. W takim przypadku kwota zostanie utracona.';
	@override String get tempDepositAddressTip2 => '2) Przed dokonaniem wpłaty należy upewnić się, że [nazwa łańcucha] i [nazwa monety] są dokładnie zgodne; w przypadku tokenów kontraktowych należy również upewnić się, że [standard kontraktu] i [adres kontraktu] są dokładnie zgodne.';
	@override String get tempDepositAddressTip3 => '3. nie należy próbować wpłacać środków, które nie odpowiadają żadnemu z parametrów podanych w powyższych wskazówkach, w przeciwnym razie kwota zostanie utracona.';
	@override String get tempDepositAddressTip4 => '4) Jeśli chcesz zdeponować inne rodzaje aktywów, przejdź do strony odpowiedniej waluty i opcji parametrów, aby złożyć wniosek o nowy adres.';
	@override String get applyExtensionOfValidity => 'Wniosek o przedłużenie okresu ważności';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Ten adres wygaśnie po '),
		diff,
		const TextSpan(text: ' i będzie '),
		tap('manually extend'),
		const TextSpan(text: ' ważny przez 12 godzin przed wygaśnięciem.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Można odnowić tylko z 12-godzinnym wyprzedzeniem';
	@override String get theReceivingAddressValidForLongtime => 'Ten adres jest ważny przez długi czas.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Ten adres zbiórki jest ważny przez długi czas i jest automatycznie zasilany w czasie rzeczywistym.';
	@override String get confirmDeposited => 'Potwierdzenie depozytów';
	@override String get unbindThisDepositAddress => 'Odłącz ten adres doładowania';
	@override String get confirmDepositedTip => 'Jeśli środki zostały przelane, kliknij powyższy przycisk, aby uruchomić rozliczenie do portfela po 10 minutach.';
	@override String get unbindDepositAddressTip => 'W celu zmniejszenia obciążenia inteligentnego kontraktu, prosimy o odblokowanie adresu doładowania, jeśli nie zamierzasz wpłacać więcej środków w okresie ważności.';
	@override String get transferToAddress => 'przejdź do adresu';
	@override String get longPressToPaste => 'Długie naciśnięcie, aby wkleić';
	@override String get all => 'pełny';
	@override String balanceX({required Object x}) => 'Saldo ${x}';
	@override String get transferOut => 'wyłączyć się';
	@override String depositXcoins({required Object x}) => 'Kredyt ${x}';
	@override String get sender => 'nadawca';
	@override String get recipient => 'odbiorca';
	@override String get memo => 'uwaga';
	@override String get kind => 'sposób (życia)';
	@override String get transferAmountExceedsAvailableBalance => 'Przelewy przekraczające dostępne saldo';
	@override String get pleaseEnterValidAmount => 'Wprowadź prawidłową kwotę';
	@override String get networkFee => 'Opłata za obsługę sieci';
	@override String get fee => 'opłata manipulacyjna';
	@override String validLengthXcharacters({required Object x}) => 'Prawidłowa długość adresu ${x} znaków';
	@override String get historys => 'zapis historyczny';
	@override String get dtcCreditdetail => 'Szczegóły dotyczące punktów Delta';
	@override String get usdCreditdetail => 'Szczegóły dotyczące punktów USD';
	@override String get dappSquare => 'dApp Plaza';
	@override String get amountRaised => 'Zebrana kwota';
	@override String get disbursedAmount => 'Wyemitowana kwota';
	@override String get participationTimes => 'Liczba uczestników';
	@override String get completionRate => 'wskaźnik ukończenia';
	@override String get exchangeRate => 'kurs wymiany walut';
	@override String get icpCrowdfunding => 'Crowdfunding ICP';
	@override String get crowdfunding => 'crowdfunding';
	@override String get trendsCurve => 'krzywa trendu';
	@override String get fullScreenView => 'Widok pełnoekranowy';
	@override String get walletBalance => 'Saldo portfela:';
	@override String get manageWallet => 'Zarządzanie portfelem';
	@override String get fundraiseAmount => 'zbieranie funduszy';
	@override String get exchangeRewardAmount => 'Realizacja kwoty nagrody';
	@override String get fundraise => 'zbieranie funduszy';
	@override String rangeIntegersX({required Object x}) => 'Zakres: liczba całkowita ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Pomyślnie weź udział w zbiórce pieniędzy i otrzymaj nagrodę ${amount}DTCT';
	@override String get amountSummary => 'Podsumowanie kwot';
	@override String get changePreferred => 'Zmiana preferencji';
	@override String get changePreferredAddress => 'Zmiana preferowanego adresu';
	@override String get preferredAddressTip => 'Środki zostaną automatycznie przelane na preferowany adres, gdy zostaną pobrane przy użyciu zarejestrowanego numeru telefonu komórkowego lub DID.';
	@override String get newAddress => 'Nowy adres';
	@override String get newAddressTip => 'Aby zapobiec nadużyciom, gdy istnieje więcej niż jeden adres portfela, za każdy nowo utworzony adres pobierana jest opłata transakcyjna.';
	@override String get createNew => 'nowo wybudowany';
	@override String get chainNetworkName => 'nazwa sieci łańcuchowej';
	@override String get from => 'pochodzić z (miejsca)';
	@override String get to => 'do (czasu)';
	@override String get noAvailableDepositAmountDetected => 'Nie wykryto dostępnej kwoty depozytu!';
	@override String get crossChainReceiveMoneyMonitoring => 'Kolekcja cross-chain jest ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Otrzymane ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Potwierdzenie w toku ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Uwagi (obowiązkowa lektura dla początkujących)';
	@override String get whyUseSharedAddresses => 'Dlaczego warto używać adresu współdzielonego?';
	@override String get useSharedrAdvantage => 'Zalety korzystania ze współdzielonych adresów podczas deponowania w łańcuchach są następujące:';
	@override String get useSharedrAdvantage1 => '1) Zmniejszenie marnotrawstwa opłat transferowych i obniżenie kosztów użytkowania dla użytkowników. Ze względu na korzystanie z wyłącznego adresu, doprowadzi to do zbyt dużego rozproszenia środków, zazwyczaj w celu ułatwienia późniejszego transferu innych użytkowników przy wypłacie środków, gdy użytkownik doładowuje drugi transfer środków, należy je połączyć w jeden lub niewielką liczbę adresów zarządzania.';
	@override String get useSharedrAdvantage2 => '2) W schemacie współdzielonym program musi utrzymywać tylko stosunkowo niewielką pulę adresów, które można szybko dopasować do transferów wychodzących i lekkiego nasłuchiwania kolekcji, co zmniejsza obciążenie zasobów obliczeniowych. W przeciwieństwie do tego, sytuacja byłaby odwrotna, gdyby używane były adresy wyłączne.';
	@override String get tokenType => 'Typ tokena';
	@override String get contract => 'umowny';
	@override String get contractStandard => 'standard umowy';
	@override String get contractAddress => 'adres umowy';
	@override String get native => 'pierwotniaki';
	@override String get confirmUnbindingPleaseEnterYes => 'Aby potwierdzić odłączenie, wpisz "tak".';
	@override String get listAllWorkingTempReceivingAddresses => 'Lista wszystkich działających adresów doładowania cross-chain';
	@override String get setNote => 'Konfigurowanie notatek';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Nie może być dłuższy niż ${x} bajtów';
	@override String get transferFee => 'opłata transferowa';
	@override String get crossChainFee => 'opłata cross-chain';
	@override String get crossChainTransferOutError => 'błąd transferu cross-link';
	@override String get chainName => 'nazwa łańcucha';
	@override String get message => 'wiadomości';
	@override String get dontShowAgain => 'nie jest już wyświetlany';
	@override String get queuing => 'kolejka';
	@override String get optional => 'opcjonalny';
	@override String get publiclyVisible => 'publicznie widoczne';
	@override String get rates => 'taryfa';
	@override String get minimum => 'minimum';
	@override String get maximum => 'górny limit';
	@override String get minimumBlockConfirmations => 'Minimalna liczba potwierdzeń bloków';
	@override String get dsmsVerifyTerminal => 'Terminal walidacyjny DSMS';
	@override String get overall => 'parasol';
	@override String get my => 'mój';
	@override String get checkValidatorQualifications => 'Sprawdzanie uprawnień uwierzytelniających';
	@override String get getVerifierPermissions => 'Uzyskaj uprawnienia autoryzatora';
	@override String get qualification => 'naturalne wyposażenie';
	@override String get upperLimit => 'limit';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Maksymalna liczba dozwolonych terminali dostępu';
	@override String get numberOfExistingAccessTerminals => 'Liczba terminali dostępowych na miejscu';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Przed złożeniem wniosku o uprawnienia uwierzytelniające należy przygotować bezczynny telefon komórkowy z systemem Android i dedykowany numer dostępowy oraz pobrać i zainstalować aplikację DSMS Access Terminal.';
	@override String get downloadLink => 'link do pobrania';
	@override String get alreadyReadyFollowingTheAboveTips => 'Jest gotowy zgodnie z powyższymi wskazówkami';
	@override String get globalUniversal => 'do użytku globalnego';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Obecnie nie ma wystarczającej liczby lokalnych uwierzytelniaczy, aby uczestniczyć w usłudze dostępu uwierzytelniania DSMS, wybierz usługę dostępu "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'jako numer tylko z dostępem';
	@override String pleaseCheckTip({required Object tip}) => 'Zaznacz pole "${tip}".';
	@override String get inputLengthTooShort => 'Zbyt krótka długość wejścia';
	@override String get shortName => 'akronimy';
	@override String pleaseEnterXname({required Object name}) => 'Wprowadź ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Zgłoszenie jest w trakcie składania, prosimy czekać...';
	@override String get applyForDSMSVerifierPermission => 'Ubieganie się o uprawnienia walidatora DSMS';
	@override String get confirmInformation => 'Potwierdzenie informacji';
	@override String get lastHeartbeat => 'ostatnie uderzenie serca';
	@override String get expirationTime => 'należny czas';
	@override String get country => 'narody';
	@override String get accessTerminals => 'terminal dostępu';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Całkowita liczba terminali numerów dostępu DSMS';
	@override String get textContent => 'Zawartość tekstowa';
	@override String get scanQRcodeToLogin => 'Przesuń, aby się zalogować';
	@override String get confirmLogin => 'Potwierdź logowanie';
	@override String get authorizeSubApplicationToLogin => 'Autoryzuj tę aplikację podrzędną do logowania';
	@override String get authorizationSuccessful => 'Autoryzacja przebiegła pomyślnie!';
	@override String get launchSMSprogram => 'Uruchomienie programu SMS';
	@override String get notApplied => 'Brak aplikacji';
	@override String get validityPeriod => 'okres ważności';
	@override String get renewal => 'wniosek o odnowienie';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Zeskanuj kod, aby autoryzować logowanie do terminala';
	@override String get rewards => 'zachęty';
	@override String get roles => 'charakter';
	@override String get developerCenter => 'Centrum deweloperskie';
	@override String get appName => 'Nazwa aplikacji';
	@override String get pleaseSelect => 'wybierz';
	@override String get category => 'kategoria';
	@override String get keywords => 'hasło';
	@override String get pleaseEnterAkeyword => 'Wprowadź słowo kluczowe';
	@override String get createApplication => 'Tworzenie aplikacji';
	@override String get appType => 'Typ aplikacji';
	@override String get numberOfCategoriesMustBetween1and3 => 'Liczba kategorii musi wynosić od 1 do 3';
	@override String get appLogoSpecifications => 'Format obrazu: png, rozmiar: do 100KB, rozdzielczość (piksele): 256*256';
	@override String get localAlbum => 'Lokalne albumy fotograficzne';
	@override String get networkPath => 'ścieżka sieciowa';
	@override String get imageURLkAddress => 'Adres URL obrazu';
	@override String get urlAddressFormatIsIncorrect => 'Nieprawidłowo sformatowany adres URL';
	@override String get imageFormatOnlySupportsPng => 'Obrazy są obsługiwane tylko w formacie "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'Długość musi zawierać się w przedziale znaków ${a}-${b}.';
	@override String get introduction => 'krótki';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'Rozmiar obrazu nie może być większy niż ${a}, obecnie ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'Rozdzielczość obrazu musi wynosić: ${p1}(piksele), obecnie ${p2}';
	@override String get becomeDeveloper => 'Zostań programistą';
	@override String get developerInformation => 'Informacje o deweloperze';
	@override String get teamName => 'Nazwa zespołu';
	@override String get website => 'węzeł';
	@override String get other => 'inne niż';
	@override String get githubVerification => 'Weryfikacja Github';
	@override String get exampleUrl => 'Przykładowy adres URL';
	@override String githubVerificationTip({required Object did}) => 'Użyj swojego konta GitHub, aby utworzyć plik "delta.did" w swoim repozytorium z zawartością "${did}"; następnie wklej adres URL githubusercontent tego pliku w tym polu wejściowym w celu uwierzytelnienia.';
	@override String get createApp => 'Tworzenie aplikacji';
	@override String get appManagement => 'zarządzanie aplikacjami';
	@override String get statusLogs => 'Dziennik stanu';
	@override String get bad => 'nic dobrego';
	@override String get normal => 'zwykły';
	@override String get good => 'doskonały';
	@override String get onceCreatedItCannotBeChanged => 'Po utworzeniu nie można go zmienić!';
	@override String get manageApplicationEntity => 'Zarządzanie jednostkami aplikacji';
	@override String get currentVersion => 'aktualna wersja';
	@override String get submitVersion => 'Wersja przesłana';
	@override String get packageOnlySupportZipCompressedFile => 'Pakiet obsługuje tylko skompresowane pliki zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Plik "${name}" nie został znaleziony w pakiecie zip.';
	@override String get fileList => 'Lista dokumentów:';
	@override String get programPackage => 'Pakiet programistyczny:';
	@override String get automaticallyExtractFromVersionFile => 'Automatycznie wyodrębniane z plików ".version';
	@override String get dappVersionFormatTip => 'Format numeru wersji musi być dziesiętny z dokładnością do 2 cyfr, nieprzekraczający maksymalnie 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Numer wersji musi być większy niż bieżąca wersja "${v}';
	@override String get versionNotes => 'Nadruk:';
	@override String get updateRelease => 'nowa wersja';
	@override String get loadAndRun => 'Załaduj i uruchom';
	@override String get notYetSubmittedProgramPackage => 'Pakiet programowy nie został jeszcze przesłany!';
	@override String get authorizeMinidAppLogin => 'Autoryzacja logowania do mini-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Aby potwierdzić autoryzację, wpisz "tak".';
	@override String get authorizeNow => 'Natychmiastowa autoryzacja';
	@override String get operation => 'Działanie.';
	@override String get statusChange => 'Zmiana statusu';
	@override String get changeTo => 'Zmiana na:';
	@override String get notes => 'Uwagi.';
	@override String get changesNotEffective => 'Zmiana jest nieważna!';
	@override String get released => 'Opublikowano';
	@override String get inPublicBeta => 'otwarta beta';
	@override String get developers => 'Opracowany przez.';
	@override String get reviewList => 'Lista komentarzy.';
	@override String get postReview => 'Zostaw komentarz';
	@override String get scoreNow => 'Oceń teraz';
	@override String get description => 'Opis.';
	@override String get noData => '(^-^)\n Brak dostępnych danych';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Wersja została zaktualizowana z ${a} do ${b}.';
	@override String get loadNewVersion => 'Załaduj nową wersję';
	@override String get name => 'Imię i nazwisko.';
	@override String get canisterId => 'Tank Id.';
	@override String get updateTime => 'czas aktualizacji';
	@override String get contractCanistersState => 'Status zbiornika kontraktowego';
	@override String get userDistribution => 'dystrybucja użytkowników';
	@override String get settings => 'Ustawienie';
	@override String get security => 'Bezpieczeństwo';
	@override String get invite => 'zaproszenia';
	@override String get more => 'Więcej...';
	@override String get receiveAddress => 'Adres odbioru:';
	@override String get hangingAmount => 'wiszący';
	@override String get hangingAmountTips => 'Kwoty oczekujące to tymczasowe zapisy nagród wygenerowanych przez wydobycie przez podwładny zespół, po zakończeniu sesji wydobywczej kwoty te zostaną zebrane w Kwotach oczekujących.';
	@override String get pendingAmount => 'oczekujący';
	@override String get pendingAmountTips => 'Kwoty oczekujące to te, które nie zostały jeszcze potwierdzone w stosunku do reklamodawców, a te, które są prawidłowo dopasowane, zostaną przeniesione do prawidłowego rekordu USCT, a wszelkie nieprawidłowe części zostaną wykluczone.';
	@override String get received => 'otrzymany';
	@override String get processing => 'w toku';
	@override String get replied => 'respondent';
	@override String get rejected => 'odrzucenie';
	@override String get unknown => 'niezbadany';
	@override String get insufficientBalance => 'Niewystarczająca równowaga!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Saldo ${x} jest niewystarczające do pokrycia opłat sieciowych.';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Transakcja nie została jeszcze zakończona i nie może zostać przeniesiona w tym momencie.';
	@override String get thisfunctionNotSupportExternalCalls => 'Ta funkcja nie obsługuje wywoływania zewnętrznego';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Nie ma dopasowania adresu, który może być użyty do uiszczenia opłat międzyłańcuchowych, przełącz się na inną sieć łańcuchową, aby spróbować.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'Aktualne dopasowanie do maksymalnej kwoty, jaką można przelać w ramach pojedynczej transakcji, wynosi ${x}.';
	@override String get memoMustNotBeMoreThan64bytes => 'Uwagi nie mogą przekraczać 64 bajtów';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Niewystarczające saldo, kwota: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Nie można powiązać więcej niż 3 adresów.\nJeśli chcesz powiązać nowy adres płatności.\nNajpierw usuń powiązanie innego adresu';
	@override String parametersA_exception({required Object x}) => 'Parametry: ${x}, wyjątek';
	@override String get parameterException => 'Wyjątek parametru!';
	@override String get transferAmountMustBeLargerThan0 => 'Kwota przelewu musi być większa niż 0';
	@override String get authorizationHasExpired => 'Upoważnienie wygasło';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'Aplikacja nie została autoryzowana przez właściciela';
	@override String get authenticationTokenIsInvalid => 'Nieprawidłowy token uwierzytelniania';
	@override String get verifyInfoIsInvalidOrExpired => 'Nieprawidłowe lub wygasłe informacje walidacyjne';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Sprawdzić, czy liczba terminali dostępowych przekroczyła limit jeden na dziesięć tysięcy.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'Udział w wydobyciu musi trwać dłużej niż 3 dni.';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Liczba członków kręgu bezpieczeństwa nie może być mniejsza niż trzy.';
	@override String get avatarIsNotSet => 'Awatar nie został ustawiony';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Liczba bezpośrednich poleceń nie może być mniejsza niż 3.';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Limit czasowy jest niewystarczający i numer telefonu komórkowego można zmienić tylko raz w roku.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Ten numer telefonu komórkowego już istnieje i nie można go powielić.';
	@override String get securityCodeIsIncorrect => 'Nieprawidłowy kod bezpieczeństwa';
	@override String get securityCodeMayHaveExpired => 'Kod zabezpieczający mógł wygasnąć';
	@override String get sessionIdIsInvalidOrExpired => 'Nieprawidłowy lub wygasły identyfikator sesji';
	@override String get sessionHasBeenAuthorized => 'Sesja została zatwierdzona do realizacji!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Można odnowić tylko w ciągu ${x} dni przed wygaśnięciem okresu.';
	@override String get notYetGrantedDeveloperPermissions => 'Brak praw deweloperskich';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Pole ${x} nie może mieć wartości null';
	@override String get emailFormatError => 'Błąd formatu wiadomości e-mail';
	@override String theXformatIsIncorrect({required Object x}) => 'Błąd formatowania "${x}';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Pole "${x}" musi mieć długość od ${y} do ${z} znaków.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Zakres wyboru "${x}" musi zawierać się w przedziale od ${y} do ${z}.';
	@override String get unchanged_sameAsOldContent => 'Bez zmian, ta sama zawartość co poprzednio!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' już istnieje!';
	@override String get mobileNumberHasNotJoinedDelta => 'Ten numer telefonu komórkowego nie został dodany do Delta!';
	@override String get referrerIdCannotBeEmpty => 'Identyfikator strony odsyłającej nie może być pusty!';
	@override String get referrerIdDoesNotExist => 'Identyfikator strony odsyłającej nie istnieje!';
	@override String get didIsIncorrectOrInvalid => 'DID jest nieprawidłowy lub nieważny!';
	@override String get accessTokenIsIncorrectOrInvalid => 'Token dostępu jest nieprawidłowy lub nieważny!';
	@override String get minimumWithdrawalAmountIs1USD => 'Minimum 1USD za pojedynczą wypłatę';
	@override String get miningTimeIsNotYet => 'Jeszcze nie czas na kopanie.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Już istnieje, nie dodawaj go ponownie!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Nie można użyć numeru rejestracyjnego jako numeru dostępu do uwierzytelniania';
	@override String get canotAddYourSelf => 'Nie można dodać siebie';
	@override String get logOut => 'Wylogowanie';
	@override String get confirmLogout => 'Potwierdź wylogowanie';
	@override String get logOutTipsText => 'Uwaga: zgodnie z białą księgą, każda weryfikacja logowania do konta zużyje pewną ilość monet DTC, które zostaną wypłacone weryfikatorowi jako zachęta, więc nie próbuj logować się i wylogowywać niepotrzebnie, kliknięcie poniższego przycisku spowoduje natychmiastowe wylogowanie.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Wpisz "tak", aby potwierdzić wylogowanie.';
	@override String get tip => 'zwrócić uwagę na coś';
	@override String get cancel => 'odwołania';
	@override String get close => 'zamknięcie';
	@override String get selected => 'wybrany';
	@override String get edit => 'kompilator';
	@override String get submit => 'przesłać (raport itp.)';
	@override String get goBack => 'regresja (w psychologii)';
	@override String get copiedToClipboard => 'Został on skopiowany do schowka.';
	@override String get nickname => 'zwrot grzecznościowy';
	@override String get confirm => 'uznanie';
	@override String get cannotBeEmpty => 'Nie może być pusta';
	@override String get deleteSuccessful => 'Usunięto pomyślnie!';
	@override String get successfullyModified => 'Modyfikacja zakończyła się sukcesem!';
	@override String get executionSuccessful => 'Wdrożenie zakończyło się sukcesem!';
	@override String get preview => 'zapowiedzi';
	@override String get followSystem => 'system monitorowania';
	@override String get change => 'wariacja';
	@override String get replace => 'zamienniki';
	@override String get view => 'sprawdź';
	@override String get manage => 'menedżerski';
	@override String get modify => 'modyfikacje';
	@override String get replacedSuccessfully => 'Wymiana zakończona sukcesem!';
	@override String get authentication => 'uwierzytelnianie';
	@override String get reacquire => 'pobieranie';
	@override String get tryAgain => 'Spróbuj ponownie.';
	@override String get querying => 'Prowadzone są dochodzenia ...';
	@override String get writingToOnChain_pleaseWait => 'Jest zapisywany do łańcucha, poczekaj ...';
	@override String get versionCheck => 'wykrywanie wersji';
	@override String get alreadyLatestVersion => 'Już najnowsza wersja!';
	@override String get foundNewVersion => 'Odkryj nową wersję:';
	@override String get upgradeLink => 'Link do aktualizacji:';
	@override String get deviceDescription => 'Opis wyposażenia.';
	@override String get notification30SecondsBeforeMiningStops => 'Wykonaj przypomnienie o powiadomieniu 30 sekund przed zatrzymaniem wydobycia!';
	@override String get goMining => 'Rozpocznij wydobywanie';
	@override String get deltaMiningReminder => 'Przypomnienie o wydobyciu Delta';
	@override String get clickToMine_miningIsAboutToStop => 'Kliknij tutaj, aby kopać, wydobycie wkrótce się zakończy!';
	@override String get incorrect_input => 'Nieprawidłowe dane wejściowe!';
	@override String get are_you_sure_delete => 'Czy na pewno chcesz usunąć?';
	@override String get delete_account => 'Usuń konto';
	@override String get how_to_operate_it => 'Widzisz jak to obsługiwać?';
	@override String get deletion_warning_tip => 'Jeśli usuniesz swoje konto, stracisz wszystkie monety Delta, a wszystkie zarobki od innych członków również zostaną utracone.';
	@override String get launchWhatsAppProgram => 'Uruchom program WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Numery dostępowe z tą ikoną obsługują również weryfikację wiadomości WhatsApp. Podczas wysyłania wiadomości międzynarodowych zaleca się korzystanie z WhatsApp w celu zwiększenia wskaźnika powodzenia i obniżenia kosztów.';
	@override String get ihaveSentVerificationString => 'Wysłałem ciąg weryfikacyjny';
	@override String get totalOfPeople => 'Łącznie ludzie: ';
	@override String get numberOfPeopleMining => 'Liczba osób kopiących';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Możesz użyć przeglądarki na innym urządzeniu, aby zeskanować kod QR i przekazać go do programu SMS';
	@override String get toggle => 'Przełącz';
	@override String get DSMSverifier => 'DSMS Weryfikator';
	@override String get activate => 'Aktywuj';
	@override String get activated => 'Aktywowany';
	@override String get generateActivationCommand => 'Generuj polecenie aktywacji';
	@override String get activationCommand => 'Polecenie aktywacji';
	@override String get activationSentedTip => 'Po wysłaniu SMS-a aktywacyjnego sprawdź status aktywacji na urządzeniu końcowym dostępu.';
	@override String get biometricsNotEnabledTip => 'Biometria (twarz lub odcisk palca) nie jest włączona na Twoim urządzeniu. Włącz ją, aby kontynuować';
	@override String get error => 'Błąd';
	@override String get exceptionOccurredWhenCallingBiometric => 'Wystąpił wyjątek podczas wywoływania funkcji biometrycznej (twarz lub odcisk palca)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: 'Zaznaczono '),
		checkedNum,
		const TextSpan(text: ' numerów dostępu, należy wybrać '),
		shouldNum,
		const TextSpan(text: '.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Czy tekst ${text} został wysłany na ${n} numery dostępowe powyżej?';
	@override String get interface => 'Interfejs:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Przekroczono limit czasu oczekiwania lub numer nadawcy jest niezgodny';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Numer telefonu komórkowego członka kręgu bezpieczeństwa, który podałeś, nie pasuje: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Zaloguj się w ciągu 10 minut po wylogowaniu, aby uniknąć weryfikacji dwuskładnikowej.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Należy wprowadzić co najmniej ${n} numerów telefonów komórkowych';
	@override String get noAccessNumberInYourRegionYet => 'W Twoim regionie nie ma jeszcze numeru dostępowego';
	@override String get notEnoughAccessNumbersInYourRegion => 'Za mało numerów dostępowych w Twoim regionie';
	@override String get tipsForDeployDSMSterminal => 'System automatycznie załadował dla Ciebie niektóre numery dostępowe z innych krajów. Aby zapewnić lepsze i tańsze usługi weryfikacyjne, zaleca się, abyś Ty lub osoba polecająca wdrożyła terminal DSMS lokalnie, aby zarobić na opłatach weryfikacyjnych.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Nikt nie może mi podać kodu bezpieczeństwa?';
	@override String get useSupplementalMode => 'Użyj trybu uzupełniającego';
	@override String get returnToSecurityCodeMode => 'Powrót do trybu kodu bezpieczeństwa';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Wprowadź powiązany numer telefonu komórkowego. Kod kraju można pominąć.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Numer telefonu komórkowego ${name} jest niepoprawny';
	@override String get matchingVerificationStrategyIs => 'Strategia weryfikacji dopasowania to:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Saldo jest większe niż 3 ICP, na razie nie ma potrzeby dolewania paliwa.';
	@override String get escrowAccount => 'Rachunek powierniczy';
	@override String get fuelRelay => 'Przekaźnik paliwa';
	@override String get pourFuel => 'Wlej paliwo';
	@override String get fuelState => 'Stan paliwa';
	@override String get pouringFuelTips => 'Wlewanie paliwa nie przynosi żadnych korzyści ani wad, jego celem jest wzbogacenie doświadczenia z systemem Delta';
	@override String get sponsorDevelopersByWatchingAds => 'Sponsoruj programistów, oglądając reklamy';
	@override String get status => 'Status';
	@override String get date => 'Data';
}

// Path: <root>
class _StringsPt implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsPt.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.pt,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <pt>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsPt _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'fig. início';
	@override String get switchLanguage => 'Mudar de idioma';
	@override String get languageSwitch => 'Mudança de língua';
	@override String get slogan => 'Construir uma economia descentralizada no delta';
	@override String get countryRegionCode => 'Código do país/área';
	@override String get countryRegionSelection => 'Seleção de países e regiões';
	@override String get nextStep => 'o próximo passo';
	@override String get yourPhoneNumber => 'O seu número de telefone.';
	@override String get pleaseSelectCountryAndRegion => 'Selecione o seu país/região';
	@override String get pleaseEnterPhoneNumber => 'Introduza um número de telefone válido!';
	@override String get referrerDid => 'Referenciador DID';
	@override String get pleaseEnterTheReferrersDid => 'Introduza um ID de identidade descentralizado válido do referenciador';
	@override String get thisDidIsInvalid => 'Este DID é inválido.';
	@override String get nicknameFormatTips => 'A alcunha não deve estar vazia e não deve ter mais de 16 dígitos.';
	@override String get additionalIinformation => 'Informações adicionais';
	@override String get invitationSubject => 'Um convite à construção do consenso Delta';
	@override String invitationLetter({required Object did}) => 'Olá, estou a participar no Delta Consensus Building!\n Delta é uma nova plataforma de moeda digital de código aberto que funciona no ICP e que lhe permite gerir e utilizar várias moedas digitais sem senhas, chaves privadas ou mnemónicas. Por favor, clique neste link https://delta.kim/auto/download para instalar a aplicação e agora está convidado a juntar-se à construção de consensos e a cunhar moedas também.\n Referenciador DID: ${did}';
	@override String get dSMSverification => 'Validação DSMS';
	@override String get getAccessNumbers => 'Obter alguns números de acesso';
	@override String get getAccessNumberPromptMessage => 'Clique no botão "Obter" abaixo para rodar um conjunto de números de acesso de verificação de SMS na fila de espera.';
	@override String get optionalAccessNumbers => 'Número de acesso opcional';
	@override String get accessNumber => 'número de acesso';
	@override String get TELCO => 'operador (de uma central eléctrica, de uma rede de transportes, etc.)';
	@override String get score => 'pontuação';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('pt'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Assinale '),
			nBuilder(n),
			const TextSpan(text: ' números de acesso e clique no botão "'),
			span('text'),
			const TextSpan(text: '" para avançar para o passo seguinte.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Assinale '),
			nBuilder(n),
			const TextSpan(text: ' números de acesso e clique no botão "'),
			span('text'),
			const TextSpan(text: '" para avançar para o passo seguinte.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta é uma experiência de moeda digital global, descentralizada e de fonte aberta e um ecossistema de aplicações de criptomoeda.';
	@override String get deltaGoalsDesc => 'O objetivo é permitir que as pessoas utilizem a Delta para co-construir novas moedas digitais que sejam universais, justas, seguras, rápidas e ecológicas. E fornecer vários cenários de aplicação efectiva para estas moedas digitais e criptomoedas anteriores.';
	@override String get details => 'informações';
	@override String get get => 'ganho';
	@override String get select => 'opção';
	@override String get send => 'envio';
	@override String get complete => 'cumprir';
	@override String get selectedAccessNumberPrompt => 'Quando selecionado, é apresentado o número de acesso completo e é gerada uma cadeia de autenticação.';
	@override String get location => 'colocação';
	@override String get verificationString => 'cadeia de validação';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Utilize o seu número de telefone '),
		num,
		const TextSpan(text: ' e envie '),
		label,
		const TextSpan(text: ' para '),
		accessNumber,
		const TextSpan(text: ' para concluir a verificação.'),
	]);
	@override String get ihaveSentTheSMS => 'Enviei uma mensagem de texto';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'A cadeia de validação é válida durante 6 minutos, tempo restante: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Demasiado rápido para esperar ${x} segundos para continuar!';
	@override String get waitingForVerificationSMS => 'Aguardando o SMS de verificação...';
	@override String get partSuccsForVerificationSMS => 'A verificação por SMS de um dos terminais de acesso foi aprovada!';
	@override String get creatingAccessToken => 'Token de acesso a ser criado...';
	@override String get intoDelta => 'Por dentro da Delta';
	@override String get deltaAccountIsLoggedIn => 'Sua conta Delta está conectada';
	@override String get iHavLoggedOut => 'Estou fora.';
	@override String get startTwoFactorVerification => 'Iniciar a dupla verificação';
	@override String get securityCircleVerification => 'Validação do Círculo de Segurança';
	@override String get generateSecurityCode => 'Gerar código de segurança';
	@override String get generateSecurityCodeHintText => 'O código de segurança gerado será enviado para um membro do seu círculo de segurança selecionado aleatoriamente.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Não definiu um círculo de segurança, a sua conta é muito insegura, introduza um espaço reservado de 6 dígitos e avance para o passo seguinte.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'O código de segurança foi gerado, contacte os seguintes familiares e amigos para solicitar a extração do código de segurança para passar a verificação. válido durante 30 minutos!';
	@override String get itGetSecurityCodeTip => 'Sugestão: pode obter o código de segurança fazendo duplo clique na alcunha da sua conta na página Delta App -> Menu -> Provide Security.';
	@override String get securityCircleMemberList => 'Lista de membros do círculo de segurança:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Por favor, selecione um parente ou amigo na lista de membros para gerar e fornecer um código de segurança para verificar sua verdadeira identidade. O objetivo é evitar que a conta seja controlada por outras pessoas quando o número do celular for perdido ou roubado.';
	@override String formatIsXdigits({required Object num}) => 'Formato como ${num} dígitos';
	@override String get signInSuccessfully => 'Iniciar sessão com êxito!';
	@override String get twoFAandLogin => 'Dupla autenticação e início de sessão';
	@override String get verificationSuccessful => 'Verificar o sucesso!';
	@override String get validationFailed => 'A validação falhou!';
	@override String get dappInfo => 'Informações da aplicação';
	@override String get securityCircle => 'anel de segurança';
	@override String get securityCode => 'código de segurança';
	@override String get provideSecurity => 'garantir a segurança';
	@override String get addManully => 'Adicionar manualmente';
	@override String get addFromContacts => 'Adicionar a partir do livro de endereços';
	@override String get addSecurityCircle => 'Adicionar Círculo de Segurança';
	@override String get inputType => 'Tipo de entrada';
	@override String get mobileNumber => 'número de telemóvel';
	@override String get did => 'Endereço id';
	@override String get pleaseEnterValidDID => 'Introduza um ID de identidade descentralizada válido';
	@override String get pleaseEnterValidWalletAddress => 'Introduza um endereço de carteira válido';
	@override String get appellation => 'forma de endereço';
	@override String get appellationHint => 'Como é que lhe chamam, tipo "bebé"?';
	@override String get addSecurityCircleTips => 'Não adicione pessoas em quem não confia ao seu círculo de segurança.';
	@override String get referralTeam => 'Equipas recomendadas';
	@override String get profile => 'Informações sobre a conta';
	@override String get menu => 'menu';
	@override String get directly => 'direto';
	@override String get indirectly => 'indireta';
	@override String get inviteContacts => 'Convite Contacto';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'O seu convidado é '),
		nickname,
		const TextSpan(text: ' e referiu diretamente '),
		num1,
		const TextSpan(text: ' pessoas, das quais '),
		num2,
		const TextSpan(text: ' estão atualmente online.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Indicou indiretamente '),
		num1,
		const TextSpan(text: ' pessoas, das quais '),
		num2,
		const TextSpan(text: ' estão atualmente em linha.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Convide os seus amigos para se juntarem à Delta e melhorem em conjunto o consenso social. Por cada referência direta, a taxa de extração de uma pessoa aumenta a taxa base em '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Zaproś znajomych do dołączenia do Delta i wspólnie poprawiajcie konsensus społeczny. Każda pośrednia rekomendacja jednej osoby zwiększy stawkę wydobycia o '),
		rate2,
		const TextSpan(text: ' stawki podstawowej.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Tem a certeza de que pretende eliminar "${name}"?';
	@override String get safetyCircleRoleQ => 'Qual é o objetivo do anel de segurança?';
	@override String get safetyCircleRoleA => 'Proteja a sua conta fornecendo autenticação secundária em situações sensíveis.';
	@override String get howSecurityCirclesWorkQ => 'Como é que os anéis de segurança funcionam?';
	@override String get howSecurityCirclesWorkA => 'Na eventualidade de ser necessária uma verificação do Círculo de Segurança, o programa Delta Smart Contracts selecionará aleatoriamente um membro da lista de amigos do Círculo de Segurança para ajudar a fornecer-lhe um código de segurança para completar a verificação de identidade por si. Quando pedir o código de segurança ao membro, este pode confirmar se é ou não o utilizador. Simultaneamente, o programa irá solicitar: "Recuse-se a fornecer o código de segurança se não for você", de modo a proteger a segurança da sua conta. Por isso, deve certificar-se sempre de que os membros do seu círculo de segurança são pessoas em quem pode confiar.';
	@override String get securityCircleBeUsedQ => 'Quando é que vai ser utilizado?';
	@override String get securityCircleBeUsedA1 => '1) Quando perde o controlo da sua Delta APP, é normalmente o caso de o seu telemóvel ter sido perdido ou roubado.';
	@override String get securityCircleBeUsedA2 => '2) No caso de algumas operações sensíveis, o programa Delta Smart Contract precisa de confirmar que é o utilizador.';
	@override String get provideSafetyTip1 => 'Quando o seu amigo lhe pedir o código de segurança, certifique-se de que confirma que é o seu próprio código.';
	@override String get provideSafetyTip2 => 'Está a fornecer segurança aos amigos acima referidos, que o definiram como a pessoa de maior confiança no seu círculo de segurança e precisam que forneça uma confirmação de segurança para ele, caso se deparem com operações sensíveis na sua conta.';
	@override String get provideSafetyTip3 => 'Faça duplo clique no avatar da outra pessoa para extrair o código de segurança quando necessário.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'A outra parte não tem atualmente um código de segurança que precise de ser extraído!';
	@override String get existSecurityCodeTip => 'Para proteção do seu amigo ou familiar, deve recusar-se a fornecer o código de segurança se este não for fornecido pelo próprio amigo ou familiar.';
	@override String get avatarSettings => 'Definições do avatar';
	@override String get NFTAvatarPropertyRightsText => 'Declaração de exoneração de responsabilidade: A utilização do NFT em questão como avatar é apenas uma questão de preferência pessoal e não tem nada a ver com a detenção dos direitos de propriedade intelectual desse NFT.';
	@override String get projectWebsite => 'Sítio Web do projeto:';
	@override String get whitepaper => 'papel branco:';
	@override String get indexID => 'Índice Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Índice entre ${start} e ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Introduza o ID do índice do seu NFT favorito e o programa carregá-lo-á automaticamente como avatar.';
	@override String get miningRate => 'taxa de extração';
	@override String get miningDetails => 'Detalhes da exploração mineira';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Taxa total de extração: '),
		rate,
		const TextSpan(text: ' δ/dia'),
	]);
	@override String get EndOfMiningSession => 'A extração de ciclos terminou:';
	@override String get tapToMineDeltaCoin => 'Clique para extrair moedas Delta ↑';
	@override String get clickToStartMining => 'Clique para começar a explorar!';
	@override String get miningHasStoppedPromptDesc => 'A exploração mineira parou, cada 24 horas é um ciclo de exploração mineira, clique no ícone do relâmpago para iniciar uma nova ronda de exploração mineira. A exploração mineira da Delta é um mecanismo de atribuição que não consome energia aritmética adicional nem tráfego de rede do seu dispositivo.';
	@override String get aboutBaseRate => 'Sobre a taxa de base?';
	@override String get baseRateDescription => 'Tal como acordado no Livro Branco, a regra de redução da taxa de base para a extração Delta será dividida em duas fases.\nFase 1: A taxa será de 32δ/dia quando o número de participantes (registos) for igual ou inferior a 3.000. Partindo desta base, a taxa de base é reduzida para metade sempre que o número de pessoas aumentar 10 vezes.\nFase 2: Quando o número de participantes atinge 30 milhões ou mais, a taxa de base é reduzida para metade sempre que o número de participantes aumenta por um fator de 3. Até que a escavação final interrompa a produção.';
	@override String get baseRate => 'taxa básica (como na RDIS)';
	@override String get directReferralRewards => 'Bónus de indicação direta';
	@override String get directReferralRewardDesc => 'Por cada referência direta, a sua taxa de exploração será aumentada em mais 1/3 da taxa base enquanto eles estiverem a explorar.\n\n Além disso, o estado de mineração das suas referências também contará para o seu bónus de referência direta.';
	@override String get indirectReferralRewards => 'Bónus de indicação indireta';
	@override String get indirectReferralRewardDesc => 'Quando uma referência indireta está a minerar, a sua taxa de mineração é aumentada em mais 1/10 da taxa base.\n\n Para a sua equipa de referência direta, cada pessoa que ela reencaminha representa uma referência indireta para si.';
	@override String get mine => 'extrair (minério ou outro recurso de uma mina)';
	@override String get thisMiningInformation => 'Informação mineira atual';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Participou na extração mineira: '),
		x,
		const TextSpan(text: ' vezes'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Ganho total desta vez: '),
		x,
		const TextSpan(text: ' Delta coins'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Ganhos base: '),
		x,
		const TextSpan(text: ' moedas'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contribuição direta da equipa: '),
		x,
		const TextSpan(text: ' moedas'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Contribuição indireta da equipa: '),
		x,
		const TextSpan(text: ' moedas'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Período de tempo entre escavações: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Horas efectivas de extração: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} horas';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Para a segurança dos bens, os membros do círculo de segurança devem manter sempre 3-5 pessoas de confiança.';
	@override String get index => 'indexação';
	@override String get amount => 'soma de dinheiro';
	@override String get balance => 'balanços';
	@override String get timeStamp => 'carimbo de data/hora';
	@override String get summary => 'resumos';
	@override String get miningHasStopped => 'A exploração mineira parou.';
	@override String get miningHasStoppedDesc => 'A sua exploração mineira está atualmente parada, comece a ganhar agora.';
	@override String get startMining => 'Iniciar a extração mineira';
	@override String get changeMobileNumber => 'Alteração do número de telemóvel';
	@override String get currentMobileNumber => 'Número de telemóvel atual';
	@override String get newMobileNumber => 'Novo número de telemóvel';
	@override String get securityCodeFormatIs6digits => 'O formato do código de segurança é de 6 dígitos!';
	@override String get startVrification => 'Iniciar verificação';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Este número de telemóvel já existe, DID associado: ${dId}';
	@override String get noDataYet => 'Não existem dados disponíveis';
	@override String get previousMobileNumber => 'Número de telemóvel anterior';
	@override String get changeLog => 'Registo das alterações';
	@override String get referralLinkToShare => 'Ligações recomendadas para partilhar';
	@override String get referrer => 'referenciador';
	@override String get isoCountryCode => 'Código ISO do país';
	@override String get avatarLogo => 'logótipo de cabeçalho';
	@override String get creationTime => 'Tempo de criação';
	@override String get lastUpdate => 'Última atualização';
	@override String get numberOfSecurityCircleMembers => 'Número de membros dos círculos de segurança';
	@override String get theLatestMining => 'Última escavação';
	@override String get effectiveMiningDays => 'Número de dias de extração efectiva';
	@override String get modifyNickname => 'Alterar alcunha';
	@override String get didNotChange => 'Não há alterações!';
	@override String get kycVerification => 'Verificação KYC';
	@override String get faceID => 'ID facial';
	@override String get touchID => 'Identificação por impressão digital';
	@override String get biometricsAuthorizationTest => 'Ensaios de autenticação biométrica';
	@override String get currentState => 'estado atual';
	@override String get biometricsAuthenticationLocalizedReason => 'Use o desbloqueio do seu dispositivo para verificar sua identidade.';
	@override String get graph => 'arquivo de gráficos (por exemplo, mapas, documentos ou figuras botânicas)';
	@override String get referralRelationshipGraph => 'Mapeamento da relação de referência';
	@override String get nativeContacts => 'Contactos locais';
	@override String get registrationAndMiningTrends => 'Registo e tendências mineiras';
	@override String get inMining => 'mineração';
	@override String get registrationVolume => 'volume de registo';
	@override String get unmined => 'inexplorado';
	@override String get mined => 'extraído';
	@override String get communityMining => 'Extração mineira comunitária';
	@override String get consensusPromotionFund => 'Fundo de Promoção do Consenso';
	@override String get ecologicalAwardFund => 'Fundo de Incentivo Ecológico';
	@override String get icpFuelCrowdfunding => 'Crowdfunding do ICP Fuel';
	@override String get coreDeveloperRewards => 'Recompensas para programadores principais';
	@override String get totalAllocation => 'Distribuição global';
	@override String get miningRatio => 'Rácio de exploração mineira';
	@override Map<String, String> get billion => {
		'30': '30 mil milhões',
		'60': '60 mil milhões',
		'180': '180 mil milhões de euros.',
		'300': '300 mil milhões de euros',
	};
	@override String get watchAdsToSupportDevelopers => 'Ver anúncios para apoiar os programadores';
	@override String get loadingAdcomponents => 'Carregando componentes de anúncios...';
	@override String get timeIsNotUp => 'O tempo ainda não acabou!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Falha no carregamento, possivelmente a rede está bloqueada!';
	@override String get pendingUSCTrecords => 'Registos pendentes da USCT';
	@override String get pendingUSCTrecordsDesc => 'Os registos USCT pendentes serão confirmados na plataforma de publicidade no prazo de 15 a 30 dias e os registos válidos serão transferidos para a lista de registos USCT e o montante USCT adequado será adicionado ao saldo da conta.';
	@override String get validity => 'validade';
	@override String get advertiser => 'anunciantes';
	@override String get earned => 'conquistado';
	@override String get withdraw => 'levantar fundos';
	@override String get validUSCTrecords => 'Registos efectivos da USCT';
	@override String get USCTmining => 'Mineração USCT';
	@override String get aboutUSCTmining => 'Sobre as minas da USCT?';
	@override String get aboutUSCTminingItme1 => '1. O USDT é uma stablecoin do dólar americano mundialmente popular que pode ser facilmente trocada por moedas soberanas nacionais nas principais bolsas de criptomoedas do mundo.';
	@override String get aboutUSCTminingItme2 => '2. USCT é uma medida temporária do produto da mineração USCT, conhecido como crédito em USD, que será eventualmente convertido em USDT de acordo com o valor real da liquidação e as regras de distribuição da plataforma de publicidade e a proporção correspondente.';
	@override String get aboutUSCTminingItme3 => '3) A USCT Mining é uma função de realização de anúncios de tráfego da comunidade Delta. Aproveita a grande base de utilizadores da comunidade Delta para proporcionar múltiplos benefícios aos anunciantes, aos criadores da Delta e aos ausentes. Foi concebida para proporcionar uma certa quantidade de rendimento efetivo aos trabalhadores ausentes na fase inicial, quando o ecossistema Delta ainda não se formou e prosperou; ao mesmo tempo, também proporciona um certo apoio financeiro aos programadores para garantir que podem continuar a prestar serviços de desenvolvimento durante um longo período de tempo e, em última análise, ser capazes de concretizar todos os planos do livro branco; e também proporciona um canal promocional eficaz para os anunciantes de produtos.';
	@override String get aboutUSCTminingItme4 => '4) As regras de distribuição são concebidas de modo a que 40% das receitas totais sejam utilizadas como comissões de serviço técnico do promotor e os restantes 60% como prémios de absentismo comunitário. A parte da recompensa por absentismo do modelo de distribuição multinível semelhante ao DTC, a recompensa por absentismo será dividida em três partes, de acordo com o rácio de 6:3:1, de cada vez que uma das recompensas por absentismo da mineração USCT 6 partes atribuídas ao absentismo dos anúncios actuais, 3 partes atribuídas ao referenciador superior, 1 parte atribuída ao referenciador de segundo nível. Da mesma forma, também pode obter a mesma recompensa de referenciador para os amigos que referir através do USCT mining. A vantagem desta distribuição multinível é que qualquer pessoa pode ganhar uma quantidade relativamente grande de USDT ao desenvolver uma equipa de downline.';
	@override String get aboutUSCTminingItme5 => '5) O período de liquidação é de 7 dias, ou seja, a cada 7 dias a validade é verificada com a plataforma de publicidade e a validade confirmada das receitas e o montante real serão registados no saldo. O montante mínimo para cada levantamento é de 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Linhas ${x} a ${y}.';
	@override String get wallet => 'bolsas';
	@override String get multiChainWallet => 'carteira multichain';
	@override String get deposit => 'depósito (por exemplo, numa conta bancária)';
	@override String get transfer => 'transferência (dinheiro para uma conta bancária)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} no endereço da carteira';
	@override String get transactions => 'Registos de transacções';
	@override String get network => 'reticulação';
	@override String get walletAddress => 'Endereço da carteira';
	@override String get currentAddress => 'endereço atual';
	@override String get depositAddress => 'Endereço de recarga';
	@override String get receivingMoneyAddress => 'endereço do beneficiário';
	@override String get applyTempDepositAddress => 'Endereço para solicitar uma recarga temporária';
	@override String get tempDepositAddressTip => '1) Este é um endereço de depósito partilhado. Não deposite o montante depois de o contrato de aluguer ter expirado ou depois de ter sido desvinculado. Se isso acontecer, o montante será perdido.';
	@override String get tempDepositAddressTip2 => '2) Antes de efetuar um depósito, certifique-se de que o [nome da cadeia] e o [nome da moeda] correspondem exatamente; no caso de tokens de contrato, também precisa de se certificar de que o [padrão do contrato] e o [endereço do contrato] correspondem exatamente.';
	@override String get tempDepositAddressTip3 => '3. não tente depositar fundos que não correspondam a nenhum dos parâmetros das dicas acima, caso contrário o montante será perdido.';
	@override String get tempDepositAddressTip4 => '4) Se necessitar de depositar outros tipos de activos, mude para a página da moeda correspondente e para as opções de parâmetros para solicitar um novo endereço.';
	@override String get applyExtensionOfValidity => 'Pedido de prorrogação do prazo de validade';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Este endereço expirará após '),
		diff,
		const TextSpan(text: ' e será '),
		tap('manually extend'),
		const TextSpan(text: ' válido durante 12 horas antes de expirar.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Só pode ser renovado com 12 horas de antecedência';
	@override String get theReceivingAddressValidForLongtime => 'Este endereço é válido por um longo período de tempo.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Este endereço de recolha é válido por um longo período e é automaticamente creditado em tempo real.';
	@override String get confirmDeposited => 'Confirmação dos depósitos';
	@override String get unbindThisDepositAddress => 'Separar este endereço de recarga';
	@override String get confirmDepositedTip => 'Se os fundos tiverem sido transferidos, clique no botão acima para ativar a faturação para a sua carteira após 10 minutos.';
	@override String get unbindDepositAddressTip => 'Para reduzir os custos de funcionamento do contrato inteligente, desvincule o endereço de carregamento se não pretender depositar mais fundos durante o período de validade.';
	@override String get transferToAddress => 'ir para o endereço';
	@override String get longPressToPaste => 'Pressão longa para colar';
	@override String get all => 'completo';
	@override String balanceX({required Object x}) => 'Saldo ${x}';
	@override String get transferOut => 'sair';
	@override String depositXcoins({required Object x}) => 'Creditado ${x}';
	@override String get sender => 'remetente';
	@override String get recipient => 'destinatário';
	@override String get memo => 'nota';
	@override String get kind => 'modo (de vida)';
	@override String get transferAmountExceedsAvailableBalance => 'Transferências que excedem o saldo disponível';
	@override String get pleaseEnterValidAmount => 'Introduzir um montante válido';
	@override String get networkFee => 'Taxa de manuseamento da rede';
	@override String get fee => 'taxa de manuseamento';
	@override String validLengthXcharacters({required Object x}) => 'Endereço válido com um comprimento de ${x} caracteres';
	@override String get historys => 'registo histórico';
	@override String get dtcCreditdetail => 'Detalhes de Delta Points';
	@override String get usdCreditdetail => 'Detalhes dos pontos em USD';
	@override String get dappSquare => 'dApp Square';
	@override String get amountRaised => 'Montante angariado';
	@override String get disbursedAmount => 'Montante emitido';
	@override String get participationTimes => 'Número de participantes';
	@override String get completionRate => 'taxa de conclusão';
	@override String get exchangeRate => 'taxa de câmbio';
	@override String get icpCrowdfunding => 'Crowdfunding ICP';
	@override String get crowdfunding => 'financiamento coletivo';
	@override String get trendsCurve => 'curva de tendência';
	@override String get fullScreenView => 'visualização em ecrã total';
	@override String get walletBalance => 'Saldo da carteira:';
	@override String get manageWallet => 'Gerir a carteira';
	@override String get fundraiseAmount => 'angariação de fundos';
	@override String get exchangeRewardAmount => 'Resgatar o montante do prémio';
	@override String get fundraise => 'Recolha de fundos';
	@override String rangeIntegersX({required Object x}) => 'Intervalo: inteiro ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Participe com sucesso na angariação de fundos e receba uma recompensa de ${amount}DTCT';
	@override String get amountSummary => 'Resumo dos montantes';
	@override String get changePreferred => 'Mudança de preferência';
	@override String get changePreferredAddress => 'Alterar o endereço preferencial';
	@override String get preferredAddressTip => 'Os fundos serão automaticamente transferidos para o endereço preferido quando os fundos forem recolhidos utilizando um número de telemóvel registado ou um DID.';
	@override String get newAddress => 'Novo endereço';
	@override String get newAddressTip => 'Para evitar abusos, quando existe mais do que um endereço de carteira, é cobrada uma taxa de transação por cada novo endereço criado.';
	@override String get createNew => 'recém-construído';
	@override String get chainNetworkName => 'nome da rede em cadeia';
	@override String get from => 'vir de (um lugar)';
	@override String get to => 'até (um momento)';
	@override String get noAvailableDepositAmountDetected => 'Não foi detectado qualquer montante de depósito disponível!';
	@override String get crossChainReceiveMoneyMonitoring => 'A coleção de correntes cruzadas está à escuta ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Recebido ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Confirmação em curso ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Notas (leitura obrigatória para os principiantes)';
	@override String get whyUseSharedAddresses => 'Porquê utilizar um endereço partilhado?';
	@override String get useSharedrAdvantage => 'As vantagens da utilização de endereços partilhados ao depositar em cadeias são as seguintes';
	@override String get useSharedrAdvantage1 => '1) Reduzir o desperdício de taxas de transferência e diminuir o custo de utilização para os utilizadores. A utilização de um endereço exclusivo conduzirá a uma dispersão excessiva dos fundos, geralmente a fim de facilitar a transferência subsequente de outros utilizadores na retirada de fundos, quando o utilizador recarrega a segunda transferência de fundos, que devem ser agrupados num ou num pequeno número de endereços de gestão.';
	@override String get useSharedrAdvantage2 => '2) No esquema partilhado, o programa só precisa de manter um conjunto relativamente pequeno de endereços que podem ser rapidamente combinados com transferências de saída e escuta de recolha ligeira, o que reduz a sobrecarga de recursos computacionais. Em contrapartida, o contrário aconteceria se fossem utilizados endereços exclusivos.';
	@override String get tokenType => 'Tipo de código';
	@override String get contract => 'contratual';
	@override String get contractStandard => 'norma contratual';
	@override String get contractAddress => 'endereço do contrato';
	@override String get native => 'protozoários';
	@override String get confirmUnbindingPleaseEnterYes => 'Para confirmar a desvinculação, introduza "sim".';
	@override String get listAllWorkingTempReceivingAddresses => 'Lista de todos os endereços de recarga em cadeia activos';
	@override String get setNote => 'Configurar notas';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Não pode ser maior do que ${x} bytes';
	@override String get transferFee => 'taxa de transferência';
	@override String get crossChainFee => 'taxa de cadeia cruzada';
	@override String get crossChainTransferOutError => 'erro de transferência de ligações cruzadas';
	@override String get chainName => 'nome da cadeia';
	@override String get message => 'mensagens';
	@override String get dontShowAgain => 'já não é apresentado';
	@override String get queuing => 'fila';
	@override String get optional => 'facultativo';
	@override String get publiclyVisible => 'publicamente visível';
	@override String get rates => 'tarifa';
	@override String get minimum => 'mínimo';
	@override String get maximum => 'limite superior';
	@override String get minimumBlockConfirmations => 'Número mínimo de confirmações de bloqueio';
	@override String get dsmsVerifyTerminal => 'Terminal de validação DSMS';
	@override String get overall => 'guarda-chuva';
	@override String get my => 'meu';
	@override String get checkValidatorQualifications => 'Verificação das qualificações de privilégio do autenticador';
	@override String get getVerifierPermissions => 'Obter privilégios de autenticador';
	@override String get qualification => 'dotações naturais';
	@override String get upperLimit => 'limite';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Número máximo de terminais de acesso permitidos';
	@override String get numberOfExistingAccessTerminals => 'Número de terminais de acesso instalados';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Antes de solicitar privilégios de autenticador, é necessário preparar um telemóvel Android inativo e um número de acesso dedicado, bem como descarregar e instalar a aplicação DSMS Access Terminal.';
	@override String get downloadLink => 'ligação para descarregar';
	@override String get alreadyReadyFollowingTheAboveTips => 'Está pronto de acordo com as dicas acima';
	@override String get globalUniversal => 'para utilização global';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Atualmente, não existem autenticadores locais suficientes para participar no serviço de acesso de autenticação DSMS, selecione o serviço de acesso "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'como um número só de acesso';
	@override String pleaseCheckTip({required Object tip}) => 'Assinale a caixa "${tip}".';
	@override String get inputLengthTooShort => 'Comprimento de entrada demasiado curto';
	@override String get shortName => 'acrónimos';
	@override String pleaseEnterXname({required Object name}) => 'Por favor, introduza ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'A candidatura está a ser submetida, por favor aguarde...';
	@override String get applyForDSMSVerifierPermission => 'Solicitar privilégios de validador DSMS';
	@override String get confirmInformation => 'Confirmação das informações';
	@override String get lastHeartbeat => 'batimento cardíaco final';
	@override String get expirationTime => 'tempo devido';
	@override String get country => 'nações';
	@override String get accessTerminals => 'terminal de acesso';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Número total de terminais com número de acesso DSMS';
	@override String get textContent => 'Conteúdo do texto';
	@override String get scanQRcodeToLogin => 'Deslizar para iniciar sessão';
	@override String get confirmLogin => 'Confirmar o início de sessão';
	@override String get authorizeSubApplicationToLogin => 'Autorizar esta sub-aplicação a iniciar sessão';
	@override String get authorizationSuccessful => 'A autorização foi bem sucedida!';
	@override String get launchSMSprogram => 'Lançamento do programa SMS';
	@override String get notApplied => 'Nenhum pedido';
	@override String get validityPeriod => 'período de validade';
	@override String get renewal => 'pedido de renovação';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Código de leitura para autorizar o início de sessão no terminal';
	@override String get rewards => 'incentivos';
	@override String get roles => 'carácter';
	@override String get developerCenter => 'Centro de desenvolvimento';
	@override String get appName => 'Nome da aplicação';
	@override String get pleaseSelect => 'selecionar';
	@override String get category => 'categoria';
	@override String get keywords => 'palavra-chave';
	@override String get pleaseEnterAkeyword => 'Introduzir uma palavra-chave';
	@override String get createApplication => 'Criar aplicações';
	@override String get appType => 'Tipo de aplicação';
	@override String get numberOfCategoriesMustBetween1and3 => 'O número de categorias deve estar compreendido entre 1 e 3';
	@override String get appLogoSpecifications => 'Formato da imagem: png, tamanho: até 100KB, resolução (pixel): 256*256';
	@override String get localAlbum => 'Álbuns de fotografias locais';
	@override String get networkPath => 'caminho da rede';
	@override String get imageURLkAddress => 'URL da imagem';
	@override String get urlAddressFormatIsIncorrect => 'Endereço URL formatado incorretamente';
	@override String get imageFormatOnlySupportsPng => 'As imagens só são suportadas no formato "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'O comprimento deve situar-se entre ${a}-${b} caracteres.';
	@override String get introduction => 'breve';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'O tamanho da imagem não pode ser superior a ${a}, atualmente ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'A resolução da imagem tem de ser: ${p1}(pixels), atualmente ${p2}';
	@override String get becomeDeveloper => 'Tornar-se um programador';
	@override String get developerInformation => 'Informações do programador';
	@override String get teamName => 'Nome da equipa';
	@override String get website => 'nó';
	@override String get other => 'que não';
	@override String get githubVerification => 'Verificação do Github';
	@override String get exampleUrl => 'Exemplo de URL';
	@override String githubVerificationTip({required Object did}) => 'Utilize a sua conta GitHub para criar um ficheiro \'delta.did\' no seu repositório com o conteúdo de \'${did}\'; em seguida, cole o endereço Url do conteúdo do githubusercontent desse ficheiro nesta caixa de entrada para autenticação.';
	@override String get createApp => 'Criar aplicações';
	@override String get appManagement => 'gestão de aplicações';
	@override String get statusLogs => 'Registo de estado';
	@override String get bad => 'não é bom';
	@override String get normal => 'habitual';
	@override String get good => 'um excelente';
	@override String get onceCreatedItCannotBeChanged => 'Uma vez criado, não pode ser alterado!';
	@override String get manageApplicationEntity => 'Gerir entidades de aplicação';
	@override String get currentVersion => 'versão atual';
	@override String get submitVersion => 'Versão apresentada';
	@override String get packageOnlySupportZipCompressedFile => 'O pacote suporta apenas ficheiros comprimidos zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'O ficheiro \'${name}\' não foi encontrado no pacote zip.';
	@override String get fileList => 'Lista de documentos:';
	@override String get programPackage => 'Pacote de programação:';
	@override String get automaticallyExtractFromVersionFile => 'Extraído automaticamente dos ficheiros ".version".';
	@override String get dappVersionFormatTip => 'O formato do número da versão deve ser um decimal com uma precisão de 2 dígitos, não excedendo um máximo de 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'O número da versão tem de ser superior à versão atual \'${v}\'';
	@override String get versionNotes => 'Impressão:';
	@override String get updateRelease => 'nova versão';
	@override String get loadAndRun => 'Carregar e executar';
	@override String get notYetSubmittedProgramPackage => 'O pacote de programas ainda não foi apresentado!';
	@override String get authorizeMinidAppLogin => 'Autorizar o início de sessão da mini-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Para confirmar a autorização, digite "sim".';
	@override String get authorizeNow => 'Autorização imediata';
	@override String get operation => 'Funcionamento.';
	@override String get statusChange => 'Mudança de estado';
	@override String get changeTo => 'Alterar para:';
	@override String get notes => 'Observações.';
	@override String get changesNotEffective => 'A alteração não é válida!';
	@override String get released => 'Publicado';
	@override String get inPublicBeta => 'versão beta aberta';
	@override String get developers => 'Desenvolvido por.';
	@override String get reviewList => 'Lista de comentários.';
	@override String get postReview => 'Deixar um comentário';
	@override String get scoreNow => 'Avaliar agora';
	@override String get description => 'Descrição.';
	@override String get noData => '(^-^)\n Não existem dados disponíveis';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'A versão foi actualizada de ${a} para ${b}.';
	@override String get loadNewVersion => 'Carregar nova versão';
	@override String get name => 'Nome.';
	@override String get canisterId => 'Tanque Id.';
	@override String get updateTime => 'tempo de atualização';
	@override String get contractCanistersState => 'Estado do tanque do contrato';
	@override String get userDistribution => 'distribuição de utilizadores';
	@override String get settings => 'Definição';
	@override String get security => 'Segurança';
	@override String get invite => 'convites';
	@override String get more => 'Mais...';
	@override String get receiveAddress => 'Endereço de receção:';
	@override String get hangingAmount => 'pendurado';
	@override String get hangingAmountTips => 'Os montantes pendentes são registos temporários de recompensas geradas pela exploração mineira pela sua equipa subordinada. Assim que tiver feito uma sessão de exploração mineira, estes montantes serão recolhidos nos montantes pendentes.';
	@override String get pendingAmount => 'pendente';
	@override String get pendingAmountTips => 'Os montantes pendentes são os que ainda não foram confirmados em relação aos anunciantes, e os que tiverem correspondências válidas serão transferidos para registos USCT válidos, sendo excluídas as partes inválidas, caso existam.';
	@override String get received => 'recebido';
	@override String get processing => 'em curso';
	@override String get replied => 'inquirido';
	@override String get rejected => 'rejeição';
	@override String get unknown => 'desconhecido';
	@override String get insufficientBalance => 'Equilíbrio insuficiente!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'O saldo de ${x} é insuficiente para cobrir as taxas da rede de ligação cruzada';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Uma transação ainda não foi concluída e não pode ser transferida neste momento';
	@override String get thisfunctionNotSupportExternalCalls => 'Esta função não pode ser chamada externamente';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Não há correspondência para um endereço que possa ser usado para pagar taxas entre cadeias, por favor mude para outra rede de cadeias para tentar.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'A correspondência atual com o montante máximo que pode ser transferido numa única transação é de ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'As observações não devem exceder 64 bytes';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Saldo insuficiente, montante: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Não é possível associar mais de 3 endereços.\nSe precisar de associar um novo endereço de pagamento.\nPrimeiro, desvincule outro endereço';
	@override String parametersA_exception({required Object x}) => 'Parâmetros: ${x}, exceção';
	@override String get parameterException => 'Exceção de parâmetro!';
	@override String get transferAmountMustBeLargerThan0 => 'O montante da transferência deve ser superior a 0';
	@override String get authorizationHasExpired => 'A autorização expirou';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'A aplicação não foi autorizada pelo proprietário';
	@override String get authenticationTokenIsInvalid => 'Token de autenticação inválido';
	@override String get verifyInfoIsInvalidOrExpired => 'Informações de validação inválidas ou expiradas';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Verificar se o número de terminais de acesso ultrapassou o limite de um em dez mil';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'A participação na atividade mineira deve ser superior a 3 dias';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'O número de membros do círculo de segurança não pode ser inferior a três';
	@override String get avatarIsNotSet => 'Avatar não definido';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'O número de referências diretas não pode ser inferior a 3';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'O limite de tempo é insuficiente e só pode alterar o seu número de telemóvel uma vez por ano.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Este número de telemóvel já existe e não pode ser duplicado';
	@override String get securityCodeIsIncorrect => 'Código de segurança incorreto';
	@override String get securityCodeMayHaveExpired => 'O código de segurança pode ter expirado';
	@override String get sessionIdIsInvalidOrExpired => 'ID de sessão inválido ou expirado';
	@override String get sessionHasBeenAuthorized => 'A sessão foi autorizada a ser concluída!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Só pode ser renovado no prazo de ${x} dias antes do termo do prazo';
	@override String get notYetGrantedDeveloperPermissions => 'Ainda não há direitos de autor';
	@override String fieldXcannotBeEmpty({required Object x}) => 'O campo ${x} não pode ser nulo';
	@override String get emailFormatError => 'Erro de formato de correio eletrónico';
	@override String theXformatIsIncorrect({required Object x}) => 'Erro de formatação \'${x}';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'O campo "${x}" tem de ter entre ${y} e ${z} caracteres.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'O intervalo de seleção \'${x}\' tem de estar compreendido entre ${y} e ${z}.';
	@override String get unchanged_sameAsOldContent => 'Inalterado, o mesmo conteúdo do anterior!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' já existe!';
	@override String get mobileNumberHasNotJoinedDelta => 'Este número de telemóvel não foi adicionado à Delta!';
	@override String get referrerIdCannotBeEmpty => 'O ID do referenciador não pode estar vazio!';
	@override String get referrerIdDoesNotExist => 'A ID do referenciador não existe!';
	@override String get didIsIncorrectOrInvalid => 'A DID está incorrecta ou é inválida!';
	@override String get accessTokenIsIncorrectOrInvalid => 'O accessToken é incorreto ou inválido!';
	@override String get minimumWithdrawalAmountIs1USD => 'Mínimo de 1USD para uma única retirada';
	@override String get miningTimeIsNotYet => 'Ainda não é altura de minerar.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Já existe, por favor não o adicione novamente!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Não é possível utilizar o número de registo como número de acesso de autenticação';
	@override String get canotAddYourSelf => 'Não é possível adicionar você mesmo';
	@override String get logOut => 'Terminar sessão';
	@override String get confirmLogout => 'Confirmar a saída do sistema';
	@override String get logOutTipsText => 'Nota: De acordo com o whitepaper, cada verificação de login da sua conta consumirá uma certa quantidade das suas moedas DTC a serem pagas ao verificador como incentivo, por isso não tente entrar e sair desnecessariamente, clicando no botão abaixo irá sair imediatamente.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Introduza "sim" para confirmar a saída do sistema.';
	@override String get tip => 'chamar a atenção para algo';
	@override String get cancel => 'cancelamentos';
	@override String get close => 'coagulação';
	@override String get selected => 'selecionado';
	@override String get edit => 'compilador';
	@override String get submit => 'apresentar (um relatório, etc.)';
	@override String get goBack => 'regressão (em psicologia)';
	@override String get copiedToClipboard => 'Foi copiado para a área de transferência.';
	@override String get nickname => 'termo carinhoso';
	@override String get confirm => 'reconhecer';
	@override String get cannotBeEmpty => 'Não pode estar vazio';
	@override String get deleteSuccessful => 'Eliminado com êxito!';
	@override String get successfullyModified => 'A modificação foi bem sucedida!';
	@override String get executionSuccessful => 'A implementação foi bem sucedida!';
	@override String get preview => 'antevisões';
	@override String get followSystem => 'sistema de acompanhamento';
	@override String get change => 'variação';
	@override String get replace => 'mudança (de endereço, etc.)';
	@override String get view => 'verificar';
	@override String get manage => 'de gestão';
	@override String get modify => 'modificações';
	@override String get replacedSuccessfully => 'Substituição bem sucedida!';
	@override String get authentication => 'autenticação';
	@override String get reacquire => 'recuperar';
	@override String get tryAgain => 'Tenta de novo.';
	@override String get querying => 'Estão a ser feitos inquéritos ...';
	@override String get writingToOnChain_pleaseWait => 'Está a ser escrito na cadeia, por favor aguarde ...';
	@override String get versionCheck => 'deteção de versões';
	@override String get alreadyLatestVersion => 'Já é a última versão!';
	@override String get foundNewVersion => 'Descubra a nova versão:';
	@override String get upgradeLink => 'Ligação de atualização:';
	@override String get deviceDescription => 'Descrição do equipamento.';
	@override String get notification30SecondsBeforeMiningStops => 'Execute o lembrete de notificação 30 segundos antes da mineração parar!';
	@override String get goMining => 'Ir minerar';
	@override String get deltaMiningReminder => 'Lembrete de Mineração Delta';
	@override String get clickToMine_miningIsAboutToStop => 'Clique aqui para minerar, a mineração irá parar em breve!';
	@override String get incorrect_input => 'Entrada incorreta!';
	@override String get are_you_sure_delete => 'Tem certeza de que deseja excluir?';
	@override String get delete_account => 'Excluir conta';
	@override String get how_to_operate_it => 'Viu como operá-lo?';
	@override String get deletion_warning_tip => 'Se você excluir sua conta, perderá todas as suas moedas Delta e todos os ganhos de outros membros também serão perdidos.';
	@override String get launchWhatsAppProgram => 'Iniciar programa WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Números de acesso com este ícone também suportam verificação de mensagens do WhatsApp. Ao enviar mensagens internacionais, é recomendado usar o WhatsApp para aumentar a taxa de sucesso e reduzir custos.';
	@override String get ihaveSentVerificationString => 'Enviei uma string de verificação';
	@override String get totalOfPeople => 'Total de pessoas: ';
	@override String get numberOfPeopleMining => 'Número de pessoas minerando';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Você pode usar um navegador em outro dispositivo para escanear o QR-code e passá-lo para o programa SMS';
	@override String get toggle => 'Alternar';
	@override String get DSMSverifier => 'DSMS Verificador';
	@override String get activate => 'Ativar';
	@override String get activated => 'Ativado';
	@override String get generateActivationCommand => 'Gerar comando de ativação';
	@override String get activationCommand => 'Comando de ativação';
	@override String get activationSentedTip => 'Após o envio do SMS de ativação, verifique o status da ativação no dispositivo terminal de acesso.';
	@override String get biometricsNotEnabledTip => 'A biometria (face ou impressão digital) não está habilitada no seu dispositivo. Habilite-a para continuar.';
	@override String get error => 'Erro';
	@override String get exceptionOccurredWhenCallingBiometric => 'Ocorreu uma exceção ao chamar a função biométrica (face ou impressão digital)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' números de acesso são verificados, '),
		shouldNum,
		const TextSpan(text: ' deve ser selecionado.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text} foi enviado para os ${n} números de acesso acima?';
	@override String get interface => 'Interface:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Tempo limite de espera ou incompatibilidade de número de remetente';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'O número de celular do membro do círculo de segurança que você preencheu não corresponde a: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Faça login em até 10 minutos após fazer logout para evitar a verificação de dois fatores.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Pelo menos ${n} números de telefone celular devem ser preenchidos';
	@override String get noAccessNumberInYourRegionYet => 'Ainda não há número de acesso em sua região';
	@override String get notEnoughAccessNumbersInYourRegion => 'Não há números de acesso suficientes em sua região';
	@override String get tipsForDeployDSMSterminal => 'O sistema carregou automaticamente alguns números de acesso de outros países para você. Para fornecer serviços de verificação melhores e de menor custo, é recomendável que você ou sua pessoa de referência implantem o terminal DSMS localmente para ganhar taxas de verificação.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Ninguém pode me fornecer o código de segurança?';
	@override String get useSupplementalMode => 'Usar modo suplementar';
	@override String get returnToSecurityCodeMode => 'Retornar ao modo de código de segurança';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Por favor, insira o número de celular associado. O código do país pode ser omitido.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'O número de celular de ${name} está incorreto';
	@override String get matchingVerificationStrategyIs => 'A estratégia de verificação de correspondência é:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'O saldo é maior que 3 ICP, não há necessidade de despejar combustível por enquanto.';
	@override String get escrowAccount => 'Conta de custódia';
	@override String get fuelRelay => 'Relé de combustível';
	@override String get pourFuel => 'Despeje combustível';
	@override String get fuelState => 'Estado do combustível';
	@override String get pouringFuelTips => 'Despejar combustível não traz nenhuma vantagem ou desvantagem, seu objetivo é enriquecer a experiência do sistema Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Patrocine desenvolvedores assistindo a anúncios';
	@override String get status => 'Estado';
	@override String get date => 'Data';
}

// Path: <root>
class _StringsRu implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsRu.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.ru,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <ru>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsRu _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'рис. начало';
	@override String get switchLanguage => 'Переключение языка';
	@override String get languageSwitch => 'Переключение языка';
	@override String get slogan => 'Построение децентрализованной экономики в дельте';
	@override String get countryRegionCode => 'Код страны/региона';
	@override String get countryRegionSelection => 'Выбор стран и регионов';
	@override String get nextStep => 'следующий шаг';
	@override String get yourPhoneNumber => 'Ваш номер телефона.';
	@override String get pleaseSelectCountryAndRegion => 'Пожалуйста, выберите вашу страну/регион';
	@override String get pleaseEnterPhoneNumber => 'Пожалуйста, введите действительный номер телефона!';
	@override String get referrerDid => 'Идентификатор реферера';
	@override String get pleaseEnterTheReferrersDid => 'Пожалуйста, введите действительный децентрализованный идентификатор реферера';
	@override String get thisDidIsInvalid => 'Этот DID недействителен.';
	@override String get nicknameFormatTips => 'Псевдоним не должен быть пустым и не должен превышать 16 цифр в длину.';
	@override String get additionalIinformation => 'Дополнительная информация';
	@override String get invitationSubject => 'Приглашение к достижению консенсуса в Дельте';
	@override String invitationLetter({required Object did}) => 'Здравствуйте, я участвую в построении консенсуса Delta! \n Delta — это новая платформа цифровых валют с открытым исходным кодом, работающая на ICP. Она может управлять различными цифровыми валютами и использовать их без паролей, закрытых ключей или мнемоники. Пожалуйста, нажмите на эту ссылку https://delta.kim/auto/download, чтобы установить приложение, и теперь вы приглашены принять участие в достижении консенсуса и чеканке монет. \n ИДЕНТИФИКАТОР рекомендателя: ${did}';
	@override String get dSMSverification => 'Валидация DSMS';
	@override String get getAccessNumbers => 'Получите несколько номеров доступа';
	@override String get getAccessNumberPromptMessage => 'Нажмите кнопку "Получить" ниже, чтобы включить в очередь набор номеров доступа для SMS-верификации.';
	@override String get optionalAccessNumbers => 'Дополнительный номер доступа';
	@override String get accessNumber => 'номер доступа';
	@override String get TELCO => 'оператор (электростанции, транспортной сети и т.д.)';
	@override String get score => 'оценка';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ru'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Пожалуйста, отметьте '),
			nBuilder(n),
			const TextSpan(text: ' номеров доступа и нажмите кнопку "'),
			span('text'),
			const TextSpan(text: '", чтобы перейти к следующему шагу.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Отметьте '),
			nBuilder(n),
			const TextSpan(text: ' номеров доступа и нажмите кнопку "'),
			span('text'),
			const TextSpan(text: '", чтобы перейти к следующему шагу.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta - это децентрализованная глобальная цифровая валюта с открытым исходным кодом и экосистема криптовалютных приложений.';
	@override String get deltaGoalsDesc => 'Цель - сделать так, чтобы люди могли использовать Delta для совместного создания новых цифровых валют, которые будут универсальными, справедливыми, безопасными, быстрыми и экологичными. А также предоставить различные эффективные сценарии применения этих цифровых валют и предыдущих криптовалют.';
	@override String get details => 'подробная информация';
	@override String get get => 'усиление';
	@override String get select => 'опция';
	@override String get send => 'отправка';
	@override String get complete => 'выполнить';
	@override String get selectedAccessNumberPrompt => 'При выборе отображается полный номер доступа и генерируется строка аутентификации.';
	@override String get location => 'размещение';
	@override String get verificationString => 'строка проверки';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Пожалуйста, используйте ваш номер телефона '),
		num,
		const TextSpan(text: ' и отправьте '),
		label,
		const TextSpan(text: ' на '),
		accessNumber,
		const TextSpan(text: ' для завершения проверки.'),
	]);
	@override String get ihaveSentTheSMS => 'Я отправил текстовое сообщение';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Строка проверки действительна в течение 6 минут, оставшееся время: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Слишком быстро, чтобы ждать ${x} секунд для продолжения!';
	@override String get waitingForVerificationSMS => 'Жду SMS с подтверждением...';
	@override String get partSuccsForVerificationSMS => 'SMS-верификация одного из терминалов доступа пройдена!';
	@override String get creatingAccessToken => 'Создается токен доступа...';
	@override String get intoDelta => 'Внутри Дельты';
	@override String get deltaAccountIsLoggedIn => 'Ваш аккаунт Delta вошел в систему';
	@override String get iHavLoggedOut => 'Я ухожу.';
	@override String get startTwoFactorVerification => 'Начало двойной верификации';
	@override String get securityCircleVerification => 'Валидация круга безопасности';
	@override String get generateSecurityCode => 'Сгенерировать код безопасности';
	@override String get generateSecurityCodeHintText => 'Сгенерированный код безопасности будет отправлен случайно выбранному члену вашего круга безопасности.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Вы не установили круг безопасности, ваша учетная запись очень небезопасна, пожалуйста, введите любую 6-значную цифру и перейдите к следующему шагу.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Код безопасности был сгенерирован, пожалуйста, свяжитесь со следующими родственниками и друзьями, чтобы запросить его для извлечения кода безопасности для прохождения проверки. действует в течение 30 минут!';
	@override String get itGetSecurityCodeTip => 'Совет: Вы можете получить код безопасности, дважды щелкнув по нику вашей учетной записи на странице Delta App -> Menu -> Provide Security.';
	@override String get securityCircleMemberList => 'Список участников круга безопасности:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Пожалуйста, выберите родственника или друга в списке участников, чтобы он сгенерировал и предоставил вам код безопасности для подтверждения вашей истинной личности. Цель состоит в том, чтобы предотвратить контроль учетной записи другими лицами в случае потери или кражи номера мобильного телефона.';
	@override String formatIsXdigits({required Object num}) => 'Формат в виде цифр ${num}';
	@override String get signInSuccessfully => 'Вход в систему успешно выполнен!';
	@override String get twoFAandLogin => 'Двойная аутентификация и вход в систему';
	@override String get verificationSuccessful => 'Проверьте успех!';
	@override String get validationFailed => 'Валидация не прошла!';
	@override String get dappInfo => 'Информация о DApp';
	@override String get securityCircle => 'защитное кольцо';
	@override String get securityCode => 'код безопасности';
	@override String get provideSecurity => 'обеспечение безопасности';
	@override String get addManully => 'Добавить вручную';
	@override String get addFromContacts => 'Добавить из адресной книги';
	@override String get addSecurityCircle => 'Добавить Круг безопасности';
	@override String get inputType => 'Тип входа';
	@override String get mobileNumber => 'номер мобильного телефона';
	@override String get did => 'Идентификатор адреса';
	@override String get pleaseEnterValidDID => 'Пожалуйста, введите действительный идентификатор децентрализованной личности';
	@override String get pleaseEnterValidWalletAddress => 'Пожалуйста, введите действительный адрес кошелька';
	@override String get appellation => 'форма адреса';
	@override String get appellationHint => 'Как вы его называете, например, "малыш"?';
	@override String get addSecurityCircleTips => 'Пожалуйста, не добавляйте в свой круг безопасности людей, которым вы не доверяете.';
	@override String get referralTeam => 'Рекомендуемые команды';
	@override String get profile => 'Информация о счете';
	@override String get menu => 'меню';
	@override String get directly => 'прямой';
	@override String get indirectly => 'непрямой';
	@override String get inviteContacts => 'Приглашение Контакт';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Ваш приглашенный - '),
		nickname,
		const TextSpan(text: ', и вы напрямую привлекли '),
		num1,
		const TextSpan(text: ' человек, из которых '),
		num2,
		const TextSpan(text: ' в настоящее время находятся в сети.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Вы косвенно привлекли '),
		num1,
		const TextSpan(text: ' человек, из которых '),
		num2,
		const TextSpan(text: ' в настоящее время находятся в сети.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Приглашайте своих друзей присоединиться к Delta и улучшайте социальное согласие вместе. За каждого прямого реферала ставка добычи одного человека увеличивает базовую ставку на '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Приглашайте друзей присоединиться к Delta и вместе улучшайте социальный консенсус. Каждая косвенная рекомендация одного человека увеличит скорость майнинга на '),
		rate2,
		const TextSpan(text: ' от базовой ставки.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Вы уверены, что хотите удалить "${name}"?';
	@override String get safetyCircleRoleQ => 'Каково назначение предохранительного кольца?';
	@override String get safetyCircleRoleA => 'Защитите свою учетную запись, обеспечив вторичную аутентификацию в конфиденциальных ситуациях.';
	@override String get howSecurityCirclesWorkQ => 'Как работают предохранительные кольца?';
	@override String get howSecurityCirclesWorkA => 'В случае необходимости проверки личности в Круге безопасности программа Delta Smart Contracts случайным образом выберет участника из списка приятелей Круга безопасности, который поможет вам получить код безопасности для завершения проверки личности за вас. Когда вы попросите участника ввести код безопасности, он сможет подтвердить, являетесь ли вы им или нет. В то же время программа выдаст сообщение: "Откажитесь предоставить код безопасности, если это не вы", чтобы защитить безопасность вашего аккаунта. Поэтому вы всегда должны быть уверены, что члены вашего круга безопасности - это люди, которым вы можете доверять.';
	@override String get securityCircleBeUsedQ => 'Когда он будет использоваться?';
	@override String get securityCircleBeUsedA1 => '1. Когда вы теряете контроль над своим Delta APP, обычно речь идет о потере или краже мобильного телефона.';
	@override String get securityCircleBeUsedA2 => '2. в случае некоторых конфиденциальных операций программе Delta Smart Contract необходимо подтвердить, что это именно вы.';
	@override String get provideSafetyTip1 => 'Когда ваш приятель попросит вас ввести код безопасности, обязательно подтвердите, что это его собственный код.';
	@override String get provideSafetyTip2 => 'Вы обеспечиваете безопасность вышеупомянутых друзей, которые назначили вас самым доверенным лицом в своем кругу безопасности и нуждаются в вашем подтверждении безопасности на случай, если они столкнутся с конфиденциальными операциями на своем счете.';
	@override String get provideSafetyTip3 => 'При необходимости дважды щелкните на аватаре другого человека, чтобы извлечь код безопасности.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'У другой стороны в данный момент нет кода безопасности, который необходимо извлечь!';
	@override String get existSecurityCodeTip => 'Убедитесь, что друг или член семьи, который просит вас ввести код безопасности, является тем же самым другом или членом семьи. Для защиты вашего друга или члена семьи вы должны отказать в предоставлении кода безопасности, если друг или член семьи не является тем же самым другом или членом семьи.';
	@override String get avatarSettings => 'Настройки аватара';
	@override String get NFTAvatarPropertyRightsText => 'Отказ от ответственности: Использование данного НФТ в качестве аватара является исключительно личным предпочтением и не имеет никакого отношения к владению правами на интеллектуальную собственность этого НФТ.';
	@override String get projectWebsite => 'Веб-сайт проекта:';
	@override String get whitepaper => 'белая бумага:';
	@override String get indexID => 'Index Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Индекс между ${start} и ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Введите индексный идентификатор вашего любимого NFT, и программа автоматически загрузит его в качестве аватара.';
	@override String get miningRate => 'скорость добычи';
	@override String get miningDetails => 'Подробности добычи';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Общая стоимость добычи: '),
		rate,
		const TextSpan(text: ' δ/день'),
	]);
	@override String get EndOfMiningSession => 'Цикл добычи закончился:';
	@override String get tapToMineDeltaCoin => 'Нажмите, чтобы добыть монеты Дельты ↑';
	@override String get clickToStartMining => 'Нажмите, чтобы начать добычу!';
	@override String get miningHasStoppedPromptDesc => 'Майнинг остановлен, каждые 24 часа проходит цикл майнинга, нажмите на значок молнии, чтобы начать новый раунд майнинга.Майнинг Delta - это механизм распределения, который не потребляет дополнительную арифметическую мощность и сетевой трафик вашего устройства.';
	@override String get aboutBaseRate => 'О базовой ставке?';
	@override String get baseRateDescription => 'Как было оговорено в техническом описании, правило снижения базовой ставки для дельта-майнинга будет разделено на две фазы.\nФаза 1: ставка будет равна 32δ/день, когда количество участников (регистраций) составляет 3 000 или меньше. Используя это значение в качестве начальной базы, базовая ставка будет уменьшаться вдвое каждый раз, когда количество людей увеличивается в 10 раз.\nФаза 2: когда число участников достигает 30 миллионов или более, базовая ставка уменьшается вдвое каждый раз, когда число участников увеличивается в 3 раза. До тех пор, пока не прекратится производство финального раскопа.';
	@override String get baseRate => 'базовый тариф (как в ISDN)';
	@override String get directReferralRewards => 'Бонус за прямое привлечение рефералов';
	@override String get directReferralRewardDesc => 'За каждого прямого реферала ваша ставка добычи будет увеличена еще на 1/3 от базовой ставки, пока они добывают.\n\n Кроме того, статус добычи ваших рефералов также будет засчитываться в ваш бонус за прямое привлечение.';
	@override String get indirectReferralRewards => 'Косвенные реферальные вознаграждения';
	@override String get indirectReferralRewardDesc => 'Когда косвенный реферал занимается добычей, ваша скорость добычи увеличивается еще на 1/10 от базовой скорости.\n\n Если вы работаете с командой прямых рефералов, каждый человек, которого они переадресуют, представляет собой косвенного реферала для вас.';
	@override String get mine => 'добывать (руду или другой ресурс из шахты)';
	@override String get thisMiningInformation => 'Текущая информация о добыче';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Участвовал в добыче: '),
		x,
		const TextSpan(text: ' раз'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Общий выигрыш на этот раз: '),
		x,
		const TextSpan(text: ' монет Дельта'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Базовый заработок: '),
		x,
		const TextSpan(text: ' монет'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Прямой вклад команды: '),
		x,
		const TextSpan(text: ' монет'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Косвенный вклад команды: '),
		x,
		const TextSpan(text: ' монет'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Длительность перерыва между раскопками: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Эффективные часы добычи: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} часов';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Для обеспечения безопасности имущества члены кружка безопасности должны постоянно поддерживать 3-5 доверенных лиц.';
	@override String get index => 'индексирование';
	@override String get amount => 'сумма денег';
	@override String get balance => 'балансы';
	@override String get timeStamp => 'метка времени';
	@override String get summary => 'рефераты';
	@override String get miningHasStopped => 'Добыча полезных ископаемых прекращена.';
	@override String get miningHasStoppedDesc => 'В настоящее время добыча остановлена, и вы начнете зарабатывать немедленно.';
	@override String get startMining => 'Начать добычу';
	@override String get changeMobileNumber => 'Изменение номера мобильного телефона';
	@override String get currentMobileNumber => 'Текущий номер мобильного телефона';
	@override String get newMobileNumber => 'Новый номер мобильного телефона';
	@override String get securityCodeFormatIs6digits => 'Формат кода безопасности - 6 цифр!';
	@override String get startVrification => 'Начало проверки';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Этот мобильный номер уже существует, связанный с ним DID: ${dId}';
	@override String get noDataYet => 'Нет данных';
	@override String get previousMobileNumber => 'Предыдущий номер мобильного телефона';
	@override String get changeLog => 'Запись изменений';
	@override String get referralLinkToShare => 'Рекомендуемые ссылки для обмена';
	@override String get referrer => 'реферер';
	@override String get isoCountryCode => 'Код страны ISO';
	@override String get avatarLogo => 'логотип заголовка';
	@override String get creationTime => 'Время создания';
	@override String get lastUpdate => 'Последнее обновление';
	@override String get numberOfSecurityCircleMembers => 'Количество членов кружков безопасности';
	@override String get theLatestMining => 'Последняя раскопка';
	@override String get effectiveMiningDays => 'Количество дней эффективной добычи';
	@override String get modifyNickname => 'Изменить прозвище';
	@override String get didNotChange => 'Никаких изменений!';
	@override String get kycVerification => 'Верификация KYC';
	@override String get faceID => 'Face ID';
	@override String get touchID => 'Идентификатор отпечатков пальцев';
	@override String get biometricsAuthorizationTest => 'Тестирование биометрической аутентификации';
	@override String get currentState => 'текущее состояние';
	@override String get biometricsAuthenticationLocalizedReason => 'Используйте разблокировку устройства для подтверждения своей личности.';
	@override String get graph => 'архив графики (например, карты, документы или ботанические рисунки)';
	@override String get referralRelationshipGraph => 'Составление карты реферальных отношений';
	@override String get nativeContacts => 'Местные контакты';
	@override String get registrationAndMiningTrends => 'Тенденции в области регистрации и добычи полезных ископаемых';
	@override String get inMining => 'добыча';
	@override String get registrationVolume => 'объем регистрации';
	@override String get unmined => 'неиспользованные';
	@override String get mined => 'добыча';
	@override String get communityMining => 'Добыча полезных ископаемых';
	@override String get consensusPromotionFund => 'Фонд содействия достижению консенсуса';
	@override String get ecologicalAwardFund => 'Фонд экологического стимулирования';
	@override String get icpFuelCrowdfunding => 'Краудфандинг ICP Fuel';
	@override String get coreDeveloperRewards => 'Вознаграждения для разработчиков';
	@override String get totalAllocation => 'Общее распределение';
	@override String get miningRatio => 'Коэффициент добычи';
	@override Map<String, String> get billion => {
		'30': '30 миллиардов',
		'60': '60 миллиардов',
		'180': '180 миллиардов.',
		'300': '300 миллиардов',
	};
	@override String get watchAdsToSupportDevelopers => 'Смотрите рекламу, чтобы поддержать разработчиков';
	@override String get loadingAdcomponents => 'Загрузка компонентов рекламы...';
	@override String get timeIsNotUp => 'Время еще не вышло!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Не удалось загрузить, возможно, сеть заблокирована!';
	@override String get pendingUSCTrecords => 'Записи по USCT';
	@override String get pendingUSCTrecordsDesc => 'Записи, ожидающие подтверждения USCT, будут подтверждены на рекламной платформе в течение 15-30 дней, и действительные записи будут перенесены в список записей USCT, а соответствующая сумма USCT будет добавлена к балансу счета.';
	@override String get validity => 'срок действия';
	@override String get advertiser => 'рекламодатели';
	@override String get earned => 'заработал';
	@override String get withdraw => 'отзывать';
	@override String get validUSCTrecords => 'Эффективные записи USCT';
	@override String get USCTmining => 'USCT Mining';
	@override String get aboutUSCTmining => 'О добыче USCT?';
	@override String get aboutUSCTminingItme1 => '1. USDT - это популярный во всем мире стейблкоин доллара США, который можно легко обменять на национальные суверенные валюты на крупнейших криптовалютных биржах по всему миру.';
	@override String get aboutUSCTminingItme2 => '2. USCT - это временная мера доходов от майнинга USCT, известная как кредит USD, который в конечном итоге будет конвертирован в USDT в соответствии с фактической суммой расчетов и правилами распределения рекламной платформы и соответствующей пропорцией.';
	@override String get aboutUSCTminingItme3 => '3. USCT Mining - это функция реализации трафиковой рекламы в сообществе Delta. Он использует преимущества большой базы пользователей сообщества Delta для получения многочисленных выгод для рекламодателей, разработчиков Delta и заочников. Она призвана обеспечить определенный эффективный доход для заочников на ранней стадии, когда экосистема Delta еще не сформировалась и не процветает; в то же время она обеспечивает определенную финансовую поддержку разработчикам, чтобы они могли продолжать предоставлять услуги по разработке в течение длительного периода времени и в конечном итоге смогли реализовать все планы, изложенные в документе; а также обеспечивает эффективный канал продвижения для рекламодателей продукта.';
	@override String get aboutUSCTminingItme4 => '4. правила распределения разработаны таким образом, что 40 процентов от общей выручки используется в качестве комиссионных за техническое обслуживание разработчиков, а оставшиеся 60 процентов - в качестве вознаграждения за заочное участие. Вознаграждение за отсутствие на рабочем месте часть многоуровневой модели распределения, аналогичной DTC, вознаграждение за отсутствие на рабочем месте будет разделено на три части в соответствии с соотношением 6:3:1, каждый раз, когда один из заочного вознаграждения USCT добычи 6 частей выделяется на заочное текущей рекламы, 3 части выделяется на вышестоящего реферала, 1 часть выделяется на второй уровень реферала. Аналогично, вы можете получить такое же вознаграждение за друзей, которых вы привлекли через USCT mining. Преимущество такого многоуровневого распределения заключается в том, что любой человек может заработать относительно большое количество USDT, развивая команду рефералов.';
	@override String get aboutUSCTminingItme5 => '5. расчетный период составляет 7 дней, т.е. каждые 7 дней действительность проверяется рекламной платформой, и подтвержденная действительность поступлений и фактическая сумма будут занесены на баланс. Минимальная сумма для каждого вывода составляет 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Строки с ${x} по ${y}.';
	@override String get wallet => 'кошельки';
	@override String get multiChainWallet => 'многоцепочечный кошелёк';
	@override String get deposit => 'депозит (например, на банковский счет)';
	@override String get transfer => 'перевод (деньги на банковский счет)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} в адресе кошелька';
	@override String get transactions => 'Записи о сделках';
	@override String get network => 'ретикуляция';
	@override String get walletAddress => 'Адрес кошелька';
	@override String get currentAddress => 'текущий адрес';
	@override String get depositAddress => 'Адрес пополнения';
	@override String get receivingMoneyAddress => 'адрес получателя платежа';
	@override String get applyTempDepositAddress => 'Адрес для подачи запроса на временное пополнение счета';
	@override String get tempDepositAddressTip => '1. Это общий депозитный адрес. Пожалуйста, не вносите сумму после истечения срока аренды или после того, как вас отвязали. Если это произойдет, сумма будет потеряна.';
	@override String get tempDepositAddressTip2 => '2. перед внесением депозита убедитесь, что [Название цепи] и [Название монеты] полностью совпадают; в случае контрактных токенов вам также необходимо убедиться, что [Стандарт контракта] и [Адрес контракта] полностью совпадают.';
	@override String get tempDepositAddressTip3 => '3. не пытайтесь внести средства, которые не соответствуют ни одному из параметров, указанных в советах выше, иначе сумма будет потеряна.';
	@override String get tempDepositAddressTip4 => '4. Если вам необходимо пополнить счет другими видами активов, перейдите на страницу соответствующей валюты и параметры для подачи заявки на новый адрес.';
	@override String get applyExtensionOfValidity => 'Заявление на продление срока действия';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Срок действия этого адреса истекает через '),
		diff,
		const TextSpan(text: ' и будет '),
		tap('manually extend'),
		const TextSpan(text: ' действителен в течение 12 часов до истечения срока действия.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Продление возможно только за 12 часов';
	@override String get theReceivingAddressValidForLongtime => 'Этот адрес действителен в течение длительного времени.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Этот адрес сбора действителен в течение длительного времени и автоматически зачисляется в режиме реального времени.';
	@override String get confirmDeposited => 'Подтверждение вкладов';
	@override String get unbindThisDepositAddress => 'Разблокируйте этот адрес пополнения счета';
	@override String get confirmDepositedTip => 'Если средства были переведены, нажмите на кнопку выше, чтобы через 10 минут на ваш кошелек был выставлен счет.';
	@override String get unbindDepositAddressTip => 'Чтобы снизить нагрузку на смарт-контракт, пожалуйста, отвяжите адрес пополнения, если вы больше не будете вносить средства в течение срока действия.';
	@override String get transferToAddress => 'перейти по адресу';
	@override String get longPressToPaste => 'Длительное нажатие для вставки';
	@override String get all => 'полный';
	@override String balanceX({required Object x}) => 'Баланс ${x}';
	@override String get transferOut => 'превращаться';
	@override String depositXcoins({required Object x}) => 'Начислено ${x}';
	@override String get sender => 'отправитель';
	@override String get recipient => 'получатель';
	@override String get memo => 'примечание';
	@override String get kind => 'образ (жизни)';
	@override String get transferAmountExceedsAvailableBalance => 'Переводы сверх имеющегося остатка';
	@override String get pleaseEnterValidAmount => 'Пожалуйста, введите действительную сумму';
	@override String get networkFee => 'Комиссия за обработку данных в сети';
	@override String get fee => 'комиссия за обработку';
	@override String validLengthXcharacters({required Object x}) => 'Допустимая длина адреса ${x} символов';
	@override String get historys => 'историческая справка';
	@override String get dtcCreditdetail => 'Детали Delta Points';
	@override String get usdCreditdetail => 'USD Баллы Подробнее';
	@override String get dappSquare => 'dApp Plaza';
	@override String get amountRaised => 'Сумма сбора';
	@override String get disbursedAmount => 'Выпущенная сумма';
	@override String get participationTimes => 'Количество участников';
	@override String get completionRate => 'процент выполнения';
	@override String get exchangeRate => 'курс обмена валюты';
	@override String get icpCrowdfunding => 'Краудфандинг ICP';
	@override String get crowdfunding => 'краудфандинг';
	@override String get trendsCurve => 'кривая тренда';
	@override String get fullScreenView => 'полноэкранный просмотр';
	@override String get walletBalance => 'Баланс кошелька:';
	@override String get manageWallet => 'Управление кошельком';
	@override String get fundraiseAmount => 'сбор средств';
	@override String get exchangeRewardAmount => 'Использование суммы вознаграждения';
	@override String get fundraise => 'сбор средств';
	@override String rangeIntegersX({required Object x}) => 'Диапазон: целое число ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Успешно участвуйте в сборе средств и получайте вознаграждение ${amount}DTCT';
	@override String get amountSummary => 'Сводные данные о суммах';
	@override String get changePreferred => 'Изменение предпочтений';
	@override String get changePreferredAddress => 'Изменить предпочитаемый адрес';
	@override String get preferredAddressTip => 'Средства будут автоматически переведены на предпочитаемый адрес при получении средств с помощью зарегистрированного мобильного номера или DID.';
	@override String get newAddress => 'Новый адрес';
	@override String get newAddressTip => 'Для предотвращения злоупотреблений, когда существует более одного адреса кошелька, за каждый новый созданный адрес взимается комиссия за транзакцию.';
	@override String get createNew => 'недавно построенный';
	@override String get chainNetworkName => 'имя сети';
	@override String get from => 'происходить из (места)';
	@override String get to => 'до (времени)';
	@override String get noAvailableDepositAmountDetected => 'Не обнаружено доступной суммы депозита!';
	@override String get crossChainReceiveMoneyMonitoring => 'Коллекция с перекрестными цепочками слушает ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Получено ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Подтверждение в процессе ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Примечания (обязательно к прочтению для новичков)';
	@override String get whyUseSharedAddresses => 'Зачем использовать общий адрес?';
	@override String get useSharedrAdvantage => 'Преимущества использования общих адресов при депонировании по цепочкам заключаются в следующем:';
	@override String get useSharedrAdvantage1 => '1. уменьшите трату комиссии за перевод средств и снижайте стоимость использования для пользователей. Из-за использования эксклюзивного адреса это приведет к слишком большому распылению средств, как правило, для того, чтобы облегчить последующую передачу другим пользователям при выводе средств, когда пользователь пополняет счет, второй перевод средств должен быть объединен в один или небольшое количество адресов управления.';
	@override String get useSharedrAdvantage2 => '2. в схеме с общим доступом программе необходимо поддерживать лишь относительно небольшой пул адресов, которые могут быть быстро сопоставлены с исходящими передачами и прослушиванием легкого сбора, что снижает затраты вычислительных ресурсов. В случае использования эксклюзивных адресов все было бы наоборот.';
	@override String get tokenType => 'Тип токена';
	@override String get contract => 'подрядчик';
	@override String get contractStandard => 'стандарт договора';
	@override String get contractAddress => 'адрес договора';
	@override String get native => 'простейшие';
	@override String get confirmUnbindingPleaseEnterYes => 'Чтобы подтвердить отмену привязки, введите "да".';
	@override String get listAllWorkingTempReceivingAddresses => 'Перечислите все рабочие адреса кросс-цепочек перезарядки';
	@override String get setNote => 'Настройка заметок';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Не может быть длиннее ${x} байт';
	@override String get transferFee => 'комиссия за перевод';
	@override String get crossChainFee => 'межцепочечная комиссия';
	@override String get crossChainTransferOutError => 'ошибка при передаче сшивки';
	@override String get chainName => 'название цепи';
	@override String get message => 'сообщения';
	@override String get dontShowAgain => 'больше не отображается';
	@override String get queuing => 'очередь';
	@override String get optional => 'опция';
	@override String get publiclyVisible => 'публично видимый';
	@override String get rates => 'тариф';
	@override String get minimum => 'минимум';
	@override String get maximum => 'верхний предел';
	@override String get minimumBlockConfirmations => 'Минимальное количество подтверждений блока';
	@override String get dsmsVerifyTerminal => 'Терминал проверки DSMS';
	@override String get overall => 'зонт';
	@override String get my => 'мой';
	@override String get checkValidatorQualifications => 'Проверка квалификации привилегий аутентификатора';
	@override String get getVerifierPermissions => 'Получение привилегий аутентификатора';
	@override String get qualification => 'природные данные';
	@override String get upperLimit => 'ограничение';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Максимальное количество разрешенных терминалов доступа';
	@override String get numberOfExistingAccessTerminals => 'Количество установленных терминалов доступа';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Прежде чем подавать заявку на получение привилегий аутентификатора, необходимо подготовить незанятый мобильный телефон с операционной системой Android и выделенным номером доступа, а также скачать и установить приложение DSMS Access Terminal.';
	@override String get downloadLink => 'ссылка для скачивания';
	@override String get alreadyReadyFollowingTheAboveTips => 'Он готов в соответствии с приведенными выше советами.';
	@override String get globalUniversal => 'для глобального использования';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'В настоящее время недостаточно локальных аутентификаторов для участия в службе доступа к аутентификации DSMS, пожалуйста, выберите службу доступа "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'как номер только для доступа';
	@override String pleaseCheckTip({required Object tip}) => 'Поставьте галочку в поле "${tip}".';
	@override String get inputLengthTooShort => 'Слишком короткая длина входного сигнала';
	@override String get shortName => 'аббревиатуры';
	@override String pleaseEnterXname({required Object name}) => 'Пожалуйста, введите ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Заявка подана, пожалуйста, подождите...';
	@override String get applyForDSMSVerifierPermission => 'Подать заявку на получение привилегий валидатора DSMS';
	@override String get confirmInformation => 'Подтверждение информации';
	@override String get lastHeartbeat => 'последний удар сердца';
	@override String get expirationTime => 'срок';
	@override String get country => 'нации';
	@override String get accessTerminals => 'терминал доступа';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Общее количество терминалов с номером доступа DSMS';
	@override String get textContent => 'Содержание текста';
	@override String get scanQRcodeToLogin => 'Проведите пальцем по экрану, чтобы войти в систему';
	@override String get confirmLogin => 'Подтвердите вход';
	@override String get authorizeSubApplicationToLogin => 'Разрешите этому подприложению войти в систему';
	@override String get authorizationSuccessful => 'Авторизация прошла успешно!';
	@override String get launchSMSprogram => 'Запуск программы SMS';
	@override String get notApplied => 'Нет приложения';
	@override String get validityPeriod => 'срок действия';
	@override String get renewal => 'заявление на продление';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Сканирование кода для авторизации входа в терминал';
	@override String get rewards => 'стимулы';
	@override String get roles => 'персонаж';
	@override String get developerCenter => 'Центр разработчиков';
	@override String get appName => 'Имя приложения';
	@override String get pleaseSelect => 'пожалуйста, выберите';
	@override String get category => 'категория';
	@override String get keywords => 'по слову';
	@override String get pleaseEnterAkeyword => 'Пожалуйста, введите ключевое слово';
	@override String get createApplication => 'Создание приложений';
	@override String get appType => 'Тип приложения';
	@override String get numberOfCategoriesMustBetween1and3 => 'Количество категорий должно быть от 1 до 3';
	@override String get appLogoSpecifications => 'Формат изображения: png, размер: не более 100 КБ, разрешение (пикселей): 256*256';
	@override String get localAlbum => 'Местные фотоальбомы';
	@override String get networkPath => 'сетевой путь';
	@override String get imageURLkAddress => 'URL-адрес изображения';
	@override String get urlAddressFormatIsIncorrect => 'Неправильно отформатированный адрес URL';
	@override String get imageFormatOnlySupportsPng => 'Изображения поддерживаются только в формате "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'Длина должна быть в пределах ${a}-${b} символов.';
	@override String get introduction => 'краткое содержание';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'Размер изображения не может быть больше ${a}, сейчас ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'Разрешение изображения должно быть: ${p1}(пикселей), в настоящее время ${p2}';
	@override String get becomeDeveloper => 'Станьте разработчиком';
	@override String get developerInformation => 'Информация о разработчике';
	@override String get teamName => 'Название команды';
	@override String get website => 'узел';
	@override String get other => 'кроме';
	@override String get githubVerification => 'Верификация на Github';
	@override String get exampleUrl => 'Пример Url';
	@override String githubVerificationTip({required Object did}) => 'Пожалуйста, используйте свой аккаунт GitHub для создания файла \'delta.did\' в вашем репозитории с содержимым \'${did}\'; затем вставьте Url-адрес этого файла в поле ввода для аутентификации.';
	@override String get createApp => 'Создание приложений';
	@override String get appManagement => 'управление приложениями';
	@override String get statusLogs => 'Журнал состояния';
	@override String get bad => 'нехорошо';
	@override String get normal => 'обычно';
	@override String get good => 'превосходный';
	@override String get onceCreatedItCannotBeChanged => 'Созданный однажды, он не может быть изменен!';
	@override String get manageApplicationEntity => 'Управление сущностями приложения';
	@override String get currentVersion => 'текущая версия';
	@override String get submitVersion => 'Представленная версия';
	@override String get packageOnlySupportZipCompressedFile => 'Пакет поддерживает только файлы, сжатые в формате zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Файл \'${name}\' не найден в zip-пакете.';
	@override String get fileList => 'Список документов:';
	@override String get programPackage => 'Пакет программирования:';
	@override String get automaticallyExtractFromVersionFile => 'Автоматическое извлечение из файлов \'.version\'';
	@override String get dappVersionFormatTip => 'Формат номера версии должен быть десятичным с точностью до 2 цифр, не превышающей 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Номер версии должен быть больше, чем текущая версия \'${v}\'.';
	@override String get versionNotes => 'Оттиск:';
	@override String get updateRelease => 'новая версия';
	@override String get loadAndRun => 'Загрузите и запустите';
	@override String get notYetSubmittedProgramPackage => 'Пакет программ еще не представлен!';
	@override String get authorizeMinidAppLogin => 'Авторизуйте вход в мини-приложение';
	@override String get confirmAuthorizationPleaseEnterYes => 'Чтобы подтвердить авторизацию, введите "да".';
	@override String get authorizeNow => 'Немедленное разрешение';
	@override String get operation => 'Операция.';
	@override String get statusChange => 'Изменение статуса';
	@override String get changeTo => 'Изменить на:';
	@override String get notes => 'Примечания.';
	@override String get changesNotEffective => 'Изменение недействительно!';
	@override String get released => 'Опубликовано';
	@override String get inPublicBeta => 'открытая бета-версия';
	@override String get developers => 'Разработано.';
	@override String get reviewList => 'Список комментариев.';
	@override String get postReview => 'Оставить комментарий';
	@override String get scoreNow => 'Оценить сейчас';
	@override String get description => 'Описание.';
	@override String get noData => '(^-^)\n Нет данных';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Версия была обновлена с ${a} до ${b}.';
	@override String get loadNewVersion => 'Загрузить новую версию';
	@override String get name => 'Имя.';
	@override String get canisterId => 'Tank Id.';
	@override String get updateTime => 'время обновления';
	@override String get contractCanistersState => 'Статус контрактного резервуара';
	@override String get userDistribution => 'распределение пользователей';
	@override String get settings => 'Настройка';
	@override String get security => 'Безопасность';
	@override String get invite => 'приглашения';
	@override String get more => 'Подробнее...';
	@override String get receiveAddress => 'Адрес получения:';
	@override String get hangingAmount => 'висит';
	@override String get hangingAmountTips => 'Отложенные суммы - это временные записи о вознаграждениях, полученных за добычу полезных ископаемых вашей командой, как только вы проведете сеанс добычи, эти суммы будут собраны в Отложенных суммах.';
	@override String get pendingAmount => 'ожидание';
	@override String get pendingAmountTips => 'Незавершенные суммы - это суммы, которые еще не подтверждены рекламодателями, а те, которые соответствуют действительности, будут перенесены в действительную запись USCT, а недействительная часть будет исключена.';
	@override String get received => 'получено';
	@override String get processing => 'в процессе';
	@override String get replied => 'респондент';
	@override String get rejected => 'отказ';
	@override String get unknown => 'Неизведанное';
	@override String get insufficientBalance => 'Недостаточный баланс!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Баланс ${x} недостаточен для оплаты услуг перекрестной сети';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Транзакция еще не завершена и не может быть передана в данный момент';
	@override String get thisfunctionNotSupportExternalCalls => 'Эта функция не поддерживает вызов извне';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Не найден адрес, который можно использовать для оплаты межцепочечной комиссии, пожалуйста, переключитесь на другую сеть, чтобы попробовать.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'Текущее соответствие максимальной суммы, которая может быть переведена за одну транзакцию, составляет ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Заметки не должны превышать 64 байт';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Баланс недостаточен, и его сумма составляет: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Вы не можете привязать более 3 адресов.\nЕсли вам нужно привязать новый платежный адрес.\nПожалуйста, сначала отвяжите другой адрес';
	@override String parametersA_exception({required Object x}) => 'Параметры: ${x}, исключение';
	@override String get parameterException => 'Исключение параметра!';
	@override String get transferAmountMustBeLargerThan0 => 'Сумма перевода должна быть больше 0';
	@override String get authorizationHasExpired => 'Срок действия разрешения истек';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'Приложение не было авторизовано владельцем';
	@override String get authenticationTokenIsInvalid => 'Неверный маркер аутентификации';
	@override String get verifyInfoIsInvalidOrExpired => 'Недействительная или просроченная информация о проверке';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Убедитесь, что количество терминалов доступа превысило предел один на десять тысяч.';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'Участие в добыче должно быть более 3 дней';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Число членов круга безопасности не может быть меньше трех';
	@override String get avatarIsNotSet => 'Аватар не установлен';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Количество прямых рефералов не может быть меньше 3';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Временной лимит недостаточен, и вы можете менять номер мобильного телефона только один раз в год.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Этот номер мобильного телефона уже существует и не может быть продублирован';
	@override String get securityCodeIsIncorrect => 'Неверный код безопасности';
	@override String get securityCodeMayHaveExpired => 'Возможно, истек срок действия кода безопасности';
	@override String get sessionIdIsInvalidOrExpired => 'Неверный или истекший идентификатор сеанса';
	@override String get sessionHasBeenAuthorized => 'Сессия была разрешена к завершению!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Продление возможно только в течение ${x} дней до истечения срока действия';
	@override String get notYetGrantedDeveloperPermissions => 'Права разработчика пока отсутствуют';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Поле ${x} не может быть нулевым';
	@override String get emailFormatError => 'Ошибка формата электронной почты';
	@override String theXformatIsIncorrect({required Object x}) => 'Ошибка форматирования \'${x}\'';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Поле "${x}" должно быть длиной от ${y} до ${z} символов.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Диапазон выбора \'${x}\' должен находиться между ${y} и ${z}.';
	@override String get unchanged_sameAsOldContent => 'Без изменений, то же содержание, что и раньше!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' уже существует!';
	@override String get mobileNumberHasNotJoinedDelta => 'Этот номер мобильного телефона не был добавлен в Delta!';
	@override String get referrerIdCannotBeEmpty => 'Идентификатор реферера не может быть пустым!';
	@override String get referrerIdDoesNotExist => 'Идентификатор реферера не существует!';
	@override String get didIsIncorrectOrInvalid => 'DID неверен или недействителен!';
	@override String get accessTokenIsIncorrectOrInvalid => 'Токен доступа неверен или недействителен!';
	@override String get minimumWithdrawalAmountIs1USD => 'Минимум 1USD для одного вывода средств';
	@override String get miningTimeIsNotYet => 'Время для добычи еще не пришло.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Уже существует, пожалуйста, не добавляйте его снова!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Невозможно использовать регистрационный номер в качестве номера доступа для аутентификации';
	@override String get canotAddYourSelf => 'Не удалось добавить себя';
	@override String get logOut => 'Выйти из системы';
	@override String get confirmLogout => 'Подтвердите выход из системы';
	@override String get logOutTipsText => 'Пожалуйста, обратите внимание: в соответствии с информацией в whitepaper, при каждой верификации вашего аккаунта будет расходоваться определенное количество ваших монет DTC, которые будут выплачены верификатору в качестве поощрения, поэтому не пытайтесь входить и выходить без необходимости, нажатие на кнопку ниже приведет к немедленному выходу из системы.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Пожалуйста, введите "да", чтобы подтвердить выход из системы.';
	@override String get tip => 'привлекать внимание к чему-л.';
	@override String get cancel => 'отмены';
	@override String get close => 'свертывание';
	@override String get selected => 'выбранные';
	@override String get edit => 'компилятор';
	@override String get submit => 'представить (отчет и т.д.)';
	@override String get goBack => 'регрессия (в психологии)';
	@override String get copiedToClipboard => 'Он был скопирован в буфер обмена.';
	@override String get nickname => 'ласкательное выражение';
	@override String get confirm => 'узнайте';
	@override String get cannotBeEmpty => 'Не может быть пустым';
	@override String get deleteSuccessful => 'Удалено успешно!';
	@override String get successfullyModified => 'Модификация прошла успешно!';
	@override String get executionSuccessful => 'Реализация прошла успешно!';
	@override String get preview => 'превью';
	@override String get followSystem => 'система контроля';
	@override String get change => 'вариация';
	@override String get replace => 'замены';
	@override String get view => 'проверять';
	@override String get manage => 'менеджмент';
	@override String get modify => 'модификации';
	@override String get replacedSuccessfully => 'Замена прошла успешно!';
	@override String get authentication => 'аутентификация';
	@override String get reacquire => 'получить';
	@override String get tryAgain => 'Попробуйте еще раз.';
	@override String get querying => 'В настоящее время ведутся поиски ...';
	@override String get writingToOnChain_pleaseWait => 'Он записывается в цепочку, пожалуйста, подождите ...';
	@override String get versionCheck => 'определение версии';
	@override String get alreadyLatestVersion => 'Уже последняя версия!';
	@override String get foundNewVersion => 'Откройте для себя новую версию:';
	@override String get upgradeLink => 'Ссылка на обновление:';
	@override String get deviceDescription => 'Описание оборудования.';
	@override String get notification30SecondsBeforeMiningStops => 'Выполните напоминание об уведомлении за 30 секунд до остановки майнинга!';
	@override String get goMining => 'Займитесь майнингом';
	@override String get deltaMiningReminder => 'Напоминание о дельта-майнинге';
	@override String get clickToMine_miningIsAboutToStop => 'Нажмите здесь, чтобы начать майнинг, майнинг скоро прекратится!';
	@override String get incorrect_input => 'Неверный ввод!';
	@override String get are_you_sure_delete => 'Вы уверены, что хотите удалить?';
	@override String get delete_account => 'Удалить аккаунт';
	@override String get how_to_operate_it => 'Посмотрите, как им управлять?';
	@override String get deletion_warning_tip => 'Если вы удалите свою учетную запись, вы потеряете все свои монеты Delta, а также все доходы других участников.';
	@override String get launchWhatsAppProgram => 'Запустить программу WhatsApp';
	@override String get sms => 'СМС';
	@override String get whatsApp_verification_tips => 'Номера доступа с этим значком также поддерживают проверку сообщений WhatsApp. При отправке международных сообщений рекомендуется использовать WhatsApp, чтобы повысить вероятность успеха и сократить расходы.';
	@override String get ihaveSentVerificationString => 'Я отправил строку проверки';
	@override String get totalOfPeople => 'Всего людей: ';
	@override String get numberOfPeopleMining => 'Количество людей, занятых майнингом';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Вы можете использовать браузер на другом устройстве, чтобы отсканировать QR-код и передать его в программу SMS';
	@override String get toggle => 'Переключить';
	@override String get DSMSverifier => 'DSMS Verifier';
	@override String get activate => 'Активировать';
	@override String get activated => 'Активирован';
	@override String get generateActivationCommand => 'Сгенерировать команду активации';
	@override String get activationCommand => 'Команда активации';
	@override String get activationSentedTip => 'После отправки SMS-сообщения об активации проверьте статус активации на терминальном устройстве доступа.';
	@override String get biometricsNotEnabledTip => 'Биометрия (лицо или отпечатки пальцев) не включена на вашем устройстве. Включите ее, чтобы продолжить.';
	@override String get error => 'Ошибка';
	@override String get exceptionOccurredWhenCallingBiometric => 'Произошло исключение при вызове биометрической функции (лицо или отпечаток пальца)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: 'Проверено '),
		checkedNum,
		const TextSpan(text: ' номеров доступа, следует выбрать '),
		shouldNum,
		const TextSpan(text: '.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Был ли отправлен ${text} на указанные выше номера доступа ${n}?';
	@override String get interface => 'Интерфейс:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Время ожидания истекло или номер отправителя не совпадает';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Номер мобильного телефона участника круга безопасности, который вы указали, не совпадает: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Войдите в систему в течение 10 минут после выхода, чтобы избежать двухфакторной проверки.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Необходимо указать не менее ${n} номеров мобильных телефонов';
	@override String get noAccessNumberInYourRegionYet => 'В вашем регионе пока нет номера доступа';
	@override String get notEnoughAccessNumbersInYourRegion => 'Недостаточно номеров доступа в вашем регионе';
	@override String get tipsForDeployDSMSterminal => 'Система автоматически загрузила для вас некоторые номера доступа из других стран. Чтобы предоставить более качественные и недорогие услуги проверки, вам или вашему рефералу рекомендуется развернуть терминал DSMS локально, чтобы получать плату за проверку.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Никто не может предоставить мне код безопасности?';
	@override String get useSupplementalMode => 'Использовать дополнительный режим';
	@override String get returnToSecurityCodeMode => 'Вернуться в режим кода безопасности';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Пожалуйста, введите их связанный номер мобильного телефона. Код страны можно опустить.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Неверный номер мобильного телефона ${name}';
	@override String get matchingVerificationStrategyIs => 'Стратегия проверки соответствия:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Баланс больше 3 ICP, пока нет необходимости заливать топливо.';
	@override String get escrowAccount => 'Счет условного депонирования';
	@override String get fuelRelay => 'Топливное реле';
	@override String get pourFuel => 'Залить топливо';
	@override String get fuelState => 'Состояние топлива';
	@override String get pouringFuelTips => 'Заливка топлива не приносит вам никаких преимуществ или недостатков, ее цель — обогатить опыт использования системы Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Спонсируйте разработчиков, просматривая рекламу';
	@override String get status => 'Статус';
	@override String get date => 'Дата';
}

// Path: <root>
class _StringsTh implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsTh.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.th,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <th>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsTh _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'หน้าแรก';
	@override String get switchLanguage => 'เปลี่ยนภาษา';
	@override String get languageSwitch => 'สวิตช์ภาษา';
	@override String get slogan => 'สร้างวงจรเศรษฐกิจแบบกระจายอำนาจในพื้นที่สามเหลี่ยมปากแม่น้ำ';
	@override String get countryRegionCode => 'รหัสประเทศ';
	@override String get countryRegionSelection => 'การเลือกประเทศและภูมิภาค';
	@override String get nextStep => 'ขั้นตอนต่อไป';
	@override String get yourPhoneNumber => 'หมายเลขโทรศัพท์ของคุณ';
	@override String get pleaseSelectCountryAndRegion => 'โปรดเลือกประเทศ/ภูมิภาคของคุณ';
	@override String get pleaseEnterPhoneNumber => 'กรุณากรอกหมายเลขโทรศัพท์ที่ถูกต้อง!';
	@override String get referrerDid => 'ผู้แนะนำ DID';
	@override String get pleaseEnterTheReferrersDid => 'โปรดป้อนรหัสประจำตัวแบบกระจายอำนาจของผู้แนะนำที่ถูกต้อง';
	@override String get thisDidIsInvalid => 'DID นี้ไม่ถูกต้อง';
	@override String get nicknameFormatTips => 'ชื่อเล่นไม่สามารถเว้นว่างได้ และต้องมีความยาวไม่เกิน 16 ตัวอักษร';
	@override String get additionalIinformation => 'ข้อมูลเพิ่มเติม';
	@override String get invitationSubject => 'ขอเชิญร่วมสร้างฉันทามติเดลต้า';
	@override String invitationLetter({required Object did}) => 'สวัสดี ฉันเข้าร่วมในการสร้างฉันทามติของเดลต้า! \n Delta เป็นแพลตฟอร์มสกุลเงินดิจิทัลแบบโอเพ่นซอร์สใหม่ที่ทำงานบน ICP สามารถจัดการและใช้สกุลเงินดิจิทัลต่างๆ ได้โดยไม่ต้องใช้รหัสผ่าน คีย์ส่วนตัว หรือตัวช่วยจำ โปรดคลิกลิงก์นี้ https://delta.kim/auto/download เพื่อติดตั้งแอปพลิเคชัน และตอนนี้คุณได้รับเชิญให้เข้าร่วมในการสร้างฉันทามติและการทำเหรียญกษาปณ์ \n ผู้แนะนำ DID: ${did}';
	@override String get dSMSverification => 'การตรวจสอบ DSMS';
	@override String get getAccessNumbers => 'รับหมายเลขการเข้าถึงบางส่วน';
	@override String get getAccessNumberPromptMessage => 'คลิกปุ่ม "รับ" ด้านล่างเพื่อเลือกกลุ่มหมายเลขเข้าถึงการยืนยันทาง SMS ในคิว';
	@override String get optionalAccessNumbers => 'หมายเลขการเข้าถึงเพิ่มเติม';
	@override String get accessNumber => 'หมายเลขการเข้าถึง';
	@override String get TELCO => 'ผู้ดำเนินการ';
	@override String get score => 'คะแนน';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('th'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'โปรดตรวจสอบหมายเลขเข้าถึง '),
			nBuilder(n),
			const TextSpan(text: ' แล้วคลิกปุ่ม "'),
			span('text'),
			const TextSpan(text: '" เพื่อไปยังขั้นตอนต่อไป'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'โปรดตรวจสอบหมายเลขเข้าใช้งาน '),
			nBuilder(n),
			const TextSpan(text: ' แล้วคลิกปุ่ม "'),
			span('text'),
			const TextSpan(text: '" เพื่อไปยังขั้นตอนต่อไป '),
		]),
	);
	@override String get whatIsDeltaDesc => 'เดลต้าเป็นโครงการทดลองสกุลเงินดิจิทัลระดับโลกที่มีการกระจายอำนาจแบบโอเพ่นซอร์สและห่วงโซ่ระบบนิเวศแอปพลิเคชันสกุลเงิน';
	@override String get deltaGoalsDesc => 'เป้าหมายคือการอนุญาตให้ผู้คนใช้เดลต้าเพื่อร่วมกันสร้างสกุลเงินดิจิทัลใหม่ที่เป็นสากล ยุติธรรม ปลอดภัย รวดเร็ว และเป็นมิตรต่อสิ่งแวดล้อม และจัดเตรียมสถานการณ์การใช้งานที่มีประสิทธิภาพต่างๆ สำหรับสกุลเงินดิจิทัลเหล่านี้และสกุลเงินดิจิทัลก่อนหน้านี้';
	@override String get details => 'รายละเอียด';
	@override String get get => 'รับ';
	@override String get select => 'เลือก';
	@override String get send => 'ส่ง';
	@override String get complete => 'เสร็จ';
	@override String get selectedAccessNumberPrompt => 'เมื่อเลือก หมายเลขเข้าใช้งานแบบเต็มจะแสดงขึ้น และสร้างสตริงการยืนยัน';
	@override String get location => 'ที่ตั้ง';
	@override String get verificationString => 'สตริงการตรวจสอบ';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'โปรดใช้หมายเลขโทรศัพท์ของคุณ '),
		num,
		const TextSpan(text: ' และส่ง '),
		label,
		const TextSpan(text: ' ไปที่ '),
		accessNumber,
		const TextSpan(text: ' เพื่อดำเนินการยืนยันให้เสร็จสิ้น'),
	]);
	@override String get ihaveSentTheSMS => 'ฉันได้ส่งข้อความแล้ว';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'สตริงการตรวจสอบถูกต้องภายใน 6 นาที เวลาที่เหลืออยู่: '),
		time,
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'เร็วเกินไป รอ ${x} วินาทีก่อนดำเนินการต่อ!';
	@override String get waitingForVerificationSMS => 'กำลังรอ SMS ยืนยัน...';
	@override String get partSuccsForVerificationSMS => 'ผ่านการยืนยันทาง SMS ของหนึ่งในเทอร์มินัลการเข้าถึงแล้ว!';
	@override String get creatingAccessToken => 'กำลังสร้างโทเค็นเพื่อการเข้าถึง...';
	@override String get intoDelta => 'เข้าสู่เดลต้า';
	@override String get deltaAccountIsLoggedIn => 'บัญชีเดลต้าของคุณเข้าสู่ระบบแล้ว';
	@override String get iHavLoggedOut => 'ฉันออกจากระบบแล้ว';
	@override String get startTwoFactorVerification => 'เริ่มการยืนยันแบบสองขั้นตอน';
	@override String get securityCircleVerification => 'การตรวจสอบวงกลมความปลอดภัย';
	@override String get generateSecurityCode => 'สร้างรหัสความปลอดภัย';
	@override String get generateSecurityCodeHintText => 'รหัสความปลอดภัยที่สร้างขึ้นจะถูกส่งไปยังสมาชิกที่ได้รับการสุ่มเลือกในแวดวงความปลอดภัยของคุณ';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'คุณยังไม่ได้ตั้งค่าวงกลมความปลอดภัย บัญชีของคุณไม่ปลอดภัยอย่างยิ่ง โปรดป้อนตัวยึดตำแหน่ง 6 หลักและไปที่ขั้นตอนถัดไป';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'สร้างรหัสความปลอดภัยแล้ว โปรดติดต่อญาติและเพื่อนต่อไปนี้เพื่อขอให้ดึงรหัสความปลอดภัยเพื่อให้คุณผ่านการตรวจสอบ ใช้งานได้ภายใน 30 นาที!';
	@override String get itGetSecurityCodeTip => 'เคล็ดลับ: ค้นหาชื่อเล่นบัญชีของคุณในหน้า Delta App->Menu->Provide Security และดับเบิลคลิกเพื่อรับรหัสความปลอดภัย';
	@override String get securityCircleMemberList => 'รายชื่อสมาชิกแวดวงความปลอดภัย:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'โปรดเลือกญาติหรือเพื่อนในรายชื่อสมาชิกเพื่อสร้างและมอบรหัสความปลอดภัยเพื่อยืนยันตัวตนที่แท้จริงของคุณ จุดประสงค์คือเพื่อป้องกันไม่ให้ผู้อื่นควบคุมบัญชีเมื่อหมายเลขโทรศัพท์มือถือสูญหายหรือถูกขโมย';
	@override String formatIsXdigits({required Object num}) => 'รูปแบบคือ ${num} หลัก';
	@override String get signInSuccessfully => 'เข้าสู่ระบบสำเร็จ!';
	@override String get twoFAandLogin => 'การยืนยันสองขั้นตอนและการเข้าสู่ระบบ';
	@override String get verificationSuccessful => 'การยืนยันสำเร็จ!';
	@override String get validationFailed => 'การยืนยันล้มเหลว!';
	@override String get dappInfo => 'ข้อมูลดีแอป';
	@override String get securityCircle => 'วงกลมความปลอดภัย';
	@override String get securityCode => 'รหัสความปลอดภัย';
	@override String get provideSecurity => 'ให้ความปลอดภัย';
	@override String get addManully => 'เพิ่มด้วยตนเอง';
	@override String get addFromContacts => 'เพิ่มจากสมุดที่อยู่';
	@override String get addSecurityCircle => 'เพิ่มวงกลมความปลอดภัย';
	@override String get inputType => 'ประเภทอินพุต';
	@override String get mobileNumber => 'หมายเลขโทรศัพท์';
	@override String get did => 'รหัสที่อยู่';
	@override String get pleaseEnterValidDID => 'โปรดป้อนรหัสประจำตัวแบบกระจายอำนาจที่ถูกต้อง';
	@override String get pleaseEnterValidWalletAddress => 'กรุณากรอกที่อยู่กระเป๋าเงินที่ถูกต้อง';
	@override String get appellation => 'ชื่อ';
	@override String get appellationHint => 'เรียกว่าอะไรนะ ที่รัก';
	@override String get addSecurityCircleTips => 'โปรดอย่าเพิ่มบุคคลที่คุณไม่ไว้วางใจในแวดวงความปลอดภัยของคุณ';
	@override String get referralTeam => 'ทีมงานแนะนำ';
	@override String get profile => 'ข้อมูลบัญชี';
	@override String get menu => 'เมนู';
	@override String get directly => 'โดยตรง';
	@override String get indirectly => 'ทางอ้อม';
	@override String get inviteContacts => 'เชิญผู้ติดต่อ';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'ผู้เชิญของคุณคือ '),
		nickname,
		const TextSpan(text: ' และคุณได้แนะนำ '),
		num1,
		const TextSpan(text: ' คนโดยตรง ซึ่ง '),
		num2,
		const TextSpan(text: ' กำลังออนไลน์อยู่'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'คุณได้แนะนำ '),
		num1,
		const TextSpan(text: ' คนทางอ้อม โดยที่ '),
		num2,
		const TextSpan(text: ' กำลังออนไลน์อยู่'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'เชิญเพื่อนให้เข้าร่วมเดลต้าและปรับปรุงฉันทามติทางสังคมด้วยกัน คำแนะนำโดยตรงของแต่ละคนจะเพิ่มอัตราการขุดขึ้น '),
		rate1,
		const TextSpan(text: ' ของอัตราฐาน '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'เชิญเพื่อนให้เข้าร่วมเดลต้าและปรับปรุงฉันทามติทางสังคมร่วมกัน ข้อเสนอแนะทางอ้อมของบุคคลหนึ่งคนจะเพิ่มอัตราการขุดขึ้นอีก '),
		rate2,
		const TextSpan(text: ' ของอัตราฐาน'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'คุณแน่ใจหรือไม่ว่าต้องการลบ "${name}"?';
	@override String get safetyCircleRoleQ => 'วงจรความปลอดภัยมีหน้าที่อะไร?';
	@override String get safetyCircleRoleA => 'ให้การรับรองความถูกต้องด้วยสองปัจจัยในสถานการณ์ที่ละเอียดอ่อนเพื่อปกป้องความปลอดภัยของบัญชีของคุณ';
	@override String get howSecurityCirclesWorkQ => 'วงจรความปลอดภัยทำงานอย่างไร?';
	@override String get howSecurityCirclesWorkA => 'เมื่อจำเป็นต้องมีแวดวงความปลอดภัยในการตรวจสอบ โปรแกรมเดลต้าสมาร์ทคอนแทรคจะสุ่มเลือกสมาชิกจากรายชื่อเพื่อนในแวดวงความปลอดภัย เพื่อช่วยคุณในการระบุรหัสความปลอดภัยเพื่อทำการตรวจสอบความปลอดภัยของข้อมูลประจำตัวให้เสร็จสมบูรณ์ เมื่อคุณขอรหัสความปลอดภัยจากสมาชิกก็สามารถยืนยันได้ว่าเป็นคุณ ในเวลาเดียวกัน โปรแกรมจะแจ้ง: "ปฏิเสธที่จะให้รหัสความปลอดภัยหากไม่ใช่คุณ" เพื่อปกป้องความปลอดภัยของบัญชีของคุณ ดังนั้นคุณควรตรวจสอบให้แน่ใจเสมอว่าสมาชิกในแวดวงความปลอดภัยของคุณคือคนที่คุณไว้วางใจได้';
	@override String get securityCircleBeUsedQ => 'เมื่อไหร่จะได้ใช้?';
	@override String get securityCircleBeUsedA1 => '1. เมื่อ Delta APP ของคุณสูญเสียการควบคุม มักเป็นเพราะโทรศัพท์สูญหายหรือถูกขโมย';
	@override String get securityCircleBeUsedA2 => '2. ในกรณีที่มีการดำเนินการที่มีความละเอียดอ่อน โปรแกรมสัญญาอัจฉริยะของเดลต้าจำเป็นต้องยืนยันว่าเป็นคุณ';
	@override String get provideSafetyTip1 => 'เมื่อเพื่อนของคุณขอรหัสความปลอดภัยจากคุณ อย่าลืมยืนยันว่าเป็นเขาหรือเธอ';
	@override String get provideSafetyTip2 => 'คุณกำลังให้การป้องกันด้านความปลอดภัยสำหรับเพื่อนข้างต้น พวกเขาได้กำหนดคุณให้เป็นบุคคลที่น่าเชื่อถือที่สุดในแวดวงความปลอดภัย และต้องการให้คุณยืนยันความปลอดภัยสำหรับพวกเขาเมื่อบัญชีของพวกเขาพบกับการดำเนินการที่ละเอียดอ่อน';
	@override String get provideSafetyTip3 => 'คลิกสองครั้งที่อวตารของอีกฝ่ายเพื่อแยกรหัสความปลอดภัยเมื่อจำเป็น';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'ขณะนี้อีกฝ่ายไม่มีรหัสความปลอดภัยที่ต้องเรียกคืน!';
	@override String get existSecurityCodeTip => 'โปรดตรวจสอบให้แน่ใจว่าญาติหรือเพื่อนที่ขอรหัสรักษาความปลอดภัยจากคุณนั้นเป็นญาติหรือเพื่อน เพื่อปกป้องความปลอดภัยของญาติหรือเพื่อนของคุณ คุณควรปฏิเสธที่จะให้รหัสดังกล่าวหากไม่ใช่ญาติหรือเพื่อน';
	@override String get avatarSettings => 'การตั้งค่าอวตาร';
	@override String get NFTAvatarPropertyRightsText => 'คำชี้แจง: การใช้ NFT ที่เกี่ยวข้องเป็นอวตารนั้นมีไว้เพื่อความชอบส่วนบุคคลเท่านั้น และไม่เกี่ยวข้องกับการเป็นเจ้าของสิทธิ์ในทรัพย์สินทางปัญญาของ NFT';
	@override String get projectWebsite => 'เว็บไซต์โครงการ:';
	@override String get whitepaper => 'กระดาษขาว:';
	@override String get indexID => 'รหัสดัชนี';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'ช่วงดัชนีอยู่ระหว่าง ${start} และ ${end}';
	@override String get inputToLoadNFTAvatarTip => 'ป้อนรหัสดัชนีของ NFT ที่คุณชื่นชอบ จากนั้นโปรแกรมจะโหลดเป็นรูปประจำตัวของคุณโดยอัตโนมัติ';
	@override String get miningRate => 'อัตราการขุด';
	@override String get miningDetails => 'รายละเอียดการทำเหมืองแร่';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'อัตราการขุดทั้งหมด: '),
		rate,
		const TextSpan(text: ' δ/วัน'),
	]);
	@override String get EndOfMiningSession => 'การขุดรอบสิ้นสุด:';
	@override String get tapToMineDeltaCoin => 'คลิกเพื่อขุดเหรียญเดลต้า↑';
	@override String get clickToStartMining => 'คลิกเพื่อเริ่มการขุด!';
	@override String get miningHasStoppedPromptDesc => 'การขุดหยุดลง ทุก ๆ 24 ชั่วโมงจะเป็นรอบการขุด คลิกที่ไอคอนสายฟ้าเพื่อเริ่มการขุดรอบใหม่ การขุดของเดลต้าเป็นกลไกการกระจายที่ไม่ต้องใช้พลังการประมวลผลเพิ่มเติมและการรับส่งข้อมูลเครือข่ายจากอุปกรณ์ของคุณ';
	@override String get aboutBaseRate => 'แล้วอัตราพื้นฐานล่ะ?';
	@override String get baseRateDescription => 'ตามเอกสารไวท์เปเปอร์ กฎการลดอัตราพื้นฐานของการขุดเดลต้าจะแบ่งออกเป็นสองขั้นตอน \nระยะที่ 1: เมื่อจำนวนผู้เข้าร่วม (การลงทะเบียน) คือ 3000 หรือน้อยกว่า อัตราจะเป็น 32δ/วัน การใช้สิ่งนี้เป็นพื้นฐานเริ่มต้น ทุกครั้งที่จำนวนคนเพิ่มขึ้น 10 เท่า อัตราพื้นฐานจะลดลงครึ่งหนึ่ง \nระยะที่ 2: เมื่อจำนวนผู้เข้าร่วมถึง 30 ล้านคนขึ้นไป อัตราพื้นฐานจะลดลงครึ่งหนึ่งทุกครั้งที่จำนวนผู้เข้าร่วมเพิ่มขึ้นสามครั้ง หยุดการผลิตจนกว่าการขุดค้นขั้นสุดท้ายจะแล้วเสร็จ';
	@override String get baseRate => 'อัตราฐาน';
	@override String get directReferralRewards => 'รางวัลการอ้างอิงโดยตรง';
	@override String get directReferralRewardDesc => 'สำหรับทุกคนที่คุณแนะนำโดยตรง เมื่อพวกเขาอยู่ในสถานะการขุด อัตราการขุดของคุณจะเพิ่มขึ้นอีก 1/3 ของอัตราพื้นฐาน\n\n นอกจากนี้ สถานะการขุดของผู้อ้างอิงของคุณจะถูกคำนวณเป็นรางวัลผู้อ้างอิงโดยตรงของคุณด้วย';
	@override String get indirectReferralRewards => 'รางวัลการอ้างอิงทางอ้อม';
	@override String get indirectReferralRewardDesc => 'เมื่อผู้อ้างอิงทางอ้อมอยู่ในสถานะการขุด อัตราการขุดของคุณจะเพิ่มขึ้นอีก 1/10 ของอัตราฐาน\n\n ทีมแนะนำโดยตรงของคุณ แต่ละคนที่พวกเขาแนะนำเป็นตัวแทนของคำแนะนำทางอ้อมสำหรับคุณ';
	@override String get mine => 'การทำเหมืองแร่';
	@override String get thisMiningInformation => 'ข้อมูลการทำเหมืองแร่นี้';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'เข้าร่วมการขุด: '),
		x,
		const TextSpan(text: ' ครั้ง'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'รายได้รวมในครั้งนี้: '),
		x,
		const TextSpan(text: ' เหรียญเดลต้า'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'รายได้พื้นฐาน: '),
		x,
		const TextSpan(text: ' เหรียญ'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'การสนับสนุนทีมโดยตรง: '),
		x,
		const TextSpan(text: ' เหรียญ'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'ผลงานของทีมโดยอ้อม: '),
		x,
		const TextSpan(text: ' เหรียญ'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'ช่วงเวลาตั้งแต่การขุดครั้งล่าสุด: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'เวลาขุดที่มีประสิทธิภาพ: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} ชั่วโมง';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'เพื่อความปลอดภัยของทรัพย์สิน สมาชิกกลุ่มรักษาความปลอดภัยควรรักษาบุคคลที่น่าเชื่อถือไว้ 3-5 คนตลอดเวลา';
	@override String get index => 'ดัชนี';
	@override String get amount => 'จำนวน';
	@override String get balance => 'สมดุล';
	@override String get timeStamp => 'การประทับเวลา';
	@override String get summary => 'สรุป';
	@override String get miningHasStopped => 'การขุดได้หยุดลงแล้ว';
	@override String get miningHasStoppedDesc => 'การขุดของคุณหยุดลงแล้ว เริ่มรับรายได้ทันที';
	@override String get startMining => 'เริ่มการขุด';
	@override String get changeMobileNumber => 'เปลี่ยนเบอร์มือถือ';
	@override String get currentMobileNumber => 'เบอร์มือถือปัจจุบัน';
	@override String get newMobileNumber => 'หมายเลขโทรศัพท์มือถือใหม่';
	@override String get securityCodeFormatIs6digits => 'รูปแบบรหัสความปลอดภัยคือ 6 หลัก!';
	@override String get startVrification => 'เริ่มการยืนยัน';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'หมายเลขโทรศัพท์มือถือนี้มีอยู่แล้ว DID ที่เกี่ยวข้อง: ${dId}';
	@override String get noDataYet => 'ยังไม่มีข้อมูล';
	@override String get previousMobileNumber => 'เบอร์มือถือเดิม';
	@override String get changeLog => 'ประวัติการเปลี่ยนแปลง';
	@override String get referralLinkToShare => 'แนะนำการแชร์ลิงก์';
	@override String get referrer => 'ผู้แนะนำ';
	@override String get isoCountryCode => 'รหัสประเทศไอเอสโอ';
	@override String get avatarLogo => 'โลโก้อวตาร';
	@override String get creationTime => 'เวลาสร้าง';
	@override String get lastUpdate => 'อัปเดตล่าสุด';
	@override String get numberOfSecurityCircleMembers => 'จำนวนสมาชิกวงความปลอดภัย';
	@override String get theLatestMining => 'การขุดล่าสุด';
	@override String get effectiveMiningDays => 'จำนวนวันของการขุดที่มีประสิทธิภาพ';
	@override String get modifyNickname => 'ปรับเปลี่ยนชื่อเล่น';
	@override String get didNotChange => 'ไม่มีอะไรเปลี่ยนแปลง!';
	@override String get kycVerification => 'การตรวจสอบ KYC';
	@override String get faceID => 'รหัสใบหน้า';
	@override String get touchID => 'รหัสลายนิ้วมือ';
	@override String get biometricsAuthorizationTest => 'การทดสอบการรับรองความถูกต้องทางชีวภาพ';
	@override String get currentState => 'สถานะปัจจุบัน';
	@override String get biometricsAuthenticationLocalizedReason => 'ใช้การปลดล็อคอุปกรณ์ของคุณเพื่อยืนยันตัวตนของคุณ';
	@override String get graph => 'แอตลาส';
	@override String get referralRelationshipGraph => 'กราฟความสัมพันธ์ผู้อ้างอิง';
	@override String get nativeContacts => 'การติดต่อในท้องถิ่น';
	@override String get registrationAndMiningTrends => 'แนวโน้มการจดทะเบียนและการขุด';
	@override String get inMining => 'การทำเหมืองแร่';
	@override String get registrationVolume => 'จำนวนการลงทะเบียน';
	@override String get unmined => 'ไม่ได้ขุด';
	@override String get mined => 'ขุด';
	@override String get communityMining => 'การขุดชุมชน';
	@override String get consensusPromotionFund => 'กองทุนส่งเสริมฉันทามติ';
	@override String get ecologicalAwardFund => 'กองทุนรางวัลนิเวศวิทยา';
	@override String get icpFuelCrowdfunding => 'การระดมทุนของ ICP Fuel';
	@override String get coreDeveloperRewards => 'รางวัลนักพัฒนาหลัก';
	@override String get totalAllocation => 'การจัดสรรทั้งหมด';
	@override String get miningRatio => 'อัตราส่วนการขุด';
	@override Map<String, String> get billion => {
		'30': '30 พันล้าน',
		'60': '60 พันล้าน',
		'180': '180 พันล้าน',
		'300': '300 พันล้าน',
	};
	@override String get watchAdsToSupportDevelopers => 'ดูโฆษณาเพื่อสนับสนุนนักพัฒนา';
	@override String get loadingAdcomponents => 'กำลังโหลดส่วนประกอบโฆษณา...';
	@override String get timeIsNotUp => 'ยังไม่ถึงเวลา!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'การโหลดล้มเหลว เครือข่ายอาจถูกบล็อก!';
	@override String get pendingUSCTrecords => 'บันทึก USCT ที่รอดำเนินการ';
	@override String get pendingUSCTrecordsDesc => 'บันทึก USCT ที่รอดำเนินการจะถูกเปรียบเทียบกับแพลตฟอร์มโฆษณาภายใน 15-30 วันเพื่อการยืนยัน บันทึกที่ถูกต้องจะถูกโอนไปยังรายการบันทึก USCT และจำนวนเงิน USCT ที่เกี่ยวข้องจะถูกเพิ่มลงในยอดคงเหลือในบัญชี';
	@override String get validity => 'ประสิทธิผล';
	@override String get advertiser => 'ผู้ลงโฆษณา';
	@override String get earned => 'ได้รับ';
	@override String get withdraw => 'ถอนเงินสด';
	@override String get validUSCTrecords => 'บันทึก USCT ที่ถูกต้อง';
	@override String get USCTmining => 'การขุด USCT';
	@override String get aboutUSCTmining => 'เกี่ยวกับการขุด USCT?';
	@override String get aboutUSCTminingItme1 => '1. USDT เป็นสกุลเงินดอลลาร์สหรัฐที่ได้รับความนิยมทั่วโลก ซึ่งสามารถแปลงเป็นสกุลเงินอธิปไตยของประเทศต่างๆ ได้อย่างง่ายดายบนการแลกเปลี่ยนสกุลเงินดิจิทัลกระแสหลักทั่วโลก';
	@override String get aboutUSCTminingItme2 => '2. USCT เป็นมูลค่าการวัดชั่วคราวของรายได้จากการขุด USCT ชื่อเต็มคือเครดิต USD ซึ่งสามารถแปลงเป็น USDT ตามจำนวนเงินชำระจริงและกฎการแจกจ่ายของแพลตฟอร์มโฆษณาและตามสัดส่วนที่สอดคล้องกัน';
	@override String get aboutUSCTminingItme3 => '3. การขุด USCT เป็นฟังก์ชันการสร้างรายได้จากการโฆษณาปริมาณการเข้าชมของชุมชนเดลต้า ใช้ประโยชน์จากฐานผู้ใช้ขนาดใหญ่ของชุมชนเดลต้าเพื่อมอบสิทธิประโยชน์มากมายให้กับผู้ลงโฆษณา นักพัฒนาของเดลต้า และผู้รับเหมา วัตถุประสงค์ในการออกแบบคือการสร้างรายได้ที่มีประสิทธิภาพจำนวนหนึ่งสำหรับผู้ที่ขาดงานในระยะแรกเมื่อระบบนิเวศของเดลต้ายังไม่ก่อตัวและเจริญรุ่งเรือง ในเวลาเดียวกัน ยังให้การสนับสนุนทางการเงินแก่นักพัฒนาเพื่อให้แน่ใจว่านักพัฒนาจะสามารถจัดหาได้ต่อไป บริการพัฒนาในระยะยาวและในที่สุดก็สามารถบรรลุแผนทั้งหมดในสมุดปกขาว นอกจากนี้ยังเป็นช่องทางส่งเสริมการขายที่มีประสิทธิภาพสำหรับผู้ลงโฆษณาผลิตภัณฑ์';
	@override String get aboutUSCTminingItme4 => '4. กฎการแจกจ่ายได้รับการออกแบบเพื่อให้ 40% ของรายได้ทั้งหมดถูกใช้เป็นค่าคอมมิชชั่นบริการด้านเทคนิคของนักพัฒนา และส่วนที่เหลืออีก 60% ใช้เป็นรางวัลการขาดงานของชุมชน รางวัลการขาดงานใช้รูปแบบการกระจายหลายระดับคล้ายกับ DTC รางวัลการขาดงานเหล่านี้แบ่งออกเป็น 3 ส่วนตามอัตราส่วน 6:3:1 60% ของรางวัลการขาดงานของการขุด USCT หนึ่งครั้งในแต่ละครั้งจะถูกจัดสรรให้กับ ผู้ที่ขาดงานซึ่งกำลังดูโฆษณาอยู่ จะมีการจัดสรร 3 คะแนนให้กับผู้แนะนำที่เหนือกว่า และ 1 องค์ประกอบจะถูกจัดสรรให้กับผู้แนะนำระดับที่สอง ในทำนองเดียวกัน หากเพื่อนที่คุณแนะนำฉันผ่าน USCT คุณจะได้รับรางวัลผู้อ้างอิงเช่นเดียวกัน ข้อดีของการกระจายหลายระดับคือใครๆ ก็สามารถได้รับรายได้ USDT จำนวนมากโดยการพัฒนาทีมออฟไลน์';
	@override String get aboutUSCTminingItme5 => '5. รอบการชำระเงินคือ 7 วัน นั่นคือมีการตรวจสอบความถูกต้องกับแพลตฟอร์มโฆษณาทุกๆ 7 วัน และรายได้และจำนวนเงินจริงที่ยืนยันว่าถูกต้องจะถูกบันทึกไว้ในยอดคงเหลือ จำนวนเงินขั้นต่ำสำหรับการถอนแต่ละครั้งคือ 10 USDT';
	@override String linesXtoY({required Object x, required Object y}) => 'บรรทัด ${x} ถึง ${y}';
	@override String get wallet => 'กระเป๋าสตางค์';
	@override String get multiChainWallet => 'กระเป๋าสตางค์หลายสายโซ่';
	@override String get deposit => 'เงินฝาก';
	@override String get transfer => 'โอนย้าย';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} ในที่อยู่กระเป๋าเงิน';
	@override String get transactions => 'ประวัติการทำธุรกรรม';
	@override String get network => 'เครือข่าย';
	@override String get walletAddress => 'ที่อยู่กระเป๋าเงิน';
	@override String get currentAddress => 'ที่อยู่ปัจจุบัน';
	@override String get depositAddress => 'ที่อยู่เติมเงิน';
	@override String get receivingMoneyAddress => 'ที่อยู่การชำระเงิน';
	@override String get applyTempDepositAddress => 'สมัครขอที่อยู่เติมเงินชั่วคราว';
	@override String get tempDepositAddressTip => '1. นี่คือที่อยู่การฝากเงินที่ใช้ร่วมกัน กรุณาอย่าวางเงินมัดจำหลังจากสัญญาเช่าหมดอายุหรือไม่ถูกผูกมัด หากเกิดเหตุการณ์นี้ จำนวนเงินจะหายไป';
	@override String get tempDepositAddressTip2 => '2. ก่อนทำการฝากเงิน โปรดตรวจสอบให้แน่ใจว่า [ชื่อลูกโซ่] และ [ชื่อสกุลเงิน] ตรงกันอย่างสมบูรณ์ หากเป็นโทเค็นสัญญา คุณต้องยืนยันด้วยว่า [มาตรฐานสัญญา] และ [ที่อยู่สัญญา] ตรงกันอย่างสมบูรณ์';
	@override String get tempDepositAddressTip3 => '3. โปรดอย่าพยายามฝากเงินที่ไม่ตรงกับพารามิเตอร์ใดๆ ในเคล็ดลับข้างต้น มิฉะนั้นจำนวนเงินจะหายไป';
	@override String get tempDepositAddressTip4 => '4. หากคุณต้องการฝากสินทรัพย์ประเภทอื่น โปรดสลับไปที่หน้าสกุลเงินและตัวเลือกพารามิเตอร์ที่เกี่ยวข้องเพื่อสมัครที่อยู่ใหม่';
	@override String get applyExtensionOfValidity => 'สมัครเพื่อขยายระยะเวลาการใช้งาน';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap }) => TextSpan(children: [
		const TextSpan(text: 'ที่อยู่จะหมดอายุหลังจาก '),
		diff,
		const TextSpan(text: ' และคุณสามารถ '),
		tap ('ขยายด้วยตนเอง'),
		const TextSpan(text: ' ระยะเวลาที่ใช้ได้ภายใน 12 ชั่วโมงก่อนหมดอายุ'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'สามารถต่ออายุได้ล่วงหน้า 12 ชั่วโมงเท่านั้น';
	@override String get theReceivingAddressValidForLongtime => 'ที่อยู่การชำระเงินนี้ใช้ได้เป็นเวลานาน';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'ที่อยู่การชำระเงินนี้ใช้ได้เป็นเวลานานและจะเข้าบัญชีโดยอัตโนมัติแบบเรียลไทม์';
	@override String get confirmDeposited => 'ยืนยันการฝากเงิน';
	@override String get unbindThisDepositAddress => 'ยกเลิกการเชื่อมโยงที่อยู่การเติมเงิน';
	@override String get confirmDepositedTip => 'หากโอนเงินแล้ว โปรดคลิกปุ่มด้านบนเพื่อเรียกบัญชีไปยังกระเป๋าเงินหลังจากผ่านไป 10 นาที';
	@override String get unbindDepositAddressTip => 'เพื่อลดต้นทุนการดำเนินการของสัญญาอัจฉริยะ หากไม่มีเงินเพิ่มภายในระยะเวลาที่มีผล โปรดยกเลิกการเชื่อมโยงที่อยู่เติมเงิน';
	@override String get transferToAddress => 'ไปที่ที่อยู่';
	@override String get longPressToPaste => 'กดค้างเพื่อวาง';
	@override String get all => 'ทั้งหมด';
	@override String balanceX({required Object x}) => 'ยอดคงเหลือ ${x}';
	@override String get transferOut => 'โอนออก';
	@override String depositXcoins({required Object x}) => 'ฝากเงิน ${x}';
	@override String get sender => 'ผู้ส่ง';
	@override String get recipient => 'ผู้รับ';
	@override String get memo => 'หมายเหตุ';
	@override String get kind => 'ทาง';
	@override String get transferAmountExceedsAvailableBalance => 'จำนวนเงินโอนเกินยอดคงเหลือที่มีอยู่';
	@override String get pleaseEnterValidAmount => 'กรุณากรอกจำนวนเงินที่ถูกต้อง';
	@override String get networkFee => 'ค่าธรรมเนียมการจัดการเครือข่าย';
	@override String get fee => 'ค่าธรรมเนียมการจัดการ';
	@override String validLengthXcharacters({required Object x}) => 'ความยาวที่มีประสิทธิภาพของที่อยู่คือ ${x} ตัวอักษร';
	@override String get historys => 'ประวัติศาสตร์';
	@override String get dtcCreditdetail => 'รายละเอียดเดลต้าพอยท์';
	@override String get usdCreditdetail => 'รายละเอียดคะแนน USD';
	@override String get dappSquare => 'ดีแอพสแควร์';
	@override String get amountRaised => 'จำนวนเงินที่เพิ่มขึ้น';
	@override String get disbursedAmount => 'จำนวนเงินที่เบิกจ่าย';
	@override String get participationTimes => 'จำนวนผู้เข้าร่วม';
	@override String get completionRate => 'อัตราความสำเร็จ';
	@override String get exchangeRate => 'อัตราแลกเปลี่ยน';
	@override String get icpCrowdfunding => 'การระดมทุนของ ICP';
	@override String get crowdfunding => 'การระดมทุน';
	@override String get trendsCurve => 'เส้นโค้งแนวโน้ม';
	@override String get fullScreenView => 'มุมมองแบบเต็มหน้าจอ';
	@override String get walletBalance => 'ยอดคงเหลือในกระเป๋าสตางค์:';
	@override String get manageWallet => 'จัดการกระเป๋าสตางค์';
	@override String get fundraiseAmount => 'จำนวนเงินทุนที่ระดมทุนได้';
	@override String get exchangeRewardAmount => 'จำนวนรางวัลการแลกเปลี่ยน';
	@override String get fundraise => 'ระดมทุน';
	@override String rangeIntegersX({required Object x}) => 'พิสัย: จำนวนเต็ม ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'เข้าร่วมการระดมทุนได้สำเร็จและได้รับรางวัล ${amount}DTCT';
	@override String get amountSummary => 'สรุปจำนวนเงิน';
	@override String get changePreferred => 'เปลี่ยนการตั้งค่า';
	@override String get changePreferredAddress => 'เปลี่ยนที่อยู่ที่ต้องการ';
	@override String get preferredAddressTip => 'เมื่อรับเงินโดยใช้หมายเลขโทรศัพท์มือถือที่ลงทะเบียนหรือ DID เงินจะถูกโอนไปยังที่อยู่ที่ต้องการโดยอัตโนมัติ';
	@override String get newAddress => 'ที่อยู่ใหม่';
	@override String get newAddressTip => 'เพื่อป้องกันการละเมิด เมื่อมีที่อยู่กระเป๋าเงินมากกว่าหนึ่งที่อยู่ จะมีการคิดค่าธรรมเนียมการทำธุรกรรมสำหรับที่อยู่ใหม่แต่ละแห่งที่สร้างขึ้น';
	@override String get createNew => 'ใหม่';
	@override String get chainNetworkName => 'ชื่อเครือข่ายลูกโซ่';
	@override String get from => 'จาก';
	@override String get to => 'มาถึง';
	@override String get noAvailableDepositAmountDetected => 'ไม่พบจำนวนเงินฝากที่ใช้ได้!';
	@override String get crossChainReceiveMoneyMonitoring => 'กำลังตรวจสอบการชำระเงินข้ามเครือข่าย...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'ได้รับแล้ว('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'กำลังยืนยัน('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'ข้อควรทราบ (มือใหม่ควรอ่าน)';
	@override String get whyUseSharedAddresses => 'เหตุใดจึงใช้ที่อยู่ที่ใช้ร่วมกัน';
	@override String get useSharedrAdvantage => 'เมื่อทำการฝากเงินข้ามเครือข่าย ข้อดีของการใช้ที่อยู่ที่ใช้ร่วมกันมีดังนี้:';
	@override String get useSharedrAdvantage1 => '1. ลดการสิ้นเปลืองค่าธรรมเนียมการโอนและลดต้นทุนผู้ใช้ เพราะหากใช้ที่อยู่เฉพาะ เงินจะกระจายเกินไป โดยทั่วไป เพื่ออำนวยความสะดวกให้ผู้ใช้รายอื่นโอนออกในภายหลังเมื่อถอนเงินสด เมื่อผู้ใช้เติมเงิน พวกเขาจำเป็นต้องรวบรวมการโอนเงินรองไปยังหนึ่งหรือจำนวนเล็กน้อย ที่อยู่สำหรับการจัดการ';
	@override String get useSharedrAdvantage2 => '2. ในโซลูชันการแชร์ โปรแกรมจำเป็นต้องรักษาพูลที่อยู่ที่ค่อนข้างเล็ก ซึ่งสามารถจับคู่เงินทุนที่ออกได้อย่างรวดเร็ว และดำเนินการตรวจสอบการรวบรวมที่ไม่ซับซ้อน ซึ่งสามารถลดค่าใช้จ่ายทรัพยากรการประมวลผล ตรงกันข้ามกับที่อยู่พิเศษ สถานการณ์กลับตรงกันข้าม';
	@override String get tokenType => 'ประเภทโทเค็น';
	@override String get contract => 'สัญญา';
	@override String get contractStandard => 'มาตรฐานสัญญา';
	@override String get contractAddress => 'ที่อยู่สัญญา';
	@override String get native => 'พื้นเมือง';
	@override String get confirmUnbindingPleaseEnterYes => 'เพื่อยืนยันการยกเลิกการเชื่อมโยง โปรดป้อน "ใช่"';
	@override String get listAllWorkingTempReceivingAddresses => 'แสดงรายการที่อยู่การเติมเงินข้ามสายงานที่ทำงานทั้งหมด';
	@override String get setNote => 'ตั้งบันทึก';
	@override String lengthCannotExceedXbytes({required Object x}) => 'ความยาวต้องไม่เกิน ${x} ไบต์';
	@override String get transferFee => 'ค่าธรรมเนียมการโอน';
	@override String get crossChainFee => 'ค่าธรรมเนียมข้ามสายโซ่';
	@override String get crossChainTransferOutError => 'ข้อผิดพลาดในการถ่ายโอนข้ามสายโซ่';
	@override String get chainName => 'ชื่อลูกโซ่';
	@override String get message => 'ข้อมูล';
	@override String get dontShowAgain => 'อย่าแสดงอีก';
	@override String get queuing => 'อยู่ในคิว';
	@override String get optional => 'ไม่จำเป็น';
	@override String get publiclyVisible => 'เปิดเผยต่อสาธารณะ';
	@override String get rates => 'ประเมิน';
	@override String get minimum => 'ขั้นต่ำ';
	@override String get maximum => 'สูงสุด';
	@override String get minimumBlockConfirmations => 'จำนวนการยืนยันบล็อกขั้นต่ำ';
	@override String get dsmsVerifyTerminal => 'เทอร์มินัลการตรวจสอบ DSMS';
	@override String get overall => 'โดยรวม';
	@override String get my => 'ของฉัน';
	@override String get checkValidatorQualifications => 'ตรวจสอบสิทธิ์การอนุญาตของผู้ตรวจสอบ';
	@override String get getVerifierPermissions => 'รับสิทธิ์ผู้รับรอง';
	@override String get qualification => 'คุณสมบัติ';
	@override String get upperLimit => 'ขีด จำกัด บน';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'ขีดจำกัดสูงสุดของจำนวนเทอร์มินัลที่อนุญาตให้เข้าถึง';
	@override String get numberOfExistingAccessTerminals => 'จำนวนเทอร์มินัลการเข้าถึงที่มีอยู่';
	@override String get applyingForDSMSVerifierPermissionsTips => 'ก่อนที่จะสมัครขอสิทธิ์ผู้ตรวจสอบ คุณจะต้องเตรียมโทรศัพท์ Android ที่ไม่ได้ใช้งานและหมายเลขการเข้าถึงเฉพาะ รวมถึงดาวน์โหลดและติดตั้งแอปพลิเคชันเทอร์มินัลการเข้าถึง DSMS';
	@override String get downloadLink => 'ลิงค์ดาวน์โหลด';
	@override String get alreadyReadyFollowingTheAboveTips => 'พร้อมตามคำแนะนำข้างต้น';
	@override String get globalUniversal => 'สากล';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'ขณะนี้มีผู้ตรวจสอบในพื้นที่ไม่เพียงพอที่จะเข้าร่วมในบริการการเข้าถึงการตรวจสอบ DSMS โปรดเลือก "'),
		gu,
		const TextSpan(text: '" เพื่อเข้าถึงบริการ'),
	]);
	@override String get asDedicatedNumberForAccess => 'เป็นหมายเลขเข้าใช้งานเฉพาะ';
	@override String pleaseCheckTip({required Object tip}) => 'โปรดตรวจสอบ "${tip}"';
	@override String get inputLengthTooShort => 'ความยาวอินพุตสั้นเกินไป';
	@override String get shortName => 'ตัวย่อ';
	@override String pleaseEnterXname({required Object name}) => 'กรุณากรอก ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'กำลังส่งใบสมัคร กรุณารอสักครู่...';
	@override String get applyForDSMSVerifierPermission => 'สมัครเพื่อขออนุญาต DSMS Verifier';
	@override String get confirmInformation => 'ยืนยันข้อมูล';
	@override String get lastHeartbeat => 'การเต้นของหัวใจครั้งสุดท้าย';
	@override String get expirationTime => 'เวลาหมดอายุ';
	@override String get country => 'ชาติ';
	@override String get accessTerminals => 'เทอร์มินัลการเข้าถึง';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'จำนวนเทอร์มินัลหมายเลขการเข้าถึง DSMS ทั้งหมด';
	@override String get textContent => 'เนื้อหาข้อความ';
	@override String get scanQRcodeToLogin => 'สแกนรหัสเพื่อเข้าสู่ระบบ';
	@override String get confirmLogin => 'ยืนยันการเข้าสู่ระบบ';
	@override String get authorizeSubApplicationToLogin => 'อนุญาตแอปพลิเคชันย่อยเพื่อเข้าสู่ระบบ';
	@override String get authorizationSuccessful => 'การอนุญาตสำเร็จ!';
	@override String get launchSMSprogram => 'เริ่มโปรแกรม SMS';
	@override String get notApplied => 'ไม่มีการสมัคร';
	@override String get validityPeriod => 'ระยะเวลามีผล';
	@override String get renewal => 'ต่ออายุ';
	@override String get scanCodeToAuthorizeTerminalLogin => 'สแกนรหัสเพื่ออนุญาตการเข้าสู่ระบบเทอร์มินัล';
	@override String get rewards => 'รางวัล';
	@override String get roles => 'บทบาท';
	@override String get developerCenter => 'ศูนย์นักพัฒนา';
	@override String get appName => 'ชื่อแอปพลิเคชัน';
	@override String get pleaseSelect => 'กรุณาเลือก';
	@override String get category => 'หมวดหมู่';
	@override String get keywords => 'คำหลัก';
	@override String get pleaseEnterAkeyword => 'กรุณากรอกคำสำคัญ';
	@override String get createApplication => 'สร้างแอปพลิเคชัน';
	@override String get appType => 'ประเภทการสมัคร';
	@override String get numberOfCategoriesMustBetween1and3 => 'จำนวนหมวดหมู่ต้องอยู่ระหว่าง 1 ถึง 3';
	@override String get appLogoSpecifications => 'รูปแบบภาพ: PNG ขนาด: ภายใน 100KB ความละเอียด (พิกเซล): 256*256';
	@override String get localAlbum => 'อัลบั้มภาพท้องถิ่น';
	@override String get networkPath => 'เส้นทางเครือข่าย';
	@override String get imageURLkAddress => 'ที่อยู่ URL ของรูปภาพ';
	@override String get urlAddressFormatIsIncorrect => 'รูปแบบที่อยู่ URL ไม่ถูกต้อง';
	@override String get imageFormatOnlySupportsPng => 'รูปภาพรองรับเฉพาะรูปแบบ "png" เท่านั้น';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'ความยาวต้องอยู่ระหว่าง ${a}-${b} อักขระ';
	@override String get introduction => 'การแนะนำ';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'ขนาดรูปภาพต้องไม่ใหญ่กว่า ${a} ขณะนี้มีขนาด ${b}';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'ความละเอียดของภาพต้องเป็น: ${p1} (พิกเซล) ปัจจุบันคือ ${p2}';
	@override String get becomeDeveloper => 'มาเป็นนักพัฒนา';
	@override String get developerInformation => 'ข้อมูลผู้พัฒนา';
	@override String get teamName => 'ชื่อทีม';
	@override String get website => 'เว็บไซต์';
	@override String get other => 'อื่น';
	@override String get githubVerification => 'การตรวจสอบ Github';
	@override String get exampleUrl => 'ตัวอย่างUrl';
	@override String githubVerificationTip({required Object did}) => 'โปรดใช้บัญชี GitHub ของคุณเพื่อสร้างไฟล์ \'delta.did\' ในพื้นที่เก็บข้อมูลที่มีเนื้อหาเป็น \'${did}\' จากนั้นวางที่อยู่ URL เนื้อหา githubuser ของไฟล์ลงในช่องป้อนข้อมูลนี้เพื่อตรวจสอบสิทธิ์';
	@override String get createApp => 'สร้างแอป';
	@override String get appManagement => 'การจัดการแอปพลิเคชัน';
	@override String get statusLogs => 'บันทึกสถานะ';
	@override String get bad => 'ไม่ดี';
	@override String get normal => 'โดยทั่วไป';
	@override String get good => 'ดีมาก';
	@override String get onceCreatedItCannotBeChanged => 'เมื่อสร้างแล้วจะไม่สามารถเปลี่ยนแปลงได้!';
	@override String get manageApplicationEntity => 'จัดการเอนทิตีแอปพลิเคชัน';
	@override String get currentVersion => 'รุ่นปัจจุบัน';
	@override String get submitVersion => 'กระทำเวอร์ชัน';
	@override String get packageOnlySupportZipCompressedFile => 'แพ็คเกจรองรับเฉพาะไฟล์บีบอัด zip เท่านั้น';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'ไม่พบไฟล์ \'${name}\' ในแพ็คเกจ zip';
	@override String get fileList => 'รายการไฟล์:';
	@override String get programPackage => 'บรรจุุภัณฑ์:';
	@override String get automaticallyExtractFromVersionFile => 'แยกจากไฟล์ \'.version\' โดยอัตโนมัติ';
	@override String get dappVersionFormatTip => 'รูปแบบหมายเลขเวอร์ชันต้องเป็นทศนิยมและต้องรักษาความแม่นยำไว้ที่ 2 หลัก และค่าสูงสุดต้องไม่เกิน 99.99';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'หมายเลขเวอร์ชันต้องมากกว่าเวอร์ชันปัจจุบัน \'${v}\'';
	@override String get versionNotes => 'หมายเหตุเวอร์ชัน:';
	@override String get updateRelease => 'เวอร์ชันอัปเดต';
	@override String get loadAndRun => 'โหลดและเรียกใช้';
	@override String get notYetSubmittedProgramPackage => 'ยังไม่ได้ส่งแพ็คเกจ!';
	@override String get authorizeMinidAppLogin => 'อนุญาตการเข้าสู่ระบบ mini-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'เพื่อยืนยันการอนุญาต โปรดป้อน "ใช่"';
	@override String get authorizeNow => 'อนุญาตตอนนี้';
	@override String get operation => 'ดำเนินงาน:';
	@override String get statusChange => 'การเปลี่ยนแปลงสถานะ';
	@override String get changeTo => 'เปลี่ยนเป็น:';
	@override String get notes => 'หมายเหตุ:';
	@override String get changesNotEffective => 'การเปลี่ยนแปลงไม่ถูกต้อง!';
	@override String get released => 'ที่ตีพิมพ์';
	@override String get inPublicBeta => 'ในรุ่นเบต้าสาธารณะ';
	@override String get developers => 'ผู้พัฒนา:';
	@override String get reviewList => 'รายการความคิดเห็น:';
	@override String get postReview => 'แสดงความคิดเห็น';
	@override String get scoreNow => 'ให้คะแนนตอนนี้';
	@override String get description => 'อธิบาย:';
	@override String get noData => '-\n ไม่มีข้อมูล';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'เวอร์ชันอัปเดตจาก ${a} เป็น ${b}';
	@override String get loadNewVersion => 'โหลดเวอร์ชันใหม่';
	@override String get name => 'ชื่อ:';
	@override String get canisterId => 'รหัสถังคอนเทนเนอร์:';
	@override String get updateTime => 'เวลาอัปเดต';
	@override String get contractCanistersState => 'สถานะหม้อสัญญา';
	@override String get userDistribution => 'การกระจายผู้ใช้';
	@override String get settings => 'ตั้งค่า';
	@override String get security => 'ความปลอดภัย';
	@override String get invite => 'เชิญ';
	@override String get more => 'มากกว่า…';
	@override String get receiveAddress => 'ที่อยู่ที่รับ:';
	@override String get hangingAmount => 'แขวนอยู่';
	@override String get hangingAmountTips => 'จำนวนเงินที่รอดำเนินการคือบันทึกชั่วคราวของรางวัลที่สร้างโดยทีมรองของคุณ เมื่อคุณทำการขุด จำนวนเงินเหล่านี้จะถูกรวบรวมเป็นจำนวนเงินที่รอดำเนินการ';
	@override String get pendingAmount => 'รอดำเนินการ';
	@override String get pendingAmountTips => 'จำนวนเงินที่รอดำเนินการหมายถึงจำนวนเงินที่ยังไม่ได้รับการยืนยันและเปรียบเทียบกับผู้ลงโฆษณา จำนวนเงินที่ถูกต้องสำหรับการเปรียบเทียบจะถูกโอนไปยังบันทึก USCT ที่ถูกต้อง หากมีส่วนที่ไม่ถูกต้องจะถูกยกเว้น';
	@override String get received => 'ได้รับ';
	@override String get processing => 'กำลังประมวลผล';
	@override String get replied => 'ตอบแล้ว';
	@override String get rejected => 'ปฏิเสธ';
	@override String get unknown => 'ไม่ทราบ';
	@override String get insufficientBalance => 'ยอดคงเหลือไม่เพียงพอ!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'ยอดคงเหลือของ ${x} ไม่เพียงพอที่จะชำระค่าธรรมเนียมเครือข่ายแบบ cross-chain';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'มีรายการที่ทำไม่เสร็จและไม่สามารถโอนได้ในขณะนี้';
	@override String get thisfunctionNotSupportExternalCalls => 'ฟังก์ชั่นนี้ไม่รองรับการโทรภายนอก';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'ไม่มีที่อยู่ที่ตรงกันซึ่งสามารถใช้เพื่อชำระค่าธรรมเนียมข้ามเครือข่ายได้ โปรดเปลี่ยนไปใช้เครือข่ายลูกโซ่อื่นแล้วลอง';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'จำนวนเงินโอนสูงสุดที่ตรงกับธุรกรรมเดียวในปัจจุบันคือ ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'ความคิดเห็นต้องมีขนาดไม่เกิน 64 ไบต์';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'ยอดคงเหลือไม่เพียงพอ จำนวนเงินคือ: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'จำนวนที่อยู่การชำระเงินที่ผูกไว้ต้องไม่เกิน 3\nหากคุณต้องการผูกที่อยู่การชำระเงินใหม่\nโปรดยกเลิกการเชื่อมโยงที่อยู่การชำระเงินอื่นก่อน';
	@override String parametersA_exception({required Object x}) => 'พารามิเตอร์: ${x} ข้อยกเว้น';
	@override String get parameterException => 'ข้อยกเว้นพารามิเตอร์!';
	@override String get transferAmountMustBeLargerThan0 => 'จำนวนเงินโอนต้องมากกว่า 0';
	@override String get authorizationHasExpired => 'การอนุญาตหมดอายุแล้ว';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'แอปไม่ได้รับอนุญาตจากเจ้าของ';
	@override String get authenticationTokenIsInvalid => 'โทเค็นการตรวจสอบสิทธิ์ไม่ถูกต้อง';
	@override String get verifyInfoIsInvalidOrExpired => 'ข้อมูลการยืนยันไม่ถูกต้องหรือหมดอายุ';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'ตรวจสอบว่าจำนวนเทอร์มินัลการเข้าถึงเกินขีดจำกัด 1 ใน 10,000';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'เวลาในการเข้าร่วมการขุดจะต้องมากกว่า 3 วัน';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'จำนวนสมาชิกของวงความปลอดภัยต้องไม่ต่ำกว่า 3 คน';
	@override String get avatarIsNotSet => 'ไม่ได้ตั้งค่าอวาตาร์';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'จำนวนผู้อ้างอิงโดยตรงต้องไม่น้อยกว่า 3 คน';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'ระยะเวลาไม่เพียงพอและคุณสามารถเปลี่ยนหมายเลขโทรศัพท์มือถือได้ปีละครั้งเท่านั้น';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'หมายเลขโทรศัพท์มือถือมีอยู่แล้วและไม่สามารถทำซ้ำได้';
	@override String get securityCodeIsIncorrect => 'รหัสความปลอดภัยไม่ถูกต้อง';
	@override String get securityCodeMayHaveExpired => 'รหัสความปลอดภัยอาจหมดอายุแล้ว';
	@override String get sessionIdIsInvalidOrExpired => 'รหัสเซสชันไม่ถูกต้องหรือหมดอายุแล้ว';
	@override String get sessionHasBeenAuthorized => 'เซสชั่นนี้ได้รับอนุญาตแล้ว!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'สามารถต่ออายุได้ภายใน ${x} วันก่อนหมดอายุ';
	@override String get notYetGrantedDeveloperPermissions => 'ยังไม่ได้รับสิทธิ์ของนักพัฒนา';
	@override String fieldXcannotBeEmpty({required Object x}) => 'ฟิลด์ ${x} ไม่สามารถเว้นว่างได้';
	@override String get emailFormatError => 'ข้อผิดพลาดรูปแบบอีเมล';
	@override String theXformatIsIncorrect({required Object x}) => 'ข้อผิดพลาดรูปแบบ \'${x}\'';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'ฟิลด์ \'${x}\' ต้องมีความยาวระหว่าง ${y} ถึง ${z} อักขระ';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'ช่วงการเลือก \'${x}\' ต้องอยู่ระหว่าง ${y} ถึง ${z}';
	@override String get unchanged_sameAsOldContent => 'ไม่เปลี่ยนแปลงเหมือนเนื้อหาเก่า!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' มีอยู่แล้ว!';
	@override String get mobileNumberHasNotJoinedDelta => 'ยังไม่ได้เพิ่มหมายเลขโทรศัพท์มือถือนี้ใน Delta!';
	@override String get referrerIdCannotBeEmpty => 'ID ผู้อ้างอิงไม่สามารถเว้นว่างได้!';
	@override String get referrerIdDoesNotExist => 'ไม่มีรหัสผู้อ้างอิง!';
	@override String get didIsIncorrectOrInvalid => 'DID ไม่ถูกต้องหรือไม่ถูกต้อง!';
	@override String get accessTokenIsIncorrectOrInvalid => 'accessToken ไม่ถูกต้องหรือไม่ถูกต้อง!';
	@override String get minimumWithdrawalAmountIs1USD => 'จำนวนถอนขั้นต่ำในครั้งเดียวคือ 1USD';
	@override String get miningTimeIsNotYet => 'เวลาขุดยังไม่มา';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'มีอยู่แล้ว กรุณาอย่าเพิ่มอีก!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'หมายเลขลงทะเบียนไม่สามารถใช้เป็นหมายเลขการเข้าถึงการยืนยันได้';
	@override String get canotAddYourSelf => 'ไม่สามารถเพิ่มตัวคุณเองได้';
	@override String get logOut => 'ออกจากระบบ';
	@override String get confirmLogout => 'ยืนยันการออกจากระบบ';
	@override String get logOutTipsText => 'คำเตือนที่เป็นมิตร: ตามข้อกำหนดที่เกี่ยวข้องของเอกสารไวท์เปเปอร์ การยืนยันการเข้าสู่ระบบแต่ละครั้งของบัญชีจะใช้เหรียญ DTC จำนวนหนึ่งเพื่อจ่ายให้กับผู้ตรวจสอบเพื่อเป็นแรงจูงใจ โปรดอย่าพยายามเข้าสู่ระบบและออกจากระบบเว้นแต่จำเป็น ปุ่มต่อไปนี้จะออกจากระบบทันที';
	@override String get ConfirmLogoutPleaseEnterYes => 'กรุณากรอก "ใช่" เพื่อยืนยันการออกจากระบบ';
	@override String get tip => 'คำใบ้';
	@override String get cancel => 'ยกเลิก';
	@override String get close => 'ปิด';
	@override String get selected => 'เลือกแล้ว';
	@override String get edit => 'แก้ไข';
	@override String get submit => 'ส่ง';
	@override String get goBack => 'ย้อนกลับ';
	@override String get copiedToClipboard => 'คัดลอกไปยังคลิปบอร์ดแล้ว';
	@override String get nickname => 'ชื่อนิค';
	@override String get confirm => 'ยืนยัน';
	@override String get cannotBeEmpty => 'ไม่สามารถเว้นว่างได้';
	@override String get deleteSuccessful => 'ลบสำเร็จ!';
	@override String get successfullyModified => 'การปรับเปลี่ยนสำเร็จ!';
	@override String get executionSuccessful => 'ดำเนินการสำเร็จ!';
	@override String get preview => 'ดูตัวอย่าง';
	@override String get followSystem => 'ทำตามระบบ';
	@override String get change => 'เปลี่ยน';
	@override String get replace => 'แทนที่';
	@override String get view => 'ตรวจสอบ';
	@override String get manage => 'จัดการ';
	@override String get modify => 'ปรับปรุงใหม่';
	@override String get replacedSuccessfully => 'เปลี่ยนสำเร็จ!';
	@override String get authentication => 'การรับรองความถูกต้อง';
	@override String get reacquire => 'ได้รับอีกครั้ง';
	@override String get tryAgain => 'ลองอีกครั้ง';
	@override String get querying => 'กำลังสอบถาม...';
	@override String get writingToOnChain_pleaseWait => 'เขียนถึงลูกโซ่ กรุณารอสักครู่...';
	@override String get versionCheck => 'การตรวจหาเวอร์ชัน';
	@override String get alreadyLatestVersion => 'เวอร์ชั่นใหม่ล่าสุดแล้ว!';
	@override String get foundNewVersion => 'พบเวอร์ชันใหม่:';
	@override String get upgradeLink => 'ลิงค์อัพเกรด:';
	@override String get deviceDescription => 'คำอธิบายอุปกรณ์:';
	@override String get notification30SecondsBeforeMiningStops => 'ดำเนินการแจ้งเตือน 30 วินาทีก่อนที่การขุดจะหยุด!';
	@override String get goMining => 'ไปขุด';
	@override String get deltaMiningReminder => 'การแจ้งเตือนการขุดเดลต้า ';
	@override String get clickToMine_miningIsAboutToStop => 'คลิกที่นี่เพื่อขุด การขุดจะหยุดเร็วๆ นี้!';
	@override String get incorrect_input => 'อินพุตไม่ถูกต้อง!';
	@override String get are_you_sure_delete => 'คุณแน่ใจหรือไม่ว่าจะลบ?';
	@override String get delete_account => 'ลบบัญชี';
	@override String get how_to_operate_it => 'ดูวิธีการใช้งานสิ?';
	@override String get deletion_warning_tip => 'หากคุณลบบัญชีของคุณ คุณจะสูญเสียเหรียญ Delta ทั้งหมด และรายได้จากสมาชิกคนอื่น ๆ ก็จะสูญหายไปด้วยเช่นกัน';
	@override String get launchWhatsAppProgram => 'เปิดโปรแกรม WhatsApp';
	@override String get sms => 'ข้อความสั้นๆ';
	@override String get whatsApp_verification_tips => 'หมายเลขการเข้าถึงที่มีไอคอนนี้ยังรองรับการยืนยันข้อความ WhatsApp เมื่อส่งข้อความระหว่างประเทศ ขอแนะนำให้ใช้ WhatsApp เพื่อเพิ่มอัตราความสำเร็จและลดต้นทุน';
	@override String get ihaveSentVerificationString => 'ฉันได้ส่งสตริงการยืนยันแล้ว';
	@override String get totalOfPeople => 'จำนวนคนทั้งหมด: ';
	@override String get numberOfPeopleMining => 'จำนวนคนที่ขุดเหมือง';
	@override String get useBrowserScanQRcodeToSMSprogram => 'คุณสามารถใช้เบราว์เซอร์บนอุปกรณ์อื่นเพื่อสแกน QR-code และส่งไปยังโปรแกรม SMS';
	@override String get toggle => 'สลับ';
	@override String get DSMSverifier => 'ตัวตรวจสอบ DSMS';
	@override String get activate => 'เปิดใช้งาน';
	@override String get activated => 'เปิดใช้งานแล้ว';
	@override String get generateActivationCommand => 'สร้างคำสั่งการเปิดใช้งาน';
	@override String get activationCommand => 'คำสั่งเปิดใช้งาน';
	@override String get activationSentedTip => 'หลังจากส่ง SMS การเปิดใช้งานแล้ว โปรดตรวจสอบสถานะการเปิดใช้งานบนอุปกรณ์ปลายทางการเข้าถึง';
	@override String get biometricsNotEnabledTip => 'ข้อมูลไบโอเมตริก (ใบหน้าหรือลายนิ้วมือ) ไม่ได้รับการเปิดใช้งานบนอุปกรณ์ของคุณ โปรดเปิดใช้งานเพื่อดำเนินการต่อ';
	@override String get error => 'ข้อผิดพลาด';
	@override String get exceptionOccurredWhenCallingBiometric => 'เกิดข้อยกเว้นเมื่อเรียกใช้ฟังก์ชันไบโอเมตริกซ์ (ใบหน้าหรือลายนิ้วมือ)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: 'หมายเลขการเข้าถึง '),
		checkedNum,
		const TextSpan(text: ' ถูกเลือกแล้ว ควรเลือก '),
		shouldNum,
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text} ถูกส่งไปยังหมายเลขการเข้าถึง ${n} ด้านบนแล้วหรือยัง';
	@override String get interface => 'อินเทอร์เฟซ:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'กำลังรอเวลาหมดหรือหมายเลขผู้ส่งไม่ตรงกัน';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'หมายเลขโทรศัพท์มือถือของสมาชิกวงกลมความปลอดภัยที่คุณกรอกไม่ตรงกัน: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'เข้าสู่ระบบภายใน 10 นาทีหลังจากออกจากระบบเพื่อหลีกเลี่ยงการยืนยันสองปัจจัย';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'ต้องกรอกหมายเลขโทรศัพท์มือถืออย่างน้อย ${n} หมายเลข';
	@override String get noAccessNumberInYourRegionYet => 'ยังไม่มีหมายเลขเข้าถึงในภูมิภาคของคุณ';
	@override String get notEnoughAccessNumbersInYourRegion => 'หมายเลขการเข้าถึงไม่เพียงพอในภูมิภาคของคุณ';
	@override String get tipsForDeployDSMSterminal => 'ระบบจะโหลดหมายเลขการเข้าถึงจากประเทศอื่นให้คุณโดยอัตโนมัติ เพื่อให้บริการตรวจสอบที่ดีขึ้นและมีต้นทุนต่ำลง ขอแนะนำให้คุณหรือผู้ที่คุณแนะนำติดตั้งเครื่อง DSMS ในพื้นที่เพื่อรับค่าธรรมเนียมการตรวจสอบ';
	@override String get noOneCanProvideMeTheSecurityCode => 'ไม่มีใครสามารถให้รหัสความปลอดภัยแก่ฉันได้ใช่ไหม';
	@override String get useSupplementalMode => 'ใช้โหมดเสริม';
	@override String get returnToSecurityCodeMode => 'กลับสู่โหมดรหัสความปลอดภัย';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'กรุณาป้อนหมายเลขโทรศัพท์มือถือที่เกี่ยวข้องของพวกเขา สามารถละเว้นรหัสประเทศได้';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'หมายเลขมือถือของ ${name} ไม่ถูกต้อง';
	@override String get matchingVerificationStrategyIs => 'กลยุทธ์การตรวจสอบการจับคู่คือ:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'สมดุลมากกว่า 3 ICP ไม่จำเป็นต้องเติมเชื้อเพลิงในตอนนี้';
	@override String get escrowAccount => 'บัญชีเอสโครว์';
	@override String get fuelRelay => 'รีเลย์เชื้อเพลิง';
	@override String get pourFuel => 'เทเชื้อเพลิง';
	@override String get fuelState => 'สถานะเชื้อเพลิง';
	@override String get pouringFuelTips => 'การเติมเชื้อเพลิงไม่ได้ทำให้คุณได้รับข้อดีหรือข้อเสียใดๆ แต่มีจุดประสงค์เพื่อเสริมประสบการณ์ระบบเดลต้า';
	@override String get sponsorDevelopersByWatchingAds => 'สนับสนุนนักพัฒนาโดยการดูโฆษณา';
	@override String get status => 'สถานะ';
	@override String get date => 'วันที่';
}

// Path: <root>
class _StringsUk implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsUk.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.uk,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <uk>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsUk _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'рис. початок';
	@override String get switchLanguage => 'Переключити мову';
	@override String get languageSwitch => 'Перемикання мови';
	@override String get slogan => 'Побудова децентралізованої економіки в дельті';
	@override String get countryRegionCode => 'Код країни/області';
	@override String get countryRegionSelection => 'Вибір країн та регіонів';
	@override String get nextStep => 'наступний крок';
	@override String get yourPhoneNumber => 'Ваш номер телефону.';
	@override String get pleaseSelectCountryAndRegion => 'Будь ласка, оберіть вашу країну/регіон';
	@override String get pleaseEnterPhoneNumber => 'Будь ласка, введіть дійсний номер телефону!';
	@override String get referrerDid => 'Реферал зробив';
	@override String get pleaseEnterTheReferrersDid => 'Будь ласка, введіть дійсний децентралізований ідентифікатор реферала';
	@override String get thisDidIsInvalid => 'Цей DID є недійсним.';
	@override String get nicknameFormatTips => 'Нікнейм не повинен бути порожнім і не повинен перевищувати 16 цифр у довжину.';
	@override String get additionalIinformation => 'Додаткова інформація';
	@override String get invitationSubject => 'Запрошення до Дельта Консенсусу';
	@override String invitationLetter({required Object did}) => 'Привіт, я беру участь у досягненні консенсусу Delta! \n Delta — це нова цифрова валютна платформа з відкритим кодом, яка працює на ICP. Вона може керувати різними цифровими валютами без паролів, закритих ключів або мнемоніки. Будь ласка, клацніть це посилання https://delta.kim/auto/download, щоб установити програму, і тепер вас запросять взяти участь у формуванні консенсусу та карбуванні монет. \n Рекомендатор DID: ${did}';
	@override String get dSMSverification => 'Валідація DSMS';
	@override String get getAccessNumbers => 'Отримайте кілька номерів доступу';
	@override String get getAccessNumberPromptMessage => 'Натисніть кнопку "Отримати" нижче, щоб змінити набір номерів доступу для SMS-верифікації в черзі.';
	@override String get optionalAccessNumbers => 'Додатковий номер доступу';
	@override String get accessNumber => 'номер доступу';
	@override String get TELCO => 'оператор (електростанції, транспортної мережі тощо)';
	@override String get score => 'оцінка';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('uk'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Будь ласка, позначте '),
			nBuilder(n),
			const TextSpan(text: ' номерів доступу і натисніть кнопку "'),
			span('text'),
			const TextSpan(text: '", щоб перейти до наступного кроку.'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Будь ласка, відзначте '),
			nBuilder(n),
			const TextSpan(text: ' номерів доступу і натисніть кнопку "'),
			span('text'),
			const TextSpan(text: '", щоб перейти до наступного кроку.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta - це глобальний експеримент з децентралізованою цифровою валютою з відкритим вихідним кодом та екосистема криптовалютних додатків.';
	@override String get deltaGoalsDesc => 'Мета полягає в тому, щоб люди могли використовувати Delta для спільного створення нових цифрових валют, які будуть універсальними, справедливими, безпечними, швидкими та екологічними. А також забезпечити різні ефективні сценарії застосування цих цифрових валют і попередніх криптовалют.';
	@override String get details => 'деталі';
	@override String get get => 'виграш';
	@override String get select => 'варіант';
	@override String get send => 'надсилання';
	@override String get complete => 'виконати';
	@override String get selectedAccessNumberPrompt => 'Після вибору відображається повний номер доступу та генерується рядок автентифікації.';
	@override String get location => 'розміщення';
	@override String get verificationString => 'рядок перевірки';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Будь ласка, використовуйте свій номер телефону '),
		num,
		const TextSpan(text: ' і надішліть '),
		label,
		const TextSpan(text: ' на '),
		accessNumber,
		const TextSpan(text: ', щоб завершити верифікацію.'),
	]);
	@override String get ihaveSentTheSMS => 'Я надіслав текстове повідомлення';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Валідаційний рядок дійсний протягом 6 хвилин, час, що залишився: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Занадто швидко, щоб чекати ${x} секунд для продовження!';
	@override String get waitingForVerificationSMS => 'Очікуємо на перевірочне SMS...';
	@override String get partSuccsForVerificationSMS => 'Один з терміналів доступу пройшов SMS-верифікацію!';
	@override String get creatingAccessToken => 'Створюється токен доступу...';
	@override String get intoDelta => 'Всередині Дельти';
	@override String get deltaAccountIsLoggedIn => 'Ваш обліковий запис Delta увійшов';
	@override String get iHavLoggedOut => 'Я пас.';
	@override String get startTwoFactorVerification => 'Початок подвійної перевірки';
	@override String get securityCircleVerification => 'Коло валідації безпеки';
	@override String get generateSecurityCode => 'Згенеруйте код безпеки';
	@override String get generateSecurityCodeHintText => 'Згенерований код безпеки буде надіслано випадково обраному члену вашого кола безпеки.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Ви не встановили коло безпеки, ваш обліковий запис дуже небезпечний, будь ласка, введіть будь-яку 6-значну цифру і перейдіть до наступного кроку.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Код безпеки згенеровано, будь ласка, зв\'яжіться з наступними родичами та друзями і попросіть їх витягти код безпеки, щоб ви могли пройти верифікацію. дійсний протягом 30 хвилин!';
	@override String get itGetSecurityCodeTip => 'Порада: Ви можете отримати код безпеки, двічі натиснувши на псевдонім вашого облікового запису на сторінці Delta App -> Меню -> Забезпечити безпеку.';
	@override String get securityCircleMemberList => 'Список учасників кола безпеки:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Будь ласка, виберіть родича або друга зі списку учасників, щоб створити та надати вам код безпеки для підтвердження вашої справжньої особи. Мета полягає в тому, щоб запобігти контролю над обліковим записом з боку інших, якщо номер мобільного телефону втрачено або вкрадено.';
	@override String formatIsXdigits({required Object num}) => 'Формат як ${num} цифр';
	@override String get signInSuccessfully => 'Успішний вхід!';
	@override String get twoFAandLogin => 'Подвійна автентифікація та вхід';
	@override String get verificationSuccessful => 'Перевірте успіх!';
	@override String get validationFailed => 'Валідація не пройшла!';
	@override String get dappInfo => 'Інформація про DApp';
	@override String get securityCircle => 'охоронне кільце';
	@override String get securityCode => 'код безпеки';
	@override String get provideSecurity => 'забезпечення безпеки';
	@override String get addManully => 'Додати вручну';
	@override String get addFromContacts => 'Додати з адресної книги';
	@override String get addSecurityCircle => 'Додати Коло безпеки';
	@override String get inputType => 'Тип входу';
	@override String get mobileNumber => 'номер мобільного телефону';
	@override String get did => 'Ідентифікатор адреси';
	@override String get pleaseEnterValidDID => 'Будь ласка, введіть дійсний децентралізований ідентифікатор';
	@override String get pleaseEnterValidWalletAddress => 'Будь ласка, введіть дійсну адресу гаманця';
	@override String get appellation => 'форма звернення';
	@override String get appellationHint => 'Як ви це називаєте, наприклад, "малюк"?';
	@override String get addSecurityCircleTips => 'Будь ласка, не додавайте людей, яким ви не довіряєте, до свого кола безпеки.';
	@override String get referralTeam => 'Рекомендовані команди';
	@override String get profile => 'Інформація про обліковий запис';
	@override String get menu => 'меню';
	@override String get directly => 'прямий';
	@override String get indirectly => 'непрямий';
	@override String get inviteContacts => 'Запрошення Контакт';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Ваш запрошений - '),
		nickname,
		const TextSpan(text: ', і ви безпосередньо запросили '),
		num1,
		const TextSpan(text: ' людей, з яких '),
		num2,
		const TextSpan(text: ' зараз онлайн.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Ви опосередковано направили '),
		num1,
		const TextSpan(text: ' людей, з яких '),
		num2,
		const TextSpan(text: ' зараз онлайн.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Запрошуйте друзів приєднатися до Delta і покращуйте суспільний консенсус разом. За кожного прямого реферала ставка видобутку однієї людини збільшує базову ставку на '),
		rate1,
		const TextSpan(text: '. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Запрошуйте друзів приєднатися до Delta, і разом ви зможете збільшити суспільний консенсус, а за кожного непрямого реферала ваша ставка майнінгу буде збільшена на '),
		rate2,
		const TextSpan(text: ' від базової ставки.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Ви впевнені, що хочете видалити "${name}"?';
	@override String get safetyCircleRoleQ => 'Для чого призначене запобіжне кільце?';
	@override String get safetyCircleRoleA => 'Захистіть свій обліковий запис, забезпечивши вторинну автентифікацію в критичних ситуаціях.';
	@override String get howSecurityCirclesWorkQ => 'Як працюють запобіжні кільця?';
	@override String get howSecurityCirclesWorkA => 'У випадку, якщо необхідна верифікація Circle of Safety, програма Delta Smart Contracts випадковим чином вибере учасника зі списку друзів Circle of Safety, який надасть вам код безпеки, щоб завершити перевірку вашої особи. Коли ви запитаєте у учасника код безпеки, він зможе підтвердити, чи ви - це ви, чи ні. У той же час програма запропонує: "Відмовтеся надати код безпеки, якщо це не ви", щоб захистити безпеку вашого облікового запису. Тому ви завжди повинні переконатися, що члени вашого кола безпеки - це люди, яким ви можете довіряти.';
	@override String get securityCircleBeUsedQ => 'Коли це буде використано?';
	@override String get securityCircleBeUsedA1 => '1. коли ви втрачаєте контроль над вашим Delta APP, зазвичай це відбувається через те, що ваш мобільний телефон загублений або вкрадений.';
	@override String get securityCircleBeUsedA2 => '2. у випадку деяких чутливих операцій програма Delta Smart Contract потребує підтвердження того, що це саме ви.';
	@override String get provideSafetyTip1 => 'Коли ваш приятель запитує у вас код безпеки, переконайтеся, що це його власний код.';
	@override String get provideSafetyTip2 => 'Ви забезпечуєте безпеку вищезазначеним друзям, які визначили вас як найбільш довірену особу в своєму колі безпеки і потребують від вас підтвердження безпеки на випадок, якщо вони зіткнуться з чутливими операціями на своєму акаунті.';
	@override String get provideSafetyTip3 => 'Двічі клацніть на аватарку іншої людини, щоб отримати код безпеки, коли це необхідно.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'Інша сторона наразі не має коду безпеки, який потрібно отримати!';
	@override String get existSecurityCodeTip => 'Будь ласка, переконайтеся, що друг або член сім\'ї, який запитує у вас код безпеки, - це той самий друг або член сім\'ї. Щоб захистити вашого друга або члена сім\'ї, вам слід відмовитися надавати код безпеки, якщо друг або член сім\'ї не є тим самим другом або членом сім\'ї, який запитує у вас код безпеки.';
	@override String get avatarSettings => 'Налаштування аватара';
	@override String get NFTAvatarPropertyRightsText => 'Відмова від відповідальності: Використання NFT в якості аватара є виключно особистим уподобанням і не має нічого спільного з володінням правами інтелектуальної власності на цей NFT.';
	@override String get projectWebsite => 'Сайт проекту:';
	@override String get whitepaper => 'білий папір:';
	@override String get indexID => 'Індекс Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Індекс між ${start} та ${end}.';
	@override String get inputToLoadNFTAvatarTip => 'Введіть індексний ідентифікатор вашого улюбленого NFT, і програма автоматично завантажить його як аватарку для вас.';
	@override String get miningRate => 'швидкість видобутку';
	@override String get miningDetails => 'Деталі видобутку';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Загальна швидкість видобутку: '),
		rate,
		const TextSpan(text: ' δ/день'),
	]);
	@override String get EndOfMiningSession => 'Циклічний майнінг закінчився:';
	@override String get tapToMineDeltaCoin => 'Натисніть, щоб видобути монети Delta ↑.';
	@override String get clickToStartMining => 'Натисніть, щоб почати майнінг!';
	@override String get miningHasStoppedPromptDesc => 'Майнінг зупинився, кожні 24 години відбувається цикл майнінгу, натисніть на іконку блискавки, щоб почати новий раунд майнінгу.Майнінг Delta - це механізм розподілу, який не споживає додаткової арифметичної потужності і мережевого трафіку з вашого пристрою.';
	@override String get aboutBaseRate => 'Щодо базової ставки?';
	@override String get baseRateDescription => 'Як було узгоджено в документі, правило зниження базової ставки для майнінгу Delta буде розділено на два етапи.\nЕтап 1: Ставка становитиме 32δ/день, коли кількість учасників (реєстрацій) становитиме 3 000 або менше. Використовуючи це як стартову базу, базова ставка зменшується вдвічі кожного разу, коли кількість людей збільшується в 10 разів.\nЕтап 2: Коли кількість учасників досягає 30 мільйонів або більше, базова ставка зменшується вдвічі щоразу, коли кількість учасників збільшується в 3 рази. Аж до остаточної зупинки видобутку.';
	@override String get baseRate => 'Βασικό επιτόκιο';
	@override String get directReferralRewards => 'Бонус за пряме залучення клієнтів';
	@override String get directReferralRewardDesc => 'За кожного прямого реферала ваша ставка видобутку буде збільшена на 1/3 від базової ставки, поки вони видобувають.\n\n Крім того, статус видобутку ваших рефералів також буде зараховуватися до вашого бонусу за прямих рефералів.';
	@override String get indirectReferralRewards => 'Непрямий реферальний бонус';
	@override String get indirectReferralRewardDesc => 'Коли непрямий реферал майнить, ваша ставка майнінгу збільшується на додаткову 1/10 частину від базової ставки.\n\n Ваша команда прямих рефералів, кожна людина, яку вони перенаправляють, є для вас непрямим рефералом.';
	@override String get mine => 'видобуток (руда або інший ресурс з шахти)';
	@override String get thisMiningInformation => 'Поточна інформація про видобуток корисних копалин';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Брав участь у майнінгу: '),
		x,
		const TextSpan(text: ' разів'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Загальний виграш цього разу: '),
		x,
		const TextSpan(text: ' монет Delta'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Базовий заробіток: '),
		x,
		const TextSpan(text: ' монет'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Прямий внесок команди: '),
		x,
		const TextSpan(text: ' монет'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Непрямий внесок команди: '),
		x,
		const TextSpan(text: ' монет'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Час між викопуваннями: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Ефективні години майнінгу: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} годин';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Для забезпечення безпеки активів члени кола безпеки повинні мати 3-5 довірених осіб, яким вони постійно довіряють.';
	@override String get index => 'індексація';
	@override String get amount => 'сума грошей';
	@override String get balance => 'залишки';
	@override String get timeStamp => 'мітка часу';
	@override String get summary => 'тези доповідей';
	@override String get miningHasStopped => 'Видобуток припинився.';
	@override String get miningHasStoppedDesc => 'Ваш видобуток наразі зупинено, почніть заробляти зараз.';
	@override String get startMining => 'Почніть майнінг';
	@override String get changeMobileNumber => 'Зміна номера мобільного телефону';
	@override String get currentMobileNumber => 'Поточний номер мобільного телефону';
	@override String get newMobileNumber => 'Новий номер мобільного телефону';
	@override String get securityCodeFormatIs6digits => 'Формат коду безпеки - 6 цифр!';
	@override String get startVrification => 'Почніть перевірку';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Цей мобільний номер вже існує, асоційований DID: ${dId}.';
	@override String get noDataYet => 'Дані відсутні';
	@override String get previousMobileNumber => 'Попередній номер мобільного телефону';
	@override String get changeLog => 'Запис змін';
	@override String get referralLinkToShare => 'Рекомендовані посилання для поширення';
	@override String get referrer => 'реферал';
	@override String get isoCountryCode => 'Код країни ISO';
	@override String get avatarLogo => 'логотип заголовка';
	@override String get creationTime => 'Час створення';
	@override String get lastUpdate => 'Останнє оновлення';
	@override String get numberOfSecurityCircleMembers => 'Кількість членів кіл безпеки';
	@override String get theLatestMining => 'Остання розкопка.';
	@override String get effectiveMiningDays => 'Кількість днів ефективного майнінгу';
	@override String get modifyNickname => 'Змінити нікнейм';
	@override String get didNotChange => 'Без змін!';
	@override String get kycVerification => 'Верифікація KYC';
	@override String get faceID => 'Ідентифікація обличчя';
	@override String get touchID => 'Ідентифікація за відбитками пальців';
	@override String get biometricsAuthorizationTest => 'Тестування біометричної автентифікації';
	@override String get currentState => 'поточний стан';
	@override String get biometricsAuthenticationLocalizedReason => 'Використовуйте розблокування свого пристрою, щоб підтвердити свою особу.';
	@override String get graph => 'архів графіки (наприклад, карти, документи або ботанічні фігури)';
	@override String get referralRelationshipGraph => 'Мапування зв\'язків між рефералами';
	@override String get nativeContacts => 'Місцеві контакти';
	@override String get registrationAndMiningTrends => 'Тенденції реєстрації та майнінгу';
	@override String get inMining => 'видобуток корисних копалин';
	@override String get registrationVolume => 'обсяг реєстрації';
	@override String get unmined => 'невикористаний';
	@override String get mined => 'видобуто';
	@override String get communityMining => 'Спільний видобуток корисних копалин';
	@override String get consensusPromotionFund => 'Фонд сприяння консенсусу';
	@override String get ecologicalAwardFund => 'Фонд екологічного стимулювання';
	@override String get icpFuelCrowdfunding => 'Паливний краудфандинг ICP';
	@override String get coreDeveloperRewards => 'Винагороди для основних розробників';
	@override String get totalAllocation => 'Загальний розподіл';
	@override String get miningRatio => 'Коефіцієнт видобутку';
	@override Map<String, String> get billion => {
		'30': '30 мільярдів',
		'60': '60 мільярдів',
		'180': '180 мільярдів.',
		'300': '300 мільярдів',
	};
	@override String get watchAdsToSupportDevelopers => 'Дивіться рекламу на підтримку розробників';
	@override String get loadingAdcomponents => 'Завантаження рекламних компонентів...';
	@override String get timeIsNotUp => 'Час не закінчився!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Не вдалося завантажити, можливо, мережа заблокована!';
	@override String get pendingUSCTrecords => 'Записи USCT, що очікують на розгляд';
	@override String get pendingUSCTrecordsDesc => 'Очікувані записи USCT будуть підтверджені на рекламній платформі протягом 15-30 днів, а дійсні записи будуть перенесені до списку записів USCT, і відповідна сума USCT буде додана до балансу рахунку.';
	@override String get validity => 'дійсність';
	@override String get advertiser => 'рекламодавці';
	@override String get earned => 'зароблені';
	@override String get withdraw => 'вилучити';
	@override String get validUSCTrecords => 'Ефективні записи USCT';
	@override String get USCTmining => 'USCT Mining';
	@override String get aboutUSCTmining => 'Про майнінг USCT?';
	@override String get aboutUSCTminingItme1 => '1. USDT - це популярний у всьому світі стейблкоїн в доларах США, який можна легко обміняти на національні суверенні валюти на основних криптовалютних біржах світу.';
	@override String get aboutUSCTminingItme2 => '2. USCT - це тимчасова міра надходжень від видобутку USCT, відома як доларовий кредит, який з часом буде конвертований в USDT відповідно до фактичної суми розрахунків і правил розподілу рекламної платформи та відповідної пропорції.';
	@override String get aboutUSCTminingItme3 => '3. USCT Mining - це функція реалізації реклами трафіку у спільноті Delta. Вона використовує переваги великої бази користувачів спільноти Delta, щоб забезпечити численні переваги для рекламодавців, розробників Delta та абсентеїстів. Вона призначена для забезпечення певного ефективного доходу для працівників, які працюють за сумісництвом, на ранній стадії, коли екосистема Delta ще не сформувалася і не процвітає; в той же час, вона також надає певну фінансову підтримку розробникам, щоб вони могли продовжувати надавати послуги з розробки протягом тривалого періоду часу і, в кінцевому рахунку, мати можливість реалізувати всі плани, викладені в технічному завданні; і вона також забезпечує ефективний канал просування для рекламодавців продуктів.';
	@override String get aboutUSCTminingItme4 => '4. правила розподілу розроблені таким чином, що 40 відсотків від загальної суми надходжень використовуються як комісійні за технічну підтримку розробників, а решта 60 відсотків - як винагорода за відсутність у спільноті. Винагорода за абсентеїзм є частиною багаторівневої моделі розподілу, подібної до DTC, винагорода за абсентеїзм буде розділена на три частини відповідно до співвідношення 6:3:1, кожного разу, коли одна з винагород за абсентеїзм USCT видобуває 6 частин, що виділяються за абсентеїзм поточного оголошення, 3 частини виділяються вищому рефералу, 1 частина виділяється рефералу другого рівня. Аналогічно, ви також можете отримати таку ж винагороду за реферала за друзів, яких ви привели за допомогою майнінгу USCT. Перевага такої багаторівневої системи розподілу полягає в тому, що будь-хто може заробити відносно велику кількість USDT, розвиваючи команду рефералів.';
	@override String get aboutUSCTminingItme5 => '5. розрахунковий цикл становить 7 днів, тобто кожні 7 днів відбувається перевірка валідності з рекламною платформою, і підтверджена валідність надходжень і фактична сума буде записана на баланс. Мінімальна сума для кожного виведення коштів становить 10USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Рядки від ${x} до ${y}.';
	@override String get wallet => 'гаманці';
	@override String get multiChainWallet => 'багатоланцюговий гаманець';
	@override String get deposit => 'депозит (наприклад, на банківському рахунку)';
	@override String get transfer => 'переказ (гроші на банківський рахунок)';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} в адресі гаманця';
	@override String get transactions => 'Записи транзакцій';
	@override String get network => 'ретикуляція';
	@override String get walletAddress => 'Адреса гаманця';
	@override String get currentAddress => 'поточна адреса';
	@override String get depositAddress => 'Адреса поповнення рахунку';
	@override String get receivingMoneyAddress => 'адреса одержувача платежу';
	@override String get applyTempDepositAddress => 'Адреса для запиту на тимчасове поповнення рахунку';
	@override String get tempDepositAddressTip => '1. це спільна депозитна адреса. Будь ласка, не вносьте суму після закінчення терміну оренди або після того, як ви звільнилися. Якщо це станеться, сума буде втрачена.';
	@override String get tempDepositAddressTip2 => '2. перед внесенням депозиту, будь ласка, переконайтеся, що [Chain Name] і [Coin Name] точно збігаються; у випадку контрактних токенів, вам також потрібно переконатися, що [Contract Standard] і [Contract Address] точно збігаються.';
	@override String get tempDepositAddressTip3 => '3. будь ласка, не намагайтеся внести кошти, які не відповідають жодному з параметрів у наведених вище підказках, інакше сума буде втрачена.';
	@override String get tempDepositAddressTip4 => '4. якщо вам потрібно внести інші види активів, перейдіть на сторінку відповідної валюти та параметрів, щоб подати заявку на нову адресу.';
	@override String get applyExtensionOfValidity => 'Заява на продовження терміну дії';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: 'Термін дії цієї адреси закінчується після '),
		diff,
		const TextSpan(text: ' і буде '),
		tap('вручну продовжити'),
		const TextSpan(text: ' дійсною протягом 12 годин до закінчення терміну дії.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Можна поновити лише за 12 годин до початку';
	@override String get theReceivingAddressValidForLongtime => 'Ця адреса дійсна протягом тривалого часу.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Ця адреса для збору коштів є дійсною протягом тривалого часу і автоматично зараховується в режимі реального часу.';
	@override String get confirmDeposited => 'Підтвердження депозитів';
	@override String get unbindThisDepositAddress => 'Розбийте цю адресу поповнення на частини';
	@override String get confirmDepositedTip => 'Якщо кошти були переведені, натисніть кнопку вище, щоб запустити виставлення рахунку на ваш гаманець через 10 хвилин.';
	@override String get unbindDepositAddressTip => 'Щоб зменшити накладні витрати смарт-контракту, будь ласка, відв\'яжіть адресу поповнення, якщо ви більше не будете поповнювати рахунок протягом терміну дії контракту.';
	@override String get transferToAddress => 'перейти на адресу';
	@override String get longPressToPaste => 'Тривале натискання для вставки';
	@override String get all => 'повний';
	@override String balanceX({required Object x}) => 'Баланс ${x}';
	@override String get transferOut => 'Виявляється.';
	@override String depositXcoins({required Object x}) => 'Зараховано ${x}';
	@override String get sender => 'відправник';
	@override String get recipient => 'одержувач';
	@override String get memo => 'примітка';
	@override String get kind => 'спосіб (життя)';
	@override String get transferAmountExceedsAvailableBalance => 'Перекази понад доступний залишок';
	@override String get pleaseEnterValidAmount => 'Будь ласка, введіть правильну суму';
	@override String get networkFee => 'Плата за обслуговування в мережі';
	@override String get fee => 'плата за обробку';
	@override String validLengthXcharacters({required Object x}) => 'Адреса допустимої довжини ${x} символів';
	@override String get historys => 'історична довідка';
	@override String get dtcCreditdetail => 'Інформація про дельта-бали';
	@override String get usdCreditdetail => 'Інформація про бали в доларах США';
	@override String get dappSquare => 'dApp Plaza';
	@override String get amountRaised => 'Зібрано коштів';
	@override String get disbursedAmount => 'Сума видачі';
	@override String get participationTimes => 'Кількість учасників';
	@override String get completionRate => 'відсоток завершення';
	@override String get exchangeRate => 'курс обміну валют';
	@override String get icpCrowdfunding => 'Краудфандинг ICP';
	@override String get crowdfunding => 'краудфандинг';
	@override String get trendsCurve => 'крива тренду';
	@override String get fullScreenView => 'повноекранний перегляд';
	@override String get walletBalance => 'Баланс гаманця:';
	@override String get manageWallet => 'Керування гаманцем';
	@override String get fundraiseAmount => 'фандрейзинг';
	@override String get exchangeRewardAmount => 'Виведення суми винагороди';
	@override String get fundraise => 'фандрейзинг';
	@override String rangeIntegersX({required Object x}) => 'Діапазон: ціле число ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Успішно взяв участь у зборі коштів і отримав винагороду ${amount}DTCT';
	@override String get amountSummary => 'Підсумкові суми';
	@override String get changePreferred => 'Зміна вподобань';
	@override String get changePreferredAddress => 'Змінити бажану адресу';
	@override String get preferredAddressTip => 'Кошти будуть автоматично перераховані на вказану адресу, коли кошти будуть зібрані за допомогою зареєстрованого мобільного номера або DID.';
	@override String get newAddress => 'Нова адреса';
	@override String get newAddressTip => 'Щоб запобігти зловживанням, коли створюється більше однієї адреси гаманця, за кожну нову адресу стягується комісія за транзакцію.';
	@override String get createNew => 'новозбудований';
	@override String get chainNetworkName => 'назва мережі ланцюга';
	@override String get from => 'походити з (місця)';
	@override String get to => 'до (часу)';
	@override String get noAvailableDepositAmountDetected => 'Доступної суми вкладу не виявлено!';
	@override String get crossChainReceiveMoneyMonitoring => 'Крос-ланцюгова колекція слухає ...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Отримано ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Підтвердження в процесі ('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Примітки (обов\'язкові для прочитання новачкам)';
	@override String get whyUseSharedAddresses => 'Навіщо використовувати загальну адресу?';
	@override String get useSharedrAdvantage => 'Переваги використання спільних адрес під час поповнення рахунків через мережу полягають у наступному:';
	@override String get useSharedrAdvantage1 => '1. зменшити втрати комісій за перекази та знизити вартість використання для користувачів. Через використання ексклюзивної адреси, це призведе до занадто великого розпорошення коштів, як правило, для того, щоб полегшити подальший переказ іншим користувачам при знятті коштів, коли користувач поповнює рахунок другим переказом, кошти потрібно об\'єднати в одну або невелику кількість адрес управління.';
	@override String get useSharedrAdvantage2 => '2. у спільній схемі програмі потрібно підтримувати лише відносно невеликий пул адрес, які можна швидко зіставити з вихідними передачами та прослуховуванням збору світла, що зменшує накладні витрати обчислювальних ресурсів. На противагу цьому, у випадку використання ексклюзивних адрес все було б навпаки.';
	@override String get tokenType => 'Тип токену';
	@override String get contract => 'підрядник';
	@override String get contractStandard => 'стандарт контракту';
	@override String get contractAddress => 'адреса контракту';
	@override String get native => 'найпростіші';
	@override String get confirmUnbindingPleaseEnterYes => 'Щоб підтвердити відв\'язування, будь ласка, введіть "так".';
	@override String get listAllWorkingTempReceivingAddresses => 'Перерахуйте всі робочі адреси поповнення міжмережевого зв\'язку';
	@override String get setNote => 'Налаштування нотаток';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Не може бути довшим за ${x} байт';
	@override String get transferFee => 'комісія за переказ';
	@override String get crossChainFee => 'крос-ланцюгова комісія';
	@override String get crossChainTransferOutError => 'помилка перенесення зшивання';
	@override String get chainName => 'назва ланцюжка';
	@override String get message => 'повідомлення';
	@override String get dontShowAgain => 'більше не відображається';
	@override String get queuing => 'черга';
	@override String get optional => 'необов\'язковий';
	@override String get publiclyVisible => 'публічно видимими';
	@override String get rates => 'тариф';
	@override String get minimum => 'мінімум';
	@override String get maximum => 'верхня межа';
	@override String get minimumBlockConfirmations => 'Мінімальна кількість підтверджень блокування';
	@override String get dsmsVerifyTerminal => 'Термінал валідації DSMS';
	@override String get overall => 'парасолька';
	@override String get my => 'мій';
	@override String get checkValidatorQualifications => 'Перевірка кваліфікації привілеїв автентифікатора';
	@override String get getVerifierPermissions => 'Отримати привілеї автентифікатора';
	@override String get qualification => 'природні обдарування';
	@override String get upperLimit => 'ліміт';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Максимальна кількість дозволених терміналів доступу';
	@override String get numberOfExistingAccessTerminals => 'Кількість встановлених терміналів доступу';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Перед тим, як подати заявку на отримання прав автентифікатора, вам потрібно підготувати непрацюючий мобільний телефон Android і виділений номер доступу, а також завантажити та встановити додаток DSMS Access Terminal.';
	@override String get downloadLink => 'посилання для завантаження';
	@override String get alreadyReadyFollowingTheAboveTips => 'Все готово, як викладено вище';
	@override String get globalUniversal => 'для глобального використання';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Наразі недостатньо локальних автентифікаторів для участі у сервісі доступу до автентифікації DSMS, будь ласка, оберіть сервіс доступу "'),
		gu,
		const TextSpan(text: '".'),
	]);
	@override String get asDedicatedNumberForAccess => 'як номер лише для доступу';
	@override String pleaseCheckTip({required Object tip}) => 'Будь ласка, поставте галочку у полі "${tip}".';
	@override String get inputLengthTooShort => 'Занадто коротка довжина вхідних даних';
	@override String get shortName => 'абревіатури';
	@override String pleaseEnterXname({required Object name}) => 'Будь ласка, введіть ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Заявка подається, будь ласка, зачекайте...';
	@override String get applyForDSMSVerifierPermission => 'Подати заявку на отримання привілеїв валідатора DSMS';
	@override String get confirmInformation => 'Підтвердження інформації';
	@override String get lastHeartbeat => 'останній удар серця';
	@override String get expirationTime => 'час, що залишився';
	@override String get country => 'нації';
	@override String get accessTerminals => 'термінал доступу';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Загальна кількість терміналів з номерами доступу до DSMS';
	@override String get textContent => 'Текстовий вміст';
	@override String get scanQRcodeToLogin => 'Проведіть пальцем, щоб увійти';
	@override String get confirmLogin => 'Підтвердити логін';
	@override String get authorizeSubApplicationToLogin => 'Дозвольте цій субпрограмі увійти в систему';
	@override String get authorizationSuccessful => 'Авторизація пройшла успішно!';
	@override String get launchSMSprogram => 'Запуск SMS-програми';
	@override String get notApplied => 'Немає заявки';
	@override String get validityPeriod => 'термін дії';
	@override String get renewal => 'заявка на поновлення';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Відскануйте код для авторизації входу в термінал';
	@override String get rewards => 'заохочення';
	@override String get roles => 'характер';
	@override String get developerCenter => 'Центр для розробників';
	@override String get appName => 'Назва заявки';
	@override String get pleaseSelect => 'будь ласка, оберіть';
	@override String get category => 'категорія';
	@override String get keywords => 'слово';
	@override String get pleaseEnterAkeyword => 'Будь ласка, введіть ключове слово';
	@override String get createApplication => 'Створення додатків';
	@override String get appType => 'Тип програми';
	@override String get numberOfCategoriesMustBetween1and3 => 'Кількість категорій має бути від 1 до 3';
	@override String get appLogoSpecifications => 'Формат зображення: png, розмір: в межах 100 КБ, роздільна здатність (пікселів): 256*256';
	@override String get localAlbum => 'Місцеві фотоальбоми';
	@override String get networkPath => 'мережевий шлях';
	@override String get imageURLkAddress => 'URL-адреса зображення';
	@override String get urlAddressFormatIsIncorrect => 'Неправильно відформатована URL-адреса';
	@override String get imageFormatOnlySupportsPng => 'Зображення підтримуються лише у форматі "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'Довжина повинна бути в межах ${a}-${b} символів.';
	@override String get introduction => 'коротка інформація';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'Розмір зображення не може бути більшим за ${a}, наразі ${b}.';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'Роздільна здатність зображення має бути: ${p1}(пікселів), наразі ${p2}';
	@override String get becomeDeveloper => 'Стати розробником';
	@override String get developerInformation => 'Інформація про розробника';
	@override String get teamName => 'Назва команди';
	@override String get website => 'вузол';
	@override String get other => 'окрім';
	@override String get githubVerification => 'Верифікація на Github';
	@override String get exampleUrl => 'Приклад URL-адреси';
	@override String githubVerificationTip({required Object did}) => 'Будь ласка, скористайтеся своїм акаунтом GitHub, щоб створити файл \'delta.did\' у вашому сховищі з вмістом \'${did}\'; потім вставте URL-адресу githubusercontent цього файлу в це поле введення для автентифікації.';
	@override String get createApp => 'Створення додатків';
	@override String get appManagement => 'управління додатками';
	@override String get statusLogs => 'Журнал стану';
	@override String get bad => 'Нічого доброго.';
	@override String get normal => 'звичайний';
	@override String get good => 'відмінний.';
	@override String get onceCreatedItCannotBeChanged => 'Одного разу створений, він не може бути змінений!';
	@override String get manageApplicationEntity => 'Керування об\'єктами програми';
	@override String get currentVersion => 'поточна версія';
	@override String get submitVersion => 'Подана версія';
	@override String get packageOnlySupportZipCompressedFile => 'Пакунок підтримує лише zip-архіви';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Файл \'${name}\' не знайдено у zip-архіві.';
	@override String get fileList => 'Список документів:';
	@override String get programPackage => 'Програмний пакет:';
	@override String get automaticallyExtractFromVersionFile => 'Автоматично витягується з файлів \'.version';
	@override String get dappVersionFormatTip => 'Формат номера версії повинен бути десятковим з точністю до 2 цифр, що не перевищує максимум 99.99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Номер версії має бути більшим за поточну версію \'${v}\'';
	@override String get versionNotes => 'Відбиток:';
	@override String get updateRelease => 'нова версія';
	@override String get loadAndRun => 'Завантажуйте та працюйте';
	@override String get notYetSubmittedProgramPackage => 'Програмний пакет ще не подано!';
	@override String get authorizeMinidAppLogin => 'Авторизація входу в міні-додаток';
	@override String get confirmAuthorizationPleaseEnterYes => 'Для підтвердження авторизації, будь ласка, введіть "так".';
	@override String get authorizeNow => 'Негайний дозвіл';
	@override String get operation => 'Операція.';
	@override String get statusChange => 'Зміна статусу';
	@override String get changeTo => 'Переключись на:';
	@override String get notes => 'Зауваження.';
	@override String get changesNotEffective => 'Зміна не дійсна!';
	@override String get released => 'Опубліковано';
	@override String get inPublicBeta => 'відкрита бета-версія';
	@override String get developers => 'Розроблено';
	@override String get reviewList => 'Список коментарів.';
	@override String get postReview => 'Залишити коментар';
	@override String get scoreNow => 'Оцініть зараз';
	@override String get description => 'Опис.';
	@override String get noData => '(^-^)\n Немає даних';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Версію оновлено з ${a} на ${b}.';
	@override String get loadNewVersion => 'Завантажити нову версію';
	@override String get name => 'Ім\'я.';
	@override String get canisterId => 'Ідентифікатор танка.';
	@override String get updateTime => 'час оновлення';
	@override String get contractCanistersState => 'Статус контрактного танка';
	@override String get userDistribution => 'розподіл користувачів';
	@override String get settings => 'Налаштування';
	@override String get security => 'Безпека';
	@override String get invite => 'запрошення';
	@override String get more => 'Більше...';
	@override String get receiveAddress => 'Отримайте адресу:';
	@override String get hangingAmount => 'висить';
	@override String get hangingAmountTips => 'Очікувані суми - це тимчасові записи винагород, отриманих від майнінгу вашою підлеглою командою, щойно ви завершите сеанс майнінгу, ці суми будуть зібрані в Очікуваних сумах.';
	@override String get pendingAmount => 'в очікуванні';
	@override String get pendingAmountTips => 'Неоплачені суми - це ті, які ще не підтверджені рекламодавцям, а ті, що підтверджені, будуть перенесені до дійсного запису USCT, а будь-яка недійсна частина буде виключена.';
	@override String get received => 'отримано';
	@override String get processing => 'у процесі';
	@override String get replied => 'респондент';
	@override String get rejected => 'відмова';
	@override String get unknown => 'незвідані';
	@override String get insufficientBalance => 'Недостатній баланс!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Баланс ${x} недостатній для покриття мережевих зборів за перехресне зшивання';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Транзакція ще не завершена і не може бути переказана в даний момент';
	@override String get thisfunctionNotSupportExternalCalls => 'Ця функція не підтримує зовнішній виклик';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Не знайдено адреси, за якою можна сплатити міжмережеву комісію, будь ласка, перейдіть до іншої мережі, щоб спробувати.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'Поточний збіг з максимальною сумою, яку можна переказати за одну транзакцію, становить ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Примітки не повинні перевищувати 64 байти';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'На рахунку недостатньо коштів і сума складає: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Ви не можете прив\'язати більше 3 адрес.\nЯкщо вам потрібно прив\'язати нову платіжну адресу.\nБудь ласка, спочатку відв\'яжіть іншу адресу';
	@override String parametersA_exception({required Object x}) => 'Параметри: ${x}, виключення';
	@override String get parameterException => 'Виняток параметра!';
	@override String get transferAmountMustBeLargerThan0 => 'Сума переказу повинна бути більшою за 0';
	@override String get authorizationHasExpired => 'Термін дії дозволу закінчився';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'Додаток не був авторизований власником';
	@override String get authenticationTokenIsInvalid => 'Недійсний маркер автентифікації';
	@override String get verifyInfoIsInvalidOrExpired => 'Невірна або прострочена інформація для підтвердження';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Переконайтеся, що кількість терміналів доступу перевищила ліміт один на десять тисяч';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'Участь у майнінгу повинна тривати більше 3 днів';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Кількість членів кола безпеки не може бути менше трьох';
	@override String get avatarIsNotSet => 'Аватар не встановлено';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Кількість прямих рефералів не може бути менше 3';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Часовий ліміт недостатній, і ви можете змінити номер мобільного телефону лише один раз на рік.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Цей номер мобільного телефону вже існує і не може бути продубльований';
	@override String get securityCodeIsIncorrect => 'Неправильний код безпеки';
	@override String get securityCodeMayHaveExpired => 'Можливо, термін дії коду безпеки закінчився';
	@override String get sessionIdIsInvalidOrExpired => 'Недійсний або прострочений ідентифікатор сеансу';
	@override String get sessionHasBeenAuthorized => 'Сесію було оголошено завершеною!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Можна продовжити лише за ${x} днів до закінчення терміну дії';
	@override String get notYetGrantedDeveloperPermissions => 'Поки що немає прав розробника';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Поле ${x} не може бути нульовим';
	@override String get emailFormatError => 'Помилка формату електронної пошти';
	@override String theXformatIsIncorrect({required Object x}) => '\'${x}\' помилка форматування';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Поле "${x}" повинно мати довжину від ${y} до ${z} символів.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Діапазон вибору \'${x}\' має бути між ${y} та ${z}.';
	@override String get unchanged_sameAsOldContent => 'Без змін, той самий вміст, що й раніше!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' вже існує!';
	@override String get mobileNumberHasNotJoinedDelta => 'Цей мобільний номер ще не додано до Дельти!';
	@override String get referrerIdCannotBeEmpty => 'Ідентифікатор реферала не може бути порожнім!';
	@override String get referrerIdDoesNotExist => 'Ідентифікатор реферала не існує!';
	@override String get didIsIncorrectOrInvalid => 'DID неправильний або недійсний!';
	@override String get accessTokenIsIncorrectOrInvalid => 'Токен доступу неправильний або недійсний!';
	@override String get minimumWithdrawalAmountIs1USD => 'Мінімум 1USD для одноразового зняття коштів';
	@override String get miningTimeIsNotYet => 'Ще не час мінувати.';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Вже існує, будь ласка, не додавайте його знову!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Неможливо використовувати реєстраційний номер як номер доступу для автентифікації';
	@override String get canotAddYourSelf => 'Неможливо додати себе';
	@override String get logOut => 'Вийдіть з системи';
	@override String get confirmLogout => 'Підтвердити вихід';
	@override String get logOutTipsText => 'Будь ласка, зверніть увагу: згідно з документом, кожна перевірка входу в обліковий запис буде витрачати певну кількість ваших монет DTC, які будуть виплачені верифікатору в якості заохочення, тому не намагайтеся входити і виходити без необхідності, натиснувши на кнопку нижче, ви негайно вийдете з облікового запису.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Будь ласка, введіть "так", щоб підтвердити вихід.';
	@override String get tip => 'привертати увагу до чого-л.';
	@override String get cancel => 'скасування';
	@override String get close => 'згусток';
	@override String get selected => 'вибрано';
	@override String get edit => 'компілятор';
	@override String get submit => 'подати (звіт тощо)';
	@override String get goBack => 'регресія (у психології)';
	@override String get copiedToClipboard => 'Його було скопійовано до буфера обміну.';
	@override String get nickname => 'термін прихильності';
	@override String get confirm => 'розпізнати';
	@override String get cannotBeEmpty => 'Не може бути порожнім';
	@override String get deleteSuccessful => 'Видалено успішно!';
	@override String get successfullyModified => 'Модифікація пройшла успішно!';
	@override String get executionSuccessful => 'Реалізація пройшла успішно!';
	@override String get preview => 'попередні перегляди';
	@override String get followSystem => 'система подальших дій';
	@override String get change => 'варіація';
	@override String get replace => 'зміна (адреси тощо)';
	@override String get view => 'перевірте.';
	@override String get manage => 'управлінський';
	@override String get modify => 'модифікації';
	@override String get replacedSuccessfully => 'Заміна пройшла успішно!';
	@override String get authentication => 'аутентифікація';
	@override String get reacquire => 'отримати';
	@override String get tryAgain => 'Спробуй ще раз.';
	@override String get querying => 'Робляться запити ...';
	@override String get writingToOnChain_pleaseWait => 'Він записується в ланцюжок, будь ласка, зачекайте ...';
	@override String get versionCheck => 'визначення версії';
	@override String get alreadyLatestVersion => 'Вже остання версія!';
	@override String get foundNewVersion => 'Відкрийте для себе нову версію:';
	@override String get upgradeLink => 'Оновіть посилання:';
	@override String get deviceDescription => 'Опис обладнання.';
	@override String get notification30SecondsBeforeMiningStops => 'Виконайте нагадування про сповіщення за 30 секунд до припинення видобутку!';
	@override String get goMining => 'Почати майнінг';
	@override String get deltaMiningReminder => 'Нагадування про дельта-майнінг';
	@override String get clickToMine_miningIsAboutToStop => 'Натисніть тут, щоб майніти, майнінг скоро припиниться!';
	@override String get incorrect_input => 'Неправильний вхід!';
	@override String get are_you_sure_delete => 'Ви впевнені, що видалите?';
	@override String get delete_account => 'Видалити обліковий запис';
	@override String get how_to_operate_it => 'Дивіться, як ним керувати?';
	@override String get deletion_warning_tip => 'Якщо ви видалите свій обліковий запис, ви втратите всі монети Delta і всі прибутки від інших учасників також буде втрачено.';
	@override String get launchWhatsAppProgram => 'Запустити програму WhatsApp';
	@override String get sms => 'SMS';
	@override String get whatsApp_verification_tips => 'Номери доступу з цією піктограмою також підтримують перевірку повідомлень WhatsApp. Під час надсилання міжнародних повідомлень рекомендується використовувати WhatsApp, щоб підвищити рівень успіху та зменшити витрати.';
	@override String get ihaveSentVerificationString => 'Я надіслав рядок підтвердження';
	@override String get totalOfPeople => 'Усього осіб: ';
	@override String get numberOfPeopleMining => 'Кількість людей, що займаються майнінгом';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Ви можете використовувати браузер на іншому пристрої, щоб відсканувати QR-код і передати його програмі SMS';
	@override String get toggle => 'Переключити';
	@override String get DSMSverifier => 'Перевірка DSMS';
	@override String get activate => 'Активувати';
	@override String get activated => 'Активовано';
	@override String get generateActivationCommand => 'Створити команду активації';
	@override String get activationCommand => 'Команда активації';
	@override String get activationSentedTip => 'Після надсилання SMS-повідомлення про активацію перевірте статус активації на терміналі доступу.';
	@override String get biometricsNotEnabledTip => 'Біометрія (обличчя або відбиток пальця) не ввімкнена на вашому пристрої. Увімкніть її, щоб продовжити.';
	@override String get error => 'Помилка';
	@override String get exceptionOccurredWhenCallingBiometric => 'Виняток стався під час виклику біометричної функції (обличчя або відбиток пальця)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' номерів доступу перевірено, потрібно вибрати '),
		shouldNum,
		const TextSpan(text: '.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => 'Чи було надіслано ${text} на вказані вище номери доступу ${n}?';
	@override String get interface => 'Інтерфейс:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Час очікування або невідповідність номера відправника';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Мобільний номер учасника кола безпеки, який ви заповнили, не збігається: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Увійдіть протягом 10 хвилин після виходу, щоб уникнути двофакторної перевірки.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Потрібно вказати щонайменше ${n} номерів мобільних телефонів';
	@override String get noAccessNumberInYourRegionYet => 'У вашому регіоні ще немає номера доступу';
	@override String get notEnoughAccessNumbersInYourRegion => 'Недостатньо номерів доступу у вашому регіоні';
	@override String get tipsForDeployDSMSterminal => 'Система автоматично завантажила для вас деякі номери доступу з інших країн. Щоб надати кращі та дешевші послуги верифікації, рекомендується, щоб ви або ваша реферальна особа розгорнули термінал DSMS локально, щоб отримати комісію за верифікацію.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Ніхто не може надати мені код безпеки?';
	@override String get useSupplementalMode => 'Використовувати додатковий режим';
	@override String get returnToSecurityCodeMode => 'Повернутися до режиму коду безпеки';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Будь ласка, введіть відповідний номер мобільного телефону. Код країни можна опустити.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Номер мобільного телефону ${name} неправильний';
	@override String get matchingVerificationStrategyIs => 'Відповідна стратегія перевірки:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Баланс більше 3 ICP, наразі не потрібно заливати паливо';
	@override String get escrowAccount => 'Депонований рахунок';
	@override String get fuelRelay => 'Реле палива';
	@override String get pourFuel => 'Залити паливо';
	@override String get fuelState => 'Стан палива';
	@override String get pouringFuelTips => 'Заливка палива не принесе вам жодних переваг чи недоліків, її мета – збагатити досвід роботи з системою Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Спонсоруйте розробників, переглядаючи рекламу';
	@override String get status => 'статус';
	@override String get date => 'дата';
}

// Path: <root>
class _StringsVi implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsVi.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.vi,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <vi>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsVi _root = this; // ignore: unused_field

	// Translations
	@override String get home => 'trang đầu';
	@override String get switchLanguage => 'chuyển đổi ngôn ngữ';
	@override String get languageSwitch => 'chuyển đổi ngôn ngữ';
	@override String get slogan => 'Xây dựng vòng tròn kinh tế phi tập trung ở đồng bằng';
	@override String get countryRegionCode => 'Mã quốc gia';
	@override String get countryRegionSelection => 'Lựa chọn quốc gia và khu vực';
	@override String get nextStep => 'Bước tiếp theo';
	@override String get yourPhoneNumber => 'số điện thoại của bạn';
	@override String get pleaseSelectCountryAndRegion => 'Vui lòng chọn quốc gia/khu vực của bạn';
	@override String get pleaseEnterPhoneNumber => 'Vui lòng nhập số điện thoại hợp lệ!';
	@override String get referrerDid => 'Người giới thiệu ĐÃ LÀM';
	@override String get pleaseEnterTheReferrersDid => 'Vui lòng nhập id nhận dạng phi tập trung của người giới thiệu hợp lệ';
	@override String get thisDidIsInvalid => 'DID này không hợp lệ';
	@override String get nicknameFormatTips => 'biệt danh không được để trống và không được dài quá 16 ký tự';
	@override String get additionalIinformation => 'Thông tin bổ sung';
	@override String get invitationSubject => 'Mời bạn tham gia xây dựng sự đồng thuận của Delta';
	@override String invitationLetter({required Object did}) => 'Xin chào, tôi đang tham gia xây dựng sự đồng thuận của Delta! \n Delta là một nền tảng tiền kỹ thuật số mới nguồn mở chạy trên ICP. Nó có thể quản lý và sử dụng nhiều loại tiền kỹ thuật số khác nhau mà không cần mật khẩu, khóa riêng tư hoặc thuật nhớ. Vui lòng nhấp vào liên kết này https://delta.kim/auto/download để cài đặt ứng dụng và bây giờ bạn được mời tham gia xây dựng sự đồng thuận và đúc tiền. \n ID người giới thiệu: ${did}';
	@override String get dSMSverification => 'Xác minh DSMS';
	@override String get getAccessNumbers => 'Nhận một số số truy cập';
	@override String get getAccessNumberPromptMessage => 'Nhấp vào nút "Nhận" bên dưới để chọn nhóm số truy cập xác minh SMS trong hàng đợi.';
	@override String get optionalAccessNumbers => 'Số truy cập tùy chọn';
	@override String get accessNumber => 'số truy cập';
	@override String get TELCO => 'Toán tử';
	@override String get score => 'Điểm';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('vi'),
		one: () => TextSpan(children: [
			const TextSpan(text: 'Vui lòng kiểm tra '),
			nBuilder(n),
			const TextSpan(text: ' số truy cập và nhấp vào nút "'),
			span('text'),
			const TextSpan(text: '" để chuyển sang bước tiếp theo'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: 'Vui lòng kiểm tra '),
			nBuilder(n),
			const TextSpan(text: ' số truy cập và nhấp vào nút "'),
			span('text'),
			const TextSpan(text: '" để chuyển sang bước tiếp theo.'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta là một dự án thử nghiệm tiền kỹ thuật số toàn cầu phi tập trung nguồn mở và chuỗi sinh thái ứng dụng tiền tệ.';
	@override String get deltaGoalsDesc => 'Mục tiêu là cho phép mọi người sử dụng Delta để cùng nhau xây dựng một loại tiền kỹ thuật số mới phổ biến, công bằng, an toàn, nhanh chóng và xanh. Và cung cấp các kịch bản ứng dụng hiệu quả khác nhau cho các loại tiền kỹ thuật số này và các loại tiền điện tử trước đó.';
	@override String get details => 'Chi tiết';
	@override String get get => 'Lấy';
	@override String get select => 'chọn';
	@override String get send => 'gửi';
	@override String get complete => 'Hoàn thành';
	@override String get selectedAccessNumberPrompt => 'Khi được chọn, số truy cập đầy đủ sẽ được hiển thị và chuỗi xác minh sẽ được tạo.';
	@override String get location => 'Vị trí';
	@override String get verificationString => 'Chuỗi xác thực';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: 'Vui lòng sử dụng số điện thoại '),
		num,
		const TextSpan(text: ' của bạn và gửi '),
		label,
		const TextSpan(text: ' đến '),
		accessNumber,
		const TextSpan(text: ' để hoàn tất xác minh.'),
	]);
	@override String get ihaveSentTheSMS => 'Tôi đã gửi một tin nhắn văn bản';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: 'Chuỗi xác minh có hiệu lực trong vòng 6 phút, thời gian còn lại: '),
		time,
		const TextSpan(text: '.'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => 'Quá nhanh, hãy đợi ${x} giây trước khi tiếp tục!';
	@override String get waitingForVerificationSMS => 'Đang chờ SMS xác minh...';
	@override String get partSuccsForVerificationSMS => 'Việc xác minh SMS của một trong các thiết bị đầu cuối truy cập đã thành công!';
	@override String get creatingAccessToken => 'Đang tạo mã thông báo truy cập...';
	@override String get intoDelta => 'Vào vùng đồng bằng';
	@override String get deltaAccountIsLoggedIn => 'Tài khoản Delta của bạn đã được đăng nhập';
	@override String get iHavLoggedOut => 'Tôi đã đăng xuất';
	@override String get startTwoFactorVerification => 'Bắt đầu xác minh hai bước';
	@override String get securityCircleVerification => 'Xác minh vòng kết nối bảo mật';
	@override String get generateSecurityCode => 'Tạo mã bảo mật';
	@override String get generateSecurityCodeHintText => 'Mã bảo mật được tạo sẽ được gửi đến thành viên được chọn ngẫu nhiên trong vòng kết nối bảo mật của bạn.';
	@override String get notSetSecurityCircleEnterPlaceholderTip => 'Bạn chưa thiết lập vòng tròn bảo mật. Tài khoản của bạn rất không an toàn. Vui lòng nhập bất kỳ phần giữ chỗ 6 chữ số nào và chuyển sang bước tiếp theo.';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => 'Mã bảo mật đã được tạo. Vui lòng liên hệ với người thân, bạn bè sau để yêu cầu họ trích xuất mã bảo mật để bạn vượt qua xác minh. Có hiệu lực trong vòng 30 phút!';
	@override String get itGetSecurityCodeTip => 'Mẹo: Tìm biệt hiệu tài khoản của bạn trong Ứng dụng Delta->Menu->Cung cấp trang Bảo mật và nhấp đúp vào tên đó để lấy mã bảo mật.';
	@override String get securityCircleMemberList => 'Danh sách thành viên vòng kết nối bảo mật:';
	@override String get selectA_friendToProvideSecurityCodeTip => 'Vui lòng chọn người thân hoặc bạn bè trong danh sách thành viên để tạo và cung cấp cho bạn mã bảo mật nhằm xác minh danh tính thực sự của bạn. Mục đích là để tránh bị người khác kiểm soát tài khoản khi số điện thoại di động bị mất hoặc bị đánh cắp.';
	@override String formatIsXdigits({required Object num}) => 'Định dạng là ${num} chữ số';
	@override String get signInSuccessfully => 'Đăng nhập thành công!';
	@override String get twoFAandLogin => 'Xác minh hai bước và đăng nhập';
	@override String get verificationSuccessful => 'Xác minh thành công!';
	@override String get validationFailed => 'Xác minh không thành công!';
	@override String get dappInfo => 'Thông tin DApp';
	@override String get securityCircle => 'vòng tròn an toàn';
	@override String get securityCode => 'mã bảo mật';
	@override String get provideSecurity => 'cung cấp an ninh';
	@override String get addManully => 'Thêm thủ công';
	@override String get addFromContacts => 'Thêm từ sổ địa chỉ';
	@override String get addSecurityCircle => 'Thêm vòng tròn an toàn';
	@override String get inputType => 'kiểu đầu vào';
	@override String get mobileNumber => 'số điện thoại';
	@override String get did => 'mã địa chỉ';
	@override String get pleaseEnterValidDID => 'Vui lòng nhập id nhận dạng phi tập trung hợp lệ';
	@override String get pleaseEnterValidWalletAddress => 'Vui lòng nhập địa chỉ ví hợp lệ';
	@override String get appellation => 'tiêu đề';
	@override String get appellationHint => 'Bạn gọi nó là gì, như "em bé"';
	@override String get addSecurityCircleTips => 'Vui lòng không thêm những người bạn không tin tưởng vào vòng tròn an toàn của mình.';
	@override String get referralTeam => 'Đội được đề xuất';
	@override String get profile => 'Thông tin tài khoản';
	@override String get menu => 'thực đơn';
	@override String get directly => 'trực tiếp';
	@override String get indirectly => 'gián tiếp';
	@override String get inviteContacts => 'Mời liên hệ';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Người mời của bạn là '),
		nickname,
		const TextSpan(text: ' và bạn đã trực tiếp giới thiệu '),
		num1,
		const TextSpan(text: ' người, trong đó '),
		num2,
		const TextSpan(text: ' hiện đang trực tuyến.'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: 'Bạn đã gián tiếp giới thiệu '),
		num1,
		const TextSpan(text: ' người, trong đó '),
		num2,
		const TextSpan(text: ' hiện đang trực tuyến.'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: 'Mời bạn bè tham gia Delta và cùng nhau nâng cao sự đồng thuận trong xã hội. Mỗi đề xuất trực tiếp của một người sẽ làm tăng tỷ lệ khai thác lên '),
		rate1,
		const TextSpan(text: ' so với tỷ lệ cơ bản. '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: 'Mời bạn bè tham gia Delta và cùng nhau cải thiện sự đồng thuận trong xã hội. Mỗi đề xuất gián tiếp của một người sẽ tăng tỷ lệ khai thác thêm '),
		rate2,
		const TextSpan(text: ' so với tỷ lệ cơ bản.'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => 'Bạn có chắc chắn muốn xóa "${name}" không?';
	@override String get safetyCircleRoleQ => 'Chức năng của vòng tròn an toàn là gì?';
	@override String get safetyCircleRoleA => 'Cung cấp xác thực hai yếu tố trong các tình huống nhạy cảm để bảo vệ an ninh tài khoản của bạn.';
	@override String get howSecurityCirclesWorkQ => 'Vòng tròn an toàn hoạt động như thế nào?';
	@override String get howSecurityCirclesWorkA => 'Khi cần có vòng tròn bảo mật để xác minh, chương trình hợp đồng thông minh Delta sẽ chọn ngẫu nhiên một thành viên từ danh sách bạn bè của vòng tròn bảo mật để giúp bạn cung cấp mã bảo mật để hoàn tất xác minh bảo mật danh tính cho bạn. Khi bạn yêu cầu thành viên nhập mã bảo mật, thành viên đó có thể xác nhận rằng đó chính là bạn. Đồng thời chương trình sẽ nhắc: “Từ chối cung cấp mã bảo mật nếu không phải bạn” để bảo vệ tính bảo mật cho tài khoản của bạn. Vì vậy, bạn phải luôn đảm bảo rằng các thành viên trong vòng an toàn của bạn là những người bạn có thể tin tưởng.';
	@override String get securityCircleBeUsedQ => 'Khi nào nó sẽ được sử dụng?';
	@override String get securityCircleBeUsedA1 => '1. Khi Delta APP của bạn mất quyền kiểm soát, nguyên nhân thường là do điện thoại bị mất hoặc bị đánh cắp.';
	@override String get securityCircleBeUsedA2 => '2. Trong trường hợp xảy ra một số hoạt động nhạy cảm, chương trình hợp đồng thông minh Delta cần xác nhận rằng đó là bạn.';
	@override String get provideSafetyTip1 => 'Khi bạn của bạn hỏi bạn mã bảo mật của họ, hãy nhớ xác nhận rằng đó chính là họ.';
	@override String get provideSafetyTip2 => 'Bạn đang cung cấp sự bảo vệ an ninh cho những người bạn trên. Họ đã đặt bạn là người đáng tin cậy nhất trong vòng bảo mật và yêu cầu bạn cung cấp xác nhận bảo mật cho họ khi tài khoản của họ gặp phải các hoạt động nhạy cảm.';
	@override String get provideSafetyTip3 => 'Bấm đúp vào hình đại diện của bên kia để trích xuất mã bảo mật khi cần.';
	@override String get doesNotSecurityCodeNeedsRetrieved => 'Bên kia hiện tại không có mã bảo mật cần lấy lại!';
	@override String get existSecurityCodeTip => 'Hãy chắc chắn xác nhận rằng người thân hoặc bạn bè yêu cầu mã bảo mật từ bạn là người thân hoặc bạn bè của bạn. Để bảo vệ sự an toàn của người thân hoặc bạn bè của bạn, bạn nên từ chối cung cấp mã đó nếu đó không phải là người thân hoặc bạn bè.';
	@override String get avatarSettings => 'Cài đặt hình đại diện';
	@override String get NFTAvatarPropertyRightsText => 'Tuyên bố: Việc sử dụng NFT có liên quan làm hình đại diện chỉ nhằm mục đích sở thích cá nhân và không liên quan gì đến việc sở hữu quyền sở hữu trí tuệ của NFT.';
	@override String get projectWebsite => 'Trang web dự án:';
	@override String get whitepaper => 'giấy trắng:';
	@override String get indexID => 'Id chỉ mục';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => 'Phạm vi chỉ mục nằm trong khoảng từ ${start} đến ${end}';
	@override String get inputToLoadNFTAvatarTip => 'Nhập ID chỉ mục của NFT yêu thích của bạn và chương trình sẽ tự động tải nó làm hình đại diện cho bạn.';
	@override String get miningRate => 'Tỷ lệ khai thác';
	@override String get miningDetails => 'Chi tiết khai thác';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: 'Tổng tốc độ khai thác: '),
		rate,
		const TextSpan(text: ' δ/ngày'),
	]);
	@override String get EndOfMiningSession => 'Khai thác cuối chu kỳ:';
	@override String get tapToMineDeltaCoin => 'Nhấp để khai thác Delta Coin ↑';
	@override String get clickToStartMining => 'Nhấp để bắt đầu khai thác!';
	@override String get miningHasStoppedPromptDesc => 'Quá trình khai thác đã dừng lại. Cứ sau 24 giờ là một chu kỳ khai thác. Nhấp vào biểu tượng tia sét để bắt đầu một vòng khai thác mới. Hoạt động khai thác của Delta là một cơ chế phân phối không tiêu tốn thêm sức mạnh tính toán và lưu lượng mạng từ thiết bị của bạn.';
	@override String get aboutBaseRate => 'Còn lãi suất cơ bản thì sao?';
	@override String get baseRateDescription => 'Theo sách trắng, quy tắc giảm lãi suất cơ bản của khai thác Delta sẽ được chia thành hai giai đoạn. \nĐợt 1: Khi số lượng người tham gia (đăng ký) từ 3000 trở xuống thì lãi suất là 32δ/ngày. Sử dụng điều này làm mức cơ bản ban đầu, mỗi khi số lượng người tăng lên 10 lần, tỷ lệ cơ bản sẽ giảm đi một nửa. \nGiai đoạn 2: Khi số lượng người tham gia đạt từ 30 triệu trở lên, tỷ lệ cơ bản giảm một nửa mỗi khi số lượng người tham gia tăng gấp 3 lần. Việc sản xuất bị dừng lại cho đến khi cuộc khai quật cuối cùng hoàn thành.';
	@override String get baseRate => 'lãi suất cơ bản';
	@override String get directReferralRewards => 'Phần thưởng giới thiệu trực tiếp';
	@override String get directReferralRewardDesc => 'Đối với mỗi người mà bạn trực tiếp giới thiệu, khi họ ở trạng thái khai thác, tốc độ khai thác của bạn sẽ tăng thêm 1/3 tốc độ cơ bản.\n\n Ngoài ra, trạng thái khai thác của người giới thiệu cũng sẽ được tính vào phần thưởng giới thiệu trực tiếp của bạn.';
	@override String get indirectReferralRewards => 'Phần thưởng giới thiệu gián tiếp';
	@override String get indirectReferralRewardDesc => 'Khi người giới thiệu gián tiếp ở trạng thái khai thác, tỷ lệ khai thác của bạn sẽ tăng thêm 1/10 so với tỷ lệ cơ bản.\n\n Nhóm giới thiệu trực tiếp của bạn, mỗi người họ giới thiệu đại diện cho một giới thiệu gián tiếp cho bạn.';
	@override String get mine => 'Khai thác mỏ';
	@override String get thisMiningInformation => 'Thông tin khai thác này';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Đã tham gia khai thác: '),
		x,
		const TextSpan(text: ' lần'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Tổng thu nhập lần này: '),
		x,
		const TextSpan(text: ' Đồng tiền Delta'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Thu nhập cơ bản: '),
		x,
		const TextSpan(text: ' xu'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Đóng góp trực tiếp của nhóm: '),
		x,
		const TextSpan(text: ' xu'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Đóng góp gián tiếp của nhóm: '),
		x,
		const TextSpan(text: ' xu'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Khoảng thời gian kể từ lần khai thác cuối cùng: '),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: 'Thời gian khai thác hiệu quả: '),
		x,
	]);
	@override String xhours({required Object x}) => '${x} giờ';
	@override String get keep3_5peopleInTheSafetyCircleTip => 'Để bảo mật tài sản, các thành viên vòng tròn bảo mật nên luôn giữ 3-5 người đáng tin cậy.';
	@override String get index => 'chỉ mục';
	@override String get amount => 'Số lượng';
	@override String get balance => 'cân bằng';
	@override String get timeStamp => 'Dấu thời gian';
	@override String get summary => 'bản tóm tắt';
	@override String get miningHasStopped => 'Khai thác đã dừng lại.';
	@override String get miningHasStoppedDesc => 'Việc khai thác của bạn hiện đã bị dừng, hãy bắt đầu kiếm thu nhập ngay lập tức.';
	@override String get startMining => 'Bắt đầu khai thác';
	@override String get changeMobileNumber => 'Thay đổi số điện thoại di động';
	@override String get currentMobileNumber => 'Số điện thoại di động hiện tại';
	@override String get newMobileNumber => 'số điện thoại di động mới';
	@override String get securityCodeFormatIs6digits => 'Định dạng mã bảo mật là 6 chữ số!';
	@override String get startVrification => 'Bắt đầu xác minh';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => 'Số điện thoại di động này đã tồn tại, được liên kết DID: ${dId}';
	@override String get noDataYet => 'Chưa có dữ liệu';
	@override String get previousMobileNumber => 'Số điện thoại di động trước đó';
	@override String get changeLog => 'Lịch sử thay đổi';
	@override String get referralLinkToShare => 'Chia sẻ liên kết được đề xuất';
	@override String get referrer => 'người giới thiệu';
	@override String get isoCountryCode => 'Mã quốc gia ISO';
	@override String get avatarLogo => 'Biểu tượng hình đại diện';
	@override String get creationTime => 'thời gian sáng tạo';
	@override String get lastUpdate => 'cập nhật lần cuối';
	@override String get numberOfSecurityCircleMembers => 'Số lượng thành viên vòng tròn an toàn';
	@override String get theLatestMining => 'Khai thác mới nhất';
	@override String get effectiveMiningDays => 'Số ngày khai thác hiệu quả';
	@override String get modifyNickname => 'Sửa đổi biệt hiệu';
	@override String get didNotChange => 'Không có gì thay đổi!';
	@override String get kycVerification => 'Xác minh KYC';
	@override String get faceID => 'ID khuôn mặt';
	@override String get touchID => 'ID vân tay';
	@override String get biometricsAuthorizationTest => 'Kiểm tra xác thực sinh trắc học';
	@override String get currentState => 'Tình trạng hiện tại';
	@override String get biometricsAuthenticationLocalizedReason => 'Sử dụng chức năng mở khóa của thiết bị để xác minh danh tính của bạn.';
	@override String get graph => 'tập bản đồ';
	@override String get referralRelationshipGraph => 'Biểu đồ mối quan hệ giới thiệu';
	@override String get nativeContacts => 'liên hệ địa phương';
	@override String get registrationAndMiningTrends => 'Xu hướng đăng ký và khai thác';
	@override String get inMining => 'Khai thác mỏ';
	@override String get registrationVolume => 'Số lượng đăng ký';
	@override String get unmined => 'chưa được khai thác';
	@override String get mined => 'được khai thác';
	@override String get communityMining => 'khai thác cộng đồng';
	@override String get consensusPromotionFund => 'Quỹ xúc tiến đồng thuận';
	@override String get ecologicalAwardFund => 'Quỹ giải thưởng sinh thái';
	@override String get icpFuelCrowdfunding => 'Huy động vốn từ cộng đồng nhiên liệu ICP';
	@override String get coreDeveloperRewards => 'Phần thưởng dành cho nhà phát triển cốt lõi';
	@override String get totalAllocation => 'Tổng phân bổ';
	@override String get miningRatio => 'Tỷ lệ khai thác';
	@override Map<String, String> get billion => {
		'30': '30 tỷ',
		'60': '60 tỷ',
		'180': '180 tỷ',
		'300': '300 tỷ',
	};
	@override String get watchAdsToSupportDevelopers => 'Xem quảng cáo để hỗ trợ nhà phát triển';
	@override String get loadingAdcomponents => 'Đang tải các thành phần quảng cáo...';
	@override String get timeIsNotUp => 'Thời cơ vẫn chưa đến!';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => 'Tải không thành công, mạng có thể bị chặn!';
	@override String get pendingUSCTrecords => 'Hồ sơ USCT đang chờ xử lý';
	@override String get pendingUSCTrecordsDesc => 'Các hồ sơ USCT đang chờ xử lý sẽ được so sánh với nền tảng quảng cáo trong vòng 15-30 ngày để xác nhận. Các hồ sơ hợp lệ sẽ được chuyển vào danh sách hồ sơ USCT và số tiền USCT tương ứng sẽ được cộng vào số dư tài khoản.';
	@override String get validity => 'hiệu quả';
	@override String get advertiser => 'Nhà quảng cáo';
	@override String get earned => 'kiếm được';
	@override String get withdraw => 'Rút tiền mặt';
	@override String get validUSCTrecords => 'Hồ sơ USCT hợp lệ';
	@override String get USCTmining => 'Khai thác USCT';
	@override String get aboutUSCTmining => 'Giới thiệu về khai thác USCT?';
	@override String get aboutUSCTminingItme1 => '1. USDT là loại tiền tệ ổn định bằng đô la Mỹ phổ biến trên toàn cầu, có thể dễ dàng chuyển đổi thành tiền tệ có chủ quyền của nhiều quốc gia khác nhau trên các sàn giao dịch tiền điện tử chính thống trên toàn thế giới.';
	@override String get aboutUSCTminingItme2 => '2. USCT là giá trị đo tạm thời của thu nhập khai thác USCT, tên đầy đủ là tín dụng USD, có thể chuyển đổi thành USDT theo số tiền thanh toán thực tế và quy tắc phân phối của nền tảng quảng cáo và theo tỷ lệ tương ứng.';
	@override String get aboutUSCTminingItme3 => '3. Khai thác USCT là chức năng kiếm tiền từ quảng cáo lưu lượng truy cập của cộng đồng Delta. Tận dụng cơ sở người dùng lớn của cộng đồng Delta để mang lại nhiều lợi ích cho nhà quảng cáo, nhà phát triển và nhà thầu Delta. Mục đích thiết kế của nó là cung cấp một lượng thu nhập hiệu quả nhất định cho những người vắng mặt trong giai đoạn đầu khi hệ sinh thái Delta chưa hình thành và thịnh vượng, đồng thời, nó cũng cung cấp cho các nhà phát triển một số hỗ trợ tài chính nhất định để đảm bảo rằng các nhà phát triển có thể tiếp tục cung cấp; dịch vụ phát triển lâu dài và cuối cùng có thể Hiện thực hóa tất cả các kế hoạch trong sách trắng; đồng thời cung cấp một kênh quảng bá hiệu quả cho các nhà quảng cáo sản phẩm.';
	@override String get aboutUSCTminingItme4 => '4. Quy tắc phân phối được thiết kế sao cho 40% tổng doanh thu được sử dụng làm hoa hồng dịch vụ kỹ thuật của nhà phát triển và 60% còn lại được sử dụng làm phần thưởng cho sự vắng mặt của cộng đồng. Phần thưởng vắng mặt áp dụng mô hình phân phối đa cấp tương tự như DTC. Phần thưởng vắng mặt này được chia thành 3 phần theo tỷ lệ 6:3:1. vắng mặt đang xem quảng cáo, 3 điểm được phân bổ cho người giới thiệu cấp trên và 1 điểm cho người giới thiệu cấp hai. Theo cách tương tự, nếu bạn bè mà bạn giới thiệu tôi thông qua USCT, bạn cũng có thể nhận được phần thưởng tương tự cho người giới thiệu. Ưu điểm của việc phân phối đa cấp như vậy là bất kỳ ai cũng có thể nhận được số tiền thu nhập USDT tương đối lớn bằng cách phát triển một nhóm ngoại tuyến.';
	@override String get aboutUSCTminingItme5 => '5. Chu kỳ thanh toán là 7 ngày, nghĩa là tính hợp lệ được kiểm tra với nền tảng quảng cáo 7 ngày một lần, doanh thu và số tiền thực tế được xác nhận là hợp lệ sẽ được ghi vào số dư. Số tiền tối thiểu cho mỗi lần rút là 10 USDT.';
	@override String linesXtoY({required Object x, required Object y}) => 'Các dòng ${x} tới ${y}';
	@override String get wallet => 'cái ví';
	@override String get multiChainWallet => 'Ví nhiều chuỗi';
	@override String get deposit => 'Tiền gửi';
	@override String get transfer => 'chuyển khoản';
	@override String xcoinInWallet({required Object coinCode}) => '${coinCode} trong địa chỉ ví';
	@override String get transactions => 'lịch sử giao dịch';
	@override String get network => 'mạng';
	@override String get walletAddress => 'địa chỉ ví';
	@override String get currentAddress => 'địa chỉ hiện tại';
	@override String get depositAddress => 'Địa chỉ nạp tiền';
	@override String get receivingMoneyAddress => 'Địa chỉ thanh toán';
	@override String get applyTempDepositAddress => 'Đăng ký địa chỉ nạp tiền tạm thời';
	@override String get tempDepositAddressTip => '1. Đây là địa chỉ gửi tiền chung. Vui lòng không đặt cọc số tiền sau khi hợp đồng thuê hết hạn hoặc không bị ràng buộc. Nếu điều này xảy ra, số tiền sẽ bị mất.';
	@override String get tempDepositAddressTip2 => '2. Trước khi gửi tiền, vui lòng đảm bảo rằng [tên chuỗi] và [tên tiền tệ] hoàn toàn khớp nhau; nếu đó là mã thông báo hợp đồng, bạn cũng cần xác nhận rằng [tiêu chuẩn hợp đồng] và [địa chỉ hợp đồng] hoàn toàn khớp nhau.';
	@override String get tempDepositAddressTip3 => '3. Vui lòng không cố gắng gửi số tiền không khớp với bất kỳ thông số nào trong các mẹo trên, nếu không số tiền sẽ bị mất.';
	@override String get tempDepositAddressTip4 => '4. Nếu bạn cần gửi các loại tài sản khác, vui lòng chuyển sang trang tiền tệ tương ứng và các tùy chọn tham số để đăng ký địa chỉ mới.';
	@override String get applyExtensionOfValidity => 'Xin gia hạn thời hạn hiệu lực';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap }) => TextSpan(children: [
		const TextSpan(text: 'Địa chỉ sẽ hết hạn sau '),
		diff,
		const TextSpan(text: ' và bạn có thể '),
		tap ('gia hạn thủ công'),
		const TextSpan(text: ' thời hạn hiệu lực trong vòng 12 giờ trước khi hết hạn.'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => 'Chỉ có thể gia hạn trước 12 giờ';
	@override String get theReceivingAddressValidForLongtime => 'Địa chỉ thanh toán này có giá trị trong một thời gian dài.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => 'Địa chỉ thanh toán này có hiệu lực trong thời gian dài và sẽ được ghi có tự động theo thời gian thực.';
	@override String get confirmDeposited => 'Xác nhận đã gửi tiền';
	@override String get unbindThisDepositAddress => 'Hủy liên kết địa chỉ nạp tiền';
	@override String get confirmDepositedTip => 'Nếu tiền đã được chuyển, vui lòng nhấp vào nút trên để kích hoạt tài khoản vào ví sau 10 phút.';
	@override String get unbindDepositAddressTip => 'Để giảm chi phí hoạt động của hợp đồng thông minh, nếu không có thêm tiền nào được gửi trong thời hạn hiệu lực, vui lòng hủy liên kết địa chỉ nạp tiền.';
	@override String get transferToAddress => 'Đi đến địa chỉ';
	@override String get longPressToPaste => 'Nhấn và giữ để dán';
	@override String get all => 'tất cả';
	@override String balanceX({required Object x}) => 'Số dư ${x}';
	@override String get transferOut => 'chuyển ra ngoài';
	@override String depositXcoins({required Object x}) => 'Gửi ${x}';
	@override String get sender => 'người gửi';
	@override String get recipient => 'người nhận';
	@override String get memo => 'Nhận xét';
	@override String get kind => 'Đường';
	@override String get transferAmountExceedsAvailableBalance => 'Số tiền chuyển vượt quá số dư khả dụng';
	@override String get pleaseEnterValidAmount => 'Vui lòng nhập số tiền hợp lệ';
	@override String get networkFee => 'Phí xử lý mạng';
	@override String get fee => 'phí xử lý';
	@override String validLengthXcharacters({required Object x}) => 'Độ dài hiệu dụng của địa chỉ là ${x} ký tự';
	@override String get historys => 'Lịch sử';
	@override String get dtcCreditdetail => 'Chi tiết điểm Delta';
	@override String get usdCreditdetail => 'Chi tiết điểm USD';
	@override String get dappSquare => 'Quảng trường dApp';
	@override String get amountRaised => 'Số tiền huy động';
	@override String get disbursedAmount => 'Số tiền giải ngân';
	@override String get participationTimes => 'Số lượng người tham gia';
	@override String get completionRate => 'tỷ lệ hoàn thành';
	@override String get exchangeRate => 'tỷ giá hối đoái';
	@override String get icpCrowdfunding => 'Gây quỹ cộng đồng ICP';
	@override String get crowdfunding => 'Huy động vốn từ cộng đồng';
	@override String get trendsCurve => 'đường cong xu hướng';
	@override String get fullScreenView => 'xem toàn màn hình';
	@override String get walletBalance => 'Số dư trên ví:';
	@override String get manageWallet => 'Quản lý ví';
	@override String get fundraiseAmount => 'Số vốn huy động được';
	@override String get exchangeRewardAmount => 'Đổi số tiền thưởng';
	@override String get fundraise => 'gây quỹ';
	@override String rangeIntegersX({required Object x}) => 'Phạm vi: Số nguyên ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => 'Đã tham gia gây quỹ thành công và nhận được phần thưởng ${amount}DTCT';
	@override String get amountSummary => 'Tóm tắt số tiền';
	@override String get changePreferred => 'Thay đổi tùy chọn';
	@override String get changePreferredAddress => 'Thay đổi địa chỉ ưa thích';
	@override String get preferredAddressTip => 'Khi nhận tiền bằng số điện thoại di động đã đăng ký hoặc DID, tiền sẽ tự động được chuyển đến địa chỉ ưa thích.';
	@override String get newAddress => 'Địa chỉ mới';
	@override String get newAddressTip => 'Để tránh lạm dụng, khi có nhiều hơn một địa chỉ ví, mỗi địa chỉ mới được tạo sẽ bị tính phí giao dịch.';
	@override String get createNew => 'Mới';
	@override String get chainNetworkName => 'Tên mạng chuỗi';
	@override String get from => 'từ';
	@override String get to => 'đến';
	@override String get noAvailableDepositAmountDetected => 'Không phát hiện thấy số tiền gửi có sẵn nào!';
	@override String get crossChainReceiveMoneyMonitoring => 'Thanh toán xuyên chuỗi đang được theo dõi...';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Đã nhận('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: 'Đang xác nhận('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => 'Những điều cần lưu ý (phải đọc cho người mới)';
	@override String get whyUseSharedAddresses => 'Tại sao nên sử dụng địa chỉ dùng chung?';
	@override String get useSharedrAdvantage => 'Khi thực hiện gửi tiền xuyên chuỗi, lợi ích của việc sử dụng địa chỉ dùng chung như sau:';
	@override String get useSharedrAdvantage1 => '1. Giảm lãng phí phí ​​chuyển khoản và giảm chi phí người dùng. Bởi vì nếu sử dụng một địa chỉ độc quyền, số tiền sẽ bị phân tán quá mức. Nói chung, để tạo điều kiện cho những người dùng khác chuyển ra sau khi rút tiền mặt, khi người dùng nạp tiền, họ cần thu số tiền chuyển thứ cấp thành một hoặc một số ít. địa chỉ để quản lý.';
	@override String get useSharedrAdvantage2 => '2. Trong giải pháp chia sẻ, chương trình chỉ cần duy trì một nhóm địa chỉ tương đối nhỏ, có thể nhanh chóng khớp với số tiền gửi đi và thực hiện giám sát bộ sưu tập nhẹ, có thể giảm chi phí tài nguyên máy tính. Ngược lại, với các địa chỉ độc quyền, tình hình hoàn toàn ngược lại.';
	@override String get tokenType => 'Loại mã thông báo';
	@override String get contract => 'hợp đồng';
	@override String get contractStandard => 'tiêu chuẩn hợp đồng';
	@override String get contractAddress => 'Địa chỉ hợp đồng';
	@override String get native => 'Tự nhiên';
	@override String get confirmUnbindingPleaseEnterYes => 'Để xác nhận hủy ràng buộc, vui lòng nhập "có"';
	@override String get listAllWorkingTempReceivingAddresses => 'Liệt kê tất cả các địa chỉ nạp tiền xuyên chuỗi đang hoạt động';
	@override String get setNote => 'Đặt ghi chú';
	@override String lengthCannotExceedXbytes({required Object x}) => 'Độ dài không thể vượt quá ${x} byte';
	@override String get transferFee => 'phí chuyển nhượng';
	@override String get crossChainFee => 'Phí xuyên chuỗi';
	@override String get crossChainTransferOutError => 'Lỗi chuyển chuỗi chéo';
	@override String get chainName => 'Tên chuỗi';
	@override String get message => 'thông tin';
	@override String get dontShowAgain => 'Không hiển thị lại';
	@override String get queuing => 'trong hàng đợi';
	@override String get optional => 'Không bắt buộc';
	@override String get publiclyVisible => 'hiển thị công khai';
	@override String get rates => 'Tỷ lệ';
	@override String get minimum => 'tối thiểu';
	@override String get maximum => 'tối đa';
	@override String get minimumBlockConfirmations => 'Số lượng xác nhận khối tối thiểu';
	@override String get dsmsVerifyTerminal => 'Thiết bị đầu cuối xác minh DSMS';
	@override String get overall => 'tổng thể';
	@override String get my => 'của tôi';
	@override String get checkValidatorQualifications => 'Kiểm tra tính đủ điều kiện của quyền xác thực';
	@override String get getVerifierPermissions => 'Nhận quyền của người chứng nhận';
	@override String get qualification => 'Trình độ chuyên môn';
	@override String get upperLimit => 'giới hạn trên';
	@override String get maximumNumberOfTerminalsAllowedToAccess => 'Giới hạn trên của số lượng thiết bị đầu cuối được phép truy cập';
	@override String get numberOfExistingAccessTerminals => 'Số lượng thiết bị đầu cuối truy cập hiện có';
	@override String get applyingForDSMSVerifierPermissionsTips => 'Trước khi đăng ký quyền xác minh, bạn cần chuẩn bị một điện thoại Android nhàn rỗi và số truy cập chuyên dụng, đồng thời tải xuống và cài đặt ứng dụng đầu cuối truy cập DSMS.';
	@override String get downloadLink => 'Liên kết tải xuống';
	@override String get alreadyReadyFollowingTheAboveTips => 'Sẵn sàng theo những lời khuyên trên';
	@override String get globalUniversal => 'Phổ quát';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: 'Hiện không có đủ người xác minh địa phương để tham gia dịch vụ truy cập xác minh DSMS. Vui lòng chọn "'),
		gu,
		const TextSpan(text: '" để truy cập dịch vụ.'),
	]);
	@override String get asDedicatedNumberForAccess => 'Là số truy cập chuyên dụng';
	@override String pleaseCheckTip({required Object tip}) => 'Vui lòng kiểm tra "${tip}"';
	@override String get inputLengthTooShort => 'Độ dài đầu vào quá ngắn';
	@override String get shortName => 'viết tắt';
	@override String pleaseEnterXname({required Object name}) => 'Vui lòng nhập ${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => 'Đang gửi đơn đăng ký, vui lòng đợi...';
	@override String get applyForDSMSVerifierPermission => 'Xin giấy phép xác minh DSMS';
	@override String get confirmInformation => 'Xác nhận thông tin';
	@override String get lastHeartbeat => 'nhịp tim cuối cùng';
	@override String get expirationTime => 'Thời gian hết hạn';
	@override String get country => 'Quốc gia';
	@override String get accessTerminals => 'truy cập thiết bị đầu cuối';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'Tổng số thiết bị đầu cuối số truy cập DSMS';
	@override String get textContent => 'nội dung văn bản';
	@override String get scanQRcodeToLogin => 'Quét mã để đăng nhập';
	@override String get confirmLogin => 'Xác nhận đăng nhập';
	@override String get authorizeSubApplicationToLogin => 'Cho phép ứng dụng phụ đăng nhập';
	@override String get authorizationSuccessful => 'Ủy quyền thành công!';
	@override String get launchSMSprogram => 'Bắt đầu chương trình SMS';
	@override String get notApplied => 'Không có ứng dụng';
	@override String get validityPeriod => 'Thời hạn hiệu lực';
	@override String get renewal => 'Gia hạn';
	@override String get scanCodeToAuthorizeTerminalLogin => 'Quét mã để cho phép đăng nhập thiết bị đầu cuối';
	@override String get rewards => 'phần thưởng';
	@override String get roles => 'Vai trò';
	@override String get developerCenter => 'Trung tâm nhà phát triển';
	@override String get appName => 'Tên ứng dụng';
	@override String get pleaseSelect => 'Vui lòng chọn';
	@override String get category => 'Loại';
	@override String get keywords => 'từ khóa';
	@override String get pleaseEnterAkeyword => 'Vui lòng nhập từ khóa';
	@override String get createApplication => 'Tạo ứng dụng';
	@override String get appType => 'Loại ứng dụng';
	@override String get numberOfCategoriesMustBetween1and3 => 'Số lượng danh mục phải nằm trong khoảng từ 1 đến 3';
	@override String get appLogoSpecifications => 'Định dạng ảnh: png, kích thước: trong vòng 100KB, độ phân giải (pixel): 256*256';
	@override String get localAlbum => 'Album ảnh địa phương';
	@override String get networkPath => 'đường dẫn mạng';
	@override String get imageURLkAddress => 'Địa chỉ URL hình ảnh';
	@override String get urlAddressFormatIsIncorrect => 'Định dạng địa chỉ URL không chính xác';
	@override String get imageFormatOnlySupportsPng => 'Hình ảnh chỉ hỗ trợ định dạng "png".';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => 'Độ dài phải nằm trong khoảng ${a}-${b} ký tự';
	@override String get introduction => 'Giới thiệu';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => 'Kích thước hình ảnh không được lớn hơn ${a}, hiện tại là ${b}';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => 'Độ phân giải của hình ảnh phải là: ${p1} (pixel), hiện tại là ${p2}';
	@override String get becomeDeveloper => 'Trở thành nhà phát triển';
	@override String get developerInformation => 'Thông tin nhà phát triển';
	@override String get teamName => 'Tên đội';
	@override String get website => 'trang web';
	@override String get other => 'khác';
	@override String get githubVerification => 'Xác minh Github';
	@override String get exampleUrl => 'Ví dụUrl';
	@override String githubVerificationTip({required Object did}) => 'Vui lòng sử dụng tài khoản GitHub của bạn để tạo tệp \'delta.did\' trong kho lưu trữ với nội dung \'${did}\', sau đó dán địa chỉ URL githubusercontent của tệp vào hộp nhập này để xác thực.';
	@override String get createApp => 'Tạo ứng dụng';
	@override String get appManagement => 'Quản lý ứng dụng';
	@override String get statusLogs => 'nhật ký trạng thái';
	@override String get bad => 'không tốt';
	@override String get normal => 'nói chung là';
	@override String get good => 'rất tốt';
	@override String get onceCreatedItCannotBeChanged => 'Một khi đã tạo thì không thể thay đổi được!';
	@override String get manageApplicationEntity => 'Quản lý thực thể ứng dụng';
	@override String get currentVersion => 'Phiên bản hiện tại';
	@override String get submitVersion => 'phiên bản cam kết';
	@override String get packageOnlySupportZipCompressedFile => 'Gói chỉ hỗ trợ file nén zip';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'Không tìm thấy tệp \'${name}\' trong gói zip';
	@override String get fileList => 'Danh sách tập tin:';
	@override String get programPackage => 'Bưu kiện:';
	@override String get automaticallyExtractFromVersionFile => 'Tự động trích xuất từ ​​tệp \'.version\'';
	@override String get dappVersionFormatTip => 'Định dạng số phiên bản phải là số thập phân và độ chính xác phải được duy trì ở 2 chữ số và giá trị tối đa không được vượt quá 99,99.';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => 'Số phiên bản phải lớn hơn phiên bản hiện tại \'${v}\'';
	@override String get versionNotes => 'Ghi chú phiên bản:';
	@override String get updateRelease => 'Phiên bản cập nhật';
	@override String get loadAndRun => 'Tải và chạy';
	@override String get notYetSubmittedProgramPackage => 'Gói hàng vẫn chưa được gửi!';
	@override String get authorizeMinidAppLogin => 'Cho phép đăng nhập mini-dApp';
	@override String get confirmAuthorizationPleaseEnterYes => 'Để xác nhận ủy quyền, vui lòng nhập "có"';
	@override String get authorizeNow => 'Ủy quyền ngay bây giờ';
	@override String get operation => 'vận hành:';
	@override String get statusChange => 'thay đổi trạng thái';
	@override String get changeTo => 'Thay đổi thành:';
	@override String get notes => 'Nhận xét:';
	@override String get changesNotEffective => 'Thay đổi không hợp lệ!';
	@override String get released => 'Đã xuất bản';
	@override String get inPublicBeta => 'Ở phiên bản beta công khai';
	@override String get developers => 'Nhà phát triển:';
	@override String get reviewList => 'Danh sách bình luận:';
	@override String get postReview => 'Để lại một bình luận';
	@override String get scoreNow => 'Đánh giá ngay bây giờ';
	@override String get description => 'mô tả:';
	@override String get noData => '(^-^)\n Không có dữ liệu';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => 'Phiên bản được cập nhật từ ${a} lên ${b}';
	@override String get loadNewVersion => 'Tải phiên bản mới';
	@override String get name => 'tên:';
	@override String get canisterId => 'ID bể chứa:';
	@override String get updateTime => 'Thời gian cập nhật';
	@override String get contractCanistersState => 'trạng thái nồi hợp đồng';
	@override String get userDistribution => 'Phân phối người dùng';
	@override String get settings => 'cài đặt';
	@override String get security => 'Sự an toàn';
	@override String get invite => 'mời';
	@override String get more => 'Hơn…';
	@override String get receiveAddress => 'Địa chỉ nhận:';
	@override String get hangingAmount => 'hanging';
	@override String get hangingAmountTips => 'Số tiền đang chờ xử lý là bản ghi tạm thời về phần thưởng do nhóm cấp dưới của bạn tạo ra. Sau khi bạn thực hiện khai thác, số tiền này sẽ được thu vào số tiền đang chờ xử lý.';
	@override String get pendingAmount => 'pending';
	@override String get pendingAmountTips => 'Số tiền đang chờ xử lý là số tiền chưa được xác nhận và so sánh với nhà quảng cáo. Số tiền hợp lệ để so sánh sẽ được chuyển sang bản ghi USCT hợp lệ. Nếu có phần nào không hợp lệ sẽ bị loại trừ.';
	@override String get received => 'Đã nhận';
	@override String get processing => 'Xử lý';
	@override String get replied => 'Đã trả lời';
	@override String get rejected => 'từ chối';
	@override String get unknown => 'không rõ';
	@override String get insufficientBalance => 'Không đủ cân bằng!';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => 'Số dư ${x} không đủ để trả phí mạng chuỗi chéo';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => 'Có một giao dịch chưa được hoàn thành và không thể chuyển giao vào lúc này.';
	@override String get thisfunctionNotSupportExternalCalls => 'Chức năng này không hỗ trợ các cuộc gọi bên ngoài';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => 'Không có địa chỉ phù hợp nào có thể được sử dụng để thanh toán phí chuỗi chéo. Vui lòng chuyển sang mạng chuỗi khác và thử.';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => 'Số tiền chuyển tối đa hiện được khớp với một giao dịch là ${x}';
	@override String get memoMustNotBeMoreThan64bytes => 'Bình luận không được vượt quá 64 byte';
	@override String insufficientBalance_theAmountIsX({required Object x}) => 'Số dư không đủ, số tiền là: ${x}';
	@override String get boundRreceivingAddressesExceed3Tip => 'Số lượng địa chỉ thanh toán bị ràng buộc không thể vượt quá 3.\nNếu bạn cần liên kết một địa chỉ thanh toán mới,\nTrước tiên hãy hủy liên kết một địa chỉ thanh toán khác';
	@override String parametersA_exception({required Object x}) => 'Tham số: ${x}, ngoại lệ';
	@override String get parameterException => 'Ngoại lệ tham số!';
	@override String get transferAmountMustBeLargerThan0 => 'Số tiền chuyển phải lớn hơn 0';
	@override String get authorizationHasExpired => 'Ủy quyền đã hết hạn';
	@override String get theAppHasNotBeenAuthorizedByOwner => 'Ứng dụng chưa được chủ sở hữu ủy quyền';
	@override String get authenticationTokenIsInvalid => 'Mã thông báo xác thực không hợp lệ';
	@override String get verifyInfoIsInvalidOrExpired => 'Thông tin xác minh không hợp lệ hoặc đã hết hạn';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => 'Xác minh rằng số lượng thiết bị đầu cuối truy cập đã vượt quá giới hạn một trên 10.000';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => 'Thời gian tham gia khai thác phải trên 3 ngày';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => 'Số lượng thành viên trong vòng an toàn không được ít hơn 3 người';
	@override String get avatarIsNotSet => 'Hình đại diện chưa được đặt';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => 'Số người giới thiệu trực tiếp không được ít hơn 3 người';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => 'Thời hạn không đủ và bạn chỉ có thể thay đổi số điện thoại di động của mình mỗi năm một lần.';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => 'Số điện thoại di động đã tồn tại và không thể lặp lại';
	@override String get securityCodeIsIncorrect => 'Mã bảo mật không chính xác';
	@override String get securityCodeMayHaveExpired => 'Mã bảo mật có thể đã hết hạn';
	@override String get sessionIdIsInvalidOrExpired => 'Id phiên không hợp lệ hoặc đã hết hạn';
	@override String get sessionHasBeenAuthorized => 'Phiên đã được cấp phép!';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => 'Chỉ có thể được gia hạn trong vòng ${x} ngày trước khi hết hạn';
	@override String get notYetGrantedDeveloperPermissions => 'Chưa nhận được quyền của nhà phát triển';
	@override String fieldXcannotBeEmpty({required Object x}) => 'Trường ${x} không được để trống';
	@override String get emailFormatError => 'Lỗi định dạng email';
	@override String theXformatIsIncorrect({required Object x}) => 'Lỗi định dạng \'${x}\'';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => 'Trường \'${x}\' phải dài từ ${y} đến ${z} ký tự.';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => 'Phạm vi lựa chọn ‘${x}’ phải nằm trong khoảng từ ${y} đến ${z}';
	@override String get unchanged_sameAsOldContent => 'Không thay đổi, giống như nội dung cũ!';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' đã tồn tại!';
	@override String get mobileNumberHasNotJoinedDelta => 'Số điện thoại di động này chưa được thêm vào Delta!';
	@override String get referrerIdCannotBeEmpty => 'ID người giới thiệu không được để trống!';
	@override String get referrerIdDoesNotExist => 'ID người giới thiệu không tồn tại!';
	@override String get didIsIncorrectOrInvalid => 'DID không chính xác hoặc không hợp lệ!';
	@override String get accessTokenIsIncorrectOrInvalid => 'accessToken không chính xác hoặc không hợp lệ!';
	@override String get minimumWithdrawalAmountIs1USD => 'Số tiền rút tối thiểu một lần là 1USD';
	@override String get miningTimeIsNotYet => 'Thời điểm khai thác vẫn chưa đến';
	@override String get alreadyExists_pleaseDoNotRepeatedly => 'Đã tồn tại rồi, vui lòng không thêm lại!';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => 'Số đăng ký không thể được sử dụng làm số truy cập xác minh';
	@override String get canotAddYourSelf => 'Không thể thêm chính bạn';
	@override String get logOut => 'Đăng xuất';
	@override String get confirmLogout => 'Xác nhận đăng xuất';
	@override String get logOutTipsText => 'Lời nhắc thân thiện: Theo các quy định có liên quan của sách trắng, mỗi lần xác minh đăng nhập tài khoản sẽ tiêu tốn một lượng tiền DTC nhất định để trả cho người xác minh như một động lực. Vui lòng không cố gắng đăng nhập và đăng xuất trừ khi cần thiết. nút sau sẽ Đăng xuất ngay bây giờ.';
	@override String get ConfirmLogoutPleaseEnterYes => 'Vui lòng nhập "có" để xác nhận đăng xuất.';
	@override String get tip => 'gợi ý';
	@override String get cancel => 'Hủy bỏ';
	@override String get close => 'đóng cửa';
	@override String get selected => 'đã chọn';
	@override String get edit => 'biên tập';
	@override String get submit => 'nộp';
	@override String get goBack => 'quay lại';
	@override String get copiedToClipboard => 'Đã sao chép vào bảng nhớ tạm.';
	@override String get nickname => 'biệt danh';
	@override String get confirm => 'xác nhận';
	@override String get cannotBeEmpty => 'không thể trống';
	@override String get deleteSuccessful => 'Xóa thành công!';
	@override String get successfullyModified => 'Sửa đổi thành công!';
	@override String get executionSuccessful => 'Thực hiện thành công!';
	@override String get preview => 'Xem trước';
	@override String get followSystem => 'Theo dõi hệ thống';
	@override String get change => 'Thay đổi';
	@override String get replace => 'thay thế';
	@override String get view => 'Kiểm tra';
	@override String get manage => 'quản lý';
	@override String get modify => 'Ôn lại';
	@override String get replacedSuccessfully => 'Thay thế thành công!';
	@override String get authentication => 'Xác thực';
	@override String get reacquire => 'đáp lại';
	@override String get tryAgain => 'thử lại';
	@override String get querying => 'Đang truy vấn…';
	@override String get writingToOnChain_pleaseWait => 'Đang ghi vào chuỗi, vui lòng đợi...';
	@override String get versionCheck => 'Phát hiện phiên bản';
	@override String get alreadyLatestVersion => 'Đã là phiên bản mới nhất!';
	@override String get foundNewVersion => 'Phiên bản mới được tìm thấy:';
	@override String get upgradeLink => 'Liên kết nâng cấp:';
	@override String get deviceDescription => 'Mô tả thiết bị:';
	@override String get notification30SecondsBeforeMiningStops => 'Thực hiện nhắc nhở thông báo 30 giây trước khi dừng khai thác!';
	@override String get goMining => 'Đi khai thác';
	@override String get deltaMiningReminder => 'Nhắc nhở khai thác Delta';
	@override String get clickToMine_miningIsAboutToStop => 'Nhấp vào đây để khai thác, hoạt động khai thác sẽ sớm dừng!';
	@override String get incorrect_input => 'Đầu vào không đúng!';
	@override String get are_you_sure_delete => 'Bạn có chắc chắn muốn xóa không?';
	@override String get delete_account => 'Xóa tài khoản';
	@override String get how_to_operate_it => 'Bạn có biết cách vận hành nó không?';
	@override String get deletion_warning_tip => 'Nếu bạn xóa tài khoản, bạn sẽ mất toàn bộ số Delta và toàn bộ số tiền kiếm được từ các thành viên khác cũng sẽ bị mất.';
	@override String get launchWhatsAppProgram => 'Khởi chạy chương trình WhatsApp';
	@override String get sms => 'Tin nhắn';
	@override String get whatsApp_verification_tips => 'Số điện thoại truy cập có biểu tượng này cũng hỗ trợ xác minh tin nhắn WhatsApp. Khi gửi tin nhắn quốc tế, bạn nên sử dụng WhatsApp để tăng tỷ lệ thành công và giảm chi phí.';
	@override String get ihaveSentVerificationString => 'Tôi đã gửi một chuỗi xác minh';
	@override String get totalOfPeople => 'Tổng số người: ';
	@override String get numberOfPeopleMining => 'Số người khai thác';
	@override String get useBrowserScanQRcodeToSMSprogram => 'Bạn có thể sử dụng trình duyệt trên thiết bị khác để quét mã QR và chuyển đến chương trình SMS';
	@override String get toggle => 'Toggle';
	@override String get DSMSverifier => 'Trình xác minh DSMS';
	@override String get activate => 'Kích hoạt';
	@override String get activated => 'Đã kích hoạt';
	@override String get generateActivationCommand => 'Tạo lệnh kích hoạt';
	@override String get activationCommand => 'Lệnh kích hoạt';
	@override String get activationSentedTip => 'Sau khi tin nhắn SMS kích hoạt được gửi đi, vui lòng kiểm tra trạng thái kích hoạt trên thiết bị đầu cuối truy cập.';
	@override String get biometricsNotEnabledTip => 'Thiết bị của bạn chưa bật tính năng sinh trắc học (khuôn mặt hoặc dấu vân tay). Vui lòng bật để tiếp tục.';
	@override String get error => 'Lỗi';
	@override String get exceptionOccurredWhenCallingBiometric => 'Đã xảy ra ngoại lệ khi gọi hàm sinh trắc học (khuôn mặt hoặc dấu vân tay)!';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		checkedNum,
		const TextSpan(text: ' số truy cập được kiểm tra, '),
		shouldNum,
		const TextSpan(text: ' nên được chọn.'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text} đã được gửi đến ${n} số truy cập ở trên chưa?';
	@override String get interface => 'Giao diện:';
	@override String get waitingTimeoutOrSenderNumberMismatch => 'Hết thời gian chờ hoặc số người gửi không khớp';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => 'Số điện thoại di động của thành viên vòng tròn bảo mật mà bạn đã điền không khớp: ${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => 'Đăng nhập trong vòng 10 phút sau khi đăng xuất để tránh xác minh hai yếu tố.';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => 'Phải điền ít nhất ${n} số điện thoại di động';
	@override String get noAccessNumberInYourRegionYet => 'Vẫn chưa có số truy cập nào trong khu vực của bạn';
	@override String get notEnoughAccessNumbersInYourRegion => 'Không đủ số lượng truy cập trong khu vực của bạn';
	@override String get tipsForDeployDSMSterminal => 'Hệ thống đã tự động tải một số số truy cập từ các quốc gia khác cho bạn. Để cung cấp dịch vụ xác minh tốt hơn và chi phí thấp hơn, chúng tôi khuyên bạn hoặc người giới thiệu của bạn nên triển khai thiết bị đầu cuối DSMS tại địa phương để kiếm phí xác minh.';
	@override String get noOneCanProvideMeTheSecurityCode => 'Không ai có thể cung cấp cho tôi mã bảo mật?';
	@override String get useSupplementalMode => 'Sử dụng chế độ bổ sung';
	@override String get returnToSecurityCodeMode => 'Quay lại chế độ mã bảo mật';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => 'Vui lòng nhập số điện thoại di động liên kết của họ. Mã quốc gia có thể được bỏ qua.';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => 'Số điện thoại di động của ${name} không đúng';
	@override String get matchingVerificationStrategyIs => 'Chiến lược xác minh phù hợp là:';
	@override String get balanceGreater3ICP_noNeedPourFuel => 'Số dư lớn hơn 3 ICP, hiện tại không cần phải đổ nhiên liệu.';
	@override String get escrowAccount => 'Tài khoản ký quỹ';
	@override String get fuelRelay => 'Rơ le nhiên liệu';
	@override String get pourFuel => 'Đổ nhiên liệu';
	@override String get fuelState => 'Trạng thái nhiên liệu';
	@override String get pouringFuelTips => 'Việc đổ nhiên liệu không mang lại cho bạn bất kỳ lợi thế hay bất lợi nào, mục đích của nó là làm phong phú thêm trải nghiệm hệ thống Delta.';
	@override String get sponsorDevelopersByWatchingAds => 'Tài trợ cho các nhà phát triển bằng cách xem quảng cáo';
	@override String get status => 'Trạng thái';
	@override String get date => 'Ngày';
}

// Path: <root>
class _StringsZhCn implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsZhCn.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.zhCn,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <zh-CN>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsZhCn _root = this; // ignore: unused_field

	// Translations
	@override String get home => '首页';
	@override String get switchLanguage => '切换语言';
	@override String get languageSwitch => '语言切换';
	@override String get slogan => '在delta构建去中心化经济圈';
	@override String get countryRegionCode => '国家/地区代码';
	@override String get countryRegionSelection => '国家与地区选取';
	@override String get nextStep => '下一步';
	@override String get yourPhoneNumber => '你的电话号码';
	@override String get pleaseSelectCountryAndRegion => '请选你择所在国家/地区';
	@override String get pleaseEnterPhoneNumber => '请输入有效的电话号码！';
	@override String get referrerDid => '推荐人DID';
	@override String get pleaseEnterTheReferrersDid => '请输入有效的推荐人的去中心化身份id';
	@override String get thisDidIsInvalid => '这个DID无效';
	@override String get nicknameFormatTips => 'nickname不能为空,并且长度不能超过16位';
	@override String get additionalIinformation => '补充信息';
	@override String get invitationSubject => '邀请您参加Delta共识建设';
	@override String invitationLetter({required Object did}) => '您好，我正在参与Delta共识建设！\n Delta是运行在ICP上的开源新型数字货币平台，无需密码，无需私钥，无需助记词，就能管理和使用各种数字货币。请点击此链接 https://delta.kim/auto/download 安装应用程序，现在邀请您也来一起参加共识建设和铸造货币。\n 推荐人DID: ${did}';
	@override String get dSMSverification => 'DSMS验证';
	@override String get getAccessNumbers => '获取一些接入号码';
	@override String get getAccessNumberPromptMessage => '点击下面的“获取”按钮在队列中轮选一组短信验证接入号码';
	@override String get optionalAccessNumbers => '可选的接入号';
	@override String get accessNumber => '接入号';
	@override String get TELCO => '运营商';
	@override String get score => '得分';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('zh'),
		one: () => TextSpan(children: [
			const TextSpan(text: '请勾选 '),
			nBuilder(n),
			const TextSpan(text: ' 个接入号码后点击"'),
			span('text'),
			const TextSpan(text: '"按钮进入下一步'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: '请勾选 '),
			nBuilder(n),
			const TextSpan(text: ' 个接入号码后点击"'),
			span('text'),
			const TextSpan(text: '"按钮进入下一步'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta是一个开源的去中心化全球性数字货币实验项目, 以及货币应用生态链。';
	@override String get deltaGoalsDesc => '目标是让人们可以利用Delta共同构建通用、公平、安全、快速、绿色的新型数字货币。并为这些数字货币和以往的加密货币提供各种有效的应用场景。';
	@override String get details => '详情';
	@override String get get => '获取';
	@override String get select => '选择';
	@override String get send => '发送';
	@override String get complete => '完成';
	@override String get selectedAccessNumberPrompt => '选定后，显示完整的接入号码，并生成验证字符串。';
	@override String get location => '位置';
	@override String get verificationString => '验证字符串';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: '请使用你的电话号码'),
		num,
		const TextSpan(text: '， 发送'),
		label,
		const TextSpan(text: '到'),
		accessNumber,
		const TextSpan(text: '，来完成验证。'),
	]);
	@override String get ihaveSentTheSMS => '我已发送短信';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: '验证字符串6分钟内有效， 剩余时间: '),
		time,
		const TextSpan(text: '。'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => '太快了，等待${x}秒后继续！';
	@override String get waitingForVerificationSMS => '正在等待验证短信…';
	@override String get partSuccsForVerificationSMS => '其中一台接入终端短信验证已通过！';
	@override String get creatingAccessToken => '正在创建访问令牌…';
	@override String get intoDelta => '走进Delta';
	@override String get deltaAccountIsLoggedIn => '您的Delta账户处于登录状态';
	@override String get iHavLoggedOut => '我已退出';
	@override String get startTwoFactorVerification => '开始双重验证';
	@override String get securityCircleVerification => '安全圈验证';
	@override String get generateSecurityCode => '生成安全码';
	@override String get generateSecurityCodeHintText => '生成的安全码将会发送到一位随机选取的您的安全圈成员。';
	@override String get notSetSecurityCircleEnterPlaceholderTip => '您还没有设置安全圈，您的账户很不安全，请输入任意6位数字占位，并进入下一步。';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => '安全码已产生，请联系以下亲友，请求它为您提取安全码来通过验证。30分钟内有效！';
	@override String get itGetSecurityCodeTip => '提示：它在Delta App ->菜单->提供安全 的页面中找到您的账户昵称后双击即可取得安全码。';
	@override String get securityCircleMemberList => '安全圈成员列表：';
	@override String get selectA_friendToProvideSecurityCodeTip => '请在成员列表中选取一位亲友，生成并为您提供安全码验证真实身份。其目的是为了防止手机号码丢掉或被盗时账户被他人控制。';
	@override String formatIsXdigits({required Object num}) => '格式为${num}位数字';
	@override String get signInSuccessfully => '登录成功！';
	@override String get twoFAandLogin => '双重验证并登录';
	@override String get verificationSuccessful => '验证成功！';
	@override String get validationFailed => '验证失败！';
	@override String get dappInfo => 'DApp信息';
	@override String get securityCircle => '安全圈';
	@override String get securityCode => '安全码';
	@override String get provideSecurity => '提供安全';
	@override String get addManully => '手动添加';
	@override String get addFromContacts => '从通讯录添加';
	@override String get addSecurityCircle => '添加安全圈';
	@override String get inputType => '输入类型';
	@override String get mobileNumber => '手机号码';
	@override String get did => '地址id';
	@override String get pleaseEnterValidDID => '请输入一个有效的去中心化身份id';
	@override String get pleaseEnterValidWalletAddress => '请输入一个有效的钱包地址';
	@override String get appellation => '称谓';
	@override String get appellationHint => '你怎么称呼它，比如“宝贝”';
	@override String get addSecurityCircleTips => '请不要将不信任的人添加到安全圈。';
	@override String get referralTeam => '推荐团队';
	@override String get profile => '账户资料';
	@override String get menu => '菜单';
	@override String get directly => '直接的';
	@override String get indirectly => '间接的';
	@override String get inviteContacts => '邀请联系人';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: '你的邀请人是'),
		nickname,
		const TextSpan(text: '，你已直接推荐'),
		num1,
		const TextSpan(text: '人，其中当前在线'),
		num2,
		const TextSpan(text: '人。'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: '你已间接推荐'),
		num1,
		const TextSpan(text: '人，其中当前在线'),
		num2,
		const TextSpan(text: '人。'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: '邀请好友加入Delta，一起提高社会共识。每直接推荐一人挖矿速率提升基础速率的'),
		rate1,
		const TextSpan(text: '。 '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: '邀请好友加入Delta，一起提高社会共识, 每间接推荐一人挖矿速率提升基础速率的'),
		rate2,
		const TextSpan(text: '。'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => '你确定删除“${name}”吗？';
	@override String get safetyCircleRoleQ => '安全圈的作用什么?';
	@override String get safetyCircleRoleA => '在敏感情况下提供二次身份验证，来保护你的账户安全。';
	@override String get howSecurityCirclesWorkQ => '安全圈的工作原理？';
	@override String get howSecurityCirclesWorkA => '当需要安全圈进行验证的情况下，Delta智能合约程序将随机在安全圈好友列表中选取一位成员，来帮助你提供一个安全码为你完成身份安全验证。当你向该成员询问安全码的时候，它就可以确认你是否是你本人。同时程序会提示:"如果不是你本人的情况下拒绝提供安全码"，从而来保护你的账户安全。所以你应该随时确认安全圈成员是你可以信任的人。';
	@override String get securityCircleBeUsedQ => '什么时候会用到？';
	@override String get securityCircleBeUsedA1 => '1. 当你的Delta APP失去控制的时候，一般情况是手机丢失或被盗。';
	@override String get securityCircleBeUsedA2 => '2. 当一些敏感操作的情况下，Delta智能合约程序需要确认是你是你本人。';
	@override String get provideSafetyTip1 => '当您的好友向您询问它的安全码时，请您务必确认它是它本人。';
	@override String get provideSafetyTip2 => '您正在为以上好友提供安全保护，它们将您在安全圈中设置为了最信任的人，需要您在它的账户遇到敏感操作的情况下为它提供安全确认。';
	@override String get provideSafetyTip3 => '在需要的时候双击对方头像可提取安全码。';
	@override String get doesNotSecurityCodeNeedsRetrieved => '对方目前没有需要提取的安全码!';
	@override String get existSecurityCodeTip => '请您务必确认向您索取安全码的亲友是它本人，为了保护亲友安全，在非亲友本人的情况下您应该拒绝提供。';
	@override String get avatarSettings => '头像设置';
	@override String get NFTAvatarPropertyRightsText => '声明：使用相关NFT作为头像仅为个人喜好，与拥有该NFT的知识产权无关。';
	@override String get projectWebsite => '项目网站: ';
	@override String get whitepaper => '白皮书: ';
	@override String get indexID => '索引Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => '索引范围在${start} 到 ${end}之间';
	@override String get inputToLoadNFTAvatarTip => '输入您喜欢NFT的索引id，程序将自动帮您加载为头像。';
	@override String get miningRate => '挖矿速率';
	@override String get miningDetails => '挖矿详情';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: '合计挖矿速率: '),
		rate,
		const TextSpan(text: ' δ/天'),
	]);
	@override String get EndOfMiningSession => '周期挖矿结束：';
	@override String get tapToMineDeltaCoin => '点击挖掘Delta币 ↑';
	@override String get clickToStartMining => '点击开始挖矿！';
	@override String get miningHasStoppedPromptDesc => '挖矿已停止，每24小时为一个挖矿周期，点击闪电图标开始新一轮挖矿。Delta的挖矿是一种分配机制，不会消耗您设备的额外算力与网络流量。';
	@override String get aboutBaseRate => '关于基础速率？';
	@override String get baseRateDescription => '根据白皮书约定，Delta挖矿的基础速率递减规则将分为两个阶段。 \n第1阶段：当参与（注册）人数为 3000 或更少时，该速率为 32δ/天。以此作为起步基准，每当人数增加10倍时，基本速率减半。 \n第2阶段：当参与人数达到3000万及以上，每当人数增加3倍时，基本速率减半。直到最后挖完停产。';
	@override String get baseRate => '基础速率';
	@override String get directReferralRewards => '直接推荐奖励';
	@override String get directReferralRewardDesc => '每直接推荐1人，当其处于挖矿状态时，您的挖矿速率将额外提升基础速率的1/3。\n\n 另外，您的推荐人的挖矿状态，也将计算到您的直接推荐奖励中。';
	@override String get indirectReferralRewards => '间接推荐奖励';
	@override String get indirectReferralRewardDesc => '当一个间接推荐人处于挖矿状态时，您的挖矿速率将额外提升基础速率的1/10。\n\n 您的直接推荐团队，它们再推荐的每一个人都代表为您的间接推荐。';
	@override String get mine => '开采';
	@override String get thisMiningInformation => '本次采矿信息';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '已参与挖矿：'),
		x,
		const TextSpan(text: '次'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '本次总收益：'),
		x,
		const TextSpan(text: ' Delta币'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '基础收益：'),
		x,
		const TextSpan(text: ' 个币'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '直接团队贡献：'),
		x,
		const TextSpan(text: '个币'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '间接团队贡献：'),
		x,
		const TextSpan(text: '个币'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '与上次挖矿间隔时长：'),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '有效挖矿时长：'),
		x,
	]);
	@override String xhours({required Object x}) => '${x}小时';
	@override String get keep3_5peopleInTheSafetyCircleTip => '为了资产安全，安全圈成员应该随时保持3-5个可信任的人。';
	@override String get index => '索引';
	@override String get amount => '金额';
	@override String get balance => '余额';
	@override String get timeStamp => '时间戳';
	@override String get summary => '摘要';
	@override String get miningHasStopped => '挖矿已停止。';
	@override String get miningHasStoppedDesc => '目前您的挖矿已停止，马上开始赚取收益。';
	@override String get startMining => '开始挖矿';
	@override String get changeMobileNumber => '更换手机号码';
	@override String get currentMobileNumber => '当前手机号码';
	@override String get newMobileNumber => '新的手机号码';
	@override String get securityCodeFormatIs6digits => '安全码格式为6位数字！';
	@override String get startVrification => '开始验证';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => '这个手机号码已存在，关联DID： ${dId}';
	@override String get noDataYet => '暂无数据';
	@override String get previousMobileNumber => '以前的手机号码';
	@override String get changeLog => '变更记录';
	@override String get referralLinkToShare => '推荐链接分享';
	@override String get referrer => '推荐人';
	@override String get isoCountryCode => 'ISO国家代码';
	@override String get avatarLogo => '头像标识';
	@override String get creationTime => '创建时间';
	@override String get lastUpdate => '最后一次更新';
	@override String get numberOfSecurityCircleMembers => '安全圈成员数量';
	@override String get theLatestMining => '最近一次挖矿';
	@override String get effectiveMiningDays => '有效挖矿的天数';
	@override String get modifyNickname => '修改昵称';
	@override String get didNotChange => '没有改变!';
	@override String get kycVerification => 'KYC验证';
	@override String get faceID => '人脸ID';
	@override String get touchID => '指纹ID';
	@override String get biometricsAuthorizationTest => '生物特征认证测试';
	@override String get currentState => '当前状态';
	@override String get biometricsAuthenticationLocalizedReason => '使用设备的解锁功能来验证身份。';
	@override String get graph => '图谱';
	@override String get referralRelationshipGraph => '引荐关系图谱';
	@override String get nativeContacts => '本机联系人';
	@override String get registrationAndMiningTrends => '注册与挖矿趋势';
	@override String get inMining => '挖矿中';
	@override String get registrationVolume => '注册量';
	@override String get unmined => '未开采';
	@override String get mined => '已开采';
	@override String get communityMining => '社区采矿';
	@override String get consensusPromotionFund => '共识促进基金';
	@override String get ecologicalAwardFund => '生态奖励基金';
	@override String get icpFuelCrowdfunding => 'ICP燃料众筹';
	@override String get coreDeveloperRewards => '核心开发者奖励';
	@override String get totalAllocation => '总量分配';
	@override String get miningRatio => '开采比例';
	@override Map<String, String> get billion => {
		'60': '600亿',
		'30': '300亿',
		'180': '1800亿',
		'300': '3000亿',
	};
	@override String get watchAdsToSupportDevelopers => '看广告支持开发者';
	@override String get loadingAdcomponents => '正在加载广告组件…';
	@override String get timeIsNotUp => '时间未到！';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => '加载失败, 可能网络受阻！';
	@override String get pendingUSCTrecords => '待定的USCT记录';
	@override String get pendingUSCTrecordsDesc => '待定的USCT记录将在15-30天内与广告平台进行比对确认，有效的记录将转移到USCT记录列表，并添加相应的USCT金额到账户余额。';
	@override String get validity => '有效性';
	@override String get advertiser => '广告商';
	@override String get earned => '已赚取';
	@override String get withdraw => '提现';
	@override String get validUSCTrecords => '有效的USCT记录';
	@override String get USCTmining => 'USCT 挖矿';
	@override String get aboutUSCTmining => '关于USCT挖矿？';
	@override String get aboutUSCTminingItme1 => '1. USDT 是一种全球流行的美元稳定币，可在全球主流加密货币交易所轻松的兑换成各国主权货币。';
	@override String get aboutUSCTminingItme2 => '2. USCT 是USCT挖矿的收益的临时性计量值，全称USD credit， 最终根据广告平台实际结算额度和分配规则，并按相应比例可转换为USDT。';
	@override String get aboutUSCTminingItme3 => '3. USCT挖矿 是Delta社区的一种流量广告变现功能。利用Delta社区庞大的用户群体，为广告商、Delta开发者和旷工提供多方受益。其设计目的是为在Delta生态还没有形成和繁荣的早期阶段，为旷工提供一定的有效收入；同时，也为开发者提供一定的经费支持，确保开发者能够持续长期的提供开发服务，最终能够实现白皮书的所有规划；也为产品广告商提供一种有效的推广渠道。';
	@override String get aboutUSCTminingItme4 => '4. 分配规则设计为总收益的40%作为开发者技术服务佣金，其余的60%作为社区旷工奖励。旷工奖励部分采用与DTC类似的多级分配模型，将这些旷工奖励再按6:3:1的比例分为3份，每次一的USCT挖矿的旷工奖励的6成分配给当前看广告的旷工，3成分配给上级推荐人，1成分配给二级推荐人。同理，你推荐的好友通过USCT挖矿您也可以得到同样的推荐者奖励。这样多层次分配的好处在于任何人都可以通过发展下线团队来获得相对大量的USDT收益。';
	@override String get aboutUSCTminingItme5 => '5. 结算周期为7天，即每7天与广告平台核对一次有效性,确认有效的收益和实际金额将记录到余额中。每次提现的最低额度为10USDT。';
	@override String linesXtoY({required Object x, required Object y}) => '第${x}到${y}行';
	@override String get wallet => '钱包';
	@override String get multiChainWallet => '多链钱包';
	@override String get deposit => '存入';
	@override String get transfer => '转账';
	@override String xcoinInWallet({required Object coinCode}) => '钱包地址中的${coinCode}';
	@override String get transactions => '交易记录';
	@override String get network => '网络';
	@override String get walletAddress => '钱包地址';
	@override String get currentAddress => '当前地址';
	@override String get depositAddress => '充值地址';
	@override String get receivingMoneyAddress => '收款地址';
	@override String get applyTempDepositAddress => '申请临时充值地址';
	@override String get tempDepositAddressTip => '1.这是一个共享的存款地址。请不要在租约到期或解除绑定后存入金额。如果发生这种情况，该金额将会丢失。';
	@override String get tempDepositAddressTip2 => '2.在存款前请务必确认[链名称]与[币种名称]完全匹配; 如果是合约代币还需要确认[合约标准]与[合约地址]完全匹配。';
	@override String get tempDepositAddressTip3 => '3.请不要试图存入与以上提示中任何参数不匹配的资金，否者该金额将会丢失。';
	@override String get tempDepositAddressTip4 => '4.如需要存入其它类型的资产，请切换到对应的币种页面和参数选项申请一个新的地址。';
	@override String get applyExtensionOfValidity => '申请延长有效期';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: '该地址将在'),
		diff,
		const TextSpan(text: '后过期，过期前12小时内可'),
		tap('手动延长'),
		const TextSpan(text: '有效期。'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => '只能提前12小时内续订';
	@override String get theReceivingAddressValidForLongtime => '该收款地址长期有效.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => '该收款地址长期有效，并实时自动入账。';
	@override String get confirmDeposited => '确认已存入';
	@override String get unbindThisDepositAddress => '解绑该充值地址';
	@override String get confirmDepositedTip => '如果已转入资金，请在10分钟后点击以上按钮触发计账到钱包。';
	@override String get unbindDepositAddressTip => '为了减少智能合约的运行开销，如果在有效期内不会再存入资金的情况下，请解绑充值地址。';
	@override String get transferToAddress => '转至地址';
	@override String get longPressToPaste => '长按粘贴';
	@override String get all => '全部';
	@override String balanceX({required Object x}) => '余额 ${x}';
	@override String get transferOut => '转 出';
	@override String depositXcoins({required Object x}) => '入账 ${x}';
	@override String get sender => '发送者';
	@override String get recipient => '接收者';
	@override String get memo => '备注';
	@override String get kind => '方式';
	@override String get transferAmountExceedsAvailableBalance => '转账金额超过可用余额';
	@override String get pleaseEnterValidAmount => '请输入有效金额';
	@override String get networkFee => '网络手续费';
	@override String get fee => '手续费';
	@override String validLengthXcharacters({required Object x}) => '地址有效长度${x}字符';
	@override String get historys => '历史记录';
	@override String get dtcCreditdetail => 'Delta 积分详情';
	@override String get usdCreditdetail => 'USD 积分详情';
	@override String get dappSquare => 'dApp 广场';
	@override String get amountRaised => '募集金额';
	@override String get disbursedAmount => '发放金额';
	@override String get participationTimes => '参与人次';
	@override String get completionRate => '完成率';
	@override String get exchangeRate => '兑换率';
	@override String get icpCrowdfunding => 'ICP 众筹';
	@override String get crowdfunding => '众筹';
	@override String get trendsCurve => '趋势曲线';
	@override String get fullScreenView => '全屏视图';
	@override String get walletBalance => '钱包余额：';
	@override String get manageWallet => '管理钱包';
	@override String get fundraiseAmount => '募资金额';
	@override String get exchangeRewardAmount => '换取奖励金额';
	@override String get fundraise => '筹集资金';
	@override String rangeIntegersX({required Object x}) => '范围：整数 ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => '成功参与募资并获得奖励${amount}DTCT';
	@override String get amountSummary => '金额汇总';
	@override String get changePreferred => '更改首选';
	@override String get changePreferredAddress => '更改首选地址';
	@override String get preferredAddressTip => '当使用注册的移动号码或DID收款时，资金将自动转入首选地址。';
	@override String get newAddress => '新建地址';
	@override String get newAddressTip => '为了防止被滥用，当钱包地址超过一个时，每创建一个新地址将产生一笔交易手续费。';
	@override String get createNew => '新建';
	@override String get chainNetworkName => '链网络名称';
	@override String get from => '来自';
	@override String get to => '到';
	@override String get noAvailableDepositAmountDetected => '未检测到可用的存入金额！';
	@override String get crossChainReceiveMoneyMonitoring => '跨链收款正在监听中 …';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '已收到('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '确认中('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => '注意事项(新手必读)';
	@override String get whyUseSharedAddresses => '为什么采用共享地址？';
	@override String get useSharedrAdvantage => '在跨链存款时，采用共享地址的优势如下：';
	@override String get useSharedrAdvantage1 => '1. 减少转账手续费浪费，降低用户使用成本。因为如果采用独享地址，会导致资金过于分散，一般为了方便之后其他用户在提现时转出， 当用户充值后需要将资金二次转账归集到一个或少量地址管理。';
	@override String get useSharedrAdvantage2 => '2. 在共享方案中，程序只需要维护一个相对较小的地址池，可以快速匹配转出资金和轻量的收款监听，这样可以减少计算资源开销。相比之下，如果采用独享地址，情况会恰好相反。';
	@override String get tokenType => '代币类型';
	@override String get contract => '合约';
	@override String get contractStandard => '合约标准';
	@override String get contractAddress => '合约地址';
	@override String get native => '原生';
	@override String get confirmUnbindingPleaseEnterYes => '确认解除绑定，请输入"yes"';
	@override String get listAllWorkingTempReceivingAddresses => '列出所有正在工作的跨链充值地址';
	@override String get setNote => '设置备注';
	@override String lengthCannotExceedXbytes({required Object x}) => '长度不能超过 ${x} 字节';
	@override String get transferFee => '转账费';
	@override String get crossChainFee => '跨链费';
	@override String get crossChainTransferOutError => '跨链转出错误';
	@override String get chainName => '链名称';
	@override String get message => '消息';
	@override String get dontShowAgain => '不再显示';
	@override String get queuing => '队列中';
	@override String get optional => '可选的';
	@override String get publiclyVisible => '公开可见';
	@override String get rates => '费率';
	@override String get minimum => '最低限度';
	@override String get maximum => '最多限度';
	@override String get minimumBlockConfirmations => '最小区块确认数';
	@override String get dsmsVerifyTerminal => 'DSMS验证者终端';
	@override String get overall => '总体';
	@override String get my => '我的';
	@override String get checkValidatorQualifications => '检查验证者权限资格';
	@override String get getVerifierPermissions => '获取验证者权限';
	@override String get qualification => '资质';
	@override String get upperLimit => '上限';
	@override String get maximumNumberOfTerminalsAllowedToAccess => '允许接入终端数量上限';
	@override String get numberOfExistingAccessTerminals => '已有接入终端数量';
	@override String get applyingForDSMSVerifierPermissionsTips => '申请验证者权限前，需要准备一台闲置的安卓手机和一个专用的接入号码，并下载安装DSMS接入终端应用程序。';
	@override String get downloadLink => '下载链接';
	@override String get alreadyReadyFollowingTheAboveTips => '已按照以上提示准备就绪';
	@override String get globalUniversal => '全球通用';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: '当前本地没有足够的验证者参与DSMS验证接入服务，请选择"'),
		gu,
		const TextSpan(text: '"接入服务。'),
	]);
	@override String get asDedicatedNumberForAccess => '作为接入专用号';
	@override String pleaseCheckTip({required Object tip}) => '请勾选“${tip}”';
	@override String get inputLengthTooShort => '输入长度太短';
	@override String get shortName => '简称';
	@override String pleaseEnterXname({required Object name}) => '请输入${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => '正在提交申请，请稍候...';
	@override String get applyForDSMSVerifierPermission => '申请DSMS验证者权限';
	@override String get confirmInformation => '确认资料';
	@override String get lastHeartbeat => '最后心跳';
	@override String get expirationTime => '到期时间';
	@override String get country => '国家';
	@override String get accessTerminals => '接入终端';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'DSMS接入号码终端总量';
	@override String get textContent => '文本内容';
	@override String get scanQRcodeToLogin => '扫码登录';
	@override String get confirmLogin => '确认登录';
	@override String get authorizeSubApplicationToLogin => '授权该子应用登录';
	@override String get authorizationSuccessful => '授权成功！';
	@override String get launchSMSprogram => '启动短信程序';
	@override String get notApplied => '没有申请';
	@override String get validityPeriod => '有效期';
	@override String get renewal => '续期';
	@override String get scanCodeToAuthorizeTerminalLogin => '扫码授权终端登录';
	@override String get rewards => '奖励';
	@override String get roles => '角色';
	@override String get developerCenter => '开发者中心';
	@override String get appName => '应用名称';
	@override String get pleaseSelect => '请选择';
	@override String get category => '类目';
	@override String get keywords => '关键词';
	@override String get pleaseEnterAkeyword => '请输入一个关键词';
	@override String get createApplication => '创建应用程序';
	@override String get appType => '应用类型';
	@override String get numberOfCategoriesMustBetween1and3 => '类目数量必须在1到3个之间';
	@override String get appLogoSpecifications => '图片格式：png，大小：100KB以内，分辨率(像素)：256*256';
	@override String get localAlbum => '本地相册';
	@override String get networkPath => '网络路径';
	@override String get imageURLkAddress => '图片URL地址';
	@override String get urlAddressFormatIsIncorrect => 'URL地址格式不正确';
	@override String get imageFormatOnlySupportsPng => '图片只支持“png”格式.';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => '长度必须介于${a}-${b}个字符之间';
	@override String get introduction => '简介';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => '图片大小不能大于${a}，目前为${b}';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => '图片分辨率必须为：${p1}(像素)，当前为${p2}';
	@override String get becomeDeveloper => '成为开发者';
	@override String get developerInformation => '开发者信息';
	@override String get teamName => '团队名称';
	@override String get website => '网站';
	@override String get other => '其它';
	@override String get githubVerification => 'Github验证';
	@override String get exampleUrl => '示例Url';
	@override String githubVerificationTip({required Object did}) => '请使用您的GitHub账户在仓库中创建一个\'delta.did\'文件,文件内容为\'${did}\'；然后，将该文件的githubusercontent Url地址粘贴到这个输入框用于身份验证。';
	@override String get createApp => '创建应用';
	@override String get appManagement => '应用管理';
	@override String get statusLogs => '状态日志';
	@override String get bad => '不好';
	@override String get normal => '一般';
	@override String get good => '很好';
	@override String get onceCreatedItCannotBeChanged => '一旦创建,不可更改！';
	@override String get manageApplicationEntity => '管理应用实体';
	@override String get currentVersion => '当前版本';
	@override String get submitVersion => '提交版本';
	@override String get packageOnlySupportZipCompressedFile => '程序包仅支持zip压缩文件';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'zip程序包中未找到\'${name}\'文件';
	@override String get fileList => '文件列表：';
	@override String get programPackage => '程序包：';
	@override String get automaticallyExtractFromVersionFile => '自动从 \'.version\' 文件中提取';
	@override String get dappVersionFormatTip => '版本号格式必须为小数且精度保持2位，最大不能超过99.99';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => '版本号必须大于当前版本\'${v}\'';
	@override String get versionNotes => '版本说明：';
	@override String get updateRelease => '更新版本';
	@override String get loadAndRun => '加载并运行';
	@override String get notYetSubmittedProgramPackage => '还未提交程序包！';
	@override String get authorizeMinidAppLogin => '授权 mini-dApp 登录';
	@override String get confirmAuthorizationPleaseEnterYes => '确认授权, 请输入“yes”';
	@override String get authorizeNow => '立即授权';
	@override String get operation => '操作: ';
	@override String get statusChange => '状态变更';
	@override String get changeTo => '改变到：';
	@override String get notes => '备注: ';
	@override String get changesNotEffective => '更改无效 !';
	@override String get released => '已发布';
	@override String get inPublicBeta => '公测中';
	@override String get developers => '开发者: ';
	@override String get reviewList => '评论列表: ';
	@override String get postReview => '发表评论';
	@override String get scoreNow => '立即评分';
	@override String get description => '描述: ';
	@override String get noData => '(^-^) \n 无数据';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => '版本已从 ${a} 更新至 ${b}';
	@override String get loadNewVersion => '加载新版本';
	@override String get name => '名称: ';
	@override String get canisterId => '容器罐Id: ';
	@override String get updateTime => '更新时间';
	@override String get contractCanistersState => '合约罐状态';
	@override String get userDistribution => '用户分布';
	@override String get settings => '设 置';
	@override String get security => '安 全';
	@override String get invite => '邀请';
	@override String get more => '更多…';
	@override String get receiveAddress => '接收地址：';
	@override String get hangingAmount => '挂起金额';
	@override String get hangingAmountTips => '挂起金额是由您的下级团队挖矿而产生奖励的临时记录，一旦您进行一次挖矿这些金额将被收集到待定金额中';
	@override String get pendingAmount => '待定金额';
	@override String get pendingAmountTips => '待定金额是指还未与广告商进行确认比对的金额，比对有效的金额将被转移到有效USCT记录中，如有无效的部分将被排除';
	@override String get received => '已收到';
	@override String get processing => '处理中';
	@override String get replied => '已应答';
	@override String get rejected => '拒绝';
	@override String get unknown => '未知';
	@override String get insufficientBalance => '余额不足！';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => '${x}余额不足以支付跨链网络费';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => '有一笔交易尚未完成，暂不能转账';
	@override String get thisfunctionNotSupportExternalCalls => '该函数不支持被外部调用';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => '没有匹配到可用于支付跨链手续费的地址，请切换到其它链网络尝试。';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => '当前匹配到单笔最大可转账金额为${x}';
	@override String get memoMustNotBeMoreThan64bytes => '备注不得超过 64 字节';
	@override String insufficientBalance_theAmountIsX({required Object x}) => '余额不足，金额为：${x}';
	@override String get boundRreceivingAddressesExceed3Tip => '已绑定收款地址不能超出3个，\n如需绑定新的收款地址，\n请先解绑另外一个收款地址';
	@override String parametersA_exception({required Object x}) => '参数：${x}，异常';
	@override String get transferAmountMustBeLargerThan0 => '转账金额必须大于0';
	@override String get authorizationHasExpired => '授权已过期';
	@override String get theAppHasNotBeenAuthorizedByOwner => '该应用尚未获得所有者授权';
	@override String get authenticationTokenIsInvalid => '身份验证令牌无效';
	@override String get verifyInfoIsInvalidOrExpired => '验证信息无效或过期';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => '验证接入终端数量已经超过万分之一的限制';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => '参与挖矿的时间必须大于3天';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => '安全圈成员人数不能少于3人';
	@override String get avatarIsNotSet => '头像未设置';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => '直接推荐人数不能小于3人';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => '时限不足，一年内只能换一次手机号码。';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => '该手机号码已存在，不能重复';
	@override String get securityCodeIsIncorrect => '安全码不正确';
	@override String get securityCodeMayHaveExpired => '安全码可能已过期';
	@override String get sessionIdIsInvalidOrExpired => '会话id无效或过期';
	@override String get sessionHasBeenAuthorized => '该会话已授权完成！';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => '只能期满前${x}天内续期';
	@override String get notYetGrantedDeveloperPermissions => '还未获得开发者权限';
	@override String fieldXcannotBeEmpty({required Object x}) => '字段${x}不能为空';
	@override String get emailFormatError => 'email格式错误';
	@override String theXformatIsIncorrect({required Object x}) => '\'${x}\'格式错误';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => '字段“${x}”的长度必须在 ${y} 到 ${z} 个字符之间。';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => '‘${x}’选择范围必须介于 ${y} 至 ${z}个之间';
	@override String get unchanged_sameAsOldContent => '未改变，与旧的内容相同！';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' 已存在！';
	@override String get mobileNumberHasNotJoinedDelta => '这个手机号码还未加入Delta!';
	@override String get referrerIdCannotBeEmpty => '推荐人ID不能为空！';
	@override String get referrerIdDoesNotExist => '推荐人 ID 不存在！';
	@override String get didIsIncorrectOrInvalid => 'DID 不正确或无效！';
	@override String get accessTokenIsIncorrectOrInvalid => 'accessToken 不正确或无效！';
	@override String get minimumWithdrawalAmountIs1USD => '一次提现金额最少1USD';
	@override String get miningTimeIsNotYet => '挖矿时间尚未到';
	@override String get alreadyExists_pleaseDoNotRepeatedly => '已存在，请不要重复添加！';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => '不能使用注册号码作为验证接入号';
	@override String get canotAddYourSelf => '不能添加你自己';
	@override String get logOut => '退出登录';
	@override String get confirmLogout => '确认退出登录';
	@override String get logOutTipsText => '友情提示：按照白皮书的相关约定，账户的每次登录验证将会消耗你一定量的DTC币支付给验证者作为激励，请勿在非必要的情况下尝试登录和登出，点击以下按钮将会立即退出登录。';
	@override String get ConfirmLogoutPleaseEnterYes => '确认退出登录请输入"yes"';
	@override String get tip => '提示';
	@override String get cancel => '取消';
	@override String get close => '关闭';
	@override String get selected => '已选定';
	@override String get edit => '编辑';
	@override String get submit => '提交';
	@override String get goBack => '回退';
	@override String get copiedToClipboard => '已拷贝到剪切板。';
	@override String get nickname => '昵称';
	@override String get confirm => '确认';
	@override String get cannotBeEmpty => '不能为空';
	@override String get deleteSuccessful => '删除成功！';
	@override String get successfullyModified => '修改成功！';
	@override String get executionSuccessful => '执行成功！';
	@override String get parameterException => '参数异常！';
	@override String get preview => '预览';
	@override String get followSystem => '跟随系统';
	@override String get change => '更改';
	@override String get replace => '更换';
	@override String get view => '查看';
	@override String get manage => '管理';
	@override String get modify => '修改';
	@override String get replacedSuccessfully => '更换成功!';
	@override String get authentication => '鉴权';
	@override String get reacquire => '重新获取';
	@override String get tryAgain => '再试一次';
	@override String get querying => '正在查询 …';
	@override String get writingToOnChain_pleaseWait => '正在写入链上，请稍候 …';
	@override String get versionCheck => '版本检测';
	@override String get alreadyLatestVersion => '已是最新版本！';
	@override String get foundNewVersion => '发现新版本：';
	@override String get upgradeLink => '升级链接: ';
	@override String get deviceDescription => '设备描述: ';
	@override String get notification30SecondsBeforeMiningStops => '在挖矿停止前30秒执行通知提醒！';
	@override String get goMining => '去挖矿';
	@override String get deltaMiningReminder => 'Delta挖矿提示';
	@override String get clickToMine_miningIsAboutToStop => '点击这里去挖矿，挖矿即将停止 ！';
	@override String get incorrect_input => '输入不正确！';
	@override String get are_you_sure_delete => '确认删除吗？';
	@override String get delete_account => '删除账户';
	@override String get how_to_operate_it => '查看如何操作?';
	@override String get deletion_warning_tip => '如果删除账户，您将失去所有的Delta硬币，其他所有成员给您带来的收益也将丢失。';
	@override String get launchWhatsAppProgram => '启动WhatsApp程序';
	@override String get sms => '短信';
	@override String get whatsApp_verification_tips => '包含这个图标的接入号码表示同时支持WhatsApp消息验证。在发送跨国信息时，建议使用WhatsApp，来提高成功率并降低费用。';
	@override String get ihaveSentVerificationString => '我已发送验证串';
	@override String get totalOfPeople => '总人数: ';
	@override String get numberOfPeopleMining => '挖矿人次';
	@override String get useBrowserScanQRcodeToSMSprogram => '您可在另外一台设备使用浏览器扫描二维码并将其传递到短信程序';
	@override String get toggle => '切换';
	@override String get DSMSverifier => 'DSMS验证者';
	@override String get activate => '激活';
	@override String get activated => '已激活';
	@override String get generateActivationCommand => '生成激活指令';
	@override String get activationCommand => '激活指令';
	@override String get activationSentedTip => '激活短信发送完成后请到接入终端设备查看激活状态。';
	@override String get biometricsNotEnabledTip => '您的设备尚未启用生物识别（人脸或指纹），请启用后继续。';
	@override String get error => '错误';
	@override String get exceptionOccurredWhenCallingBiometric => '调用生物识别（人脸或指纹）功能出现异常！';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: '已勾选'),
		checkedNum,
		const TextSpan(text: '个接入号码，应该选择'),
		shouldNum,
		const TextSpan(text: '个。'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text}已发送到以上的${n}个接入号吗？';
	@override String get interface => '接口：';
	@override String get waitingTimeoutOrSenderNumberMismatch => '等待超时或发件人号码不匹配';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => '您补填的安全圈成员手机号码不匹配:${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => '退出后10分钟内登录，可避免双重验证。';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => '必须填写至少${n}个手机号码';
	@override String get noAccessNumberInYourRegionYet => '你所在的区域暂时还没有接入号码';
	@override String get notEnoughAccessNumbersInYourRegion => '你所在的区域接入号码不充足';
	@override String get tipsForDeployDSMSterminal => '系统已经自动为您加载了一些其它国家的接入号码，为了提供更好更低成本的验证服务，建议您或联系您的推荐人在本地部署DSMS终端，赚取验证费。';
	@override String get noOneCanProvideMeTheSecurityCode => '没有一个人可以给我提供安全码？';
	@override String get useSupplementalMode => '使用补充模式';
	@override String get returnToSecurityCodeMode => '返回安全码模式';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => '请输入它们的关联手机号码，可省略国家代码。';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => '${name}的移动号码不正确';
	@override String get matchingVerificationStrategyIs => '匹配到的验证策略为：';
	@override String get balanceGreater3ICP_noNeedPourFuel => '余额大于3 ICP暂时无需倒入燃料。';
	@override String get escrowAccount => '托管账户';
	@override String get fuelRelay => '燃料中继';
	@override String get pourFuel => '倒入燃料';
	@override String get fuelState => '燃料状态';
	@override String get pouringFuelTips => '倒入燃料不会给您带来任何的好处或坏处，其目的为了丰富Delta系统体验。';
	@override String get sponsorDevelopersByWatchingAds => '通过观看广告赞助开发者';
	@override String get status => '状态';
	@override String get date => '日期';
}

// Path: <root>
class _StringsZhTw implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	_StringsZhTw.build({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = TranslationMetadata(
		    locale: AppLocale.zhTw,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <zh-TW>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	@override late final _StringsZhTw _root = this; // ignore: unused_field

	// Translations
	@override String get home => '首頁';
	@override String get switchLanguage => '切換語言';
	@override String get languageSwitch => '語言切換';
	@override String get slogan => '在delta構建去中心化經濟圈';
	@override String get countryRegionCode => '國家/地區程式碼';
	@override String get countryRegionSelection => '國家與地區選取';
	@override String get nextStep => '下一步';
	@override String get yourPhoneNumber => '你的電話號碼';
	@override String get pleaseSelectCountryAndRegion => '請選你擇所在國家/地區';
	@override String get pleaseEnterPhoneNumber => '請輸入有效的電話號碼！';
	@override String get referrerDid => '推薦人DID';
	@override String get pleaseEnterTheReferrersDid => '請輸入有效的推薦人的去中心化身份id';
	@override String get thisDidIsInvalid => '這個DID無效';
	@override String get nicknameFormatTips => 'nickname不能為空,並且長度不能超過16位';
	@override String get additionalIinformation => '補充資訊';
	@override String get invitationSubject => '邀請您參加Delta共識建設';
	@override String invitationLetter({required Object did}) => '您好，我正在參與Delta共識建設！\n Delta是執行在ICP上的開源新型數字貨幣平臺，無需密碼，無需私鑰，無需助記詞，就能管理和使用各種數字貨幣。請點選此連結 https://delta.kim/auto/download 安裝應用程式，現在邀請您也來一起參加共識建設和鑄造貨幣。\n 推薦人DID: ${did}';
	@override String get dSMSverification => 'DSMS驗證';
	@override String get getAccessNumbers => '獲取一些接入號碼';
	@override String get getAccessNumberPromptMessage => '點選下面的“獲取”按鈕在佇列中輪選一組簡訊驗證接入號碼';
	@override String get optionalAccessNumbers => '可選的接入號';
	@override String get accessNumber => '接入號';
	@override String get TELCO => '運營商';
	@override String get score => '得分';
	@override TextSpan checkAccessNumberTip({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
		n: n,
		resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('zh'),
		one: () => TextSpan(children: [
			const TextSpan(text: '請勾選 '),
			nBuilder(n),
			const TextSpan(text: ' 個接入號碼後點選"'),
			span('text'),
			const TextSpan(text: '"按鈕進入下一步'),
		]),
		other: () => TextSpan(children: [
			const TextSpan(text: '請勾選 '),
			nBuilder(n),
			const TextSpan(text: ' 個接入號碼後點選"'),
			span('text'),
			const TextSpan(text: '"按鈕進入下一步'),
		]),
	);
	@override String get whatIsDeltaDesc => 'Delta是一個開源的去中心化全球性數字貨幣實驗專案, 以及貨幣應用生態鏈。';
	@override String get deltaGoalsDesc => '目標是讓人們可以利用Delta共同構建通用、公平、安全、快速、綠色的新型數字貨幣。併為這些數字貨幣和以往的加密貨幣提供各種有效的應用場景。';
	@override String get details => '詳情';
	@override String get get => '獲取';
	@override String get select => '選擇';
	@override String get send => '傳送';
	@override String get complete => '完成';
	@override String get selectedAccessNumberPrompt => '選定後，顯示完整的接入號碼，並生成驗證字串。';
	@override String get location => '位置';
	@override String get verificationString => '驗證字串';
	@override TextSpan sendVerificationStringDesc({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
		const TextSpan(text: '請使用你的電話號碼'),
		num,
		const TextSpan(text: '， 傳送'),
		label,
		const TextSpan(text: '到'),
		accessNumber,
		const TextSpan(text: '，來完成驗證。'),
	]);
	@override String get ihaveSentTheSMS => '我已傳送簡訊';
	@override TextSpan validWithin6minutes({required InlineSpan time}) => TextSpan(children: [
		const TextSpan(text: '驗證字串6分鐘內有效， 剩餘時間: '),
		time,
		const TextSpan(text: '。'),
	]);
	@override String tooFast_waitXsecondsContinuing({required Object x}) => '太快了，等待${x}秒後繼續！';
	@override String get waitingForVerificationSMS => '正在等待驗證簡訊…';
	@override String get partSuccsForVerificationSMS => '其中一臺接入終端簡訊驗證已透過！';
	@override String get creatingAccessToken => '正在建立訪問令牌…';
	@override String get intoDelta => '走進Delta';
	@override String get deltaAccountIsLoggedIn => '您的Delta帳號處於登入狀態';
	@override String get iHavLoggedOut => '我已退出';
	@override String get startTwoFactorVerification => '開始雙重驗證';
	@override String get securityCircleVerification => '安全圈驗證';
	@override String get generateSecurityCode => '生成安全碼';
	@override String get generateSecurityCodeHintText => '生成的安全碼將會傳送到一位隨機選取的您的安全圈成員。';
	@override String get notSetSecurityCircleEnterPlaceholderTip => '您還沒有設定安全圈，您的賬戶很不安全，請輸入任意6位數字佔位，並進入下一步。';
	@override String get securityCodeHasBeenGenerated_ContactFriendsTip => '安全碼已產生，請聯絡以下親友，請求它為您提取安全碼來透過驗證。30分鐘內有效！';
	@override String get itGetSecurityCodeTip => '提示：它在Delta App ->選單->提供安全 的頁面中找到您的賬戶暱稱後雙擊即可取得安全碼。';
	@override String get securityCircleMemberList => '安全圈成員清單：';
	@override String get selectA_friendToProvideSecurityCodeTip => '請在成員清單中選取一位親友，產生並為您提供安全碼驗證真實身分。其目的是為了防止手機號碼丟掉或被盜時帳號被他人控制。';
	@override String formatIsXdigits({required Object num}) => '格式為${num}位數字';
	@override String get signInSuccessfully => '登入成功！';
	@override String get twoFAandLogin => '雙重驗證並登入';
	@override String get verificationSuccessful => '驗證成功！';
	@override String get validationFailed => '驗證失敗！';
	@override String get dappInfo => 'DApp資訊';
	@override String get securityCircle => '安全圈';
	@override String get securityCode => '安全碼';
	@override String get provideSecurity => '提供安全';
	@override String get addManully => '手動新增';
	@override String get addFromContacts => '從通訊錄新增';
	@override String get addSecurityCircle => '新增安全圈';
	@override String get inputType => '輸入型別';
	@override String get mobileNumber => '手機號碼';
	@override String get did => '地址id';
	@override String get pleaseEnterValidDID => '請輸入一個有效的去中心化身份id';
	@override String get pleaseEnterValidWalletAddress => '請輸入一個有效的錢包地址';
	@override String get appellation => '稱謂';
	@override String get appellationHint => '你怎麼稱呼它，比如“寶貝”';
	@override String get addSecurityCircleTips => '請不要將不信任的人新增到安全圈。';
	@override String get referralTeam => '推薦團隊';
	@override String get profile => '賬戶資料';
	@override String get menu => '選單';
	@override String get directly => '直接的';
	@override String get indirectly => '間接的';
	@override String get inviteContacts => '邀請聯絡人';
	@override TextSpan refereesAtFirstLevelDesc({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: '你的邀請人是'),
		nickname,
		const TextSpan(text: '，你已直接推薦'),
		num1,
		const TextSpan(text: '人，其中當前線上'),
		num2,
		const TextSpan(text: '人。'),
	]);
	@override TextSpan refereesAtSecondLevelDesc({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
		const TextSpan(text: '你已間接推薦'),
		num1,
		const TextSpan(text: '人，其中當前線上'),
		num2,
		const TextSpan(text: '人。'),
	]);
	@override TextSpan invitationToBoostMiningDesc({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
		const TextSpan(text: '邀請好友加入Delta，一起提高社會共識。每直接推薦一人挖礦速率提升基礎速率的'),
		rate1,
		const TextSpan(text: '。 '),
		btn,
	]);
	@override TextSpan invitationToBoostMiningDesc2({required InlineSpan rate2}) => TextSpan(children: [
		const TextSpan(text: '邀請好友加入Delta，一起提高社會共識, 每間接推薦一人挖礦速率提升基礎速率的'),
		rate2,
		const TextSpan(text: '。'),
	]);
	@override String areYouSureToRemove_x({required Object name}) => '你確定刪除“${name}”嗎？';
	@override String get safetyCircleRoleQ => '安全圈的作用什麼?';
	@override String get safetyCircleRoleA => '在敏感情況下提供二次身份驗證，來保護你的賬戶安全。';
	@override String get howSecurityCirclesWorkQ => '安全圈的工作原理？';
	@override String get howSecurityCirclesWorkA => '當需要安全圈進行驗證的情況下，Delta智慧合約程式將隨機在安全圈好友列表中選取一位成員，來幫助你提供一個安全碼為你完成身份安全驗證。當你向該成員詢問安全碼的時候，它就可以確認你是否是你本人。同時程式會提示:"如果不是你本人的情況下拒絕提供安全碼"，從而來保護你的賬戶安全。所以你應該隨時確認安全圈成員是你可以信任的人。';
	@override String get securityCircleBeUsedQ => '什麼時候會用到？';
	@override String get securityCircleBeUsedA1 => '1. 當你的Delta APP失去控制的時候，一般情況是手機丟失或被盜。';
	@override String get securityCircleBeUsedA2 => '2. 當一些敏感操作的情況下，Delta智慧合約程式需要確認是你是你本人。';
	@override String get provideSafetyTip1 => '當您的好友向您詢問它的安全碼時，請您務必確認它是它本人。';
	@override String get provideSafetyTip2 => '您正在為以上好友提供安全保護，它們將您在安全圈中設定為了最信任的人，需要您在它的賬戶遇到敏感操作的情況下為它提供安全確認。';
	@override String get provideSafetyTip3 => '在需要的時候雙擊對方頭像可提取安全碼。';
	@override String get doesNotSecurityCodeNeedsRetrieved => '對方目前沒有需要提取的安全碼!';
	@override String get existSecurityCodeTip => '請您務必確認向您索取安全碼的親友是它本人，為了保護親友安全，在非親友本人的情況下您應該拒絕提供。';
	@override String get avatarSettings => '頭像設定';
	@override String get NFTAvatarPropertyRightsText => '宣告：使用相關NFT作為頭像僅為個人喜好，與擁有該NFT的智慧財產權無關。';
	@override String get projectWebsite => '專案網站: ';
	@override String get whitepaper => '白皮書：';
	@override String get indexID => '索引Id';
	@override String indexesRangeFromXtoY({required Object start, required Object end}) => '索引範圍在${start} 到 ${end}之間';
	@override String get inputToLoadNFTAvatarTip => '輸入您喜歡NFT的索引id，程式將自動幫您載入為頭像。';
	@override String get miningRate => '挖礦速率';
	@override String get miningDetails => '挖礦詳情';
	@override TextSpan totalMiningRateEachDay({required InlineSpan rate}) => TextSpan(children: [
		const TextSpan(text: '合計挖礦速率: '),
		rate,
		const TextSpan(text: ' δ/天'),
	]);
	@override String get EndOfMiningSession => '週期挖礦結束：';
	@override String get tapToMineDeltaCoin => '點選挖掘Delta幣 ↑';
	@override String get clickToStartMining => '點選開始挖礦！';
	@override String get miningHasStoppedPromptDesc => '挖礦已停止，每24小時為一個挖礦週期，點選閃電圖示開始新一輪挖礦。Delta的挖礦是一種分配機制，不會消耗您裝置的額外算力與網路流量。';
	@override String get aboutBaseRate => '關於基礎速率？';
	@override String get baseRateDescription => '根據白皮書約定，Delta挖礦的基礎速率遞減規則將分為兩個階段。 \n第1階段：當參與（註冊）人數為 3000 或更少時，該速率為 32δ/天。以此作為起步基準，每當人數增加10倍時，基本速率減半。 \n第2階段：當參與人數達到3000萬及以上，每當人數增加3倍時，基本速率減半。直到最後挖完停產。';
	@override String get baseRate => '基礎速率';
	@override String get directReferralRewards => '直接推薦獎勵';
	@override String get directReferralRewardDesc => '每直接推薦1人，當其處於挖礦狀態時，您的挖礦速率將額外提升基礎速率的1/3。\n\n 另外，您的推薦人的挖礦狀態，也將計算到您的直接推薦獎勵中。';
	@override String get indirectReferralRewards => '間接推薦獎勵';
	@override String get indirectReferralRewardDesc => '當一個間接推薦人處於挖礦狀態時，您的挖礦速率將額外提升基礎速率的1/10。\n\n 您的直接推薦團隊，它們再推薦的每一個人都代表為您的間接推薦。';
	@override String get mine => '開採';
	@override String get thisMiningInformation => '本次採礦資訊';
	@override TextSpan participatedInMiningXtimes({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '已參與挖礦：'),
		x,
		const TextSpan(text: '次'),
	]);
	@override TextSpan totalIncomeThisTimeXDeltaCoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '本次總收益：'),
		x,
		const TextSpan(text: ' Delta幣'),
	]);
	@override TextSpan basicIncomeXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '基礎收益：'),
		x,
		const TextSpan(text: ' 個幣'),
	]);
	@override TextSpan directTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '直接團隊貢獻：'),
		x,
		const TextSpan(text: '個幣'),
	]);
	@override TextSpan indirectTeamContributionXcoins({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '間接團隊貢獻：'),
		x,
		const TextSpan(text: '個幣'),
	]);
	@override TextSpan timeIntervalFromLastMiningX({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '與上次挖礦間隔時長：'),
		x,
	]);
	@override TextSpan effectiveMiningTimeXhours({required InlineSpan x}) => TextSpan(children: [
		const TextSpan(text: '有效挖礦時長：'),
		x,
	]);
	@override String xhours({required Object x}) => '${x}小時';
	@override String get keep3_5peopleInTheSafetyCircleTip => '為了資產安全，安全圈成員應該隨時保持3-5個可信任的人。';
	@override String get index => '索引';
	@override String get amount => '金額';
	@override String get balance => '餘額';
	@override String get timeStamp => '時間戳';
	@override String get summary => '摘要';
	@override String get miningHasStopped => '挖礦已停止。';
	@override String get miningHasStoppedDesc => '目前您的挖礦已停止，馬上開始賺取收益。';
	@override String get startMining => '開始挖礦';
	@override String get changeMobileNumber => '更換手機號碼';
	@override String get currentMobileNumber => '當前手機號碼';
	@override String get newMobileNumber => '新的手機號碼';
	@override String get securityCodeFormatIs6digits => '安全碼格式為6位數字！';
	@override String get startVrification => '開始驗證';
	@override String mobileNumberAlreadyExists_associated({required Object dId}) => '這個手機號碼已存在，關聯DID： ${dId}';
	@override String get noDataYet => '暫無資料';
	@override String get previousMobileNumber => '以前的手機號碼';
	@override String get changeLog => '變更記錄';
	@override String get referralLinkToShare => '推薦連結分享';
	@override String get referrer => '推薦人';
	@override String get isoCountryCode => 'ISO國家程式碼';
	@override String get avatarLogo => '頭像標識';
	@override String get creationTime => '建立時間';
	@override String get lastUpdate => '最後一次更新';
	@override String get numberOfSecurityCircleMembers => '安全圈成員數量';
	@override String get theLatestMining => '最近一次挖礦';
	@override String get effectiveMiningDays => '有效挖礦的天數';
	@override String get modifyNickname => '修改暱稱';
	@override String get didNotChange => '沒有改變!';
	@override String get kycVerification => 'KYC驗證';
	@override String get faceID => '人臉ID';
	@override String get touchID => '指紋ID';
	@override String get biometricsAuthorizationTest => '生物特徵認證測試';
	@override String get currentState => '當前狀態';
	@override String get biometricsAuthenticationLocalizedReason => '使用裝置的解鎖來驗證身份。';
	@override String get graph => '圖譜';
	@override String get referralRelationshipGraph => '引薦關係圖譜';
	@override String get nativeContacts => '本機聯絡人';
	@override String get registrationAndMiningTrends => '註冊與挖礦趨勢';
	@override String get inMining => '挖礦中';
	@override String get registrationVolume => '註冊量';
	@override String get unmined => '未開採';
	@override String get mined => '已開採';
	@override String get communityMining => '社羣採礦';
	@override String get consensusPromotionFund => '共識促進基金';
	@override String get ecologicalAwardFund => '生態獎勵基金';
	@override String get icpFuelCrowdfunding => 'ICP燃料眾籌';
	@override String get coreDeveloperRewards => '核心開發者獎勵';
	@override String get totalAllocation => '總量分配';
	@override String get miningRatio => '開採比例';
	@override Map<String, String> get billion => {
		'30': '300億',
		'60': '600億',
		'180': '1800億',
		'300': '3000億',
	};
	@override String get watchAdsToSupportDevelopers => '看廣告支援開發者';
	@override String get loadingAdcomponents => '正在載入廣告元件…';
	@override String get timeIsNotUp => '時間未到！';
	@override String get loadingFailed_maybeTheNetworkIsBlocked => '載入失敗, 可能網路受阻！';
	@override String get pendingUSCTrecords => '待定的USCT記錄';
	@override String get pendingUSCTrecordsDesc => '待定的USCT記錄將在15-30天內與廣告平臺進行比對確認，有效的記錄將轉移到USCT記錄列表，並新增相應的USCT金額到賬戶餘額。';
	@override String get validity => '有效性';
	@override String get advertiser => '廣告商';
	@override String get earned => '已賺取';
	@override String get withdraw => '提現';
	@override String get validUSCTrecords => '有效的USCT記錄';
	@override String get USCTmining => 'USCT 挖礦';
	@override String get aboutUSCTmining => '關於USCT挖礦？';
	@override String get aboutUSCTminingItme1 => '1. USDT 是一種全球流行的美元穩定幣，可在全球主流加密貨幣交易所輕鬆的兌換成各國主權貨幣。';
	@override String get aboutUSCTminingItme2 => '2. USCT 是USCT挖礦的收益的臨時性計量值，全稱USD credit， 最終根據廣告平臺實際結算額度和分配規則，並按相應比例可轉換為USDT。';
	@override String get aboutUSCTminingItme3 => '3. USCT挖礦 是Delta社羣的一種流量廣告變現功能。利用Delta社羣龐大的使用者群體，為廣告商、Delta開發者和曠工提供多方受益。其設計目的是為在Delta生態還沒有形成和繁榮的早期階段，為曠工提供一定的有效收入；同時，也為開發者提供一定的經費支援，確保開發者能夠持續長期的提供開發服務，最終能夠實現白皮書的所有規劃；也為產品廣告商提供一種有效的推廣渠道。';
	@override String get aboutUSCTminingItme4 => '4. 分配規則設計為總收益的40%作為開發者技術服務佣金，其餘的60%作為社羣曠工獎勵。曠工獎勵部分採用與DTC類似的多級分配模型，將這些曠工獎勵再按6:3:1的比例分為3份，每次一的USCT挖礦的曠工獎勵的6成分配給當前看廣告的曠工，3成分配給上級推薦人，1成分配給二級推薦人。同理，你推薦的好友透過USCT挖礦您也可以得到同樣的推薦者獎勵。這樣多層次分配的好處在於任何人都可以透過發展下線團隊來獲得相對大量的USDT收益。';
	@override String get aboutUSCTminingItme5 => '5. 結算週期為7天，即每7天與廣告平臺核對一次有效性,確認有效的收益和實際金額將記錄到餘額中。每次提現的最低額度為10USDT。';
	@override String linesXtoY({required Object x, required Object y}) => '第${x}到${y}行';
	@override String get wallet => '錢包';
	@override String get multiChainWallet => '多鏈錢包';
	@override String get deposit => '存入';
	@override String get transfer => '轉賬';
	@override String xcoinInWallet({required Object coinCode}) => '錢包地址中的${coinCode}';
	@override String get transactions => '交易記錄';
	@override String get network => '網路';
	@override String get walletAddress => '錢包地址';
	@override String get currentAddress => '當前地址';
	@override String get depositAddress => '充值地址';
	@override String get receivingMoneyAddress => '收款地址';
	@override String get applyTempDepositAddress => '申請臨時充值地址';
	@override String get tempDepositAddressTip => '1.這是一個共享的存款地址。請不要在租約到期或解除繫結後存入金額。如果發生這種情況，該金額將會丟失。';
	@override String get tempDepositAddressTip2 => '2.在存款前請務必確認[鏈名稱]與[幣種名稱]完全匹配; 如果是合約代幣還需要確認[合約標準]與[合約地址]完全匹配。';
	@override String get tempDepositAddressTip3 => '3.請不要試圖存入與以上提示中任何引數不匹配的資金，否者該金額將會丟失。';
	@override String get tempDepositAddressTip4 => '4.如需要存入其它型別的資產，請切換到對應的幣種頁面和引數選項申請一個新的地址。';
	@override String get applyExtensionOfValidity => '申請延長有效期';
	@override TextSpan depositAddressExpireTip({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
		const TextSpan(text: '該地址將在'),
		diff,
		const TextSpan(text: '後過期，過期前12小時內可'),
		tap('手動延長'),
		const TextSpan(text: '有效期。'),
	]);
	@override String get canOnlyRenewWithin12hoursInAdvance => '只能提前12小時內續訂';
	@override String get theReceivingAddressValidForLongtime => '該收款地址長期有效.';
	@override String get theReceivingAddressValidForLongtimeAndAutomaticallyCredited => '該收款地址長期有效，並實時自動入賬。';
	@override String get confirmDeposited => '確認已存入';
	@override String get unbindThisDepositAddress => '解綁該充值地址';
	@override String get confirmDepositedTip => '如果已轉入資金，請在10分鐘後點選以上按鈕觸發計賬到錢包。';
	@override String get unbindDepositAddressTip => '為了減少智慧合約的執行開銷，如果在有效期內不會再存入資金的情況下，請解綁充值地址。';
	@override String get transferToAddress => '轉至地址';
	@override String get longPressToPaste => '長按貼上';
	@override String get all => '全部';
	@override String balanceX({required Object x}) => 'Balance ${x}';
	@override String get transferOut => '轉 出';
	@override String depositXcoins({required Object x}) => '入賬 ${x}';
	@override String get sender => '傳送者';
	@override String get recipient => '接收者';
	@override String get memo => '備註';
	@override String get kind => '方式';
	@override String get transferAmountExceedsAvailableBalance => '轉賬金額超過可用餘額';
	@override String get pleaseEnterValidAmount => '請輸入有效金額';
	@override String get networkFee => '網路手續費';
	@override String get fee => '手續費';
	@override String validLengthXcharacters({required Object x}) => '地址有效長度${x}字元';
	@override String get historys => '歷史記錄';
	@override String get dtcCreditdetail => 'Delta 積分詳情';
	@override String get usdCreditdetail => 'USD 積分詳情';
	@override String get dappSquare => 'dApp 廣場';
	@override String get amountRaised => '募集金額';
	@override String get disbursedAmount => '發放金額';
	@override String get participationTimes => '參與人次';
	@override String get completionRate => '完成率';
	@override String get exchangeRate => '兌換率';
	@override String get icpCrowdfunding => 'ICP 眾籌';
	@override String get crowdfunding => '眾籌';
	@override String get trendsCurve => '趨勢曲線';
	@override String get fullScreenView => '全屏檢視';
	@override String get walletBalance => '錢包餘額：';
	@override String get manageWallet => '管理錢包';
	@override String get fundraiseAmount => '募資金額';
	@override String get exchangeRewardAmount => '換取獎勵金額';
	@override String get fundraise => '籌集資金';
	@override String rangeIntegersX({required Object x}) => '範圍：整數 ${x}';
	@override String successfullParticipatingFundraisingXtip({required Object amount}) => '成功參與募資並獲得獎勵${amount}DTCT';
	@override String get amountSummary => '金額彙總';
	@override String get changePreferred => '更改首選';
	@override String get changePreferredAddress => '更改首選地址';
	@override String get preferredAddressTip => '當使用註冊的移動號碼或DID收款時，資金將自動轉入首選地址。';
	@override String get newAddress => '新建地址';
	@override String get newAddressTip => '為了防止被濫用，當錢包地址超過一個時，每建立一個新地址將產生一筆交易手續費。';
	@override String get createNew => '新建';
	@override String get chainNetworkName => '鏈網路名稱';
	@override String get from => '來自';
	@override String get to => '到';
	@override String get noAvailableDepositAmountDetected => '未檢測到可用的存入金額！';
	@override String get crossChainReceiveMoneyMonitoring => '跨鏈收款正在監聽中 …';
	@override TextSpan receivedV({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '已收到('),
		v,
		const TextSpan(text: ')'),
	]);
	@override TextSpan confirming({required InlineSpan v}) => TextSpan(children: [
		const TextSpan(text: '確認中('),
		v,
		const TextSpan(text: ')'),
	]);
	@override String get thingsToNote_forNewbies => '注意事項(新手必讀)';
	@override String get whyUseSharedAddresses => '為什麼採用共享地址？';
	@override String get useSharedrAdvantage => '在跨鏈存款時，採用共享地址的優勢如下：';
	@override String get useSharedrAdvantage1 => '1. 減少轉賬手續費浪費，降低使用者使用成本。因為如果採用獨享地址，會導致資金過於分散，一般為了方便之後其他使用者在提現時轉出， 當使用者充值後需要將資金二次轉賬歸集到一個或少量地址管理。';
	@override String get useSharedrAdvantage2 => '2. 在共享方案中，程式只需要維護一個相對較小的地址池，可以快速匹配轉出資金和輕量的收款監聽，這樣可以減少計算資源開銷。相比之下，如果採用獨享地址，情況會恰好相反。';
	@override String get tokenType => '代幣型別';
	@override String get contract => '合約';
	@override String get contractStandard => '合約標準';
	@override String get contractAddress => '合約地址';
	@override String get native => '原生';
	@override String get confirmUnbindingPleaseEnterYes => '確認解除繫結，請輸入"yes"';
	@override String get listAllWorkingTempReceivingAddresses => '列出所有正在工作的跨鏈充值地址';
	@override String get setNote => '設定備註';
	@override String lengthCannotExceedXbytes({required Object x}) => '長度不能超過 ${x} 位元組';
	@override String get transferFee => '轉賬費';
	@override String get crossChainFee => '跨鏈費';
	@override String get crossChainTransferOutError => '跨鏈轉出錯誤';
	@override String get chainName => '鏈名稱';
	@override String get message => '訊息';
	@override String get dontShowAgain => '不再顯示';
	@override String get queuing => '佇列中';
	@override String get optional => '可選的';
	@override String get publiclyVisible => '公開可見';
	@override String get rates => '費率';
	@override String get minimum => '最低限度';
	@override String get maximum => '最多限度';
	@override String get minimumBlockConfirmations => '最小區塊確認數';
	@override String get dsmsVerifyTerminal => 'DSMS驗證終端';
	@override String get overall => '總體';
	@override String get my => '我的';
	@override String get checkValidatorQualifications => '檢查驗證者許可權資格';
	@override String get getVerifierPermissions => '獲取驗證者許可權';
	@override String get qualification => '資質';
	@override String get upperLimit => '上限';
	@override String get maximumNumberOfTerminalsAllowedToAccess => '允許接入終端數量上限';
	@override String get numberOfExistingAccessTerminals => '已有接入終端數量';
	@override String get applyingForDSMSVerifierPermissionsTips => '申請驗證者許可權前，需要準備一臺閒置的安卓手機和一個專用的接入號碼，並下載安裝DSMS接入終端應用程式。';
	@override String get downloadLink => '下載連結';
	@override String get alreadyReadyFollowingTheAboveTips => '已按照以上提示準備就緒';
	@override String get globalUniversal => '全球通用';
	@override TextSpan insufficientLocalVerifierTips({required InlineSpan gu}) => TextSpan(children: [
		const TextSpan(text: '當前本地沒有足夠的驗證者參與DSMS驗證接入服務，請選擇"'),
		gu,
		const TextSpan(text: '"接入服務。'),
	]);
	@override String get asDedicatedNumberForAccess => '作為接入專用號';
	@override String pleaseCheckTip({required Object tip}) => '請勾選“${tip}”';
	@override String get inputLengthTooShort => '輸入長度太短';
	@override String get shortName => '簡稱';
	@override String pleaseEnterXname({required Object name}) => '請輸入${name}';
	@override String get applicationIsBeingSubmitted_pleaseWait => '正在提交申請，請稍候...';
	@override String get applyForDSMSVerifierPermission => '申請DSMS驗證者許可權';
	@override String get confirmInformation => '確認資料';
	@override String get lastHeartbeat => '最後心跳';
	@override String get expirationTime => '到期時間';
	@override String get country => '國家';
	@override String get accessTerminals => '接入終端';
	@override String get totalNumberOfDSMSaccessNumberTerminals => 'DSMS接入號碼終端總量';
	@override String get textContent => '文字內容';
	@override String get scanQRcodeToLogin => '掃碼登入';
	@override String get confirmLogin => '確認登入';
	@override String get authorizeSubApplicationToLogin => '授權該子應用登入';
	@override String get authorizationSuccessful => '授權成功！';
	@override String get launchSMSprogram => '啟動簡訊程式';
	@override String get notApplied => '沒有申請';
	@override String get validityPeriod => '有效期';
	@override String get renewal => '續期';
	@override String get scanCodeToAuthorizeTerminalLogin => '掃碼授權終端登入';
	@override String get rewards => '獎勵';
	@override String get roles => '角色';
	@override String get developerCenter => '開發者中心';
	@override String get appName => '應用名稱';
	@override String get pleaseSelect => '請選擇';
	@override String get category => '類目';
	@override String get keywords => '關鍵詞';
	@override String get pleaseEnterAkeyword => '請輸入一個關鍵詞';
	@override String get createApplication => '建立應用程式';
	@override String get appType => '應用型別';
	@override String get numberOfCategoriesMustBetween1and3 => '類目數量必須在1到3個之間';
	@override String get appLogoSpecifications => '圖片格式：png，大小：100KB以內，解析度(畫素)：256*256';
	@override String get localAlbum => '本地相簿';
	@override String get networkPath => '網路路徑';
	@override String get imageURLkAddress => '圖片URL地址';
	@override String get urlAddressFormatIsIncorrect => 'URL地址格式不正確';
	@override String get imageFormatOnlySupportsPng => '圖片只支援“png”格式.';
	@override String lengthMustBeBetweenA_BCharacters({required Object a, required Object b}) => '長度必須介於${a}-${b}個字元之間';
	@override String get introduction => '簡介';
	@override String imageSizeCannotBeLargerThanA_currentlyB({required Object a, required Object b}) => '圖片大小不能大於${a}，目前為${b}';
	@override String imageResolutionMustBeP1pixels_currentlyP2({required Object p1, required Object p2}) => '圖片解析度必須為：${p1}(畫素)，當前為${p2}';
	@override String get becomeDeveloper => '成為開發者';
	@override String get developerInformation => '開發者資訊';
	@override String get teamName => '團隊名稱';
	@override String get website => '網站';
	@override String get other => '其它';
	@override String get githubVerification => 'Github驗證';
	@override String get exampleUrl => '示例Url';
	@override String githubVerificationTip({required Object did}) => '請使用您的GitHub賬戶在倉庫中建立一個\'delta.did\'檔案,檔案內容為\'${did}\'；然後，將該檔案的githubusercontent Url地址貼上到這個輸入框用於身份驗證。';
	@override String get createApp => '建立應用';
	@override String get appManagement => '應用管理';
	@override String get statusLogs => '狀態日誌';
	@override String get bad => '不好';
	@override String get normal => '一般';
	@override String get good => '很好';
	@override String get onceCreatedItCannotBeChanged => '一旦建立,不可更改！';
	@override String get manageApplicationEntity => '管理應用實體';
	@override String get currentVersion => '當前版本';
	@override String get submitVersion => '提交版本';
	@override String get packageOnlySupportZipCompressedFile => '程式包僅支援zip壓縮檔案';
	@override String theXfileWasNotFoundInTheZipPackage({required Object name}) => 'zip程式包中未找到\'${name}\'檔案';
	@override String get fileList => '檔案列表：';
	@override String get programPackage => '程式包：';
	@override String get automaticallyExtractFromVersionFile => '自動從 \'.version\' 檔案中提取';
	@override String get dappVersionFormatTip => '版本號格式必須為小數且精度保持2位，最大不能超過99.99';
	@override String versionNumberMustBeGreaterThanCurrentVersionX({required Object v}) => '版本號必須大於當前版本\'${v}\'';
	@override String get versionNotes => '版本說明：';
	@override String get updateRelease => '更新版本';
	@override String get loadAndRun => '載入並執行';
	@override String get notYetSubmittedProgramPackage => '還未提交程式包！';
	@override String get authorizeMinidAppLogin => '授權 mini-dApp 登入';
	@override String get confirmAuthorizationPleaseEnterYes => '確認授權, 請輸入“yes”';
	@override String get authorizeNow => '立即授權';
	@override String get operation => '操作: ';
	@override String get statusChange => '狀態變更';
	@override String get changeTo => '改變到：';
	@override String get notes => '備註: ';
	@override String get changesNotEffective => '更改無效 !';
	@override String get released => '已釋出';
	@override String get inPublicBeta => '公測中';
	@override String get developers => '開發者: ';
	@override String get reviewList => '評論列表: ';
	@override String get postReview => '發表評論';
	@override String get scoreNow => '立即評分';
	@override String get description => '描述: ';
	@override String get noData => '(^-^) \n 無資料';
	@override String versionHasBeenUpdatedFromAtoB({required Object a, required Object b}) => '版本已從 ${a} 更新至 ${b}';
	@override String get loadNewVersion => '載入新版本';
	@override String get name => '名稱: ';
	@override String get canisterId => '容器罐Id: ';
	@override String get updateTime => '更新時間';
	@override String get contractCanistersState => '合約罐狀態';
	@override String get userDistribution => '使用者分佈';
	@override String get settings => '設 置';
	@override String get security => '安 全';
	@override String get invite => '邀請';
	@override String get more => '更多…';
	@override String get receiveAddress => '接收地址：';
	@override String get hangingAmount => '掛起金額';
	@override String get hangingAmountTips => '掛起金額是由您的下級團隊挖礦而產生獎勵的臨時記錄，一旦您進行一次挖礦這些金額將被收集到待定金額中';
	@override String get pendingAmount => '待定金額';
	@override String get pendingAmountTips => '待定金額是指還未與廣告商進行確認比對的金額，比對有效的金額將被轉移到有效USCT記錄中，如有無效的部分將被排除';
	@override String get received => '已收到';
	@override String get processing => '處理中';
	@override String get replied => '已應答';
	@override String get rejected => '拒絕';
	@override String get unknown => '未知';
	@override String get insufficientBalance => '餘額不足！';
	@override String InsufficientXbalanceToPayCrossChainNetworkFee({required Object x}) => '${x}餘額不足以支付跨鏈網路費';
	@override String get aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment => '有一筆交易尚未完成，暫不能轉賬';
	@override String get thisfunctionNotSupportExternalCalls => '該函式不支援被外部呼叫';
	@override String get noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry => '沒有匹配到可用於支付跨鏈手續費的地址，請切換到其它鏈網路嘗試。';
	@override String currentMaximumMatchedSingleTransferAmountIsX({required Object x}) => '當前匹配到單筆最大可轉賬金額為${x}';
	@override String get memoMustNotBeMoreThan64bytes => '備註不得超過 64 位元組';
	@override String insufficientBalance_theAmountIsX({required Object x}) => '餘額不足，金額為：${x}';
	@override String get boundRreceivingAddressesExceed3Tip => '已繫結收款地址不能超出3個，\n如需繫結新的收款地址，\n請先解綁另外一個收款地址';
	@override String parametersA_exception({required Object x}) => '引數：${x}，異常';
	@override String get parameterException => '引數異常！';
	@override String get transferAmountMustBeLargerThan0 => '轉賬金額必須大於0';
	@override String get authorizationHasExpired => '授權已過期';
	@override String get theAppHasNotBeenAuthorizedByOwner => '該應用尚未獲得所有者授權';
	@override String get authenticationTokenIsInvalid => '身份驗證令牌無效';
	@override String get verifyInfoIsInvalidOrExpired => '驗證資訊無效或過期';
	@override String get verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000 => '驗證接入終端數量已經超過萬分之一的限制';
	@override String get timeToParticipateInMiningMustBeMoreThan3Days => '參與挖礦的時間必須大於3天';
	@override String get numberOfSafetyCircleCannotBeLessThan3 => '安全圈成員人數不能少於3人';
	@override String get avatarIsNotSet => '頭像未設定';
	@override String get numberOfDirectReferralsCannotBeLessThan3 => '直接推薦人數不能小於3人';
	@override String get insufficientTimeLimit_mobileNumberOnlyChangedOnceYear => '時限不足，一年內只能換一次手機號碼。';
	@override String get mobileNumberAlreadyExistsAndCannotBeRepeated => '該手機號碼已存在，不能重複';
	@override String get securityCodeIsIncorrect => '安全碼不正確';
	@override String get securityCodeMayHaveExpired => '安全碼可能已過期';
	@override String get sessionIdIsInvalidOrExpired => '會話id無效或過期';
	@override String get sessionHasBeenAuthorized => '該會話已授權完成！';
	@override String canOnlyBeRenewedWithinXdaysBeforeExpiration({required Object x}) => '只能期滿前${x}天內續期';
	@override String get notYetGrantedDeveloperPermissions => '還未獲得開發者許可權';
	@override String fieldXcannotBeEmpty({required Object x}) => '欄位${x}不能為空';
	@override String get emailFormatError => 'email格式錯誤';
	@override String theXformatIsIncorrect({required Object x}) => '\'${x}\'格式錯誤';
	@override String lengthOfFieldXmustBeBetweenYandXcharacters({required Object x, required Object y, required Object z}) => '欄位“${x}”的長度必須在 ${y} 到 ${z} 個字元之間。';
	@override String theXselectionMustBeBetweenYandX({required Object x, required Object y, required Object z}) => '‘${x}’選擇範圍必須介於 ${y} 至 ${z}個之間';
	@override String get unchanged_sameAsOldContent => '未改變，與舊的內容相同！';
	@override String XYalreadyexists({required Object x, required Object y}) => '${x}: \'${y}\' 已存在！';
	@override String get mobileNumberHasNotJoinedDelta => '這個手機號碼還未加入Delta!';
	@override String get referrerIdCannotBeEmpty => '推薦人ID不能為空！';
	@override String get referrerIdDoesNotExist => '推薦人 ID 不存在！';
	@override String get didIsIncorrectOrInvalid => 'DID 不正確或無效！';
	@override String get accessTokenIsIncorrectOrInvalid => 'accessToken 不正確或無效！';
	@override String get minimumWithdrawalAmountIs1USD => '一次提現金額最少1USD';
	@override String get miningTimeIsNotYet => '挖礦時間尚未到';
	@override String get alreadyExists_pleaseDoNotRepeatedly => '已存在，請不要重複新增！';
	@override String get registrationNumberCannotBeUsedAsAccessNumber => '不能使用註冊號碼作為驗證接入號';
	@override String get canotAddYourSelf => '不能加你自己';
	@override String get logOut => '退出登入';
	@override String get confirmLogout => '確認退出登入';
	@override String get logOutTipsText => '友情提示：按照白皮書的相關約定，賬戶的每次登入驗證將會消耗你一定量的DTC幣支付給驗證者作為激勵，請勿在非必要的情況下嘗試登入和登出，點選以下按鈕將會立即退出登入。';
	@override String get ConfirmLogoutPleaseEnterYes => '確認退出登入請輸入"yes"';
	@override String get tip => '提示';
	@override String get cancel => '取消';
	@override String get close => '關閉';
	@override String get selected => '已選定';
	@override String get edit => '編輯';
	@override String get submit => '提交';
	@override String get goBack => '回退';
	@override String get copiedToClipboard => '已複製到剪下板。';
	@override String get nickname => '暱稱';
	@override String get confirm => '確認';
	@override String get cannotBeEmpty => '不能為空';
	@override String get deleteSuccessful => '刪除成功！';
	@override String get successfullyModified => '修改成功！';
	@override String get executionSuccessful => '執行成功！';
	@override String get preview => '預覽';
	@override String get followSystem => '跟隨系統';
	@override String get change => '更改';
	@override String get replace => '更換';
	@override String get view => '檢視';
	@override String get manage => '管理';
	@override String get modify => '修改';
	@override String get replacedSuccessfully => '更換成功!';
	@override String get authentication => '鑑權';
	@override String get reacquire => '重新獲取';
	@override String get tryAgain => '再試一次';
	@override String get querying => '正在查詢 …';
	@override String get writingToOnChain_pleaseWait => '正在寫入鏈上，請稍候 …';
	@override String get versionCheck => '版本檢測';
	@override String get alreadyLatestVersion => '已是最新版本！';
	@override String get foundNewVersion => '發現新版本：';
	@override String get upgradeLink => '升級連結: ';
	@override String get deviceDescription => '裝置描述: ';
	@override String get notification30SecondsBeforeMiningStops => '在挖礦停止前30秒執行通知提醒！';
	@override String get goMining => '去挖礦';
	@override String get deltaMiningReminder => 'Delta挖礦提示';
	@override String get clickToMine_miningIsAboutToStop => '點這裡去挖礦，挖礦即將停 ！';
	@override String get incorrect_input => '輸入不正確！';
	@override String get are_you_sure_delete => '確認刪除嗎？';
	@override String get delete_account => '刪除帳戶';
	@override String get how_to_operate_it => '查看如何操作?';
	@override String get deletion_warning_tip => '如果刪除帳戶，您將失去所有的Delta硬幣，其他所有成員給您帶來的收益也將丟失。';
	@override String get launchWhatsAppProgram => '啟動WhatsApp程式';
	@override String get sms => '簡訊';
	@override String get whatsApp_verification_tips => '包含此圖示的存取號碼表示同時支援WhatsApp訊息驗證。在發送跨國訊息時，建議使用WhatsApp，來提高成功率並降低費用。';
	@override String get ihaveSentVerificationString => '我已發送驗證串';
	@override String get totalOfPeople => '總人數：';
	@override String get numberOfPeopleMining => '挖礦人次';
	@override String get useBrowserScanQRcodeToSMSprogram => '您可在另一個裝置使用瀏覽器掃描二維碼並將其傳遞至簡訊程式';
	@override String get toggle => '切換';
	@override String get DSMSverifier => 'DSMS驗證者';
	@override String get activate => '啟動';
	@override String get activated => '已啟動';
	@override String get generateActivationCommand => '產生啟動指令';
	@override String get activationCommand => '啟動指令';
	@override String get activationSentedTip => '啟動簡訊發送後，請在接取終端設備上查看啟動狀態。';
	@override String get biometricsNotEnabledTip => '您的裝置尚未啟用生物辨識（人臉或指紋），請啟用後繼續。';
	@override String get error => '錯誤';
	@override String get exceptionOccurredWhenCallingBiometric => '調用生物辨識（人臉或指紋）功能出現異常！';
	@override TextSpan accessNumberSelectionTip({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
		const TextSpan(text: '已勾選'),
		checkedNum,
		const TextSpan(text: '個接入號碼，應該選擇'),
		shouldNum,
		const TextSpan(text: '個。'),
	]);
	@override String sentaboveXaccessNumbers({required Object text, required Object n}) => '${text}已傳送到以上的${n}個接入號碼嗎？';
	@override String get interface => '介面：';
	@override String get waitingTimeoutOrSenderNumberMismatch => '等待逾時或寄件者號碼不符';
	@override String mobileNumberOfsecurityCircleYouFilledDoesntMatch({required Object x}) => '您補填的安全圈成員手機號碼不符:${x}';
	@override String get loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification => '退出後10分鐘內登錄，可避免雙重驗證。';
	@override String leastXmobileNumbersMustCompleted({required Object n}) => '必須填寫至少${n}個手機號碼';
	@override String get noAccessNumberInYourRegionYet => '你所在的區域暫時還沒有存取號碼';
	@override String get notEnoughAccessNumbersInYourRegion => '你所在的區域存取號碼不充足';
	@override String get tipsForDeployDSMSterminal => '系統已經自動為您加載了一些其它國家的接入號碼，為了提供更好更低成本的驗證服務，建議您或聯繫您的推薦人在本地部署DSMS終端，賺取驗證費。';
	@override String get noOneCanProvideMeTheSecurityCode => '沒有一個人可以提供給我安全碼？';
	@override String get useSupplementalMode => '使用補充模式';
	@override String get returnToSecurityCodeMode => '返回安全碼模式';
	@override String get enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted => '請輸入它們的關聯手機號碼，可省略國家代碼。';
	@override String mobileNumberForNameIsIncorrect({required Object name}) => '${name}的行動號碼不正確';
	@override String get matchingVerificationStrategyIs => '符合的驗證策略為：';
	@override String get balanceGreater3ICP_noNeedPourFuel => '餘額大於3 ICP暫時不需倒入燃料。';
	@override String get escrowAccount => '託管帳戶';
	@override String get fuelRelay => '燃料中繼';
	@override String get pourFuel => '導入燃料';
	@override String get fuelState => '燃料狀態';
	@override String get pouringFuelTips => '倒入燃料不會為您帶來任何的好處或壞處，其目的為了豐富Delta系統體驗。';
	@override String get sponsorDevelopersByWatchingAds => '透過觀看廣告贊助開發者';
	@override String get status => '狀態';
	@override String get date => '日期';
}

/// Flat map(s) containing all translations.
/// Only for edge cases! For simple maps, use the map function of this library.

extension on Translations {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'Home';
			case 'switchLanguage': return 'switch Language';
			case 'languageSwitch': return 'Language switch';
			case 'slogan': return 'Build a decentralized economic zone in delta';
			case 'countryRegionCode': return 'Country / region code';
			case 'countryRegionSelection': return 'Country / region selection';
			case 'nextStep': return 'Next step';
			case 'yourPhoneNumber': return 'Your phone number';
			case 'pleaseSelectCountryAndRegion': return 'Please select your country/region';
			case 'pleaseEnterPhoneNumber': return 'Please enter a valid phone number!';
			case 'referrerDid': return 'Referrer DID';
			case 'pleaseEnterTheReferrersDid': return 'Please enter a valid referrer\'s decentralized Identifier';
			case 'thisDidIsInvalid': return 'This DID is invalid';
			case 'nicknameFormatTips': return 'nickname cannot be empty and the length cannot exceed 16 characters';
			case 'additionalIinformation': return 'Additional information';
			case 'invitationSubject': return 'Invite you to participate in the Delta consensus construction';
			case 'invitationLetter': return ({required Object did}) => 'Hello, I am participating in the Delta consensus construction!\n Delta is an open source new digital moneys platform running on InternetComputer. It can manage and use various digital currencies without passwords, private keys, or mnemonics. Please click this link https://delta.kim/auto/download to install the application. Now we invite you to join us in building consensus and minting coins.\n Referrer DID: ${did}';
			case 'dSMSverification': return 'dSMS verification';
			case 'getAccessNumbers': return 'get some access numbers';
			case 'getAccessNumberPromptMessage': return 'Click the "Get" button below to select a group of SMS verification access numbers in the queue in turn';
			case 'optionalAccessNumbers': return 'optional access numbers';
			case 'accessNumber': return 'Access Number';
			case 'TELCO': return 'TELCO';
			case 'score': return 'Score';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('en'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Please check '),
					nBuilder(n),
					const TextSpan(text: ' access number and click the "'),
					span('text'),
					const TextSpan(text: '" button to proceed to the next step.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Please check '),
					nBuilder(n),
					const TextSpan(text: ' access numbers and click the "'),
					span('text'),
					const TextSpan(text: '" button to proceed to the next step.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta is an open source decentralized global digital currency experimental project and a currency application ecosystem.';
			case 'deltaGoalsDesc': return 'The goal is to enable people to use Delta to jointly build a universal, fair, secure, fast, and green new digital currency. And provide various effective application scenarios for these digital currencies and previous cryptocurrencies.';
			case 'details': return 'details';
			case 'get': return 'Get';
			case 'select': return 'Select';
			case 'send': return 'Send';
			case 'complete': return 'Complete';
			case 'selectedAccessNumberPrompt': return 'When selected, the full access number is displayed and an authentication string is generated.';
			case 'location': return 'Location';
			case 'verificationString': return 'Verification string';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Please use your phone number '),
				num,
				const TextSpan(text: ', send the '),
				label,
				const TextSpan(text: ' to the '),
				accessNumber,
				const TextSpan(text: ' to complete the verification.'),
			]);
			case 'ihaveSentTheSMS': return 'I have sent the SMS';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'The verification string is valid for 6 minutes, remaining time: '),
				time,
				const TextSpan(text: ' .'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Too fast, wait ${x} seconds before continuing!';
			case 'waitingForVerificationSMS': return 'Waiting for verification SMS...';
			case 'partSuccsForVerificationSMS': return 'SMS verification has been passed by one of the access terminals.';
			case 'creatingAccessToken': return 'Creating access token…';
			case 'intoDelta': return 'Into Delta';
			case 'deltaAccountIsLoggedIn': return 'Your Delta account is logged in';
			case 'iHavLoggedOut': return 'i have logged out';
			case 'startTwoFactorVerification': return 'start two-factor verification';
			case 'securityCircleVerification': return 'Security Circle Verification';
			case 'generateSecurityCode': return 'Generate Security Code';
			case 'generateSecurityCodeHintText': return 'The generated security code will be sent to a randomly selected member of your security circle.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'You have not set the security circle yet, your account is very insecure, please enter any 6-digit placeholder, and go to the next step.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'The security code has been generated, please contact the following relatives and friends, and ask them to extract the security code for you to pass the verification. Valid within 30 minutes!';
			case 'itGetSecurityCodeTip': return 'Tips: It finds your account nickname in the Delta App -> Menu -> Provide Security page and double-clicks to get the security code.';
			case 'securityCircleMemberList': return 'Security circle member list:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Please select a relative or friend from the member list to generate and provide you with a security code to verify your true identity. The purpose is to prevent the account from being controlled by others when the mobile phone number is lost or stolen.';
			case 'formatIsXdigits': return ({required Object num}) => 'The format is ${num} digits';
			case 'signInSuccessfully': return 'Sign in successfully!';
			case 'twoFAandLogin': return 'Two-factor authentication and login';
			case 'verificationSuccessful': return 'Verification successful !';
			case 'validationFailed': return 'Validation failed !';
			case 'securityCircle': return 'Security circle';
			case 'securityCode': return 'Security code';
			case 'provideSecurity': return 'Provide security';
			case 'addManully': return 'add manully';
			case 'addFromContacts': return 'add from Contacts';
			case 'addSecurityCircle': return 'Add security circle';
			case 'inputType': return 'input Type';
			case 'mobileNumber': return 'Mobile Number';
			case 'did': return 'did';
			case 'pleaseEnterValidDID': return 'Please enter a valid Decentralized Identifier';
			case 'pleaseEnterValidWalletAddress': return 'Please enter a valid wallet address';
			case 'appellation': return 'Appellation';
			case 'appellationHint': return 'what you call it, like "baby"';
			case 'addSecurityCircleTips': return 'Please do not add untrusted people to security circles.';
			case 'referralTeam': return 'Referral Team';
			case 'profile': return 'Profile';
			case 'menu': return 'menu';
			case 'directly': return 'directly';
			case 'indirectly': return 'indirectly';
			case 'inviteContacts': return 'invite contacts';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Your referrer is '),
				nickname,
				const TextSpan(text: ', You have directly recommended '),
				num1,
				const TextSpan(text: ' people and '),
				num2,
				const TextSpan(text: ' of them are currently online.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'You have indirectly recommended '),
				num1,
				const TextSpan(text: ' people, including '),
				num2,
				const TextSpan(text: ' people who are currently online.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Invite friends to join Delta and improve social consensus together. The mining rate of each directly recommended person increases by '),
				rate1,
				const TextSpan(text: ' of the base rate. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Invite friends to join Delta and improve social consensus together. The mining rate of each indirectly recommended person increases by '),
				rate2,
				const TextSpan(text: ' of the base rate.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Are you sure to remove "${name}"?';
			case 'safetyCircleRoleQ': return 'What is the function of safety circle?';
			case 'safetyCircleRoleA': return 'Provides secondary authentication in sensitive situations to protect your account security.';
			case 'howSecurityCirclesWorkQ': return 'How does the security circle work?';
			case 'howSecurityCirclesWorkA': return 'When the security circle is required for verification, the Delta smart contract program will randomly select a member from the security circle friend list to help you provide a security code to complete identity security verification for you. When you ask the member for the security code, it can confirm that you are really you. At the same time, the program will prompt: "If it is not you, refuse to provide the security code", so as to protect your account security. So you should always make sure that members of your security circle are people you can trust.';
			case 'securityCircleBeUsedQ': return 'When will you use it?';
			case 'securityCircleBeUsedA1': return '1. When your Delta APP is out of control, the general situation is that the mobile phone is lost or stolen.';
			case 'securityCircleBeUsedA2': return '2. In the case of some sensitive operations, the Delta smart contract program needs to confirm that you are yourself.';
			case 'provideSafetyTip1': return 'When your friend asks you for its security code, please be sure to confirm that it is him.';
			case 'provideSafetyTip2': return 'You are providing security protection for the above friends. They have set you as the most trusted person in the security circle, and you need to provide security confirmation for them when their accounts encounter sensitive operations.';
			case 'provideSafetyTip3': return 'When needed, double-click the other party\'s avatar to extract the security code.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'The other party does not currently have a security code that needs to be retrieved !';
			case 'existSecurityCodeTip': return 'Please be sure to confirm that the relative or friend who asks you for the security code is it himself. In order to protect the safety of the relative or friend, you should refuse to provide it if it is not the relative or friend himself.';
			case 'avatarSettings': return 'Avatar settings';
			case 'NFTAvatarPropertyRightsText': return 'Disclaimer: Using related NFTs as avatars is only a personal preference, and has nothing to do with owning the intellectual property rights of the NFT.';
			case 'projectWebsite': return 'Project website: ';
			case 'whitepaper': return 'white paper:';
			case 'indexID': return 'Index Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Indexes range from ${start} to ${end}';
			case 'inputToLoadNFTAvatarTip': return 'Enter the index id of your favorite NFT, and the program will automatically load it as your avatar.';
			case 'miningRate': return 'Mining rate';
			case 'miningDetails': return 'Mining Details';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Total mining rate: '),
				rate,
				const TextSpan(text: ' δ/day'),
			]);
			case 'EndOfMiningSession': return 'End of mining session: ';
			case 'tapToMineDeltaCoin': return 'Tap to mine Delta coin ↑';
			case 'clickToStartMining': return 'Tap to start mining!';
			case 'miningHasStoppedPromptDesc': return 'Mining has stopped, every 24 hours is a mining cycle, click the lightning icon to start a new round of mining. Delta\'s mining is a distribution mechanism that does not consume extra computing power and network traffic of your device.';
			case 'aboutBaseRate': return 'About base rate?';
			case 'baseRateDescription': return 'According to the agreement in the white paper, the basic rate-decreasing rule of Delta mining will be divided into two stages. \nPhase 1: When the number of participants (registrations) is 3000 or less, the rate is 32δ/day. Using this as a starting point, each time the number of people increases by a factor of 10, the base rate is halved. \nPhase 2: When the number of participants reaches 30 million and above, the base rate is halved every time the number of people increases by 3 times. Until the end of the digging out of production.';
			case 'baseRate': return 'Base Rate';
			case 'directReferralRewards': return 'Direct Referral Rewards';
			case 'directReferralRewardDesc': return 'For every person directly recommended, when the person is in the mining state, your mining rate will be increased by 1/3 of the base rate. \n\n In addition, the mining status of your referrer will also be calculated into your direct referral reward.';
			case 'indirectReferralRewards': return 'Indirect Referral Rewards';
			case 'indirectReferralRewardDesc': return 'When an indirect recommender is in the mining state, your mining rate will be additionally increased by 1/10 of the base rate. \n\nYour direct referral team, and every person they refer represents an indirect referral for you.';
			case 'mine': return 'Mine';
			case 'thisMiningInformation': return 'This mining information';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Participated in mining: '),
				x,
				const TextSpan(text: ' times'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Total income this time: '),
				x,
				const TextSpan(text: ' Delta coins'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Basic income: '),
				x,
				const TextSpan(text: ' coins'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Direct team contribution: '),
				x,
				const TextSpan(text: ' coins'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Indirect team contribution: '),
				x,
				const TextSpan(text: ' coins'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Time interval from last mining: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Effective mining time: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} hours';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'For asset security, security circle members should keep 3-5 trustworthy people at any time.';
			case 'index': return 'Index';
			case 'amount': return 'Amount';
			case 'balance': return 'Balance';
			case 'timeStamp': return 'timestamp';
			case 'summary': return 'Summary';
			case 'miningHasStopped': return 'Mining has stopped.';
			case 'miningHasStoppedDesc': return 'Your mining is currently stopped, and you can start earning income immediately.';
			case 'startMining': return 'START MINING';
			case 'changeMobileNumber': return 'Change MobileNumber';
			case 'currentMobileNumber': return 'Current MobileNumber';
			case 'newMobileNumber': return 'New MobileNumber';
			case 'securityCodeFormatIs6digits': return 'The security code format is 6 digits!';
			case 'startVrification': return 'start Verification';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'This MobileNumber already exists, associated DID: ${dId}';
			case 'noDataYet': return 'No data yet';
			case 'previousMobileNumber': return 'previous Mobile NO.';
			case 'changeLog': return 'change log';
			case 'referralLinkToShare': return 'Referral link to share';
			case 'referrer': return 'Referrer';
			case 'isoCountryCode': return 'ISO country code';
			case 'avatarLogo': return 'Avatar logo';
			case 'creationTime': return 'Creation Time';
			case 'lastUpdate': return 'last update';
			case 'numberOfSecurityCircleMembers': return 'Number of security circle members';
			case 'theLatestMining': return 'The latest mining';
			case 'effectiveMiningDays': return 'Effective mining days';
			case 'modifyNickname': return 'modify Nickname';
			case 'didNotChange': return 'did not change!';
			case 'kycVerification': return 'KYC Verification';
			case 'faceID': return 'Face ID';
			case 'touchID': return 'Touch ID';
			case 'biometricsAuthorizationTest': return 'Biometrics Authorization Test';
			case 'currentState': return 'Current State';
			case 'biometricsAuthenticationLocalizedReason': return 'Use your device\'s unlock to verify your identity.';
			case 'graph': return 'Graph';
			case 'referralRelationshipGraph': return 'Referral Relationship Graph';
			case 'nativeContacts': return 'Native Contacts';
			case 'registrationAndMiningTrends': return 'Registration and Mining Trends';
			case 'inMining': return 'in mining';
			case 'registrationVolume': return 'Registration Volume';
			case 'unmined': return 'unmined';
			case 'mined': return 'Mined';
			case 'communityMining': return 'community mining';
			case 'consensusPromotionFund': return 'Consensus Promotion Fund';
			case 'ecologicalAwardFund': return 'Ecological Award Fund';
			case 'icpFuelCrowdfunding': return 'ICP fuel crowdfunding';
			case 'coreDeveloperRewards': return 'Core Developer Rewards';
			case 'totalAllocation': return 'Total allocation';
			case 'miningRatio': return 'Mining ratio';
			case 'billion.300': return '300 billion';
			case 'billion.180': return '180 billion';
			case 'billion.30': return '30 billion';
			case 'billion.60': return '60 billion';
			case 'watchAdsToSupportDevelopers': return 'Watch ads to support developers';
			case 'loadingAdcomponents': return 'Loading ad components…';
			case 'timeIsNotUp': return 'Time is not up!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Loading failed, maybe the network is blocked!';
			case 'pendingUSCTrecords': return 'Pending USCT records';
			case 'pendingUSCTrecordsDesc': return 'Pending USCT records will be compared and confirmed with the advertising platform within 15-30 days, valid records will be transferred to the USCT record list, and the corresponding USCT amount will be added to the account balance.';
			case 'validity': return 'validity';
			case 'advertiser': return 'advertiser';
			case 'earned': return 'Earned';
			case 'withdraw': return 'withdraw';
			case 'validUSCTrecords': return 'Valid USCT records';
			case 'USCTmining': return 'USCT mining';
			case 'aboutUSCTmining': return 'About USCT mining?';
			case 'aboutUSCTminingItme1': return '1. USDT is a globally popular US dollar stablecoin, which can be easily converted into sovereign currencies of various countries on the world\'s mainstream cryptocurrency exchanges.';
			case 'aboutUSCTminingItme2': return '2. USCT is a temporary measurement value of USCT mining income, the full name is USD credit, and finally it can be converted into USDT according to the actual settlement quota and distribution rules of the advertising platform and in corresponding proportion.';
			case 'aboutUSCTminingItme3': return '3. USCT mining is a traffic advertising monetization function in the Delta community. Leverage the huge user base of the Delta community to provide multiple benefits for advertisers, Delta developers and miners. Its design purpose is to provide a certain amount of effective income for absenteeism in the early stage of the Delta ecology has not yet formed and flourished; at the same time, it also provides a certain amount of financial support for developers to ensure that developers can continue to provide development services for a long time, and eventually be able to Realize all the planning of the white paper; also provide an effective promotion channel for product advertisers.';
			case 'aboutUSCTminingItme4': return '4. The distribution rules are designed so that 40% of the total income will be used as developer technical service commissions, and the remaining 60% will be used as community absenteeism rewards. The absenteeism reward part adopts a multi-level distribution model similar to DTC, and these absenteeism rewards are divided into 3 shares according to the ratio of 6:3:1, and 60% of the absenteeism reward for one USCT mining each time is allocated to the absenteeism who is currently watching the advertisement , 30% is allocated to the superior recommender, and 10% is allocated to the second-level recommender. In the same way, you can also get the same recommender rewards from the friends you recommend through USCT mining. The advantage of such multi-level distribution is that anyone can obtain a relatively large amount of USDT benefits by developing an offline team.';
			case 'aboutUSCTminingItme5': return '5. The billing cycle is 7 days, that is, the validity is checked with the advertising platform every 7 days, and the confirmed effective income and actual amount will be recorded in the balance. The minimum amount for each withdrawal is 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Lines ${x} to ${y}';
			case 'wallet': return 'Wallet';
			case 'multiChainWallet': return 'multi-chain Wallet';
			case 'deposit': return 'Deposit';
			case 'transfer': return 'Transfer';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} in wallet address';
			case 'transactions': return 'Transactions';
			case 'network': return 'Network';
			case 'walletAddress': return 'Wallet Address';
			case 'currentAddress': return 'current Address';
			case 'depositAddress': return 'deposit Address';
			case 'receivingMoneyAddress': return 'Receiving money address';
			case 'applyTempDepositAddress': return 'Apply for temporary deposit address';
			case 'tempDepositAddressTip': return '1.This is a shared deposit address. Please do not deposit the amount after the lease expires or is unbound. The amount will be lost if this happens.';
			case 'tempDepositAddressTip2': return '2.Before depositing, please be sure to confirm that [chain name] and [currency name] exactly match; if it is a contract token, you also need to confirm that [contract standard] and [contract address] exactly match.';
			case 'tempDepositAddressTip3': return '3.Please do not attempt to deposit funds that do not match any of the parameters in the above tips, otherwise the amount will be lost.';
			case 'tempDepositAddressTip4': return '4.If you need to deposit other types of assets, please switch to the corresponding currency page and parameter options to apply for a new address.';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'The address will expire after '),
				diff,
				const TextSpan(text: ', and the validity period can be '),
				tap('manually extended'),
				const TextSpan(text: ' within 12 hours before the expiration.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Can only renew within 12 hours in advance';
			case 'theReceivingAddressValidForLongtime': return 'The receiving address is valid for a long time.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'The receiving address is valid for a long time and will be automatically credited in real time.';
			case 'confirmDeposited': return 'confirm Deposited';
			case 'unbindThisDepositAddress': return 'Unbind this deposit address';
			case 'confirmDepositedTip': return 'If funds have been transferred, please click the above button after 10 minutes to trigger the accounting to the wallet.';
			case 'unbindDepositAddressTip': return 'In order to reduce the running overhead of smart contracts, if no more funds will be deposited within the validity period, please unbind the deposit address.';
			case 'transferToAddress': return 'transfer to address';
			case 'longPressToPaste': return 'Long press to paste';
			case 'all': return 'All';
			case 'balanceX': return ({required Object x}) => 'Balance ${x}';
			case 'transferOut': return 'Transfer out';
			case 'depositXcoins': return ({required Object x}) => 'Deposit ${x}';
			case 'sender': return 'Sender';
			case 'recipient': return 'Recipient';
			case 'memo': return 'memo';
			case 'kind': return 'Kind';
			case 'transferAmountExceedsAvailableBalance': return 'Transfer amount exceeds available balance';
			case 'pleaseEnterValidAmount': return 'Please enter a valid amount';
			case 'networkFee': return 'Network fee';
			case 'fee': return 'fee';
			case 'validLengthXcharacters': return ({required Object x}) => 'Valid length is ${x} characters';
			case 'historys': return 'Historys';
			case 'dtcCreditdetail': return 'Delta Credit detail';
			case 'usdCreditdetail': return 'USD Credit detail';
			case 'dappSquare': return 'dApp square';
			case 'amountRaised': return 'Amount raised';
			case 'disbursedAmount': return 'Disbursed amount';
			case 'participationTimes': return 'Participation times';
			case 'completionRate': return 'Completion rate';
			case 'exchangeRate': return 'Exchange Rate';
			case 'icpCrowdfunding': return 'ICP Crowdfunding';
			case 'crowdfunding': return 'Crowdfunding';
			case 'trendsCurve': return 'trends curve';
			case 'fullScreenView': return 'Full screen view';
			case 'walletBalance': return 'Wallet balance: ';
			case 'manageWallet': return 'Manage wallet';
			case 'fundraiseAmount': return 'Fundraise amount';
			case 'exchangeRewardAmount': return ' Exchange reward amount';
			case 'fundraise': return 'Fundraise';
			case 'rangeIntegersX': return ({required Object x}) => 'Range: integers ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Successfully participated in the fundraising and received a reward of ${amount}DTCT';
			case 'amountSummary': return 'Amount summary';
			case 'changePreferred': return 'change Preferred';
			case 'changePreferredAddress': return 'Change preferred address';
			case 'preferredAddressTip': return 'When receiving money using a registered mobile number or DID, funds will be automatically transferred to the preferred address.';
			case 'newAddress': return 'new Address';
			case 'newAddressTip': return 'In order to prevent abuse, when there is more than one wallet address, a transaction fee will be incurred for each new address created.';
			case 'createNew': return 'create New';
			case 'chainNetworkName': return 'Chain network';
			case 'from': return 'From';
			case 'to': return 'To';
			case 'noAvailableDepositAmountDetected': return 'No available deposit amount detected !';
			case 'crossChainReceiveMoneyMonitoring': return 'Cross-chain receive money is in monitoring …';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Received('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Confirming('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Notes (must read for newbies)';
			case 'whyUseSharedAddresses': return 'Why use shared addresses?';
			case 'useSharedrAdvantage': return 'When it comes to cross-chain deposits, the benefits of using shared addresses are:';
			case 'useSharedrAdvantage1': return '1. Reduce the waste of transfer fees and reduce user costs. Because if an exclusive address is used, the funds will be too dispersed. In order to facilitate other users to transfer out when withdrawing, when the user makes a deposit, the secondary transfer of funds needs to be collected into one or a small number of addresses for management.';
			case 'useSharedrAdvantage2': return '2. In the sharing solution, the program only needs to maintain a relatively small address pool, which can quickly match outgoing funds and perform lightweight collection monitoring, which can reduce computing resource overhead. In contrast, with exclusive addresses, the situation is exactly the opposite.';
			case 'tokenType': return 'Token type';
			case 'contract': return 'Contract';
			case 'contractStandard': return 'Contract standard';
			case 'contractAddress': return 'Contract address';
			case 'native': return 'Native';
			case 'confirmUnbindingPleaseEnterYes': return 'To confirm unbinding, please enter "yes"';
			case 'listAllWorkingTempReceivingAddresses': return 'List all working cross-chain receiving addresses';
			case 'setNote': return 'set Note';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'The length cannot exceed ${x} bytes';
			case 'transferFee': return 'transfer fee';
			case 'crossChainFee': return 'cross-chain fee';
			case 'crossChainTransferOutError': return 'Cross-chain transfer out error';
			case 'chainName': return 'Chain Name';
			case 'message': return 'message';
			case 'dontShowAgain': return 'Don\'t show again';
			case 'queuing': return 'Queuing';
			case 'optional': return 'Optional';
			case 'publiclyVisible': return 'publicly visible';
			case 'rates': return 'rates';
			case 'minimum': return 'Minimum';
			case 'maximum': return 'Maximum';
			case 'minimumBlockConfirmations': return 'minimum  Block Confirmations';
			case 'dsmsVerifyTerminal': return 'DSMS verifier terminal';
			case 'overall': return 'overall';
			case 'my': return 'My';
			case 'getVerifierPermissions': return 'Get verifier permissions';
			case 'checkValidatorQualifications': return 'Check validator permissions qualifications';
			case 'qualification': return 'Qualification';
			case 'upperLimit': return 'upper limit';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Maximum number of terminals allowed to access';
			case 'numberOfExistingAccessTerminals': return 'Number of existing access terminals';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Before applying for verifier permissions, you need to prepare an idle Android phone and a dedicated access number, and download and install the DSMS access terminal application.';
			case 'downloadLink': return 'download link';
			case 'alreadyReadyFollowingTheAboveTips': return 'already ready following the above tips';
			case 'globalUniversal': return 'Global universal';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Currently there are not enough local verifiers to participate in the DSMS verification access service. Please select the "'),
				gu,
				const TextSpan(text: '" access service.'),
			]);
			case 'asDedicatedNumberForAccess': return 'As a dedicated number for access';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Please check "${tip}"';
			case 'inputLengthTooShort': return 'Input length too short';
			case 'shortName': return 'short-name';
			case 'pleaseEnterXname': return ({required Object name}) => 'Please enter ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Application is being submitted, please wait...';
			case 'applyForDSMSVerifierPermission': return 'Apply for DSMS Verifier Permission';
			case 'confirmInformation': return 'Confirm information';
			case 'lastHeartbeat': return 'Last heartbeat';
			case 'expirationTime': return 'Expiration time';
			case 'country': return 'Country';
			case 'accessTerminals': return 'access terminals';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Total number of DSMS access number terminals';
			case 'textContent': return 'Text content';
			case 'scanQRcodeToLogin': return 'Scan QRcode to login';
			case 'confirmLogin': return 'Confirm login';
			case 'authorizeSubApplicationToLogin': return 'Authorize this sub-application to login';
			case 'authorizationSuccessful': return 'Authorization successful!';
			case 'launchSMSprogram': return 'launch SMS program';
			case 'notApplied': return 'Not applied';
			case 'validityPeriod': return 'Validity period';
			case 'renewal': return 'Renewal';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Scan code to authorize terminal login';
			case 'rewards': return 'Rewards';
			case 'roles': return 'Roles';
			case 'developerCenter': return 'Developer Center';
			case 'appName': return 'App Name';
			case 'pleaseSelect': return 'Please select';
			case 'category': return 'Category';
			case 'keywords': return 'Keywords';
			case 'pleaseEnterAkeyword': return 'Please enter a keyword';
			case 'createApplication': return 'create Application';
			case 'appType': return 'App type';
			case 'numberOfCategoriesMustBetween1and3': return 'The number of categories must be between 1 and 3';
			case 'appLogoSpecifications': return 'Image format: png, size: within 100KB, resolution (pixels): 256 * 256';
			case 'localAlbum': return 'Local Album';
			case 'networkPath': return 'network path';
			case 'imageURLkAddress': return 'Image URL Address';
			case 'urlAddressFormatIsIncorrect': return 'The URL address format is incorrect';
			case 'imageFormatOnlySupportsPng': return 'The image format only supports "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'The length must be between ${a}-${b} characters';
			case 'introduction': return 'Introduction';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'The image size cannot be larger than ${a}, currently ${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'The image resolution must be: ${p1} (pixels),currently ${p2}';
			case 'becomeDeveloper': return 'Become developer';
			case 'developerInformation': return 'Developer information';
			case 'teamName': return 'Team Name';
			case 'website': return 'Web site';
			case 'other': return 'Other';
			case 'githubVerification': return 'Github verification';
			case 'exampleUrl': return 'Example Url';
			case 'githubVerificationTip': return ({required Object did}) => 'Please use your GitHub account to create a \'delta.did\' file in the repository with the content \'${did}\'; then, paste the githubusercontent url of the file into this input box for authentication.';
			case 'createApp': return 'Create App';
			case 'appManagement': return 'App Management';
			case 'statusLogs': return 'Status Logs';
			case 'bad': return 'Bad';
			case 'normal': return 'Normal';
			case 'good': return 'Good';
			case 'onceCreatedItCannotBeChanged': return 'Once created, it cannot be changed!';
			case 'manageApplicationEntity': return 'Manage application entity';
			case 'currentVersion': return 'current Version';
			case 'submitVersion': return 'submit Version';
			case 'packageOnlySupportZipCompressedFile': return 'The package only support zip compressed file';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'The \'${name}\' file was not found in the zip package';
			case 'fileList': return 'File List: ';
			case 'programPackage': return 'program Package: ';
			case 'automaticallyExtractFromVersionFile': return 'Automatically extract from \'.version\' file';
			case 'dappVersionFormatTip': return 'The version number format must be a decimal and the precision must be maintained at 2 digits, and the maximum cannot exceed 99.99';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'The version number must be greater than the current version \'${v}\'';
			case 'versionNotes': return 'Version Notes: ';
			case 'dappInfo': return 'DApp Info';
			case 'updateRelease': return 'Update release';
			case 'loadAndRun': return 'Load and Run';
			case 'notYetSubmittedProgramPackage': return 'Not yet submitted a program package!';
			case 'authorizeMinidAppLogin': return 'Authorize mini-dApp login';
			case 'confirmAuthorizationPleaseEnterYes': return 'Confirm authorization, please enter "yes"';
			case 'authorizeNow': return 'Authorize now';
			case 'operation': return 'Operation: ';
			case 'statusChange': return 'Status change';
			case 'changeTo': return 'Change to: ';
			case 'notes': return 'Notes: ';
			case 'changesNotEffective': return 'Changes not effective!';
			case 'released': return 'released';
			case 'inPublicBeta': return 'In public beta';
			case 'developers': return 'developers: ';
			case 'reviewList': return 'Review List: ';
			case 'postReview': return 'Post review';
			case 'scoreNow': return 'Score now';
			case 'description': return 'Description: ';
			case 'noData': return '(^-^) \n No data';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Version has been updated from ${a} to ${b}';
			case 'loadNewVersion': return 'Load new version';
			case 'name': return 'Name: ';
			case 'canisterId': return 'CanisterId: ';
			case 'updateTime': return 'update Time';
			case 'contractCanistersState': return 'Contract Canisters State';
			case 'userDistribution': return 'User Distribution';
			case 'settings': return 'Settings';
			case 'security': return 'Security';
			case 'invite': return 'Invite';
			case 'more': return 'More…';
			case 'receiveAddress': return 'Receive address: ';
			case 'hangingAmount': return 'hanging';
			case 'hangingAmountTips': return 'The hanging amount is a temporary record of the rewards generated by your subordinate team\'s mining. Once you conduct a mining, these amounts will be collected into the pending amount.';
			case 'pendingAmount': return 'pending';
			case 'pendingAmountTips': return 'Pending amount refers to the amount that has not been confirmed and compared with the advertiser. The amount that is confirmed will be transferred to the valid USCT record. If there is any invalid part, it will be excluded.';
			case 'received': return 'Received';
			case 'processing': return 'Processing';
			case 'replied': return 'Replied';
			case 'rejected': return 'Rejected';
			case 'unknown': return 'Unknown';
			case 'insufficientBalance': return 'Insufficient balance!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Insufficient ${x} balance to pay cross-chain network fee';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'There is a transaction that has not been completed and cannot be transferred at the moment.';
			case 'thisfunctionNotSupportExternalCalls': return 'This function does not support external calls';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'There is no matching address that can be used to pay cross-chain fees, Please switch to other chain networks to try.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'The current maximum matched single transfer amount is ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Memo must not be more than 64 bytes';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Insufficient balance, the amount is: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'The number of bound receiving addresses cannot exceed 3. \nIf you need to bind a new receiving address, \nplease unbind another receiving address first.';
			case 'parametersA_exception': return ({required Object x}) => 'Parameters: ${x}, exception';
			case 'transferAmountMustBeLargerThan0': return 'Transfer amount must be larger than 0';
			case 'authorizationHasExpired': return 'Authorization has expired';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'The app has not been authorized by the owner';
			case 'authenticationTokenIsInvalid': return 'Authentication token is invalid';
			case 'verifyInfoIsInvalidOrExpired': return 'verify Info is invalid or expired';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Verify that the number of access terminals has exceeded the limit of one in 10,000';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'The time to participate in mining must be more than 3 days';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'The number of safety circle members cannot be less than 3 people';
			case 'avatarIsNotSet': return 'Avatar is not set';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'The number of direct referrals cannot be less than 3 people';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Insufficient time limit, mobile number can only be changed once a year.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'This mobile phone number already exists and cannot be repeated';
			case 'securityCodeIsIncorrect': return 'Security code is incorrect';
			case 'securityCodeMayHaveExpired': return 'Security code may have expired';
			case 'sessionIdIsInvalidOrExpired': return 'The sessionId is invalid or expired';
			case 'sessionHasBeenAuthorized': return 'The session has been authorized!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Can only be renewed within ${x} days before expiration';
			case 'notYetGrantedDeveloperPermissions': return 'Not yet granted developer permissions';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Field email ${x} be empty';
			case 'emailFormatError': return 'Email format error';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'The \'${x}\' format is incorrect';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'The length of the field \'${x}\' must be between ${y} and ${z}  characters.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'The \'${x}\' selection must be between ${y} and ${z}';
			case 'unchanged_sameAsOldContent': return 'Unchanged, same as old content!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' already exists!';
			case 'mobileNumberHasNotJoinedDelta': return 'This mobile number has not yet joined Delta！';
			case 'referrerIdCannotBeEmpty': return 'referrerId cannot be empty! ';
			case 'referrerIdDoesNotExist': return 'referrerId does not exist!';
			case 'didIsIncorrectOrInvalid': return 'The DID is incorrect or invalid！';
			case 'accessTokenIsIncorrectOrInvalid': return 'The accessToken is incorrect or invalid！';
			case 'minimumWithdrawalAmountIs1USD': return 'The minimum withdrawal amount is 1USD';
			case 'miningTimeIsNotYet': return 'Mining time is not yet';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Already exists, please do not add repeatedly!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Registration number cannot be used as verification access number';
			case 'canotAddYourSelf': return 'Can\'t add yourself';
			case 'logOut': return 'Log out';
			case 'confirmLogout': return 'Confirm logout';
			case 'logOutTipsText': return 'Friendly reminder: According to the relevant agreement in the white paper, each login verification of the account will consume a certain amount of DTC coins from you to pay the verifier as an incentive. Please do not try to log in and log out if it is not necessary. Click the following button to Log out immediately.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Confirm to logout, please enter "yes"';
			case 'tip': return 'Tip';
			case 'cancel': return 'Cancel';
			case 'close': return 'Close';
			case 'selected': return 'Selected';
			case 'edit': return 'Edit';
			case 'submit': return 'submit';
			case 'goBack': return 'go Back';
			case 'copiedToClipboard': return 'Copied to clipboard.';
			case 'nickname': return 'NickName';
			case 'confirm': return 'Confirm';
			case 'cannotBeEmpty': return 'cannot be empty';
			case 'deleteSuccessful': return 'Delete successful!';
			case 'successfullyModified': return 'Successfully modified!';
			case 'executionSuccessful': return 'Execution successful!';
			case 'parameterException': return 'Parameter exception!';
			case 'preview': return 'PreView';
			case 'followSystem': return 'follow System';
			case 'change': return 'Change';
			case 'replace': return 'Replace';
			case 'view': return 'View';
			case 'manage': return 'Manage';
			case 'modify': return 'Modify';
			case 'replacedSuccessfully': return 'Replaced successfully!';
			case 'authentication': return 'Authentication';
			case 'reacquire': return 'Reacquire';
			case 'tryAgain': return 'try Again';
			case 'querying': return 'Querying …';
			case 'writingToOnChain_pleaseWait': return 'Writing to the on-chain, please wait …';
			case 'versionCheck': return 'Version Check';
			case 'alreadyLatestVersion': return 'already the latest version!';
			case 'foundNewVersion': return 'Found a new version:';
			case 'upgradeLink': return 'Upgrade link: ';
			case 'deviceDescription': return 'Device description: ';
			case 'notification30SecondsBeforeMiningStops': return 'execute notification reminder 30 seconds before mining stops!';
			case 'goMining': return 'Go Mining';
			case 'deltaMiningReminder': return 'Delta mining reminder';
			case 'clickToMine_miningIsAboutToStop': return 'Click here to mine, mining is about to stop!';
			case 'incorrect_input': return 'Incorrect input !';
			case 'are_you_sure_delete': return 'Are you sure to delete?';
			case 'delete_account': return 'Delete account';
			case 'how_to_operate_it': return 'How to operate it?';
			case 'deletion_warning_tip': return 'If you delete your account, you will lose all your Delta Coins and all earnings from other members will also be lost.';
			case 'launchWhatsAppProgram': return 'Launch WhatsApp program';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Access numbers with this icon indicate that they also support WhatsApp message verification. When sending international messages, it is recommended to use WhatsApp to increase the success rate and reduce costs.';
			case 'ihaveSentVerificationString': return 'I have sent verification string';
			case 'totalOfPeople': return 'Total of people: ';
			case 'numberOfPeopleMining': return 'Number of people mining';
			case 'useBrowserScanQRcodeToSMSprogram': return 'You can use a browser on another device to scan the QR code and pass it to the SMS program';
			case 'toggle': return 'Toggle';
			case 'DSMSverifier': return 'DSMS Verifier';
			case 'activate': return 'Activate';
			case 'activated': return 'Activated';
			case 'generateActivationCommand': return 'generate Activation Command';
			case 'activationCommand': return 'Activation Command';
			case 'activationSentedTip': return 'After the activation SMS is sent, please check the activation status on the access terminal device.';
			case 'biometricsNotEnabledTip': return 'Your device has not enabled biometrics (face or fingerprint), please enable it to continue.';
			case 'error': return 'Error';
			case 'exceptionOccurredWhenCallingBiometric': return 'An exception occurred when calling the biometric recognition (face or fingerprint) function!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' access numbers are checked, '),
				shouldNum,
				const TextSpan(text: ' should be selected.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Has ${text} been sent to the ${n} access numbers above?';
			case 'interface': return 'Interface:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Waiting timeout or sender number mismatch';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'The mobile phone number of the security circle member you filled in does not match:${x}';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'At least ${n} mobile numbers must be completed';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Log in within 10 minutes after logging out to avoid two-factor verification.';
			case 'noAccessNumberInYourRegionYet': return 'There is no access number in your region yet';
			case 'notEnoughAccessNumbersInYourRegion': return 'There are not enough access numbers in your region';
			case 'tipsForDeployDSMSterminal': return 'The system has automatically loaded some access numbers from other countries for you. In order to provide better and lower-cost verification services, it is recommended that you or contact your referrer to deploy DSMS terminals locally to earn verification fees.';
			case 'noOneCanProvideMeTheSecurityCode': return 'No one can provide me the security code?';
			case 'useSupplementalMode': return 'Use supplemental mode';
			case 'returnToSecurityCodeMode': return 'Return to security code mode';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Please enter their associated mobile phone number, country code can be omitted.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'The mobile number for ${name} is incorrect';
			case 'matchingVerificationStrategyIs': return 'The matching verification strategy is:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'If the balance is greater than 3 ICP, there is no need to pour fuel temporarily.';
			case 'escrowAccount': return 'Escrow Account';
			case 'fuelRelay': return 'Fuel Relay';
			case 'pourFuel': return 'Pour Fuel';
			case 'fuelState': return 'fuel State';
			case 'pouringFuelTips': return 'Pouring fuel will not bring you any advantages or disadvantages, its purpose is to enrich the Delta system experience.';
			case 'sponsorDevelopersByWatchingAds': return 'Sponsor developers by watching ads';
			case 'status': return 'Status';
			case 'date': return 'Date';
			default: return null;
		}
	}
}

extension on _StringsBg {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'Начало';
			case 'switchLanguage': return 'Смяна на езика';
			case 'languageSwitch': return 'Превключване на езика';
			case 'slogan': return 'Изграждане на децентрализирана икономическа зона в Delta';
			case 'countryRegionCode': return 'Код на държава / регион';
			case 'countryRegionSelection': return 'Избор на държава / регион';
			case 'nextStep': return 'Следваща стъпка';
			case 'yourPhoneNumber': return 'Вашият телефонен номер';
			case 'pleaseSelectCountryAndRegion': return 'Моля, изберете вашата държава/регион';
			case 'pleaseEnterPhoneNumber': return 'Моля, въведете валиден телефонен номер!';
			case 'referrerDid': return 'Референтен DID';
			case 'pleaseEnterTheReferrersDid': return 'Моля, въведете валиден децентрализиран идентификатор на референта';
			case 'thisDidIsInvalid': return 'Този DID е невалиден';
			case 'nicknameFormatTips': return 'Прякорът не може да бъде празен и дължината не може да надвишава 16 символа';
			case 'additionalIinformation': return 'Допълнителна информация';
			case 'invitationSubject': return 'Покана за участие в изграждането на консенсус в Delta';
			case 'invitationLetter': return ({required Object did}) => 'Здравейте, участвам в изграждането на консенсус в Delta!\nDelta е платформа с отворен код за нови цифрови валути (крипто), работеща на InternetComputer. Тя може да управлява и използва различни цифрови валути без пароли, частни ключове или мнемонични фрази. Моля, кликнете върху този линк https://delta.kim/auto/download, за да инсталирате приложението. Сега ви каним да се присъедините към нас в изграждането на консенсус и добиването на токъни.\nРеферентен DID: ${did}';
			case 'dSMSverification': return 'dSMS проверка';
			case 'getAccessNumbers': return 'получаване на няколко номера за достъп';
			case 'getAccessNumberPromptMessage': return 'Кликнете върху бутона "Получи" , за да изберете номера за SMS/whatsapp (global) проверка от групата за верификация';
			case 'optionalAccessNumbers': return 'допълнителни номера за достъп';
			case 'accessNumber': return 'Номер за достъп';
			case 'TELCO': return 'TELCO';
			case 'score': return 'Резултат';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('bg'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Моля, проверете '),
					nBuilder(n),
					const TextSpan(text: ' номер за достъп и кликнете върху бутона "'),
					span('text'),
					const TextSpan(text: '", за да продължите към следващата стъпка.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Моля, проверете '),
					nBuilder(n),
					const TextSpan(text: ' номера за достъп и кликнете върху бутона "'),
					span('text'),
					const TextSpan(text: '", за да продължите към следващата стъпка.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta е експериментален проект с отворен код за глобална децентрализирана цифрова валута и екосистема от приложения за валути.';
			case 'deltaGoalsDesc': return 'Целта е да се даде възможност на хората да използват Delta, за да изградят заедно универсална, справедлива, сигурна, бърза и зелена нова цифрова валута. И да предоставят различни ефективни приложни сценарии за тези цифрови валути и вече съществуващите криптовалути.';
			case 'details': return 'детайли';
			case 'get': return 'Получи';
			case 'select': return 'Избери';
			case 'send': return 'Изпрати';
			case 'complete': return 'Завърши';
			case 'selectedAccessNumberPrompt': return 'Когато е избран пълният номер за достъп се показва и се генерира низ за удостоверяване.';
			case 'location': return 'Местоположение';
			case 'verificationString': return 'Низ за удостоверяване';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Моля, използвайте вашия телефонен номер '),
				num,
				const TextSpan(text: ', изпратете '),
				label,
				const TextSpan(text: ' до '),
				accessNumber,
				const TextSpan(text: ', за да завършите проверката.'),
			]);
			case 'ihaveSentTheSMS': return 'Изпратих SMS';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Низът за удостоверяване е валиден за 6 минути, оставащо време: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Твърде бързо, изчакайте ${x} секунди, преди да продължите!';
			case 'waitingForVerificationSMS': return 'Чакане за SMS за проверка...';
			case 'partSuccsForVerificationSMS': return 'SMS проверката е премината от един от терминалите за достъп.';
			case 'creatingAccessToken': return 'Създаване на токен за достъп...';
			case 'intoDelta': return 'В Delta';
			case 'deltaAccountIsLoggedIn': return 'Вашият Delta акаунт е вписан';
			case 'iHavLoggedOut': return 'Да, вече излязох';
			case 'startTwoFactorVerification': return 'стартиране на двуфакторна проверка';
			case 'securityCircleVerification': return 'Проверка чрез кръга за сигурност';
			case 'generateSecurityCode': return 'Генериране на секретен код';
			case 'generateSecurityCodeHintText': return 'Генерираният секретен код ще бъде изпратен на избран член от вашия кръг за сигурност.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Все още не сте задали кръг за сигурност, вашият акаунт е много несигурен. Моля, въведете произволен 6-цифрен код и продължете към следващата стъпка.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Кодът за сигурност е генериран, моля, свържете се със следните роднини или приятели и ги помолете да извлекат кода за сигурност , за да преминете проверката. Валиден в рамките на 30 минути!';
			case 'itGetSecurityCodeTip': return 'Съвет: Избрания член от кръга за сигурност може да генерира ключ за сигурност от  (Delta -> Меню -> Предоставяне на сигурност) и двойно кликване на вашия профил.';
			case 'securityCircleMemberList': return 'Списък с членове в кръга за сигурност:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Моля, изберете роднина или приятел от списъка с членове, за да ви генерира и предостави код за сигурност, с който ще се извърши проверка на вашата истинска идентичност. Целта е да се предотврати контролът на акаунта ви от други, когато телефонният номер е загубен или откраднат.';
			case 'formatIsXdigits': return ({required Object num}) => 'Форматът е ${num} цифри';
			case 'signInSuccessfully': return 'Успешен вход!';
			case 'twoFAandLogin': return 'Двуфакторна автентикация и вход';
			case 'verificationSuccessful': return 'Проверката е успешна!';
			case 'validationFailed': return 'Проверката е неуспешна!';
			case 'securityCircle': return 'Кръг за сигурност';
			case 'securityCode': return 'Код за сигурност';
			case 'provideSecurity': return 'Предоставяне на сигурност';
			case 'addManully': return 'добави ръчно';
			case 'addFromContacts': return 'добави от Контакти';
			case 'addSecurityCircle': return 'Добавяне на кръг за сигурност';
			case 'inputType': return 'тип на въвеждане';
			case 'mobileNumber': return 'Мобилен номер';
			case 'did': return 'did';
			case 'pleaseEnterValidDID': return 'Моля, въведете валиден децентрализиран идентификатор';
			case 'pleaseEnterValidWalletAddress': return 'Моля, въведете валиден адрес на портфейл';
			case 'appellation': return 'Обръщение';
			case 'appellationHint': return 'как го наричате(прякор), например "бейби"';
			case 'addSecurityCircleTips': return 'Моля, не добавяйте непознати хора в кръга за сигурност.';
			case 'referralTeam': return 'Референтен екип';
			case 'profile': return 'Профил';
			case 'menu': return 'Меню';
			case 'directly': return 'директно';
			case 'indirectly': return 'индиректно';
			case 'inviteContacts': return 'покани контакти';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Вашият референт е '),
				nickname,
				const TextSpan(text: ', Вие сте директно препоръчали '),
				num1,
				const TextSpan(text: ' човека и '),
				num2,
				const TextSpan(text: ' от тях са в момента онлайн.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Вие сте индиректно препоръчали '),
				num1,
				const TextSpan(text: ' човека, включително '),
				num2,
				const TextSpan(text: ' човека, които са в момента онлайн.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Поканете приятели да се присъединят към Delta за да подобрим социалния консенсус заедно. Скоростта на добив на всеки директно препоръчан човек се увеличава с '),
				rate1,
				const TextSpan(text: ' от базовата скорост. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Поканете приятели да се присъединят към Delta за да подобрим социалния консенсус заедно. Скоростта на добив на всеки индиректно препоръчан човек се увеличава с '),
				rate2,
				const TextSpan(text: ' от базовата скорост.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Сигурни ли сте, че искате да премахнете "${name}"?';
			case 'safetyCircleRoleQ': return 'Каква е функцията на кръга за сигурност?';
			case 'safetyCircleRoleA': return 'Предоставя вторична автентикация в чувствителни ситуации, за да защити сигурността на вашият акаунтна .';
			case 'howSecurityCirclesWorkQ': return 'Как работи кръга за сигурност?';
			case 'howSecurityCirclesWorkA': return 'Когато е необходима проверка чрез кръга за сигурност, програмата за интелигентен договор на Delta ще избере произволно член от списъка с приятели в кръга за сигурност, за да ви помогне да предоставите код за сигурност и да завършите проверката на идентичността. Когато поискате от член код за сигурност, той може да потвърди, че наистина сте вие. В същото време програмата ще ви напомни: "Ако не сте вие, откажете предоставиянето на кода за сигурност", за да защити сигурността на вашия акаунтн. Затова винаги трябва да се уверявате, че членовете на вашия кръг  за сигурност са хора, на които можете да се доверите.';
			case 'securityCircleBeUsedQ': return 'Кога ще го използвате?';
			case 'securityCircleBeUsedA1': return '1. Когато загубите контрол върху своя телефон (откраднат изгубен) съответно и върху приложението Delta.';
			case 'securityCircleBeUsedA2': return '2. В случай на някои чувствителни операции, програмата за интелигентен договор на Delta трябва да потвърди, че сте вие.';
			case 'provideSafetyTip1': return 'Когато вашият приятел ви поиска код за сигурност, моля, да се уверите, че това наистина е той.';
			case 'provideSafetyTip2': return 'Вие предоставяте защита за приятелите по-горе. Те са ви задали като най-надеждния човек в кръга за сигурност, и вие трябва да предоставяте потвърждение за сигурност за тях, когато техните акаунти срещнат чувствителни операции.';
			case 'provideSafetyTip3': return 'Когато е необходимо ,извличане на код за сигурност кликвате два пъти върху аватара на другата страна, за да извлечете кода.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'Другата страна в момента няма код за сигурност, който трябва да бъде извлечен!';
			case 'existSecurityCodeTip': return 'Моля, бъдете сигурни, че роднините или приятелите, които ви искат код за сигурност, са те самите. За да защитите сигурността на роднините или приятелите, трябва да откажете да го предоставите, ако не сте сигурни, че са реално те.';
			case 'avatarSettings': return 'Настройки на аватара';
			case 'NFTAvatarPropertyRightsText': return 'Отказ от отговорност: Използването на свързани NFT като аватари е само лично предпочитание и няма нищо общо с притежаването на правата върху интелектуалната собственост на NFT.';
			case 'projectWebsite': return 'Уебсайт на проекта: ';
			case 'whitepaper': return 'бяла книга:';
			case 'indexID': return 'Индекс Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Индексите са между ${start} и ${end}';
			case 'inputToLoadNFTAvatarTip': return 'Въведете индекса на вашия любим NFT и програмата ще го зареди автоматично като ваш аватар.';
			case 'miningRate': return 'Скорост на добив';
			case 'miningDetails': return 'Детайли за добива';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Обща скорост на добив: '),
				rate,
				const TextSpan(text: ' δ/ден'),
			]);
			case 'EndOfMiningSession': return 'Край на сесията за добив след: ';
			case 'tapToMineDeltaCoin': return 'Кликнете, за да започнете добиване Delta токъни↑';
			case 'clickToStartMining': return 'Кликнете, за да започнете добива!';
			case 'miningHasStoppedPromptDesc': return 'Добивът е спрян. Цикъла за добив е 24ч, кликнете върху светкавицата , за да започнете нов 24часов цикъл. Добивът на Delta е механизъм за разпределение, който не консумира допълнителна изчислителна мощност и мрежов трафик на вашето устройство.';
			case 'aboutBaseRate': return 'За базовата скорост?';
			case 'baseRateDescription': return 'Според споразумението в бялата книга, основното правило за намаляване на скоростта на добив на Delta ще бъде разделено на два етапа. \n Фаза 1: Когато броят на участниците (регистрации) е 3000 или по-малко, скоростта е 32δ/ден. Използвайки това като начална точка, всеки път, когато броят на хората се увеличи с фактор 10, базовата скорост се намалява наполовина. \n Фаза 2: Когато броят на участниците достигне 30 милиона и повече, базовата скорост се намалява наполовина всеки път, когато броят на хората се увеличи 3 пъти. До изчерпване на токъните предвидени за добиване.';
			case 'baseRate': return 'Базова скорост';
			case 'directReferralRewards': return 'Награди за директни препоръки';
			case 'directReferralRewardDesc': return 'Всеки директно препоръчан човек, който е в състояние на добив,увеличава вашата скорост на добиване с 1/3 от базовата скорост. \n\n Освен това, състоянието на добив на вашия референт също ще бъде изчислено в наградата ви за директна препоръка.';
			case 'indirectReferralRewards': return 'Награди за индиректни препоръки';
			case 'indirectReferralRewardDesc': return 'Когато индиректният препоръчител е в състояние на добив, вашата скорост на добив ще бъде допълнително увеличена с 1/10 от базовата скорост. \n\nВашият директно препоръчан екип и всеки човек, който те препоръчат, представляват индиректна препоръка за вас.';
			case 'mine': return 'Добивай';
			case 'thisMiningInformation': return 'Информация за добива';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Участвали сте в добив: '),
				x,
				const TextSpan(text: ' пъти'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Общ доход този път: '),
				x,
				const TextSpan(text: ' Delta монети'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Основен доход: '),
				x,
				const TextSpan(text: ' монети'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Принос на директния екип: '),
				x,
				const TextSpan(text: ' монети'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Принос на индиректния екип: '),
				x,
				const TextSpan(text: ' монети'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Времеви интервал от последния добив: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Ефективно време на добив: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} часа';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'За сигурността на активите, членовете на кръга сигурност трябва да поддържат 3-5 доверени човека по всяко време.';
			case 'index': return 'Индекс';
			case 'amount': return 'Количество';
			case 'balance': return 'Баланс';
			case 'timeStamp': return 'дата и час';
			case 'summary': return 'Резюме';
			case 'miningHasStopped': return 'Добивът е спрян.';
			case 'miningHasStoppedDesc': return 'Вашият добив в момента е спрян, можете да започнете добив на токъни сега.';
			case 'startMining': return 'ЗАПОЧНИ ДОБИВ';
			case 'changeMobileNumber': return 'Промяна на мобилен номер';
			case 'currentMobileNumber': return 'Текущ мобилен номер';
			case 'newMobileNumber': return 'Нов мобилен номер';
			case 'securityCodeFormatIs6digits': return 'Форматът на кода за сигурност е 6 цифри!';
			case 'startVrification': return 'стартиране на проверката';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Този мобилен номер вече съществува, асоцииран DID: ${dId}';
			case 'noDataYet': return 'Все още няма данни';
			case 'previousMobileNumber': return 'предишен мобилен номер';
			case 'changeLog': return 'дневник на промените';
			case 'referralLinkToShare': return 'Реферална връзка за споделяне';
			case 'referrer': return 'Референт';
			case 'isoCountryCode': return 'ISO код на държавата';
			case 'avatarLogo': return 'Лого на аватара';
			case 'creationTime': return 'Време на създаване';
			case 'lastUpdate': return 'последна актуализация';
			case 'numberOfSecurityCircleMembers': return 'Брой членове в кръга за сигурност';
			case 'theLatestMining': return 'Последен добив';
			case 'effectiveMiningDays': return 'Ефективни дни на добив';
			case 'modifyNickname': return 'промяна на прякора';
			case 'didNotChange': return 'не се промени!';
			case 'kycVerification': return 'KYC проверка';
			case 'faceID': return 'Face ID';
			case 'touchID': return 'Touch ID';
			case 'biometricsAuthorizationTest': return 'Тест за вход с биометрични данни';
			case 'currentState': return 'Текущо състояние';
			case 'biometricsAuthenticationLocalizedReason': return 'Използвайте заключването на устройството си, за да потвърдите идентичността си.';
			case 'graph': return 'Графика';
			case 'referralRelationshipGraph': return 'Графика на референтните връзки';
			case 'nativeContacts': return 'Собствени контакти';
			case 'registrationAndMiningTrends': return 'Тенденции на регистрации и добив';
			case 'inMining': return 'в добив';
			case 'registrationVolume': return 'Обем на регистрациите';
			case 'unmined': return 'не-добит';
			case 'mined': return 'Добит';
			case 'communityMining': return 'добив на общността';
			case 'consensusPromotionFund': return 'Фонд за промоция на консенсус';
			case 'ecologicalAwardFund': return 'Фонд за екологични награди';
			case 'icpFuelCrowdfunding': return 'ICP гориво за групово финансиране';
			case 'coreDeveloperRewards': return 'Заплати за основните разработчици';
			case 'totalAllocation': return 'Общо разпределение';
			case 'miningRatio': return 'Съотношение на добива';
			case 'billion.300': return '300 милиарда';
			case 'billion.180': return '180 милиарда';
			case 'billion.30': return '30 милиарда';
			case 'billion.60': return '60 милиарда';
			case 'watchAdsToSupportDevelopers': return 'Гледайте реклами, за да подкрепите разработчиците';
			case 'loadingAdcomponents': return 'Зареждане на рекламни компоненти…';
			case 'timeIsNotUp': return 'Времето не е изтекло!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Зареждането е неуспешно, може би мрежата е блокирана!';
			case 'pendingUSCTrecords': return 'Чакащи USCT записи';
			case 'pendingUSCTrecordsDesc': return 'Чакащите USCT записи ще бъдат сравнени и потвърдени с рекламната платформа в рамките на 15-30 дни, валидните записи ще бъдат прехвърлени в списъка с USCT записи и съответното количество USCT ще бъде добавено към баланса на акаунта.';
			case 'validity': return 'валидност';
			case 'advertiser': return 'рекламодател';
			case 'earned': return 'Спечелено';
			case 'withdraw': return 'теглене';
			case 'validUSCTrecords': return 'Валидни USCT записи';
			case 'USCTmining': return 'USCT добив';
			case 'aboutUSCTmining': return 'За USCT добива?';
			case 'aboutUSCTminingItme1': return '1. USDT е популярна световно стабилна монета в щатски долари, която може лесно да бъде преобразувана в суверенни валути на различни държави на световните основни криптовалутни борси.';
			case 'aboutUSCTminingItme2': return '2. USCT е временна измервателна стойност на доходите от USCT добив, пълното име е USD кредит и накрая може да бъде преобразувана в USDT според действителната разплащателна квота и правилата за разпределение на рекламната платформа и в съответната пропорция.';
			case 'aboutUSCTminingItme3': return '3. USCT добивът е функция за монетизация на реклама в общността на Delta. Използвайте огромната потребителска база на общността на Delta, за да предоставите множество ползи за рекламодателите, разработчиците на Delta и потребителите. Неговата цел е да предостави определено количество ефективен доход за отсъствията в ранния етап на екологията на Delta, когато тя все още не е формирана и процъфтява; в същото време, също предоставя определено финансово подпомагане за разработчиците, за да гарантира, че разработчиците могат да продължат да предоставят услуги за разработка за дълго време и накрая да реализират цялото планиране на белия документ; също предоставя ефективен канал за промоция за рекламодателите на продукти.';
			case 'aboutUSCTminingItme4': return '4. Правилата за разпределение са проектирани така, че 40% от общите доходи ще бъдат използвани като комисионни за технически услуги на разработчиците, а останалите 60% ще бъдат използвани като награди за отсъствията в общността. Частта за награди за отсъствията използва модел за многостепенно разпределение, подобен на DTC, и тези награди за отсъствията са разделени на 3 дела според съотношението 6:3:1, като 60% от наградата за отсъствията за един USCT добив всеки път са разпределени на отсъстващия, който в момента гледа рекламата, 30% са разпределени на горния препоръчител и 10% са разпределени на второстепенния препоръчител. По същия начин, вие също можете да получите същите награди за препоръчител от приятелите, които препоръчате чрез USCT добив. Предимството на такова многостепенно разпределение е, че всеки може да получи относително голямо количество USDT ползи, като развие офлайн екип.';
			case 'aboutUSCTminingItme5': return '5. Периодът на фактуриране е 7 дни, тоест валидността се проверява с рекламната платформа на всеки 7 дни и потвърдените ефективни доходи и действителното количество ще бъдат записани в баланса. Минималното количество за всяко теглене е 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Редове ${x} до ${y}';
			case 'wallet': return 'Портфейл';
			case 'multiChainWallet': return 'мулти-чейн портфейл';
			case 'deposit': return 'Депозит';
			case 'transfer': return 'Прехвърляне';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} в адреса на портфейла';
			case 'transactions': return 'Транзакции';
			case 'network': return 'Мрежа';
			case 'walletAddress': return 'Адрес на портфейла';
			case 'currentAddress': return 'текущ адрес';
			case 'depositAddress': return 'адрес за депозит';
			case 'receivingMoneyAddress': return 'Адрес за получаване на пари';
			case 'applyTempDepositAddress': return 'Заявка за временен адрес за депозит';
			case 'tempDepositAddressTip': return '1. Това е споделен адрес за депозит. Моля, не депозирайте сумата след изтичане на срока. Сумата ще бъде загубена, ако това се случи.';
			case 'tempDepositAddressTip2': return '2. Преди да депозирате, моля, бъдете сигурни, че [име на веригата] и [име на валутата] съвпадат точно; ако е токън , вие също трябва да потвърдите, че [стандарта на договора] и [адреса на договора] съвпадат точно.';
			case 'tempDepositAddressTip3': return '3. Моля, не опитвайте да депозирате средства, които не съвпадат точно с всички параметри от горните съвети, в противен случай сумата ще бъде загубена.';
			case 'tempDepositAddressTip4': return '4. Ако трябва да депозирате други видове активи, моля, превключете към съответната страница с валута и опции за параметри, за да заявите нов адрес.';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Адресът ще изтече след '),
				diff,
				const TextSpan(text: ', и периодът на валидност може да бъде '),
				tap('ръчно удължен'),
				const TextSpan(text: ' в рамките на 12 часа преди изтичането.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Може да бъде удължен само в рамките на 12 часа предварително';
			case 'theReceivingAddressValidForLongtime': return 'Адресът за получаване е валиден за дълго време.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Адресът за получаване е валиден за дълго време и ще бъде автоматично кредитиран в реално време.';
			case 'confirmDeposited': return 'Потвърдете депозита';
			case 'unbindThisDepositAddress': return 'Разкачете този адрес за депозит';
			case 'confirmDepositedTip': return 'Ако средствата са били прехвърлени, моля, кликнете върху горния бутон след 10 минути, за да задействате отчитането в портфейла.';
			case 'unbindDepositAddressTip': return 'ако няма да бъдат депозирани повече средства в рамките на периода на валидност, моля, разкачете адреса за депозит, за да се намали използването на смарт контракти.';
			case 'transferToAddress': return 'прехвърляне към адрес';
			case 'longPressToPaste': return 'Задръжте за поставяне';
			case 'all': return 'Всички';
			case 'balanceX': return ({required Object x}) => 'Баланс ${x}';
			case 'transferOut': return 'Изтегляне';
			case 'depositXcoins': return ({required Object x}) => 'Депозиране на ${x}';
			case 'sender': return 'Изпращач';
			case 'recipient': return 'Получател';
			case 'memo': return 'memo';
			case 'kind': return 'Вид';
			case 'transferAmountExceedsAvailableBalance': return 'Сумата за прехвърляне надвишава наличния баланс';
			case 'pleaseEnterValidAmount': return 'Моля, въведете валидна сума';
			case 'networkFee': return 'Такса на мрежата';
			case 'fee': return 'такса';
			case 'validLengthXcharacters': return ({required Object x}) => 'Валидната дължина е ${x} символа';
			case 'historys': return 'История';
			case 'dtcCreditdetail': return 'История на Delta прихода';
			case 'usdCreditdetail': return 'История на USD прихода';
			case 'dappSquare': return 'dApp площадка';
			case 'amountRaised': return 'Събрана сума';
			case 'disbursedAmount': return 'Разпр. сума';
			case 'participationTimes': return 'Брой участия';
			case 'completionRate': return '% на завършване';
			case 'exchangeRate': return 'Обменен курс';
			case 'icpCrowdfunding': return 'ICP краудфъндинг';
			case 'crowdfunding': return 'Краудфъндинг';
			case 'trendsCurve': return 'Крива на тенденциите';
			case 'fullScreenView': return 'преглед на цял екран';
			case 'walletBalance': return 'Баланс на портфейла: ';
			case 'manageWallet': return 'Управление на портфейл';
			case 'fundraiseAmount': return 'Събрана сума';
			case 'exchangeRewardAmount': return 'Общо за получаване';
			case 'fundraise': return 'набиране средства';
			case 'rangeIntegersX': return ({required Object x}) => 'Диапазон: цели числа ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Успешно участие в събирането на средства и получаване на награда от ${amount}DTCT';
			case 'amountSummary': return 'Наличност на сумитеа';
			case 'changePreferred': return 'Промяна на предпочитанията';
			case 'changePreferredAddress': return 'Промяна на предпочитания адрес';
			case 'preferredAddressTip': return 'При получаване на пари с помощта на регистриран мобилен номер или DID, средствата ще бъдат автоматично прехвърлени към предпочитания адрес.';
			case 'newAddress': return 'Нов адрес';
			case 'newAddressTip': return 'За да се предотврати злоупотреба, когато има повече от един адрес на портфейл, ще се налага такса за всяка нова създадена транзакция.';
			case 'createNew': return 'Създаване на нов';
			case 'chainNetworkName': return 'Име на мрежата';
			case 'from': return 'От';
			case 'to': return 'До';
			case 'noAvailableDepositAmountDetected': return 'Не е открита налична сума за депозит!';
			case 'crossChainReceiveMoneyMonitoring': return 'Наблюдение на получаване на пари между веригите …';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Получени('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Потвърждаване('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Бележки (задължително за начинаещи)';
			case 'whyUseSharedAddresses': return 'Защо използваме споделени адреси?';
			case 'useSharedrAdvantage': return 'Когато става въпрос за депозити в кросчейн, ползите от използването на споделени адреси са:';
			case 'useSharedrAdvantage1': return '1. Намаляване на загубите от такси за превод и намаляване на разходите за потребителите. Тъй като ако се използва изключителен адрес, средствата ще бъдат твърде разпръснати. За да се улесни прехвърлянето на други потребители при теглене, когато потребителят прави депозит, вторичното прехвърляне на средства трябва да бъде събрано в един или малък брой адреси за управление.';
			case 'useSharedrAdvantage2': return '2. В споделеното решение, програмата трябва само да поддържа относително малък адресен пул, който може бързо да съпостави изходящите средства и да извърши леко потвърждение на транзакцията, което може да намали изчислителните ресурсни разходи. За разлика от това, с изключителни адреси, ситуацията е точно обратната.';
			case 'tokenType': return 'Тип на токъна';
			case 'contract': return 'Договор';
			case 'contractStandard': return 'Стандарт на договора';
			case 'contractAddress': return 'Адрес на договора';
			case 'native': return 'Роден';
			case 'confirmUnbindingPleaseEnterYes': return 'За да потвърдите разкачането, моля, въведете "да"';
			case 'listAllWorkingTempReceivingAddresses': return 'Списък с всички работещи временни адреси за получаване между веригите';
			case 'setNote': return 'Задайте бележка';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Дължината не може да надвишава ${x} байта';
			case 'transferFee': return 'Такса за превод';
			case 'crossChainFee': return 'Кросчейн такса';
			case 'crossChainTransferOutError': return 'Грешка при прехвърляне между веригите';
			case 'chainName': return 'Име на веригата';
			case 'message': return 'Съобщение';
			case 'dontShowAgain': return 'Не показвайте отново';
			case 'queuing': return 'Чакане на опашка';
			case 'optional': return 'По избор';
			case 'publiclyVisible': return 'Публично видим';
			case 'rates': return 'Такси';
			case 'minimum': return 'Минимум';
			case 'maximum': return 'Максимум';
			case 'minimumBlockConfirmations': return 'Минимално потвърждение на блок';
			case 'dsmsVerifyTerminal': return 'DSMS терминал за проверка';
			case 'overall': return 'Общо';
			case 'my': return 'Собствен';
			case 'getVerifierPermissions': return 'Получаване на разрешение за валидатор';
			case 'checkValidatorQualifications': return 'Проверка на квалификацията за валидатор';
			case 'qualification': return 'Квалификация';
			case 'upperLimit': return 'Горна граница';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Максимален брой терминали, разрешени за достъп';
			case 'numberOfExistingAccessTerminals': return 'Брой на съществуващите терминали за достъп';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Преди да кандидатствате за разрешения за валидатор, трябва да подготвите празен Android телефон и специален номер за достъп, и да изтеглите и инсталирате приложението за DSMS терминал за достъп.';
			case 'downloadLink': return 'Линк за изтегляне';
			case 'alreadyReadyFollowingTheAboveTips': return 'Вече сте готови, следвайки горните съвети';
			case 'globalUniversal': return 'Глобален универсален';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'В момента няма достатъчно местни валидатори, които да участват в услугата за достъп до DSMS проверка. Моля, изберете услугата за достъп "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'Като специален номер за достъп';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Моля, проверете "${tip}"';
			case 'inputLengthTooShort': return 'Въведената дължина е твърде кратка';
			case 'shortName': return 'Кратко име';
			case 'pleaseEnterXname': return ({required Object name}) => 'Моля, въведете ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Кандидатурата се изпраща, моля, изчакайте...';
			case 'applyForDSMSVerifierPermission': return 'Кандидатстване за DSMS валидатор';
			case 'confirmInformation': return 'Потвърждаване на информацията';
			case 'lastHeartbeat': return 'Последен пулс';
			case 'expirationTime': return 'Време на изтичане';
			case 'country': return 'Държава';
			case 'accessTerminals': return 'Терминали за достъп';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Общ брой на DSMS терминали за достъп';
			case 'textContent': return 'Съдържание на текста';
			case 'scanQRcodeToLogin': return 'Сканирайте QR кода за влизане';
			case 'confirmLogin': return 'Потвърдете влизането';
			case 'authorizeSubApplicationToLogin': return 'Разрешаване на подприложението да влезе';
			case 'authorizationSuccessful': return 'Влизането е успешно!';
			case 'launchSMSprogram': return 'Стартиране на SMS програма';
			case 'notApplied': return 'Не е приложено';
			case 'validityPeriod': return 'Период на валидност';
			case 'renewal': return 'Подновяване';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Сканирайте код, за да разрешите влизане на терминала';
			case 'rewards': return 'Награди';
			case 'roles': return 'Роли';
			case 'developerCenter': return 'Център за разработчици';
			case 'appName': return 'Име на приложението';
			case 'pleaseSelect': return 'Моля, изберете';
			case 'category': return 'Категория';
			case 'keywords': return 'Ключови думи';
			case 'pleaseEnterAkeyword': return 'Моля, въведете ключова дума';
			case 'createApplication': return 'Създаване на приложение';
			case 'appType': return 'Тип на приложението';
			case 'numberOfCategoriesMustBetween1and3': return 'Броят на категориите трябва да бъде между 1 и 3';
			case 'appLogoSpecifications': return 'Формат на изображението: png, размер: до 100KB, резолюция (пиксели): 256 * 256';
			case 'localAlbum': return 'Локален албум';
			case 'networkPath': return 'Мрежов път';
			case 'imageURLkAddress': return 'URL адрес на изображение';
			case 'urlAddressFormatIsIncorrect': return 'Форматът на URL адреса е неправилен';
			case 'imageFormatOnlySupportsPng': return 'Форматът на изображението поддържа само "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'Дължината трябва да бъде между ${a}-${b} знака';
			case 'introduction': return 'Представяне';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'Размерът на изображението не може да бъде по-голям от ${a}, в момента е ${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'Резолюцията на изображението трябва да бъде: ${p1}(пиксели), в момента е ${p2}';
			case 'becomeDeveloper': return 'Станете разработчик';
			case 'developerInformation': return 'Информация за разработчика';
			case 'teamName': return 'Име на екипа';
			case 'website': return 'Уеб сайт';
			case 'other': return 'Други';
			case 'githubVerification': return 'Проверка в GitHub';
			case 'exampleUrl': return 'Примерен URL';
			case 'githubVerificationTip': return ({required Object did}) => 'Моля, използвайте вашия GitHub акаунт, за да създадете файл \'delta.did\' в хранилището със съдържание \'${did}\'; след това, поставете githubusercontent url на файла в това поле за въвеждане за удостоверяване.';
			case 'createApp': return 'Създаване на приложение';
			case 'appManagement': return 'Управление на приложение';
			case 'statusLogs': return 'Статус логове';
			case 'bad': return 'Лошо';
			case 'normal': return 'Нормално';
			case 'good': return 'Добро';
			case 'onceCreatedItCannotBeChanged': return 'След като бъде създадено, не може да бъде променено!';
			case 'manageApplicationEntity': return 'Управление на приложението';
			case 'currentVersion': return 'Текуща версия';
			case 'submitVersion': return 'Изпращане на версия';
			case 'packageOnlySupportZipCompressedFile': return 'Пакетът поддържа само zip компресиран файл';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Файлът \'${name}\' не беше намерен в zip пакета';
			case 'fileList': return 'Списък на файлове: ';
			case 'programPackage': return 'Пакет на програма: ';
			case 'automaticallyExtractFromVersionFile': return 'Автоматично извличане от файл \'.version\'';
			case 'dappVersionFormatTip': return 'Форматът на номера на версията трябва да бъде десетичен и точността трябва да се поддържа на 2 цифри, като максимумът не може да надвишава 99.99';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Номерът на версията трябва да бъде по-голям от текущата версия \'${v}\'';
			case 'versionNotes': return 'Бележки за версията: ';
			case 'dappInfo': return 'DApp информация';
			case 'updateRelease': return 'Обновяване на изданието';
			case 'loadAndRun': return 'Зареждане и стартиране';
			case 'notYetSubmittedProgramPackage': return 'Все още не е изпратен пакет на програма!';
			case 'authorizeMinidAppLogin': return 'Разрешаване на влизане в мини-DApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Потвърдете разрешаването, моля, въведете "yes"';
			case 'authorizeNow': return 'Разреши сега';
			case 'operation': return 'Операция: ';
			case 'statusChange': return 'Промяна на състоянието';
			case 'changeTo': return 'Промени на: ';
			case 'notes': return 'Бележки: ';
			case 'changesNotEffective': return 'Промените не са ефективни!';
			case 'released': return 'Издание';
			case 'inPublicBeta': return 'В публична бета версия';
			case 'developers': return 'Разработчици: ';
			case 'reviewList': return 'Списък за преглед: ';
			case 'postReview': return 'Публикуване на преглед';
			case 'scoreNow': return 'Оценете сега';
			case 'description': return 'Описание: ';
			case 'noData': return '(^-^) \n Няма данни';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Версията е обновена от ${a} до ${b}';
			case 'loadNewVersion': return 'Зареждане на нова версия';
			case 'name': return 'Име: ';
			case 'canisterId': return 'CanisterId: ';
			case 'updateTime': return 'Обновено на';
			case 'contractCanistersState': return 'Състояние на договорните контейнери';
			case 'userDistribution': return 'Регистрирани потребители';
			case 'settings': return 'Настройки';
			case 'security': return 'Сигурност';
			case 'invite': return 'Покани';
			case 'more': return 'Още…';
			case 'receiveAddress': return 'Адрес за получаване: ';
			case 'hangingAmount': return 'Висяща сума';
			case 'hangingAmountTips': return 'Висящата сума е временен запис на наградите, генерирани от приятелите които сте поканили. След като извършите добив , тези суми ще бъдат събрани в чакащата сума.';
			case 'pendingAmount': return 'Чакаща сума';
			case 'pendingAmountTips': return 'Чакащата сума се отнася до сумата, която все още не е потвърдена и сравнена с рекламодателя. Сумата, която е потвърдена, ще бъде прехвърлена към валидния запис на USCT. Ако има невалидна част, тя ще бъде изключена.';
			case 'received': return 'Получено';
			case 'processing': return 'Обработване';
			case 'replied': return 'Отговорено';
			case 'rejected': return 'Отхвърлено';
			case 'unknown': return 'Неизвестно';
			case 'insufficientBalance': return 'Недостатъчен баланс!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Недостатъчен ${x} баланс за плащане на мрежовата такса между веригите';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Има транзакция, която не е завършена и не може да бъде прехвърлена в момента.';
			case 'thisfunctionNotSupportExternalCalls': return 'Тази функция не поддържа външни обаждания';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Няма съвпадащ адрес, който може да бъде използван за плащане на такси между веригите, моля, превключете към други мрежи.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'Текущата максимална съвпадаща единична сума за прехвърляне е ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Бележката не трябва да бъде повече от 64 байта';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Недостатъчен баланс, сумата е: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Броят на свързаните адреси за получаване не може да надвишава 3. \n Ако трябва да свържете нов адрес за получаване, \n моля, първо разкачете друг адрес за получаване.';
			case 'parametersA_exception': return ({required Object x}) => 'Параметри: ${x}, изключение';
			case 'transferAmountMustBeLargerThan0': return 'Сумата за прехвърляне трябва да бъде по-голяма от 0';
			case 'authorizationHasExpired': return 'Ауторизацията е изтекла';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'Приложението не е ауторизирано от собственика';
			case 'authenticationTokenIsInvalid': return 'Токънът за удостоверяване е невалиден';
			case 'verifyInfoIsInvalidOrExpired': return 'Информацията за проверка е невалидна или е изтекла';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Проверете дали броят на терминалите за достъп е надвишил лимита от един на 10 000';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'За да се участвате трябва да сте добивали повече от 3 дни';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Броят на членовете в кръга за сигурност не може да бъде по-малък от 3 души';
			case 'avatarIsNotSet': return 'Аватарът не е зададен';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Броят на директно препоръчаните лица не може да бъде по-малък от 3 души';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Недостатъчен времеви лимит, мобилният номер може да бъде променен само веднъж годишно.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Този мобилен номер вече съществува и не може да бъде повторен';
			case 'securityCodeIsIncorrect': return 'Кодът за сигурност е неправилен';
			case 'securityCodeMayHaveExpired': return 'Кодът за сигурност е невалиден или изтекъл';
			case 'sessionIdIsInvalidOrExpired': return 'Сесията е невалидна или е изтекла';
			case 'sessionHasBeenAuthorized': return 'Сесията е удостоверена!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Може да бъде подновена само в рамките на ${x} дни преди изтичането';
			case 'notYetGrantedDeveloperPermissions': return 'Все още не са предоставени разрешения за разработчик';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Полето email ${x} не може да бъде празно';
			case 'emailFormatError': return 'Грешка във формата на имейла';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Форматът \'${x}\' е неправилен';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Дължината на полето \'${x}\' трябва да бъде между ${y} и ${z} знака.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Изборът \'${x}\' трябва да бъде между ${y} и ${z}';
			case 'unchanged_sameAsOldContent': return 'Непроменено, съдържанието е същото като старото!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' вече съществува!';
			case 'mobileNumberHasNotJoinedDelta': return 'Този мобилен номер все още не се е присъединил към Delta！';
			case 'referrerIdCannotBeEmpty': return 'ID на препоръчителя не може да бъде празен! ';
			case 'referrerIdDoesNotExist': return 'ID на препоръчителя не съществува!';
			case 'didIsIncorrectOrInvalid': return 'DID е неправилен или невалиден！';
			case 'accessTokenIsIncorrectOrInvalid': return 'Токънът за достъп е неправилен или невалиден！';
			case 'minimumWithdrawalAmountIs1USD': return 'Минималната сума за теглене е 1USD';
			case 'miningTimeIsNotYet': return 'Времето за добиване още не е настъпило';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Вече съществува, моля, не добавяйте отново!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Този номер не може да бъде използван като номер за валидатор';
			case 'canotAddYourSelf': return 'Не можете да добавите себе си';
			case 'logOut': return 'Изход';
			case 'confirmLogout': return 'Потвърдете изход';
			case 'logOutTipsText': return 'Приятелско напомняне: Според съответното споразумение в бялата книга, всяко влизане в акаунта ще ви струва определено количество DTC монети, които ще бъдат изплатени на проверяващия, като стимул. Моля, не се опитвайте да влизате и излизате, ако не е необходимо. Кликнете върху следния бутон, за да излезете веднага.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Потвърдете изход, моля, въведете "yes"';
			case 'tip': return 'Съвет';
			case 'cancel': return 'Отказ';
			case 'close': return 'Затвори';
			case 'selected': return 'Избран';
			case 'edit': return 'Редактиране';
			case 'submit': return 'Изпращане';
			case 'goBack': return 'Назад';
			case 'copiedToClipboard': return 'Копирано в клипборда.';
			case 'nickname': return 'Прякор';
			case 'confirm': return 'Потвърди';
			case 'cannotBeEmpty': return 'не може да бъде празно';
			case 'deleteSuccessful': return 'Успешно изтриване!';
			case 'successfullyModified': return 'Успешно променено!';
			case 'executionSuccessful': return 'Успешно изпълнено!';
			case 'parameterException': return 'Изключение при параметри!';
			case 'preview': return 'Преглед';
			case 'followSystem': return 'Следвай системата';
			case 'change': return 'Промяна';
			case 'replace': return 'Замяна';
			case 'view': return 'Преглед';
			case 'manage': return 'Управление';
			case 'modify': return 'Промяна';
			case 'replacedSuccessfully': return 'Успешно променено!';
			case 'authentication': return 'Удостоверяване';
			case 'reacquire': return 'Повторно получаване';
			case 'tryAgain': return 'Опитайте отново';
			case 'querying': return 'Заявка …';
			case 'writingToOnChain_pleaseWait': return 'Записване в блокчейн мрежата, моля, изчакайте …';
			case 'versionCheck': return 'Проверка на версията';
			case 'alreadyLatestVersion': return 'Използвате последната версия!';
			case 'foundNewVersion': return 'Има налична нова версия:';
			case 'upgradeLink': return 'Линк за надграждане: ';
			case 'deviceDescription': return 'Описание на устройството: ';
			case 'notification30SecondsBeforeMiningStops': return 'Получаване на известие 30 секунди преди добивната дейност да спре!';
			case 'goMining': return 'Започнете добива';
			case 'deltaMiningReminder': return 'Напомняне за добив в Delta';
			case 'clickToMine_miningIsAboutToStop': return 'Кликнете тук, за добиване, текущото добиване е на път да спре!';
			case 'incorrect_input': return 'Некоректен вход !';
			case 'are_you_sure_delete': return 'Сигурни ли сте, че искате да изтриете?';
			case 'delete_account': return 'Изтриване на акаунт';
			case 'how_to_operate_it': return 'Как да го изпълните?';
			case 'deletion_warning_tip': return 'Ако изтриете акаунта си, ще загубите всички свои Delta монети и всички доходи от други членове също ще бъдат загубени.';
			case 'launchWhatsAppProgram': return 'Стартиране на WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Номерата за достъп с тази икона показват, че те също поддържат проверка чрез WhatsApp съобщение. При изпращане на международни съобщения се препоръчва използването на WhatsApp, за да се увеличи степента на успех и да се избегнат разходите за SMS.';
			case 'ihaveSentVerificationString': return 'Изпратих кода за проверка';
			case 'totalOfPeople': return 'Общо хора: ';
			case 'numberOfPeopleMining': return 'Брой хора, които добиват';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Можете да използвате браузър на друго устройство, за да сканирате QR кода и да го предадете на SMS програмата';
			case 'toggle': return 'Превключване';
			case 'DSMSverifier': return 'DSMS валидатор';
			case 'activate': return 'Активиране';
			case 'activated': return 'Активиран';
			case 'generateActivationCommand': return 'Генериране на команда за активиране';
			case 'activationCommand': return 'Команда за активиране';
			case 'activationSentedTip': return 'След изпращане на SMS за активиране, моля, проверете състоянието на активиране на устройството за достъп.';
			case 'biometricsNotEnabledTip': return 'Вашето устройство не е активирало биометричните данни (лице или пръстов отпечатък), моля, активирайте ги, за да продължите.';
			case 'error': return 'Грешка';
			case 'exceptionOccurredWhenCallingBiometric': return 'Възникна грешка при извикване на функцията за биометрично разпознаване (лице или пръстен отпечатък)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' номера за достъп са проверени, '),
				shouldNum,
				const TextSpan(text: ' трябва да бъдат избрани.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Беше ли изпратено съобщени със съдържание: ${text} към номера за достъп: ${n} ?';
			case 'interface': return 'Интерфейс:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Време за изчакване или несъответствие на номера на изпращача';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Мобилният номер, който въведохте на члена от кръга за сигурност, не съвпада: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Влезте в рамките на 10 минути след излизане, за да избегнете двуфакторна проверка.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Поне ${n} мобилни телефонни номера трябва да бъдат попълнени';
			case 'noAccessNumberInYourRegionYet': return 'Все още няма номер за достъп във Вашия регион';
			case 'notEnoughAccessNumbersInYourRegion': return 'Няма достатъчно номера за достъп във вашия регион';
			case 'tipsForDeployDSMSterminal': return 'Системата автоматично е заредила някои номера за достъп от други държави за вас. За да предоставите по-добри и евтини услуги за проверка, се препоръчва вие или вашето препоръчано лице да разположите DSMS терминала локално, за да печелите такси за проверка.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Никой не може да ми предостави кода за сигурност?';
			case 'useSupplementalMode': return 'Използване на допълнителен режим';
			case 'returnToSecurityCodeMode': return 'Връщане към режим на код за сигурност';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Моля, въведете свързания им мобилен номер. Кодът на държавата може да бъде пропуснат.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Мобилният номер на ${name} е неправилен';
			case 'matchingVerificationStrategyIs': return 'Стратегията за проверка на съответствието е:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Салдо по-голямо от 3 ICP, няма нужда да се налива гориво за момента.';
			case 'escrowAccount': return 'Escrow акаунт';
			case 'fuelRelay': return 'Реле за гориво';
			case 'pourFuel': return 'Наливане на гориво';
			case 'fuelState': return 'състояние на гориво';
			case 'pouringFuelTips': return 'Наливането на гориво не ви носи никакви предимства или недостатъци, целта му е да обогати изживяването на системата Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Спонсорирайте разработчиците, като гледате реклами';
			case 'status': return 'Състояние';
			case 'date': return 'Дата';
			default: return null;
		}
	}
}

extension on _StringsBn {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'প্রথম পাতা';
			case 'switchLanguage': return 'ভাষা পরিবর্তন করুন';
			case 'languageSwitch': return 'ভাষা সুইচ';
			case 'slogan': return 'ব-দ্বীপে একটি বিকেন্দ্রীভূত অর্থনৈতিক বৃত্ত তৈরি করুন';
			case 'countryRegionCode': return 'দেশের কোড';
			case 'countryRegionSelection': return 'দেশ এবং অঞ্চল নির্বাচন';
			case 'nextStep': return 'পরবর্তী ধাপ';
			case 'yourPhoneNumber': return 'আপনার ফোন নম্বর';
			case 'pleaseSelectCountryAndRegion': return 'আপনার দেশ/অঞ্চল নির্বাচন করুন';
			case 'pleaseEnterPhoneNumber': return 'একটি বৈধ ফোন নম্বর লিখুন!';
			case 'referrerDid': return 'সুপারিশকারী DID';
			case 'pleaseEnterTheReferrersDid': return 'অনুগ্রহ করে একটি বৈধ সুপারিশকারীর বিকেন্দ্রীকৃত পরিচয় আইডি লিখুন';
			case 'thisDidIsInvalid': return 'এই DID অবৈধ';
			case 'nicknameFormatTips': return 'ডাকনাম খালি হতে পারে না এবং দৈর্ঘ্যে 16 অক্ষরের বেশি হতে পারে না';
			case 'additionalIinformation': return 'সম্পূরক তথ্য';
			case 'invitationSubject': return 'ডেল্টা ঐক্যমত্য বিল্ডিংয়ে অংশগ্রহণের জন্য আপনাকে আমন্ত্রণ জানাই';
			case 'invitationLetter': return ({required Object did}) => 'হ্যালো, আমি ডেল্টা ঐক্যমত্য বিল্ডিংয়ে অংশগ্রহণ করছি! \n ডেল্টা হল একটি ওপেন সোর্স নতুন ডিজিটাল কারেন্সি প্ল্যাটফর্ম যা ICP-এ চলছে। অ্যাপ্লিকেশনটি ইনস্টল করতে দয়া করে https://delta.kim/auto/download এই লিঙ্কে ক্লিক করুন এবং আপনাকে এখন ঐকমত্য তৈরি এবং মুদ্রা তৈরিতে অংশগ্রহণের জন্য আমন্ত্রণ জানানো হয়েছে। \n সুপারিশকারী DID: ${did}';
			case 'dSMSverification': return 'DSMS যাচাইকরণ';
			case 'getAccessNumbers': return 'কিছু অ্যাক্সেস নম্বর পান';
			case 'getAccessNumberPromptMessage': return 'সারিতে থাকা SMS যাচাইকরণ অ্যাক্সেস নম্বরগুলির একটি গ্রুপ নির্বাচন করতে নীচের "পান" বোতামে ক্লিক করুন৷';
			case 'optionalAccessNumbers': return 'ঐচ্ছিক অ্যাক্সেস নম্বর';
			case 'accessNumber': return 'অ্যাক্সেস নম্বর';
			case 'TELCO': return 'অপারেটর';
			case 'score': return 'স্কোর';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('bn'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'অনুগ্রহ করে '),
					nBuilder(n),
					const TextSpan(text: ' অ্যাক্সেস নম্বর চেক করুন এবং পরবর্তী ধাপে যেতে "'),
					span('text'),
					const TextSpan(text: '" বোতামে ক্লিক করুন'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'অনুগ্রহ করে '),
					nBuilder(n),
					const TextSpan(text: ' অ্যাক্সেস নম্বরগুলি পরীক্ষা করুন এবং পরবর্তী ধাপে যেতে "'),
					span('text'),
					const TextSpan(text: '" বোতামটি ক্লিক করুন '),
				]),
			);
			case 'whatIsDeltaDesc': return 'ডেল্টা হল একটি ওপেন সোর্স বিকেন্দ্রীকৃত বিশ্বব্যাপী ডিজিটাল মুদ্রার পরীক্ষামূলক প্রকল্প এবং কারেন্সি অ্যাপ্লিকেশন ইকোলজিক্যাল চেইন।';
			case 'deltaGoalsDesc': return 'লক্ষ্য হল ডেল্টা ব্যবহার করার জন্য জনগণকে যৌথভাবে একটি নতুন ডিজিটাল মুদ্রা তৈরি করার অনুমতি দেওয়া যা সর্বজনীন, ন্যায্য, নিরাপদ, দ্রুত এবং সবুজ। এবং এই ডিজিটাল মুদ্রা এবং পূর্ববর্তী ক্রিপ্টোকারেন্সিগুলির জন্য বিভিন্ন কার্যকর প্রয়োগের পরিস্থিতি প্রদান করে।';
			case 'details': return 'বিস্তারিত';
			case 'get': return 'পান';
			case 'select': return 'চয়ন করুন';
			case 'send': return 'পাঠান';
			case 'complete': return 'শেষ করুন';
			case 'selectedAccessNumberPrompt': return 'নির্বাচিত হলে, সম্পূর্ণ অ্যাক্সেস নম্বর প্রদর্শিত হয় এবং একটি যাচাইকরণ স্ট্রিং তৈরি হয়।';
			case 'location': return 'অবস্থান';
			case 'verificationString': return 'বৈধতা স্ট্রিং';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan accessNumber, required InlineSpan label}) => TextSpan(children: [
				const TextSpan(text: 'আপনার ফোন নম্বর '),
				num,
				const TextSpan(text: ' ব্যবহার করুন এবং যাচাইকরণ সম্পূর্ণ করতে '),
				accessNumber,
				const TextSpan(text: ' এ '),
				label,
				const TextSpan(text: ' পাঠান।'),
			]);
			case 'ihaveSentTheSMS': return 'আমি একটি টেক্সট বার্তা পাঠিয়েছি';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'যাচাইকরণ স্ট্রিংটি 6 মিনিটের মধ্যে বৈধ, বাকি সময়: '),
				time,
				const TextSpan(text: '।'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'খুব দ্রুত, চালিয়ে যাওয়ার আগে ${x} সেকেন্ড অপেক্ষা করুন!';
			case 'waitingForVerificationSMS': return 'যাচাইকরণ SMS এর জন্য অপেক্ষা করা হচ্ছে...';
			case 'partSuccsForVerificationSMS': return 'একসেস টার্মিনালের এসএমএস ভেরিফিকেশন হয়ে গেছে!';
			case 'creatingAccessToken': return 'অ্যাক্সেস টোকেন তৈরি করা হচ্ছে...';
			case 'intoDelta': return 'ডেল্টায়';
			case 'deltaAccountIsLoggedIn': return 'আপনার ডেল্টা অ্যাকাউন্ট লগ ইন হয়েছে';
			case 'alreadyLoggedInOnAnotherDeviceTip1': return '1. ডিভাইস থেকে লগ আউট করার পরে আবার চেষ্টা করুন.';
			case 'alreadyLoggedInOnAnotherDeviceTip2': return '2. অথবা সিকিউরিটি সার্কেল + এসএমএস ডবল ভেরিফিকেশনের মাধ্যমে জোর করে লগইন করুন।';
			case 'iHavLoggedOut': return 'আমি লগ আউট করেছি';
			case 'startTwoFactorVerification': return 'দ্বি-পদক্ষেপ যাচাইকরণ শুরু করুন';
			case 'securityCircleVerification': return 'নিরাপত্তা সার্কেল যাচাইকরণ';
			case 'generateSecurityCode': return 'নিরাপত্তা কোড তৈরি করুন';
			case 'generateSecurityCodeHintText': return 'জেনারেট করা সিকিউরিটি কোডটি আপনার সিকিউরিটি সার্কেলের একজন এলোমেলোভাবে নির্বাচিত সদস্যের কাছে পাঠানো হবে।';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'আপনি একটি নিরাপত্তা বৃত্ত সেট আপ করেননি আপনার অ্যাকাউন্ট খুব অনিরাপদ যেকোন 6-সংখ্যার স্থানধারক লিখুন এবং পরবর্তী ধাপে যান৷';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'নিরাপত্তা কোড তৈরি করা হয়েছে দয়া করে নিম্নলিখিত আত্মীয় এবং বন্ধুদের সাথে যোগাযোগ করুন যাতে আপনি যাচাইকরণ পাস করতে নিরাপত্তা কোড বের করতে পারেন। 30 মিনিটের মধ্যে বৈধ!';
			case 'itGetSecurityCodeTip': return 'টিপ: ডেল্টা অ্যাপ -> মেনু -> সুরক্ষা পৃষ্ঠাতে আপনার অ্যাকাউন্টের ডাকনাম খুঁজুন এবং নিরাপত্তা কোড পেতে এটিতে ডাবল-ক্লিক করুন।';
			case 'securityCircleMemberList': return 'নিরাপত্তা সার্কেলের সদস্য তালিকা:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'আপনার আসল পরিচয় যাচাই করার জন্য একটি নিরাপত্তা কোড তৈরি করতে এবং আপনাকে প্রদান করতে সদস্য তালিকায় অনুগ্রহ করে একজন আত্মীয় বা বন্ধু নির্বাচন করুন। উদ্দেশ্য হল মোবাইল ফোন নম্বর হারিয়ে গেলে বা চুরি হয়ে গেলে অ্যাকাউন্টটি অন্যদের দ্বারা নিয়ন্ত্রিত হওয়া থেকে বিরত রাখা।';
			case 'formatIsXdigits': return ({required Object num}) => 'বিন্যাস হল ${num} সংখ্যা';
			case 'signInSuccessfully': return 'লগইন সফল!';
			case 'twoFAandLogin': return 'দ্বি-পদক্ষেপ যাচাইকরণ এবং লগইন';
			case 'verificationSuccessful': return 'যাচাইকরণ সফল!';
			case 'validationFailed': return 'যাচাইকরণ ব্যর্থ হয়েছে!';
			case 'dappInfo': return 'DApp তথ্য';
			case 'securityCircle': return 'নিরাপত্তা বৃত্ত';
			case 'securityCode': return 'নিরাপত্তা কোড';
			case 'provideSecurity': return 'নিরাপত্তা প্রদান';
			case 'addManully': return 'ম্যানুয়ালি যোগ করুন';
			case 'addFromContacts': return 'ঠিকানা বই থেকে যোগ করুন';
			case 'addSecurityCircle': return 'নিরাপত্তা বৃত্ত যোগ করুন';
			case 'inputType': return 'ইনপুট প্রকার';
			case 'mobileNumber': return 'ফোন নম্বর';
			case 'did': return 'ঠিকানা আইডি';
			case 'pleaseEnterValidDID': return 'অনুগ্রহ করে একটি বৈধ বিকেন্দ্রীকৃত পরিচয় আইডি লিখুন';
			case 'pleaseEnterValidWalletAddress': return 'একটি বৈধ ওয়ালেট ঠিকানা লিখুন';
			case 'appellation': return 'শিরোনাম';
			case 'appellationHint': return 'তুমি এটাকে কি বলবে, যেমন "শিশু"';
			case 'addSecurityCircleTips': return 'আপনার নিরাপত্তা বৃত্তে আপনি বিশ্বাস করেন না এমন লোকেদের যোগ করবেন না।';
			case 'referralTeam': return 'সুপারিশকৃত দল';
			case 'profile': return 'অ্যাকাউন্ট তথ্য';
			case 'menu': return 'মেনু';
			case 'directly': return 'সরাসরি';
			case 'indirectly': return 'পরোক্ষ';
			case 'inviteContacts': return 'পরিচিতিদের আমন্ত্রণ জানান';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'আপনার আমন্ত্রণকারী হলেন '),
				nickname,
				const TextSpan(text: ', এবং আপনি সরাসরি '),
				num1,
				const TextSpan(text: ' জনকে সুপারিশ করেছেন, যাদের মধ্যে '),
				num2,
				const TextSpan(text: 'টি বর্তমানে অনলাইন রয়েছে৷'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'আপনি পরোক্ষভাবে '),
				num1,
				const TextSpan(text: ' জনকে সুপারিশ করেছেন, যাদের মধ্যে '),
				num2,
				const TextSpan(text: ' বর্তমানে অনলাইনে রয়েছে।'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'বন্ধুদের ডেল্টায় যোগ দিতে আমন্ত্রণ জানান এবং একসাথে সামাজিক ঐকমত্য উন্নত করুন। একজন ব্যক্তির প্রতিটি সরাসরি সুপারিশ মাইনিং রেটকে বেস রেটের '),
				rate1,
				const TextSpan(text: ' হারে বাড়িয়ে দেয়। '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'বন্ধুদের ডেল্টায় যোগদানের জন্য আমন্ত্রণ জানান এবং একসাথে সামাজিক সম্মতি উন্নত করতে একজন ব্যক্তির প্রতিটি পরোক্ষ সুপারিশ খননের হারকে মূল হারের '),
				rate2,
				const TextSpan(text: ' দ্বারা বৃদ্ধি করবে।'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'আপনি কি "${name}" মুছে ফেলার বিষয়ে নিশ্চিত?';
			case 'safetyCircleRoleQ': return 'নিরাপত্তা বৃত্তের কাজ কি?';
			case 'safetyCircleRoleA': return 'আপনার অ্যাকাউন্টের নিরাপত্তা রক্ষা করতে সংবেদনশীল পরিস্থিতিতে দ্বি-ফ্যাক্টর প্রমাণীকরণ প্রদান করুন।';
			case 'howSecurityCirclesWorkQ': return 'নিরাপত্তা বৃত্ত কিভাবে কাজ করে?';
			case 'howSecurityCirclesWorkA': return 'যখন যাচাইকরণের জন্য নিরাপত্তা বৃত্তের প্রয়োজন হয়, তখন ডেল্টা স্মার্ট কন্ট্রাক্ট প্রোগ্রাম এলোমেলোভাবে সিকিউরিটি সার্কেল ফ্রেন্ড লিস্ট থেকে একজন সদস্যকে বেছে নেবে আপনার জন্য পরিচয় নিরাপত্তা যাচাইকরণ সম্পূর্ণ করার জন্য একটি নিরাপত্তা কোড প্রদান করতে। আপনি সদস্যকে নিরাপত্তা কোড জিজ্ঞাসা করলে, এটি নিশ্চিত করতে পারে যে এটি আপনিই। একই সময়ে, প্রোগ্রামটি অনুরোধ করবে: "আপনি না হলে নিরাপত্তা কোড প্রদান করতে অস্বীকার করুন" আপনার অ্যাকাউন্টের নিরাপত্তা রক্ষা করতে। তাই আপনার সর্বদা নিশ্চিত হওয়া উচিত যে আপনার নিরাপত্তা বৃত্তের সদস্যরা আপনি বিশ্বাস করতে পারেন।';
			case 'securityCircleBeUsedQ': return 'কখন এটি ব্যবহার করা হবে?';
			case 'securityCircleBeUsedA1': return '1. যখন আপনার Delta APP নিয়ন্ত্রণ হারায়, তখন সাধারণত ফোনটি হারিয়ে বা চুরি হয়ে যায়।';
			case 'securityCircleBeUsedA2': return '2. কিছু সংবেদনশীল অপারেশনের ক্ষেত্রে, ডেল্টা স্মার্ট কন্ট্রাক্ট প্রোগ্রামকে নিশ্চিত করতে হবে যে এটি আপনিই।';
			case 'provideSafetyTip1': return 'যখন আপনার বন্ধু আপনাকে তার নিরাপত্তা কোড জিজ্ঞাসা করে, নিশ্চিত করুন যে এটি সে বা তার।';
			case 'provideSafetyTip2': return 'আপনি উপরের বন্ধুদের জন্য নিরাপত্তা সুরক্ষা প্রদান করছেন তারা আপনাকে নিরাপত্তা বৃত্তের সবচেয়ে বিশ্বস্ত ব্যক্তি হিসাবে সেট করেছে এবং তাদের অ্যাকাউন্টগুলি সংবেদনশীল ক্রিয়াকলাপের সম্মুখীন হলে আপনাকে তাদের নিরাপত্তা নিশ্চিত করতে হবে৷';
			case 'provideSafetyTip3': return 'প্রয়োজনে নিরাপত্তা কোড বের করতে অন্য পক্ষের অবতারে ডাবল-ক্লিক করুন।';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'অন্য পক্ষের বর্তমানে একটি নিরাপত্তা কোড নেই যা পুনরুদ্ধার করা প্রয়োজন!';
			case 'existSecurityCodeTip': return 'দয়া করে নিশ্চিত করুন যে আপনার কাছ থেকে নিরাপত্তা কোডের জন্য অনুরোধ করা আত্মীয় বা বন্ধুটি আপনার আত্মীয় বা বন্ধুর নিরাপত্তা রক্ষা করার জন্য, যদি এটি আত্মীয় বা বন্ধু না হয় তবে আপনার এটি প্রদান করতে অস্বীকার করা উচিত।';
			case 'avatarSettings': return 'অবতার সেটিংস';
			case 'NFTAvatarPropertyRightsText': return 'বিবৃতি: একটি অবতার হিসাবে প্রাসঙ্গিক NFT ব্যবহার করা শুধুমাত্র ব্যক্তিগত পছন্দের জন্য এবং NFT এর বৌদ্ধিক সম্পত্তি অধিকারের মালিকানার সাথে কোন সম্পর্ক নেই।';
			case 'projectWebsite': return 'প্রকল্প ওয়েবসাইট:';
			case 'whitepaper': return 'সাদা কাগজ:';
			case 'indexID': return 'IndexId';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'সূচক পরিসীমা ${start} এবং ${end} এর মধ্যে';
			case 'inputToLoadNFTAvatarTip': return 'আপনার প্রিয় NFT এর সূচক আইডি লিখুন এবং প্রোগ্রামটি স্বয়ংক্রিয়ভাবে আপনার জন্য একটি অবতার হিসাবে এটি লোড করবে।';
			case 'miningRate': return 'খনির হার';
			case 'miningDetails': return 'খনির বিবরণ';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'মোট খনির হার: '),
				rate,
				const TextSpan(text: ' δ/দিন'),
			]);
			case 'EndOfMiningSession': return 'চক্র খনির সমাপ্তি:';
			case 'tapToMineDeltaCoin': return 'ডেল্টা কয়েন খনিতে ক্লিক করুন ↑';
			case 'clickToStartMining': return 'মাইনিং শুরু করতে ক্লিক করুন!';
			case 'miningHasStoppedPromptDesc': return 'খনির একটি নতুন রাউন্ড শুরু করতে প্রতি 24 ঘন্টা খনি বন্ধ হয়ে গেছে। ডেল্টার মাইনিং হল একটি ডিস্ট্রিবিউশন মেকানিজম যা আপনার ডিভাইস থেকে অতিরিক্ত কম্পিউটিং পাওয়ার এবং নেটওয়ার্ক ট্রাফিক খরচ করে না।';
			case 'aboutBaseRate': return 'বেস রেট সম্পর্কে কি?';
			case 'baseRateDescription': return 'শ্বেতপত্রে বলা হয়েছে, ডেল্টা মাইনিংয়ের মৌলিক হার হ্রাসের নিয়ম দুটি পর্যায়ে বিভক্ত করা হবে। \nপর্যায় 1: যখন অংশগ্রহণকারীদের সংখ্যা (নিবন্ধন) 3000 বা তার কম, হার 32δ/দিন। এটিকে প্রারম্ভিক বেসলাইন হিসাবে ব্যবহার করে, প্রতিবার লোকের সংখ্যা 10 গুণ বেড়ে গেলে, মৌলিক হার অর্ধেক হয়ে যায়। \nপর্যায় 2: যখন অংশগ্রহণকারীদের সংখ্যা 30 মিলিয়ন বা তার উপরে পৌঁছায়, প্রতিবার অংশগ্রহণকারীদের সংখ্যা তিনগুণ বাড়লে মূল হার অর্ধেক হয়ে যায়। চূড়ান্ত খনন শেষ না হওয়া পর্যন্ত উৎপাদন বন্ধ ছিল।';
			case 'baseRate': return 'ভিত্তি হার';
			case 'directReferralRewards': return 'সরাসরি রেফারেল পুরস্কার';
			case 'directReferralRewardDesc': return 'আপনি সরাসরি সুপারিশ করেন এমন প্রত্যেক ব্যক্তির জন্য, যখন তারা খনির স্থিতিতে থাকবে, তখন আপনার খনির হার মূল হারের অতিরিক্ত 1/3 দ্বারা বৃদ্ধি পাবে।\n\n এছাড়াও, আপনার রেফারারের মাইনিং স্ট্যাটাসও আপনার সরাসরি রেফারেল পুরস্কারে গণনা করা হবে।';
			case 'indirectReferralRewards': return 'পরোক্ষ রেফারেল পুরস্কার';
			case 'indirectReferralRewardDesc': return 'যখন একজন পরোক্ষ রেফারার মাইনিং স্ট্যাটাসে থাকে, তখন আপনার মাইনিং রেট বেস রেটের অতিরিক্ত 1/10 দ্বারা বৃদ্ধি পাবে।\n\n আপনার প্রত্যক্ষ সুপারিশ দল, তারা সুপারিশ করা প্রতিটি ব্যক্তি আপনার জন্য একটি পরোক্ষ সুপারিশ প্রতিনিধিত্ব করে।';
			case 'mine': return 'খনির';
			case 'thisMiningInformation': return 'এই খনির তথ্য';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'খনিতে অংশগ্রহণ করেছে: '),
				x,
				const TextSpan(text: ' বার'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'এইবার মোট আয়: '),
				x,
				const TextSpan(text: ' ডেল্টা কয়েন'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'মৌলিক আয়: '),
				x,
				const TextSpan(text: ' কয়েন'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'সরাসরি দলের অবদান: '),
				x,
				const TextSpan(text: ' কয়েন'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'পরোক্ষ দল অবদান: '),
				x,
				const TextSpan(text: ' কয়েন'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'শেষ খনন থেকে সময়ের ব্যবধান: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'কার্যকরী খনির সময়: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} ঘন্টা';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'সম্পদের নিরাপত্তার জন্য, নিরাপত্তা চক্রের সদস্যদের সর্বদা 3-5 জন বিশ্বস্ত লোক রাখা উচিত।';
			case 'index': return 'সূচক';
			case 'amount': return 'পরিমাণ';
			case 'balance': return 'ভারসাম্য';
			case 'timeStamp': return 'টাইমস্ট্যাম্প';
			case 'summary': return 'সারাংশ';
			case 'miningHasStopped': return 'খনন বন্ধ হয়ে গেছে।';
			case 'miningHasStoppedDesc': return 'আপনার মাইনিং বর্তমানে বন্ধ, অবিলম্বে আয় উপার্জন শুরু করুন.';
			case 'startMining': return 'খনন শুরু করুন';
			case 'changeMobileNumber': return 'মোবাইল নম্বর পরিবর্তন করুন';
			case 'currentMobileNumber': return 'বর্তমান মোবাইল নম্বর';
			case 'newMobileNumber': return 'নতুন মোবাইল নম্বর';
			case 'securityCodeFormatIs6digits': return 'সিকিউরিটি কোড ফরম্যাট ৬ ডিজিটের!';
			case 'startVrification': return 'যাচাইকরণ শুরু করুন';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'এই মোবাইল নম্বরটি ইতিমধ্যেই বিদ্যমান, সংশ্লিষ্ট DID: ${dId}';
			case 'noDataYet': return 'এখনো কোনো তথ্য নেই';
			case 'previousMobileNumber': return 'আগের মোবাইল নম্বর';
			case 'changeLog': return 'ইতিহাস পরিবর্তন করুন';
			case 'referralLinkToShare': return 'প্রস্তাবিত লিঙ্ক শেয়ারিং';
			case 'referrer': return 'সুপারিশকারী';
			case 'isoCountryCode': return 'ISO দেশের কোড';
			case 'avatarLogo': return 'অবতার লোগো';
			case 'creationTime': return 'সৃষ্টির সময়';
			case 'lastUpdate': return 'সর্বশেষ আপডেট করা হয়েছে';
			case 'numberOfSecurityCircleMembers': return 'নিরাপত্তা চক্রের সদস্য সংখ্যা';
			case 'theLatestMining': return 'সর্বশেষ খনির';
			case 'effectiveMiningDays': return 'কার্যকর খননের দিনের সংখ্যা';
			case 'modifyNickname': return 'ডাকনাম পরিবর্তন করুন';
			case 'didNotChange': return 'কিছুই বদলায়নি!';
			case 'kycVerification': return 'কেওয়াইসি যাচাইকরণ';
			case 'faceID': return 'ফেস আইডি';
			case 'touchID': return 'ফিঙ্গারপ্রিন্ট আইডি';
			case 'biometricsAuthorizationTest': return 'বায়োমেট্রিক প্রমাণীকরণ পরীক্ষা';
			case 'currentState': return 'বর্তমান অবস্থা';
			case 'biometricsAuthenticationLocalizedReason': return 'আপনার পরিচয় যাচাই করতে আপনার ডিভাইসের আনলক ব্যবহার করুন।';
			case 'graph': return 'এটলাস';
			case 'referralRelationshipGraph': return 'রেফারেল সম্পর্ক গ্রাফ';
			case 'nativeContacts': return 'স্থানীয় যোগাযোগ';
			case 'registrationAndMiningTrends': return 'নিবন্ধন এবং খনির প্রবণতা';
			case 'inMining': return 'খনির';
			case 'registrationVolume': return 'নিবন্ধন সংখ্যা';
			case 'unmined': return 'unmined';
			case 'mined': return 'খনন করা';
			case 'communityMining': return 'সম্প্রদায় খনির';
			case 'consensusPromotionFund': return 'ঐক্যমত প্রচার তহবিল';
			case 'ecologicalAwardFund': return 'পরিবেশগত পুরস্কার তহবিল';
			case 'icpFuelCrowdfunding': return 'আইসিপি ফুয়েল ক্রাউডফান্ডিং';
			case 'coreDeveloperRewards': return 'মূল বিকাশকারী পুরস্কার';
			case 'totalAllocation': return 'মোট বরাদ্দ';
			case 'miningRatio': return 'খনির অনুপাত';
			case 'billion.30': return '30 বিলিয়ন';
			case 'billion.60': return '60 বিলিয়ন';
			case 'billion.180': return '180 বিলিয়ন';
			case 'billion.300': return '300 বিলিয়ন';
			case 'watchAdsToSupportDevelopers': return 'বিকাশকারীদের সমর্থন করার জন্য বিজ্ঞাপনগুলি দেখুন';
			case 'loadingAdcomponents': return 'বিজ্ঞাপনের উপাদান লোড হচ্ছে...';
			case 'timeIsNotUp': return 'এখনো সময় আসেনি!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'লোডিং ব্যর্থ হয়েছে, নেটওয়ার্ক অবরুদ্ধ হতে পারে!';
			case 'pendingUSCTrecords': return 'মুলতুবি USCT রেকর্ড';
			case 'pendingUSCTrecordsDesc': return 'মুলতুবি USCT রেকর্ডগুলি নিশ্চিতকরণের জন্য 15-30 দিনের মধ্যে বিজ্ঞাপনের প্ল্যাটফর্মের সাথে তুলনা করা হবে USCT রেকর্ড তালিকায় স্থানান্তর করা হবে এবং সংশ্লিষ্ট USCT পরিমাণ অ্যাকাউন্ট ব্যালেন্সে যোগ করা হবে।';
			case 'validity': return 'কার্যকারিতা';
			case 'advertiser': return 'বিজ্ঞাপনদাতা';
			case 'earned': return 'অর্জিত';
			case 'withdraw': return 'প্রত্যাহার';
			case 'validUSCTrecords': return 'বৈধ USCT রেকর্ড';
			case 'USCTmining': return 'ইউএসসিটি মাইনিং';
			case 'aboutUSCTmining': return 'USCT খনির সম্পর্কে?';
			case 'aboutUSCTminingItme1': return '1. USDT হল একটি বিশ্বব্যাপী জনপ্রিয় মার্কিন ডলারের স্থিতিশীল মুদ্রা যা সারা বিশ্বের মূলধারার ক্রিপ্টোকারেন্সি এক্সচেঞ্জে সহজেই বিভিন্ন দেশের সার্বভৌম মুদ্রায় রূপান্তরিত হতে পারে।';
			case 'aboutUSCTminingItme2': return '2. USCT হল USCT খনির আয়ের একটি অস্থায়ী পরিমাপ মূল্য, পুরো নাম হল USD ক্রেডিট, যা প্রকৃত নিষ্পত্তির পরিমাণ এবং বিজ্ঞাপন প্ল্যাটফর্মের বন্টন নিয়ম অনুযায়ী এবং সংশ্লিষ্ট অনুপাতে USDT-তে রূপান্তরিত হতে পারে।';
			case 'aboutUSCTminingItme3': return '3. ইউএসসিটি মাইনিং হল ডেল্টা সম্প্রদায়ের একটি ট্রাফিক বিজ্ঞাপন নগদীকরণ ফাংশন। বিজ্ঞাপনদাতা, ডেল্টা ডেভেলপার এবং ঠিকাদারদের জন্য একাধিক সুবিধা প্রদানের জন্য ডেল্টা সম্প্রদায়ের বৃহৎ ব্যবহারকারী বেস ব্যবহার করুন। এর ডিজাইনের উদ্দেশ্য হল প্রাথমিক পর্যায়ে অনুপস্থিতদের জন্য একটি নির্দিষ্ট পরিমাণ কার্যকর আয় প্রদান করা যখন ডেল্টা ইকোসিস্টেম এখনও তৈরি হয়নি এবং একই সাথে এটি বিকাশকারীদেরকে নিশ্চিত করতে নির্দিষ্ট আর্থিক সহায়তা প্রদান করে দীর্ঘমেয়াদে উন্নয়ন পরিষেবা, এবং শেষ পর্যন্ত শ্বেতপত্রে সমস্ত পরিকল্পনা উপলব্ধি করতে সক্ষম হবেন পণ্যের বিজ্ঞাপনদাতাদের জন্য একটি কার্যকর প্রচার চ্যানেলও প্রদান করবে;';
			case 'aboutUSCTminingItme4': return '4. বিতরণের নিয়মগুলি এমনভাবে ডিজাইন করা হয়েছে যে মোট রাজস্বের 40% ডেভেলপার প্রযুক্তিগত পরিষেবা কমিশন হিসাবে ব্যবহার করা হয় এবং অবশিষ্ট 60% সম্প্রদায় অনুপস্থিত পুরস্কার হিসাবে ব্যবহৃত হয়। অনুপস্থিত পুরষ্কার অংশটি DTC এর অনুরূপ একটি বহু-স্তরের বন্টন মডেল গ্রহণ করে 6:3:1 অনুপাত অনুসারে এই অনুপস্থিতির পুরষ্কারগুলির 60% একটি USCT খনির জন্য বরাদ্দ করা হয়৷ অনুপস্থিত যারা বর্তমানে বিজ্ঞাপনটি দেখছেন, 3 পয়েন্ট বরাদ্দ করা হয়েছে উচ্চতর সুপারিশকারীকে, এবং 1টি উপাদান দ্বিতীয় স্তরের সুপারিশকারীকে বরাদ্দ করা হয়েছে। একইভাবে, আপনি যদি USCT-এর মাধ্যমে আমার বন্ধুদের সুপারিশ করেন, আপনিও একই রেফারারের পুরস্কার পেতে পারেন। এই ধরনের মাল্টি-লেভেল ডিস্ট্রিবিউশনের সুবিধা হল যে কেউ একটি অফলাইন দল তৈরি করে তুলনামূলকভাবে বড় পরিমাণে USDT আয় পেতে পারে।';
			case 'aboutUSCTminingItme5': return '5. নিষ্পত্তি চক্র 7 দিন, অর্থাৎ, বৈধতা প্রতি 7 দিনে বিজ্ঞাপন প্ল্যাটফর্মের সাথে পরীক্ষা করা হয়, এবং বৈধ বলে নিশ্চিত হওয়া রাজস্ব এবং প্রকৃত পরিমাণ ব্যালেন্সে রেকর্ড করা হবে। প্রতিটি তোলার জন্য সর্বনিম্ন পরিমাণ হল 10 USDT।';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'লাইন ${x} থেকে ${y}';
			case 'wallet': return 'মানিব্যাগ';
			case 'multiChainWallet': return 'মাল্টি-চেইন ওয়ালেট';
			case 'deposit': return 'জমা';
			case 'transfer': return 'স্থানান্তর';
			case 'xcoinInWallet': return ({required Object coinCode}) => 'ওয়ালেট ঠিকানায় ${coinCode}';
			case 'transactions': return 'লেনদেনের ইতিহাস';
			case 'network': return 'নেটওয়ার্ক';
			case 'walletAddress': return 'ওয়ালেট ঠিকানা';
			case 'currentAddress': return 'বর্তমান ঠিকানা';
			case 'depositAddress': return 'রিচার্জ ঠিকানা';
			case 'receivingMoneyAddress': return 'পেমেন্ট ঠিকানা';
			case 'applyTempDepositAddress': return 'একটি অস্থায়ী রিচার্জ ঠিকানার জন্য আবেদন করুন';
			case 'tempDepositAddressTip': return '1. এটি একটি শেয়ার করা ডিপোজিট ঠিকানা। ইজারার মেয়াদ শেষ হওয়ার পরে বা সীমাহীন হওয়ার পরে অনুগ্রহ করে পরিমাণ জমা করবেন না। যদি এটি ঘটে তবে পরিমাণটি নষ্ট হয়ে যাবে।';
			case 'tempDepositAddressTip2': return '2. জমা করার আগে, অনুগ্রহ করে নিশ্চিত করুন যে [চেইন নাম] এবং [মুদ্রার নাম] সম্পূর্ণ মেলে যদি এটি একটি চুক্তির টোকেন হয় তবে আপনাকে নিশ্চিত করতে হবে যে [চুক্তির মান] এবং [চুক্তির ঠিকানা] সম্পূর্ণ মেলে।';
			case 'tempDepositAddressTip3': return '3. অনুগ্রহ করে এমন তহবিল জমা করার চেষ্টা করবেন না যা উপরের টিপসগুলির সাথে কোনও প্যারামিটারের সাথে মেলে না, অন্যথায় পরিমাণটি হারিয়ে যাবে৷';
			case 'tempDepositAddressTip4': return '4. আপনি যদি অন্য ধরনের সম্পদ জমা করতে চান, তাহলে অনুগ্রহ করে একটি নতুন ঠিকানার জন্য আবেদন করার জন্য সংশ্লিষ্ট মুদ্রা পৃষ্ঠা এবং প্যারামিটার বিকল্পগুলিতে স্যুইচ করুন।';
			case 'applyExtensionOfValidity': return 'মেয়াদ বাড়ানোর জন্য আবেদন করুন';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap }) => TextSpan(children: [
				const TextSpan(text: 'ঠিকানাটির মেয়াদ '),
				diff,
				const TextSpan(text: ' পরে শেষ হয়ে যাবে, এবং মেয়াদ শেষ হওয়ার 12 ঘন্টার মধ্যে আপনি '),
				tap ('ম্যানুয়ালি প্রসারিত'),
				const TextSpan(text: ' করতে পারেন৷'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'শুধুমাত্র 12 ঘন্টা আগে পুনর্নবীকরণ করা যাবে';
			case 'theReceivingAddressValidForLongtime': return 'এই পেমেন্ট ঠিকানা দীর্ঘ সময়ের জন্য বৈধ.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'এই পেমেন্ট ঠিকানাটি দীর্ঘ সময়ের জন্য বৈধ এবং রিয়েল টাইমে স্বয়ংক্রিয়ভাবে জমা হবে।';
			case 'confirmDeposited': return 'জমা নিশ্চিত করুন';
			case 'unbindThisDepositAddress': return 'রিচার্জ ঠিকানাটি আনবাইন্ড করুন';
			case 'confirmDepositedTip': return 'যদি তহবিল স্থানান্তর করা হয়, অনুগ্রহ করে 10 মিনিটের পরে ওয়ালেটে অ্যাকাউন্টটি ট্রিগার করতে উপরের বোতামে ক্লিক করুন।';
			case 'unbindDepositAddressTip': return 'স্মার্ট কন্ট্রাক্টের চলমান খরচ কমাতে, যদি মেয়াদের মধ্যে আর কোনো ফান্ড জমা না করা হয়, তাহলে অনুগ্রহ করে রিচার্জ অ্যাড্রেসটি আনবাইন্ড করুন।';
			case 'transferToAddress': return 'ঠিকানায় যান';
			case 'longPressToPaste': return 'পেস্ট করতে দীর্ঘক্ষণ টিপুন';
			case 'all': return 'সব';
			case 'balanceX': return ({required Object x}) => 'ব্যালেন্স ${x}';
			case 'transferOut': return 'স্থানান্তর আউট';
			case 'depositXcoins': return ({required Object x}) => '${x} জমা দিন';
			case 'sender': return 'প্রেরক';
			case 'recipient': return 'রিসিভার';
			case 'memo': return 'মন্তব্য';
			case 'kind': return 'পথ';
			case 'transferAmountExceedsAvailableBalance': return 'স্থানান্তরের পরিমাণ উপলব্ধ ব্যালেন্স ছাড়িয়ে গেছে';
			case 'pleaseEnterValidAmount': return 'একটি বৈধ পরিমাণ লিখুন';
			case 'networkFee': return 'নেটওয়ার্ক হ্যান্ডলিং ফি';
			case 'fee': return 'হ্যান্ডলিং ফি';
			case 'validLengthXcharacters': return ({required Object x}) => 'ঠিকানার কার্যকরী দৈর্ঘ্য হল ${x} অক্ষর';
			case 'historys': return 'ইতিহাস';
			case 'dtcCreditdetail': return 'ডেল্টা পয়েন্টের বিবরণ';
			case 'usdCreditdetail': return 'USD পয়েন্টের বিবরণ';
			case 'dappSquare': return 'dApp স্কোয়ার';
			case 'amountRaised': return 'পরিমাণ উত্থাপিত';
			case 'disbursedAmount': return 'বিতরণের পরিমাণ';
			case 'participationTimes': return 'অংশগ্রহণকারীদের সংখ্যা';
			case 'completionRate': return 'সমাপ্তির হার';
			case 'exchangeRate': return 'বিনিময় হার';
			case 'icpCrowdfunding': return 'আইসিপি ক্রাউডফান্ডিং';
			case 'crowdfunding': return 'ক্রাউডফান্ডিং';
			case 'trendsCurve': return 'প্রবণতা বক্ররেখা';
			case 'fullScreenView': return 'পূর্ণ পর্দা দৃশ্য';
			case 'walletBalance': return 'ওয়ালেট ব্যালেন্স:';
			case 'manageWallet': return 'মানিব্যাগ পরিচালনা করুন';
			case 'fundraiseAmount': return 'উত্থাপিত তহবিলের পরিমাণ';
			case 'exchangeRewardAmount': return 'বিনিময় পুরস্কার পরিমাণ';
			case 'fundraise': return 'তহবিল বাড়াতে';
			case 'rangeIntegersX': return ({required Object x}) => 'ব্যাপ্তি: ${x} পূর্ণসংখ্যা';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'সফলভাবে তহবিল সংগ্রহে অংশগ্রহণ করেছেন এবং ${amount}DTCT পুরস্কার পেয়েছেন৷';
			case 'amountSummary': return 'পরিমাণের সারাংশ';
			case 'changePreferred': return 'পছন্দ পরিবর্তন করুন';
			case 'changePreferredAddress': return 'পছন্দের ঠিকানা পরিবর্তন করুন';
			case 'preferredAddressTip': return 'একটি নিবন্ধিত মোবাইল নম্বর বা DID ব্যবহার করে অর্থ গ্রহণ করার সময়, তহবিল স্বয়ংক্রিয়ভাবে পছন্দের ঠিকানায় স্থানান্তরিত হবে।';
			case 'newAddress': return 'নতুন ঠিকানা';
			case 'newAddressTip': return 'অপব্যবহার রোধ করতে, যখন একাধিক ওয়ালেট ঠিকানা থাকে, তৈরি করা প্রতিটি নতুন ঠিকানার জন্য একটি লেনদেন ফি খরচ করা হবে।';
			case 'createNew': return 'নতুন';
			case 'chainNetworkName': return 'চেইন নেটওয়ার্কের নাম';
			case 'from': return 'থেকে';
			case 'to': return 'পৌঁছা';
			case 'noAvailableDepositAmountDetected': return 'কোন উপলব্ধ আমানত পরিমাণ সনাক্ত করা হয়নি!';
			case 'crossChainReceiveMoneyMonitoring': return 'ক্রস-চেইন পেমেন্ট নিরীক্ষণ করা হচ্ছে...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'প্রাপ্ত ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'নিশ্চিত করা হচ্ছে('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'উল্লেখ্য জিনিস (নতুনদের জন্য পড়তে হবে)';
			case 'whyUseSharedAddresses': return 'কেন শেয়ার করা ঠিকানা ব্যবহার করবেন?';
			case 'useSharedrAdvantage': return 'ক্রস-চেইন আমানত করার সময়, একটি ভাগ করা ঠিকানা ব্যবহার করার সুবিধাগুলি নিম্নরূপ:';
			case 'useSharedrAdvantage1': return '1. স্থানান্তর ফি এর অপচয় কমাতে এবং ব্যবহারকারীর খরচ কমাতে. কারণ যদি একটি এক্সক্লুসিভ ঠিকানা ব্যবহার করা হয়, তবে তহবিলগুলি খুব বেশি বিচ্ছুরিত হবে, সাধারণভাবে, নগদ তোলার সময় অন্য ব্যবহারকারীদের ট্রান্সফার করার সুবিধার্থে, যখন ব্যবহারকারীরা রিচার্জ করেন, তখন তাদের একটি বা অল্প সংখ্যায় তহবিল স্থানান্তর করতে হবে। ব্যবস্থাপনার জন্য ঠিকানা।';
			case 'useSharedrAdvantage2': return '2. শেয়ারিং সলিউশনে, প্রোগ্রামটিকে শুধুমাত্র একটি অপেক্ষাকৃত ছোট অ্যাড্রেস পুল বজায় রাখতে হবে, যা দ্রুত বহির্গামী তহবিলের সাথে মেলে এবং লাইটওয়েট সংগ্রহ পর্যবেক্ষণ করতে পারে, যা কম্পিউটিং রিসোর্স ওভারহেড কমাতে পারে। বিপরীতে, একচেটিয়া ঠিকানাগুলির সাথে, পরিস্থিতি ঠিক বিপরীত।';
			case 'tokenType': return 'টোকেন প্রকার';
			case 'contract': return 'চুক্তি';
			case 'contractStandard': return 'চুক্তির মান';
			case 'contractAddress': return 'চুক্তির ঠিকানা';
			case 'native': return 'নেটিভ';
			case 'confirmUnbindingPleaseEnterYes': return 'আনবাইন্ডিং নিশ্চিত করতে, অনুগ্রহ করে "হ্যাঁ" লিখুন';
			case 'listAllWorkingTempReceivingAddresses': return 'সমস্ত কর্মরত ক্রস-চেইন রিচার্জ ঠিকানা তালিকাভুক্ত করুন';
			case 'setNote': return 'নোট সেট করুন';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'দৈর্ঘ্য ${x} বাইটের বেশি হতে পারে না৷';
			case 'transferFee': return 'স্থানান্তর ফি';
			case 'crossChainFee': return 'ক্রস-চেইন ফি';
			case 'crossChainTransferOutError': return 'ক্রস-চেইন স্থানান্তর ত্রুটি';
			case 'chainName': return 'চেইন নাম';
			case 'message': return 'তথ্য';
			case 'dontShowAgain': return 'আবার দেখাবেন না';
			case 'queuing': return 'সারিতে';
			case 'optional': return 'ঐচ্ছিক';
			case 'publiclyVisible': return 'সর্বজনীনভাবে দৃশ্যমান';
			case 'rates': return 'হার';
			case 'minimum': return 'সর্বনিম্ন';
			case 'maximum': return 'সর্বোচ্চ';
			case 'minimumBlockConfirmations': return 'ব্লক নিশ্চিতকরণের ন্যূনতম সংখ্যা';
			case 'dsmsVerifyTerminal': return 'DSMS যাচাইকরণ টার্মিনাল';
			case 'overall': return 'সামগ্রিক';
			case 'my': return 'আমার';
			case 'checkValidatorQualifications': return 'যাচাইকারী অনুমতির যোগ্যতা পরীক্ষা করুন';
			case 'getVerifierPermissions': return 'সার্টিফায়ার অনুমতি পান';
			case 'qualification': return 'যোগ্যতা';
			case 'upperLimit': return 'উচ্চ সীমা';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'অ্যাক্সেস করার জন্য অনুমোদিত টার্মিনাল সংখ্যার উপরের সীমা';
			case 'numberOfExistingAccessTerminals': return 'বিদ্যমান অ্যাক্সেস টার্মিনালের সংখ্যা';
			case 'applyingForDSMSVerifierPermissionsTips': return 'যাচাইকারী অনুমতির জন্য আবেদন করার আগে, আপনাকে একটি নিষ্ক্রিয় অ্যান্ড্রয়েড ফোন এবং একটি ডেডিকেটেড অ্যাক্সেস নম্বর প্রস্তুত করতে হবে এবং DSMS অ্যাক্সেস টার্মিনাল অ্যাপ্লিকেশনটি ডাউনলোড এবং ইনস্টল করতে হবে।';
			case 'downloadLink': return 'ডাউনলোড লিঙ্ক';
			case 'alreadyReadyFollowingTheAboveTips': return 'উপরের টিপস অনুযায়ী প্রস্তুত';
			case 'globalUniversal': return 'সর্বজনীন';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'DSMS যাচাইকরণ অ্যাক্সেস পরিষেবায় অংশগ্রহণ করার জন্য বর্তমানে পর্যাপ্ত স্থানীয় যাচাইকারী নেই পরিষেবাটি অ্যাক্সেস করতে দয়া করে "'),
				gu,
				const TextSpan(text: '" নির্বাচন করুন৷'),
			]);
			case 'asDedicatedNumberForAccess': return 'একটি ডেডিকেটেড অ্যাক্সেস নম্বর হিসাবে';
			case 'pleaseCheckTip': return ({required Object tip}) => 'অনুগ্রহ করে "${tip}" চেক করুন';
			case 'inputLengthTooShort': return 'ইনপুট দৈর্ঘ্য খুব ছোট';
			case 'shortName': return 'সংক্ষেপণ';
			case 'pleaseEnterXname': return ({required Object name}) => 'দয়া করে ${name} লিখুন';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'আবেদন জমা দেওয়া হচ্ছে, অনুগ্রহ করে অপেক্ষা করুন...';
			case 'applyForDSMSVerifierPermission': return 'DSMS যাচাইকারী অনুমতির জন্য আবেদন করুন';
			case 'confirmInformation': return 'তথ্য নিশ্চিত করুন';
			case 'lastHeartbeat': return 'শেষ হার্টবিট';
			case 'expirationTime': return 'মেয়াদ শেষ হওয়ার সময়';
			case 'country': return 'জাতি';
			case 'accessTerminals': return 'অ্যাক্সেস টার্মিনাল';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'DSMS অ্যাক্সেস নম্বর টার্মিনালের মোট সংখ্যা';
			case 'textContent': return 'পাঠ্য বিষয়বস্তু';
			case 'scanQRcodeToLogin': return 'লগ ইন করতে কোড স্ক্যান করুন';
			case 'confirmLogin': return 'লগইন নিশ্চিত করুন';
			case 'authorizeSubApplicationToLogin': return 'লগ ইন করার জন্য সাব-অ্যাপ্লিকেশন অনুমোদন করুন';
			case 'authorizationSuccessful': return 'অনুমোদন সফল!';
			case 'launchSMSprogram': return 'এসএমএস প্রোগ্রাম শুরু করুন';
			case 'notApplied': return 'কোন আবেদন নেই';
			case 'validityPeriod': return 'মেয়াদকাল';
			case 'renewal': return 'নবায়ন করুন';
			case 'scanCodeToAuthorizeTerminalLogin': return 'টার্মিনাল লগইন অনুমোদন করতে কোড স্ক্যান করুন';
			case 'rewards': return 'পুরস্কার';
			case 'roles': return 'ভূমিকা';
			case 'developerCenter': return 'বিকাশকারী কেন্দ্র';
			case 'appName': return 'আবেদনের নাম';
			case 'pleaseSelect': return 'অনুগ্রহ করে নির্বাচন করুন';
			case 'category': return 'শ্রেণী';
			case 'keywords': return 'কীওয়ার্ড';
			case 'pleaseEnterAkeyword': return 'অনুগ্রহ করে একটি কীওয়ার্ড লিখুন';
			case 'createApplication': return 'অ্যাপ্লিকেশন তৈরি করুন';
			case 'appType': return 'আবেদনের ধরন';
			case 'numberOfCategoriesMustBetween1and3': return 'বিভাগের সংখ্যা 1 থেকে 3 এর মধ্যে হতে হবে';
			case 'appLogoSpecifications': return 'ছবির বিন্যাস: png, আকার: 100KB এর মধ্যে, রেজোলিউশন (পিক্সেল): 256*256';
			case 'localAlbum': return 'স্থানীয় ছবির অ্যালবাম';
			case 'networkPath': return 'নেটওয়ার্ক পাথ';
			case 'imageURLkAddress': return 'ছবির URL ঠিকানা';
			case 'urlAddressFormatIsIncorrect': return 'URL ঠিকানা বিন্যাস ভুল';
			case 'imageFormatOnlySupportsPng': return 'ছবি শুধুমাত্র "png" ফর্ম্যাট সমর্থন করে।';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'দৈর্ঘ্য অবশ্যই ${a}-${b} অক্ষরের মধ্যে হতে হবে';
			case 'introduction': return 'ভূমিকা';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'ছবির আকার ${a} এর চেয়ে বড় হতে পারে না, বর্তমানে এটি ${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'ছবির রেজোলিউশন হতে হবে: ${p1} (পিক্সেল), বর্তমানে এটি ${p2}';
			case 'becomeDeveloper': return 'একজন বিকাশকারী হয়ে উঠুন';
			case 'developerInformation': return 'বিকাশকারী তথ্য';
			case 'teamName': return 'দলের নাম';
			case 'website': return 'ওয়েবসাইট';
			case 'other': return 'অন্যান্য';
			case 'githubVerification': return 'Github যাচাইকরণ';
			case 'exampleUrl': return 'ExampleUrl';
			case 'githubVerificationTip': return ({required Object did}) => '\'${did}\' এর বিষয়বস্তু সহ একটি \'delta.did\' ফাইল তৈরি করতে অনুগ্রহ করে আপনার GitHub অ্যাকাউন্টটি ব্যবহার করুন; তারপর, প্রমাণীকরণের জন্য এই ইনপুট বক্সে ফাইলটির githubusercontent URL ঠিকানা পেস্ট করুন।';
			case 'createApp': return 'অ্যাপ তৈরি করুন';
			case 'appManagement': return 'অ্যাপ্লিকেশন ব্যবস্থাপনা';
			case 'statusLogs': return 'অবস্থা লগ';
			case 'bad': return 'ভাল না';
			case 'normal': return 'সাধারণভাবে';
			case 'good': return 'খুব ভাল';
			case 'onceCreatedItCannotBeChanged': return 'একবার তৈরি হয়ে গেলে আর পরিবর্তন করা যায় না!';
			case 'manageApplicationEntity': return 'অ্যাপ্লিকেশন সত্তা পরিচালনা করুন';
			case 'currentVersion': return 'বর্তমান সংস্করণ';
			case 'submitVersion': return 'কমিট সংস্করণ';
			case 'packageOnlySupportZipCompressedFile': return 'প্যাকেজ শুধুমাত্র জিপ সংকুচিত ফাইল সমর্থন করে';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'জিপ প্যাকেজে \'${name}\' ফাইল পাওয়া যায়নি';
			case 'fileList': return 'ফাইল তালিকা:';
			case 'programPackage': return 'প্যাকেজ:';
			case 'automaticallyExtractFromVersionFile': return '\'.version\' ফাইল থেকে স্বয়ংক্রিয়ভাবে বের করুন';
			case 'dappVersionFormatTip': return 'সংস্করণ নম্বর বিন্যাসটি অবশ্যই একটি দশমিক হতে হবে এবং নির্ভুলতা অবশ্যই 2 সংখ্যায় বজায় রাখতে হবে এবং সর্বাধিক 99.99 এর বেশি হতে পারবে না।';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'সংস্করণ নম্বর বর্তমান সংস্করণ \'${v}\' থেকে বড় হতে হবে';
			case 'versionNotes': return 'সংস্করণ নোট:';
			case 'updateRelease': return 'আপডেট সংস্করণ';
			case 'loadAndRun': return 'লোড এবং রান';
			case 'notYetSubmittedProgramPackage': return 'প্যাকেজ এখনো জমা হয়নি!';
			case 'authorizeMinidAppLogin': return 'মিনি-ডিএপ লগইন অনুমোদন করুন';
			case 'confirmAuthorizationPleaseEnterYes': return 'অনুমোদন নিশ্চিত করতে, অনুগ্রহ করে "হ্যাঁ" লিখুন';
			case 'authorizeNow': return 'এখন অনুমোদন করুন';
			case 'operation': return 'পরিচালনা:';
			case 'statusChange': return 'অবস্থা পরিবর্তন';
			case 'changeTo': return 'এতে পরিবর্তন করুন:';
			case 'notes': return 'মন্তব্য:';
			case 'changesNotEffective': return 'অবৈধ পরিবর্তন!';
			case 'released': return 'প্রকাশিত হয়েছে';
			case 'inPublicBeta': return 'পাবলিক বিটা';
			case 'developers': return 'বিকাশকারী:';
			case 'reviewList': return 'মন্তব্য তালিকা:';
			case 'postReview': return 'একটি মন্তব্য করুন';
			case 'scoreNow': return 'এখন রেট';
			case 'description': return 'বর্ণনা:';
			case 'noData': return '(^-^)\n কোন তথ্য নেই';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'সংস্করণ আপডেট করা হয়েছে ${a} থেকে ${b}';
			case 'loadNewVersion': return 'নতুন সংস্করণ লোড করুন';
			case 'name': return 'নাম:';
			case 'canisterId': return 'কন্টেইনার ট্যাঙ্ক আইডি:';
			case 'updateTime': return 'আপডেট সময়';
			case 'contractCanistersState': return 'চুক্তি পাত্র অবস্থা';
			case 'userDistribution': return 'ব্যবহারকারী বিতরণ';
			case 'settings': return 'সেট আপ';
			case 'security': return 'নিরাপত্তা';
			case 'invite': return 'আমন্ত্রণ';
			case 'more': return 'আরও…';
			case 'receiveAddress': return 'প্রাপ্তির ঠিকানা:';
			case 'hangingAmount': return 'ঝুলন্ত';
			case 'hangingAmountTips': return 'মুলতুবি থাকা পরিমাণ হল আপনার অধীনস্থ দল দ্বারা খনন করে জেনারেট করা পুরষ্কারগুলির একটি অস্থায়ী রেকর্ড।';
			case 'pendingAmount': return 'মুলতুবি';
			case 'pendingAmountTips': return 'মুলতুবি থাকা অর্থ সেই পরিমাণকে বোঝায় যা এখনও নিশ্চিত করা হয়নি এবং যে পরিমাণ তুলনার জন্য বৈধ তা যদি কোনো অবৈধ অংশ থাকে তবে তা বাদ দেওয়া হবে।';
			case 'received': return 'গৃহীত';
			case 'processing': return 'প্রক্রিয়াকরণ';
			case 'replied': return 'উত্তর দিয়েছেন';
			case 'rejected': return 'প্রত্যাখ্যান';
			case 'unknown': return 'অজানা';
			case 'insufficientBalance': return 'অপর্যাপ্ত ভারসাম্য!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'ক্রস-চেইন নেটওয়ার্ক ফি প্রদানের জন্য ${x} এর ব্যালেন্স অপর্যাপ্ত';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'এমন একটি লেনদেন রয়েছে যা সম্পূর্ণ হয়নি এবং এই মুহূর্তে স্থানান্তর করা যাবে না।';
			case 'thisfunctionNotSupportExternalCalls': return 'এই ফাংশন বহিরাগত কল সমর্থন করে না';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'ক্রস-চেইন ফি প্রদানের জন্য ব্যবহার করা যেতে পারে এমন কোনো মিল ঠিকানা নেই এবং অনুগ্রহ করে অন্য চেইন নেটওয়ার্কে স্যুইচ করুন।';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'সর্বাধিক স্থানান্তর পরিমাণ বর্তমানে একটি একক লেনদেনের সাথে মিলেছে ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'মন্তব্য 64 বাইট অতিক্রম করা উচিত নয়';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'অপর্যাপ্ত ব্যালেন্স, পরিমাণ হল: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'আবদ্ধ অর্থপ্রদান ঠিকানার সংখ্যা 3 এর বেশি হতে পারে না।\nআপনি যদি একটি নতুন পেমেন্ট ঠিকানা আবদ্ধ করতে চান,\nঅনুগ্রহ করে প্রথমে অন্য পেমেন্ট ঠিকানা আনবাইন্ড করুন';
			case 'parametersA_exception': return ({required Object x}) => 'প্যারামিটার: ${x}, ব্যতিক্রম';
			case 'parameterException': return 'প্যারামিটার ব্যতিক্রম!';
			case 'transferAmountMustBeLargerThan0': return 'স্থানান্তরের পরিমাণ অবশ্যই 0-এর বেশি হতে হবে';
			case 'authorizationHasExpired': return 'অনুমোদনের মেয়াদ শেষ হয়ে গেছে';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'অ্যাপটি মালিক কর্তৃক অনুমোদিত নয়';
			case 'authenticationTokenIsInvalid': return 'প্রমাণীকরণ টোকেন অবৈধ৷';
			case 'verifyInfoIsInvalidOrExpired': return 'যাচাইকরণের তথ্য অবৈধ বা মেয়াদোত্তীর্ণ';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'যাচাই করুন যে অ্যাক্সেস টার্মিনালের সংখ্যা 10,000 এর মধ্যে একটির সীমা অতিক্রম করেছে৷';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'খনির অংশগ্রহণের সময় অবশ্যই 3 দিনের বেশি হতে হবে';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'নিরাপত্তা চক্রের সদস্য সংখ্যা 3 জনের কম হতে পারবে না';
			case 'avatarIsNotSet': return 'অবতার সেট করা নেই';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'সরাসরি রেফারেলের সংখ্যা 3 জনের কম হতে পারে না';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'সময়সীমা অপর্যাপ্ত এবং আপনি বছরে একবার আপনার মোবাইল ফোন নম্বর পরিবর্তন করতে পারবেন।';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'মোবাইল ফোন নম্বরটি ইতিমধ্যেই বিদ্যমান এবং পুনরাবৃত্তি করা যাবে না৷';
			case 'securityCodeIsIncorrect': return 'নিরাপত্তা কোড ভুল';
			case 'securityCodeMayHaveExpired': return 'নিরাপত্তা কোড মেয়াদ উত্তীর্ণ হতে পারে';
			case 'sessionIdIsInvalidOrExpired': return 'সেশন আইডিটি অবৈধ বা মেয়াদোত্তীর্ণ';
			case 'sessionHasBeenAuthorized': return 'অধিবেশন অনুমোদিত হয়েছে!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'মেয়াদ শেষ হওয়ার আগে শুধুমাত্র ${x} দিনের মধ্যে পুনর্নবীকরণ করা যাবে';
			case 'notYetGrantedDeveloperPermissions': return 'এখনও বিকাশকারী অধিকার প্রাপ্ত করা হয়নি';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => '${x} ক্ষেত্র খালি রাখা যাবে না';
			case 'emailFormatError': return 'ইমেল বিন্যাস ত্রুটি';
			case 'theXformatIsIncorrect': return ({required Object x}) => '\'${x}\' ফর্ম্যাট ত্রুটি৷';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'ক্ষেত্র \'${x}\' অবশ্যই ${y} এবং ${z} অক্ষরের মধ্যে হতে হবে৷';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => '‘${x}’ নির্বাচনের পরিসর অবশ্যই ${y} এবং ${z} এর মধ্যে হতে হবে';
			case 'unchanged_sameAsOldContent': return 'অপরিবর্তিত, পুরানো বিষয়বস্তু হিসাবে একই!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' ইতিমধ্যেই বিদ্যমান!';
			case 'mobileNumberHasNotJoinedDelta': return 'এই মোবাইল নম্বরটি ডেল্টায় যোগ করা হয়নি!';
			case 'referrerIdCannotBeEmpty': return 'রেফারার আইডি খালি হতে পারে না!';
			case 'referrerIdDoesNotExist': return 'রেফারার আইডি নেই!';
			case 'didIsIncorrectOrInvalid': return 'ডিআইডি ভুল নাকি অবৈধ!';
			case 'accessTokenIsIncorrectOrInvalid': return 'অ্যাক্সেস টোকেন ভুল বা অবৈধ!';
			case 'minimumWithdrawalAmountIs1USD': return 'এক সময়ের জন্য সর্বনিম্ন উত্তোলনের পরিমাণ হল 1USD৷';
			case 'miningTimeIsNotYet': return 'খনির সময় এখনও আসেনি';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'ইতিমধ্যেই বিদ্যমান, দয়া করে আবার যোগ করবেন না!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'নিবন্ধন নম্বর যাচাইকরণ অ্যাক্সেস নম্বর হিসাবে ব্যবহার করা যাবে না';
			case 'canotAddYourSelf': return 'নিজেকে যোগ করা যাবে না';
			case 'logOut': return 'লগ আউট করুন';
			case 'confirmLogout': return 'লগআউট নিশ্চিত করুন';
			case 'logOutTipsText': return 'বন্ধুত্বপূর্ণ অনুস্মারক: শ্বেতপত্রের প্রাসঙ্গিক বিধান অনুসারে, অ্যাকাউন্টের প্রতিটি লগইন যাচাইকরণের জন্য একটি প্রণোদনা হিসাবে একটি নির্দিষ্ট পরিমাণ ডিটিসি কয়েন খরচ হবে, যদি না প্রয়োজন হয় তাহলে লগ ইন এবং আউট করার চেষ্টা করবেন না নিচের বোতামটি এখন সাইন আউট করবে।';
			case 'ConfirmLogoutPleaseEnterYes': return 'লগআউট নিশ্চিত করতে দয়া করে "হ্যাঁ" লিখুন৷';
			case 'tip': return 'ইঙ্গিত';
			case 'cancel': return 'বাতিল করুন';
			case 'close': return 'বন্ধ';
			case 'selected': return 'নির্বাচিত';
			case 'edit': return 'সম্পাদনা';
			case 'submit': return 'জমা';
			case 'goBack': return 'রোলব্যাক';
			case 'copiedToClipboard': return 'ক্লিপবোর্ডে কপি করা হয়েছে।';
			case 'nickname': return 'ডাক নাম';
			case 'confirm': return 'নিশ্চিত করুন';
			case 'cannotBeEmpty': return 'খালি হতে পারে না';
			case 'deleteSuccessful': return 'মুছে ফেলা সফল!';
			case 'successfullyModified': return 'পরিবর্তন সফল!';
			case 'executionSuccessful': return 'মৃত্যুদন্ড সফল!';
			case 'preview': return 'পূর্বরূপ';
			case 'followSystem': return 'সিস্টেম অনুসরণ করুন';
			case 'change': return 'পরিবর্তন';
			case 'replace': return 'প্রতিস্থাপন';
			case 'view': return 'চেক করুন';
			case 'manage': return 'পরিচালনা';
			case 'modify': return 'সংশোধন করুন';
			case 'replacedSuccessfully': return 'প্রতিস্থাপন সফল!';
			case 'authentication': return 'প্রমাণীকরণ';
			case 'reacquire': return 'পুনরায় অর্জন করা';
			case 'tryAgain': return 'আবার চেষ্টা করুন';
			case 'querying': return 'প্রশ্ন করা হচ্ছে...';
			case 'writingToOnChain_pleaseWait': return 'চেইনে লেখা, অনুগ্রহ করে অপেক্ষা করুন...';
			case 'versionCheck': return 'সংস্করণ সনাক্তকরণ';
			case 'alreadyLatestVersion': return 'ইতিমধ্যে সর্বশেষ সংস্করণ!';
			case 'foundNewVersion': return 'নতুন সংস্করণ পাওয়া গেছে:';
			case 'upgradeLink': return 'আপগ্রেড লিঙ্ক:';
			case 'deviceDescription': return 'সরঞ্জাম বিবরণ:';
			case 'notification30SecondsBeforeMiningStops': return 'খনন বন্ধ হওয়ার 30 সেকেন্ড আগে বিজ্ঞপ্তি অনুস্মারক কার্যকর করুন!';
			case 'goMining': return 'মাইনিংয়ে যাও';
			case 'deltaMiningReminder': return 'ডেল্টা মাইনিং অনুস্মারক';
			case 'clickToMine_miningIsAboutToStop': return 'খনি এখানে ক্লিক করুন, খনি শীঘ্রই বন্ধ হবে!';
			case 'incorrect_input': return 'ইনপুটটি ভুল!';
			case 'are_you_sure_delete': return 'আপনি কি মুছতে নিশ্চিত?';
			case 'delete_account': return 'অ্যাকাউন্ট মুছুন';
			case 'how_to_operate_it': return 'দেখুন কিভাবে এটি পরিচালনা করতে হয়?';
			case 'deletion_warning_tip': return 'আপনি যদি আপনার অ্যাকাউন্ট মুছে দেন, তাহলে আপনি সমস্ত ডেল্টা মুদ্রা হারাবেন, এবং অন্যান্য সদস্যদের দ্বারা আপনার জন্য আনা সুবিধাগুলিও হারিয়ে যাবে।';
			case 'launchWhatsAppProgram': return 'হোয়াটসঅ্যাপ প্রোগ্রাম চালু করুন';
			case 'sms': return 'এসএমএস';
			case 'whatsApp_verification_tips': return 'এই আইকন ধারণকারী অ্যাক্সেস নম্বরগুলি নির্দেশ করে যে তারা হোয়াটসঅ্যাপ বার্তা যাচাইকরণকেও সমর্থন করে। আন্তঃসীমান্ত বার্তা পাঠানোর সময়, সাফল্যের হার বাড়াতে এবং খরচ কমাতে WhatsApp ব্যবহার করার পরামর্শ দেওয়া হয়।';
			case 'ihaveSentVerificationString': return 'আমি যাচাইকরণ স্ট্রিং পাঠিয়েছি';
			case 'totalOfPeople': return 'মোট লোক: ';
			case 'numberOfPeopleMining': return 'খননকারী মানুষের সংখ্যা';
			case 'useBrowserScanQRcodeToSMSprogram': return 'আপনি অন্য ডিভাইসে একটি ব্রাউজার ব্যবহার করে QR-কোড স্ক্যান করে SMS প্রোগ্রামে পাঠাতে পারেন';
			case 'toggle': return 'টগল করুন';
			case 'DSMSverifier': return 'DSMS verifier';
			case 'activate': return 'সক্রিয় করুন';
			case 'activated': return 'সক্রিয় করা হয়েছে';
			case 'generateActivationCommand': return 'অ্যাক্টিভেশন কমান্ড তৈরি করুন';
			case 'activationCommand': return 'অ্যাক্টিভেশন কমান্ড';
			case 'activationSentedTip': return 'অ্যাক্টিভেশন এসএমএস পাঠানোর পর, অ্যাক্টিভেশন স্ট্যাটাস চেক করতে অনুগ্রহ করে অ্যাক্সেস টার্মিনাল ডিভাইসে যান।';
			case 'biometricsNotEnabledTip': return 'আপনার ডিভাইসে বায়োমেট্রিক্স (মুখ বা আঙুলের ছাপ) সক্ষম করা হয়নি। চালিয়ে যেতে দয়া করে এটি সক্ষম করুন।';
			case 'error': return 'ত্রুটি';
			case 'exceptionOccurredWhenCallingBiometric': return 'বায়োমেট্রিক (মুখ বা আঙুলের ছাপ) ফাংশন কল করার সময় একটি ব্যতিক্রম ঘটেছে!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' অ্যাক্সেস নম্বর চেক করা হয়েছে, '),
				shouldNum,
				const TextSpan(text: ' নির্বাচন করা উচিত।'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text} কি উপরের ${n} অ্যাক্সেস নম্বরগুলিতে পাঠানো হয়েছে?';
			case 'interface': return 'ইন্টারফেস:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'অপেক্ষার সময়সীমা বা প্রেরকের নম্বর মিলছে না';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'আপনার পূরণ করা নিরাপত্তা বৃত্তের সদস্যের মোবাইল নম্বর মেলে না: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'ডবল যাচাই এড়াতে লগ আউট করার 10 মিনিটের মধ্যে লগ ইন করুন।';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'অন্তত ${n}টি মোবাইল ফোন নম্বর অবশ্যই পূরণ করতে হবে';
			case 'noAccessNumberInYourRegionYet': return 'এখনও আপনার অঞ্চলে কোনো অ্যাক্সেস নম্বর নেই';
			case 'notEnoughAccessNumbersInYourRegion': return 'আপনার অঞ্চলে পর্যাপ্ত অ্যাক্সেস নম্বর নেই';
			case 'tipsForDeployDSMSterminal': return 'সিস্টেমটি স্বয়ংক্রিয়ভাবে আপনার জন্য অন্যান্য দেশ থেকে কিছু অ্যাক্সেস নম্বর লোড করেছে। আরও ভাল এবং কম খরচে যাচাইকরণ পরিষেবা প্রদান করার জন্য, যাচাইকরণ ফি অর্জনের জন্য স্থানীয়ভাবে একটি DSMS টার্মিনাল স্থাপন করার জন্য আপনাকে বা আপনার সুপারিশকারীর সাথে যোগাযোগ করার পরামর্শ দেওয়া হচ্ছে।';
			case 'noOneCanProvideMeTheSecurityCode': return 'কেউ আমাকে নিরাপত্তা কোড দিতে পারবে না?';
			case 'useSupplementalMode': return 'পরিপূরক মোড ব্যবহার করুন';
			case 'returnToSecurityCodeMode': return 'নিরাপত্তা কোড মোডে ফিরে যান';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'অনুগ্রহ করে তাদের সংশ্লিষ্ট মোবাইল ফোন নম্বর লিখুন। দেশের কোড বাদ দেওয়া যেতে পারে।';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => '${name} এর মোবাইল নম্বরটি ভুল';
			case 'matchingVerificationStrategyIs': return 'ম্যাচিং যাচাইকরণ কৌশল হল:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'ব্যালেন্স 3 ICP-এর বেশি, অস্থায়ীভাবে জ্বালানি ঢালার দরকার নেই।';
			case 'escrowAccount': return 'এসক্রো অ্যাকাউন্ট';
			case 'fuelRelay': return 'ফুয়েল রিলে';
			case 'pourFuel': return 'জ্বালানি ঢালা';
			case 'fuelState': return 'জ্বালানির অবস্থা';
			case 'pouringFuelTips': return 'জ্বালানি ঢালা আপনার কোন সুবিধা বা অসুবিধা বয়ে আনবে না এবং এর উদ্দেশ্য হল ডেল্টা সিস্টেমের অভিজ্ঞতাকে সমৃদ্ধ করা।';
			case 'sponsorDevelopersByWatchingAds': return 'বিজ্ঞাপন দেখে ডেভেলপারদের স্পনসর করুন';
			case 'status': return 'স্থিতি';
			case 'date': return 'তারিখ';
			default: return null;
		}
	}
}

extension on _StringsCkb {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'سەرەتا';
			case 'switchLanguage': return 'گۆرینی زمان';
			case 'languageSwitch': return 'گۆڕینی زمان';
			case 'slogan': return 'ناوچەیەکی ئابووری لامەرکەزی لە دێڵتا دروست بکە';
			case 'countryRegionCode': return 'کۆدی وڵات / ناوچە';
			case 'countryRegionSelection': return 'هەڵبژاردنی وڵات / هەرێم';
			case 'nextStep': return 'هەنگاووی دواتر';
			case 'yourPhoneNumber': return 'ژمارە مۆبایڵت بنوسە';
			case 'pleaseSelectCountryAndRegion': return 'تکایە وڵاتەکەت هەڵبژێرە';
			case 'pleaseEnterPhoneNumber': return 'تکایە ژمارەیەکی تەلەفۆنی دروست دابنێ!';
			case 'referrerDid': return 'کۆدی بانگێشت نامە';
			case 'pleaseEnterTheReferrersDid': return 'تکایە ناسێنەری لامەرکەزی ڕەوانەکەرێکی دروست دابنێ';
			case 'thisDidIsInvalid': return 'ئەم بانگێشت نامەی داتناوە درووست نیە';
			case 'nicknameFormatTips': return 'نازناو ناتوانرێت بەتاڵ بێت و درێژییەکەی لە ١٦ پیت زیاتر نەبێت';
			case 'additionalIinformation': return 'زانیاری زیاتر';
			case 'invitationSubject': return 'بانگهێشتتان دەکەم بۆ بەشداریکردن لە بنیاتنانی کۆدەنگی دێڵتا';
			case 'invitationLetter': return ({required Object did}) => 'سڵاو، من بەشداری لە بنیاتنانی کۆدەنگیی دێڵتا دەکەم!\n دێڵتا پلاتفۆرمی سەرچاوە کراوەی پارەی دیجیتاڵی نوێیە کە لەسەر ئینتەرنێتکۆمپیوتەر کاردەکات. دەتوانێت دراوی دیجیتاڵی جۆراوجۆر بەڕێوەببات و بەکاریبهێنێت بەبێ وشەی نهێنی، کلیلی تایبەت، یان یادەوەری. تکایە کلیک لەم بەستەرە بکە https://delta.kim/auto/download بۆ دامەزراندنی بەرنامەکە. ئێستا بانگهێشتتان دەکەین بۆ ئەوەی لەگەڵمان بن لە دروستکردنی کۆدەنگی و دروێنەکردنی سکە.\n بانگێشت نامە : ${did}';
			case 'dSMSverification': return 'پشتڕاستکردنەوەی کورتەنامە';
			case 'getAccessNumbers': return 'هەندێک ژمارەی دەستگەیشتن بەدەست بهێنە';
			case 'getAccessNumberPromptMessage': return 'کلیک لە دوگمەی "Get" لە خوارەوە بکە بۆ هەڵبژاردنی کۆمەڵێک ژمارەی دەستڕاگەیشتن بە پشتڕاستکردنەوەی کورتەنامە لە ڕیزەکەدا بە نۆرە';
			case 'optionalAccessNumbers': return 'ژمارەی دەستگەیشتن بە ئیختیاری';
			case 'accessNumber': return 'ژمارەی دەستگەیشتن';
			case 'TELCO': return 'کۆمپانیای تێلکۆ';
			case 'score': return 'سەرچاوە';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ckb'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'تکایە ژمارەی دەستگەیشتن '),
					nBuilder(n),
					const TextSpan(text: ' بپشکنە و کرتە لە دوگمەی "'),
					span('text'),
					const TextSpan(text: '" بکە بۆ ئەوەی بچیتە هەنگاوی داهاتوو.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'تکایە ژمارەکانی دەستگەیشتن '),
					nBuilder(n),
					const TextSpan(text: ' بپشکنە و کرتە لە دوگمەی "'),
					span('text'),
					const TextSpan(text: '" بکە بۆ ئەوەی بچیتە هەنگاوی داهاتوو.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'دێڵتا پڕۆژەیەکی تاقیکاری جیهانی دراوی دیجیتاڵی لامەرکەزی سەرچاوە کراوە و ئیکۆسیستەمێکی بەکارهێنانی دراوە.';
			case 'deltaGoalsDesc': return 'ئامانج لێی ئەوەیە خەڵک بتوانن کۆمپانیای دێڵتا بەکاربهێنن بۆ ئەوەی بە هاوبەشی دراوێکی دیجیتاڵی نوێی گشتگیر و دادپەروەرانە و پارێزراو و خێرا و سەوز بنیات بنێن. وە دابینکردنی سیناریۆی جۆراوجۆری کاریگەر بۆ ئەم دراوە دیجیتاڵیانە و دراوە کریپتۆکانی پێشوو.';
			case 'details': return 'زانیاری زیاتر';
			case 'get': return 'وەرگرتن';
			case 'select': return 'دیاریکردن';
			case 'send': return 'ناردن';
			case 'complete': return 'سەرکەوتوبو';
			case 'selectedAccessNumberPrompt': return 'کاتێک هەڵدەبژێردرێت، ژمارەی دەستگەیشتن بە تەواوی پیشان دەدرێت و ڕیزێکی ڕەسەنایەتی دروست دەکرێت.';
			case 'location': return 'شوێن';
			case 'verificationString': return 'ڕستەی پشتڕاستکردنەوە';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'تکایە ژمارەی تەلەفۆنەکەت '),
				num,
				const TextSpan(text: ' بەکاربهێنە، '),
				label,
				const TextSpan(text: ' بنێرە بۆ '),
				accessNumber,
				const TextSpan(text: ' بۆ تەواوکردنی پشتڕاستکردنەوەکە.'),
			]);
			case 'ihaveSentTheSMS': return 'کورتەنامەکەم ناردووە';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'ڕیزەکەی پشتڕاستکردنەوە بۆ ماوەی ٦ خولەک کارا دەبێت، کاتی ماوە: '),
				time,
				const TextSpan(text: ' .'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'زۆر خێرا، چاوەڕێی ${x} چرکە بکە پێش ئەوەی بەردەوام بیت!';
			case 'waitingForVerificationSMS': return 'چاوەڕوانی کورتەنامەی پشتڕاستکردنەوە...';
			case 'partSuccsForVerificationSMS': return 'پشتڕاستکردنەوەی کورتەنامە لە یەکێک لە تێرمیناڵەکانی دەستگەیشتن تێپەڕیوە.';
			case 'creatingAccessToken': return 'دروستکردنی نیشانەی دەستڕاگەیشتن...';
			case 'intoDelta': return 'بۆ ناو دێڵتا';
			case 'deltaAccountIsLoggedIn': return 'ئەکاونتی Delta ی تۆ چووەتە ژوورەوە';
			case 'iHavLoggedOut': return 'من چوومەتە دەرەوە';
			case 'startTwoFactorVerification': return 'دەستپێکردنی پشتڕاستکردنەوەی دوو فاکتەری';
			case 'securityCircleVerification': return 'دڵنیاکردنەوەی بازنەی ئاسایش';
			case 'generateSecurityCode': return 'دروستکردنی کۆدی ئاسایش';
			case 'generateSecurityCodeHintText': return 'کۆدی ئاسایشی دروستکراو دەنێردرێت بۆ ئەندامێکی هەڵبژێردراوی هەڕەمەکی بازنەی ئاسایشەکەت.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'هێشتا بازنەی ئاسایشت دانەناوە، ئەکاونتەکەت زۆر ناپارێزراوە، تکایە هەر شوێنگرەوەیەکی ٦ ژمارەیی داخڵ بکە، و بچۆ بۆ هەنگاوی داهاتوو.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'کۆدی ئاسایش دروست کراوە، تکایە پەیوەندی بەم خزم و هاوڕێیانەوە بکەن، و داوایان لێ بکەن کۆدی ئاسایش دەربهێنن بۆ ئەوەی تۆ لە پشتڕاستکردنەوەکەدا تێپەڕیت. لە ماوەی ٣٠ خولەکدا کارا دەبێت!';
			case 'itGetSecurityCodeTip': return 'ئامۆژگاری: نازناوی ئەکاونتەکەت لە پەڕەی Delta App -> Menu -> Provide Security دەدۆزێتەوە و دووجار کلیک دەکات بۆ بەدەستهێنانی کۆدی ئاسایش.';
			case 'securityCircleMemberList': return 'لیستی ئەندامانی بازنەی ئاسایش:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'تکایە خزمێک یان هاوڕێیەک لە لیستی ئەندامان هەڵبژێرە بۆ ئەوەی دروستی بکات و کۆدێکی ئاسایشت بۆ دابین بکات بۆ پشتڕاستکردنەوەی ناسنامەی ڕاستەقینەی خۆت. مەبەست لێی ڕێگریکردنە لەوەی کە ئەکاونتەکە لەلایەن کەسانی دیکەوە کۆنترۆڵ نەکرێت کاتێک ژمارەی مۆبایلەکە ون دەبێت یان دزراوە.';
			case 'formatIsXdigits': return ({required Object num}) => 'فۆرماتەکە بریتییە لە ${num} ژمارە';
			case 'signInSuccessfully': return 'بە سەرکەوتوویی بچۆرە ژوورەوە!';
			case 'twoFAandLogin': return 'ڕەسەنایەتی دوو فاکتەری و چوونەژوورەوە';
			case 'verificationSuccessful': return ' پشتڕاستکردنەوە سەرکەوتوو بوو !';
			case 'validationFailed': return 'چەسپاندن شکستی هێنا !';
			case 'securityCircle': return 'بازنەی ئاسایش';
			case 'securityCode': return 'کۆدی ئاسایش';
			case 'provideSecurity': return 'دابینکردنی ئاسایش';
			case 'addManully': return 'بە دەست زیادکردن';
			case 'addFromContacts': return 'زیادکردن لە پەیوەندییەکان';
			case 'addSecurityCircle': return 'یادکردنی بازنەی ئاسایش';
			case 'inputType': return 'جۆری هاتنەژوورەوە';
			case 'mobileNumber': return 'ژمارەی مۆبایل';
			case 'did': return 'کۆد';
			case 'pleaseEnterValidDID': return 'تکایە ناسێنەرێکی لامەرکەزی دروست دابنێ';
			case 'pleaseEnterValidWalletAddress': return 'تکایە ناونیشانی جزدانێکی دروست دابنێ';
			case 'appellation': return 'ناونیشان';
			case 'appellationHint': return 'ئەوەی ناوی دەبەیت، وەک "baby"';
			case 'addSecurityCircleTips': return 'تکایە کەسانی باوەڕپێنەکراو زیاد مەکەن بۆ بازنەکانی ئاسایش.';
			case 'referralTeam': return 'تیمی ڕەوانەکردن';
			case 'profile': return 'پڕۆفایلی';
			case 'menu': return 'مێنۆ';
			case 'directly': return 'ڕاستەوخۆ';
			case 'indirectly': return 'ناڕاستەوخۆ';
			case 'inviteContacts': return 'بانگهێشتی پەیوەندییەکان';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'ناونیشاندەرەکەت '),
				nickname,
				const TextSpan(text: ' یە، تۆ ڕاستەوخۆ پێشنیاری '),
				num1,
				const TextSpan(text: ' کەست کردووە و '),
				num2,
				const TextSpan(text: 'یان لە ئێستادا سەرهێڵن.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'تۆ بە شێوەیەکی ناڕاستەوخۆ پێشنیاری '),
				num1,
				const TextSpan(text: ' کەست کردووە، لەنێویاندا '),
				num2,
				const TextSpan(text: ' کەس کە لە ئێستادا سەرهێڵن.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'هاوڕێکان بانگهێشت بکە بۆ ئەوەی بەشداری لە Delta بکەن و پێکەوە کۆدەنگی کۆمەڵایەتی باشتر بکەن. ڕێژەی کانگاکردنی هەر کەسێک کە ڕاستەوخۆ پێشنیار کراوە بە ڕێژەی '),
				rate1,
				const TextSpan(text: ' لە ڕێژەی بنەڕەتی زیاد دەکات. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'هاوڕێیان بانگهێشت بکە بۆ ئەوەی بەشداری لە کۆمپانیای دێڵتا بکەن و پێکەوە کۆدەنگی کۆمەڵایەتی باشتر بکەن. ڕێژەی کانگاکردنی هەر کەسێک کە بە شێوەیەکی ناڕاستەوخۆ پێشنیار کراوە بە ڕێژەی '),
				rate2,
				const TextSpan(text: ' لە ڕێژەی بنەڕەتی زیاد دەکات.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'ئایا دڵنیای لە لابردنی "${name}"؟';
			case 'safetyCircleRoleQ': return 'ئەرکی بازنەی سەلامەتی چییە؟';
			case 'safetyCircleRoleA': return 'ڕەسەنایەتی لاوەکی لە دۆخە هەستیارەکاندا دابین دەکات بۆ پاراستنی ئاسایشی ئەکاونتەکەت.';
			case 'howSecurityCirclesWorkQ': return 'بازنەی ئاسایش چۆن کاردەکات؟';
			case 'howSecurityCirclesWorkA': return 'کاتێک بازنەی ئاسایش پێویستە بۆ پشتڕاستکردنەوە، بەرنامەی گرێبەستی زیرەکی دێڵتا بە شێوەیەکی هەڕەمەکی ئەندامێک لە لیستی هاوڕێکانی بازنەی ئاسایش هەڵدەبژێرێت بۆ ئەوەی یارمەتیت بدات کۆدێکی ئاسایش دابین بکات بۆ تەواوکردنی پشتڕاستکردنەوەی ئاسایشی ناسنامە بۆ تۆ. کاتێک داوای کۆدی ئاسایش لە ئەندامەکە دەکەیت، دەتوانێت پشتڕاستی بکاتەوە کە تۆ بەڕاستی تۆیت. لە هەمان کاتدا، بەرنامەکە داوای لێدەکات: "ئەگەر تۆ نەبیت، ڕەتیدەکاتەوە کۆدی ئاسایش دابین بکات", بۆ ئەوەی ئاسایشی ئەکاونتەکەت بپارێزیت. بۆیە پێویستە هەمیشە دڵنیا بیت لەوەی کە ئەندامانی بازنەی ئاسایشت کەسانێکن کە دەتوانیت متمانەیان پێ بکەیت.';
			case 'securityCircleBeUsedQ': return 'کەی بەکاری دەهێنیت؟';
			case 'securityCircleBeUsedA1': return '1. کاتێک Delta APP ـەکەت لە کۆنتڕۆڵ دەرچووە، دۆخی گشتی ئەوەیە کە مۆبایلەکە ون بووە یان دزراوە.';
			case 'securityCircleBeUsedA2': return '2. لە حاڵەتی هەندێک کارپێکردنی هەستیاردا، بەرنامەی گرێبەستی زیرەکی دێڵتا پێویستی بە پشتڕاستکردنەوەی هەیە کە تۆ خۆتیت.';
			case 'provideSafetyTip1': return 'کاتێک هاوڕێکەت داوای کۆدی ئاسایشی خۆیت لێدەکات، تکایە دڵنیابە پشتڕاستی دەکەیتەوە کە ئەوە.';
			case 'provideSafetyTip2': return 'تۆ پاراستنی ئاسایش بۆ ئەو هاوڕێیەی سەرەوە دابین دەکەیت. ئەوان تۆیان وەک متمانەپێکراوترین کەس لە بازنەی ئاسایشدا داناوە، و پێویستە پشتڕاستکردنەوەی ئاسایشیان بۆ دابین بکەیت کاتێک ئەکاونتەکانیان ڕووبەڕووی کارێکی هەستیار دەبنەوە.';
			case 'provideSafetyTip3': return 'کاتێک پێویست بوو، دووجار کلیک لەسەر ئاڤاتاری لایەنی بەرامبەر بکە بۆ دەرهێنانی کۆدی ئاسایش.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'لایەنی بەرامبەر لە ئێستادا کۆدێکی ئاسایشی نییە کە پێویستی بە وەرگرتنەوە هەبێت !';
			case 'existSecurityCodeTip': return 'تکایە دڵنیابە لەوەی کە ئەو خزم یان هاوڕێیەی کە داوای کۆدی ئاسایشت لێدەکات خۆیەتی. بۆ پاراستنی سەلامەتی خزم یان هاوڕێکە، پێویستە ڕەتی بکەیتەوە دابینی بکەیت ئەگەر خزم یان هاوڕێکە خۆی نەبێت.';
			case 'avatarSettings': return 'ڕێکخستنەکانی ئاڤاتاری';
			case 'NFTAvatarPropertyRightsText': return 'ڕەتکردنەوەی بەرپرسیاریەتی: بەکارهێنانی NFT پەیوەندیدارەکان وەک ئاڤاتاری تەنها هەڵبژاردنێکی کەسییە، و هیچ پەیوەندییەکی بە خاوەندارێتی مافی خاوەندارێتی فیکری NFTەوە نییە.';
			case 'projectWebsite': return 'ماڵپەڕی پڕۆژە: ';
			case 'whitepaper': return 'کاغەزی سپی:';
			case 'indexID': return 'ناسنامەی ئیندێکس';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'ئیندێکسەکان لە ${start} تا ${end}';
			case 'inputToLoadNFTAvatarTip': return 'ناسنامەی ئیندێکسی NFT دڵخوازەکەت دابنێ، و بەرنامەکە بە شێوەیەکی ئۆتۆماتیکی وەک ئاڤاتاری تۆ باری دەکات.';
			case 'miningRate': return 'رێژەی کانگاکردن';
			case 'miningDetails': return 'وردەکارییەکانی کانگا';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'کۆی گشتی ڕێژەی کانگاکردن: '),
				rate,
				const TextSpan(text: ' δ/ڕۆژ'),
			]);
			case 'EndOfMiningSession': return 'کۆتایی دانیشتنی کانگا: ';
			case 'tapToMineDeltaCoin': return 'تاپ بۆ کانگاکردنی دراوی دێڵتا ↑';
			case 'clickToStartMining': return 'بۆ دەستپێکردنی کانگاکردن پەنجە بنێ!';
			case 'miningHasStoppedPromptDesc': return 'کانگاکردن وەستاوە، هەر ٢٤ کاتژمێر جارێک خولێکی کانگاکردنە، کلیک لەسەر ئایکۆنی ڕەشەبا بکە بۆ دەستپێکردنی خولێکی نوێی کانگاکردن. کانگاکردنی دێڵتا میکانیزمێکی دابەشکردنە کە هێزی کۆمپیوتەری زیادە و هاتوچۆی تۆڕی ئامێرەکەت بەکارناهێنێت.';
			case 'aboutBaseRate': return 'دەربارەی ڕێژەی بنەڕەتی؟';
			case 'baseRateDescription': return 'بەپێی ڕێککەوتنەکە لە وەرەقە سپییەکەدا، یاسای بنەڕەتی کەمکردنەوەی ڕێژە لە کانگاکانی دێڵتا دابەش دەکرێت بۆ دوو قۆناغ. \nقۆناغی یەکەم: کاتێک ژمارەی بەشداربووان (تۆمارکردن) ٣٠٠٠ یان کەمتر بێت، ڕێژەکە ٣٢δ/ڕۆژە. بە بەکارهێنانی ئەمە وەک خاڵی دەستپێک، هەر جارێک ژمارەی خەڵک بە فاکتەری ١٠ زیاد دەکات، ڕێژەی بنەڕەتییە. \nقۆناغی دووەم: کاتێک ژمارەی بەشداربووان دەگاتە ٣٠ ملیۆن و سەرووتر، هەر جارێک ژمارەی خەڵک ٣ هێندە زیاد دەکات، ڕێژەی بنەڕەتی بۆ نیوە کەم دەکرێتەوە تا کۆتایی هەڵکەندنی بەرهەمهێنان.';
			case 'baseRate': return 'ڕێژەی بنەڕەتی';
			case 'directReferralRewards': return 'پاداشتی ڕەوانەکردنی ڕاستەوخۆ';
			case 'directReferralRewardDesc': return 'بۆ هەر کەسێک کە ڕاستەوخۆ پێشنیار دەکرێت، کاتێک کەسەکە لە دۆخی کانگاکردندایە، ڕێژەی کانگاکردنەکەت بە ڕێژەی 1/3ی ڕێژەی بنەڕەتی زیاد دەکرێت. \n\n سەرەڕای ئەوەش، دۆخی کانگاکردنی ڕەوانەکەرەکەت هەروەها لە پاداشتی ڕەوانەکردنی ڕاستەوخۆتدا حیسابی بۆ دەکرێت.';
			case 'indirectReferralRewards': return 'پاداشتی ڕەوانەکردنی ناڕاستەوخۆ';
			case 'indirectReferralRewardDesc': return 'کاتێک پێشنیارکەرێکی ناڕاستەوخۆ لە دۆخی کانگادا بێت، ڕێژەی کانگاکردنەکەت بە زیادە بە ڕێژەی 1/10ی ڕێژەی بنەڕەتی زیاد دەکرێت. \n\nتیمی ڕەوانەکردنی ڕاستەوخۆت، و هەر کەسێک کە ڕەوانەی دەکەن نوێنەرایەتی ڕەوانەکردنێکی ناڕاستەوخۆ دەکەن بۆ تۆ.';
			case 'mine': return 'من';
			case 'thisMiningInformation': return 'ئەم زانیارییە کانزایە';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'بەشداری لە کانگاکردندا کراوە: '),
				x,
				const TextSpan(text: ' جار'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'کۆی داهاتی ئەمجارە: '),
				x,
				const TextSpan(text: ' دراوی دێڵتا'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'داهاتی بنەڕەتی: '),
				x,
				const TextSpan(text: ' دراو'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'بەشداری ڕاستەوخۆی تیم: '),
				x,
				const TextSpan(text: ' دراو'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'بەشداریکردنی ناڕاستەوخۆی تیم: '),
				x,
				const TextSpan(text: ' دراو'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'ماوەی کات لە دوایین کانگا: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'کاتی کاریگەرانەی کانگاکردن: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} کاتژمێر';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'بۆ ئاسایشی سەروەت و سامان، ئەندامانی بازنەی ئاسایش پێویستە لە هەر کاتێکدا ٣-٥ کەسی متمانەپێکراو بهێڵنەوە.';
			case 'index': return 'Index';
			case 'amount': return 'بڕی';
			case 'balance': return 'هاوسەنگی';
			case 'timeStamp': return 'مۆری کات';
			case 'summary': return 'پوختە';
			case 'miningHasStopped': return 'کانگاکردن وەستاوە.';
			case 'miningHasStoppedDesc': return 'لە ئێستادا کانگاکەت وەستاوە، و دەتوانیت دەستبەجێ دەست بە بەدەستهێنانی داهات بکەیت.';
			case 'startMining': return 'دەستپێکردنی کانگا';
			case 'changeMobileNumber': return 'ژمارەی مۆبایل بگۆڕە';
			case 'currentMobileNumber': return 'ژمارەی مۆبایلی ئێستا';
			case 'newMobileNumber': return 'ژمارەی مۆبایلی نوێ';
			case 'securityCodeFormatIs6digits': return 'فۆرماتەکەی کۆدی ئاسایش ٦ ژمارەیە!';
			case 'startVrification': return 'دەستپێکردنی پشتڕاستکردنەوە';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'ئەم ژمارەی مۆبایلە پێشتر بوونی هەیە، پەیوەندیدار DID: ${dId}';
			case 'noDataYet': return 'هێشتا هیچ داتایەک نییە';
			case 'previousMobileNumber': return 'ژمارەی مۆبایلی پێشوو.';
			case 'changeLog': return 'لۆگ گۆڕینی';
			case 'referralLinkToShare': return 'بەستەری ڕەوانەکردن بۆ هاوبەشکردن';
			case 'referrer': return 'ئاماژەدەر';
			case 'isoCountryCode': return 'کۆدی وڵاتی ISO';
			case 'avatarLogo': return 'لۆگۆی ئاڤاتار';
			case 'creationTime': return 'کاتی دروستکردن';
			case 'lastUpdate': return 'دوا نوێکردنەوە';
			case 'numberOfSecurityCircleMembers': return 'ژمارەی ئەندامانی بازنەی ئاسایش';
			case 'theLatestMining': return 'نوێترین کانگا';
			case 'effectiveMiningDays': return 'ڕۆژانی کاریگەرانەی کانگا';
			case 'modifyNickname': return 'دەستکاریکردنی نازناو';
			case 'didNotChange': return 'نەگۆڕاوە!';
			case 'kycVerification': return 'پاراستنی KYC';
			case 'faceID': return 'ناسنامەی ڕووخسار';
			case 'touchID': return 'ناسنامەی تاچ';
			case 'biometricsAuthorizationTest': return 'تاقیکردنەوەی ڕێگەپێدانی بایۆمەتری';
			case 'currentState': return 'دۆخی ئێستا';
			case 'biometricsAuthenticationLocalizedReason': return 'بۆ پشتڕاستکردنەوەی ناسنامەکەت قفڵی ئامێرەکەت بەکاربهێنە.';
			case 'graph': return 'گرافیک';
			case 'referralRelationshipGraph': return 'گرافی پەیوەندی ڕەوانەکردن';
			case 'nativeContacts': return 'پەیوەندییە ڕەسەنەکان';
			case 'registrationAndMiningTrends': return 'ڕەوتی تۆمارکردن و کانگاکردن';
			case 'inMining': return 'لە کانگادا';
			case 'registrationVolume': return 'قەبارەی تۆمارکردن';
			case 'unmined': return 'بێ مین';
			case 'mined': return 'مین';
			case 'communityMining': return 'کانزاکانی کۆمەڵگا';
			case 'consensusPromotionFund': return 'سندوقی بەرزکردنەوەی کۆدەنگی';
			case 'ecologicalAwardFund': return 'سندوقی خەڵاتی ئیکۆلۆژی';
			case 'icpFuelCrowdfunding': return 'Crowdfunding سووتەمەنی ICP';
			case 'coreDeveloperRewards': return 'پاداشتی گەشەپێدەری سەرەکی';
			case 'totalAllocation': return 'کۆی گشتی تەرخانکردن';
			case 'miningRatio': return 'رێژەی کانگا';
			case 'billion.300': return '300 ملیار';
			case 'billion.180': return '180 ملیار';
			case 'billion.30': return '30 ملیار';
			case 'billion.60': return '60 ملیار';
			case 'watchAdsToSupportDevelopers': return 'سەیری ڕێکلامەکان بکە بۆ پشتگیریکردنی گەشەپێدەران';
			case 'loadingAdcomponents': return 'بارکردنی پێکهاتەکانی ڕێکلام...';
			case 'timeIsNotUp': return 'کات تەواو نەبووە!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'بارکردن شکستی هێنا، لەوانەیە تۆڕەکە بلۆک کرابێت!';
			case 'pendingUSCTrecords': return 'تۆمارە چاوەڕوانکراوەکانی USCT';
			case 'pendingUSCTrecordsDesc': return 'تۆمارە چاوەڕوانکراوەکانی USCT لە ماوەی 15-30 ڕۆژدا بەراورد دەکرێن و پشتڕاست دەکرێنەوە لەگەڵ پلاتفۆرمی ڕێکلام، تۆمارە ڕەواکان دەگوازرێنەوە بۆ لیستی تۆمارەکانی USCT، و بڕی USCTی هاوتا زیاد دەکرێت بۆ باڵانسی ئەکاونتەکە.';
			case 'validity': return 'ڕەوایی';
			case 'advertiser': return 'ڕێکلامکەر';
			case 'earned': return 'بەدەست هاتووە';
			case 'withdraw': return 'کشانەوە';
			case 'validUSCTrecords': return 'تۆمارە دروستەکانی USCT';
			case 'USCTmining': return 'کانزاکانی USCT';
			case 'aboutUSCTmining': return 'دەربارەی کانگاکردنی USCT؟';
			case 'aboutUSCTminingItme1': return '1. USDT stablecoin ی دۆلاری ئەمریکییە کە لە ئاستی جیهانیدا بەناوبانگە، کە دەتوانرێت بە ئاسانی بگۆڕدرێت بۆ دراوی سەروەری وڵاتانی جیاواز لە ئاڵوگۆڕە سەرەکییەکانی دراوی کریپتۆی جیهاندا.';
			case 'aboutUSCTminingItme2': return '2. USCT بەهایەکی کاتییە بۆ پێوانەکردنی داهاتی کانزاکانی USCT، ناوی تەواوی قەرزی دۆلارە، و لە کۆتاییدا دەتوانرێت بگۆڕدرێت بۆ USDT بەپێی کۆتایی ڕاستەقینەی یەکلاکردنەوە و یاساکانی دابەشکردنی پلاتفۆرمی ڕێکلام و بە ڕێژەیەکی هاوتا.';
			case 'aboutUSCTminingItme3': return '3. کانگاکردنی USCT ئەرکێکی پارەدارکردنی ڕیکلامی هاتوچۆیە لە کۆمەڵگەی دێڵتا. سوود لە بنکەی بەکارهێنەری گەورەی کۆمەڵگەی دێڵتا وەربگرە بۆ دابینکردنی چەندین سوود بۆ ڕێکلامکەران، گەشەپێدەرانی دێڵتا و کانگەرەکان. ئامانجی دیزاینەکەی دابینکردنی بڕێکی دیاریکراو لە داهاتی کاریگەرە بۆ ئامادەنەبوون لە قۆناغی سەرەتایی ئیکۆلۆژیای دێڵتا هێشتا پێکهاتووە و گەشەی نەکردووە؛ لە هەمان کاتدا، هەروەها بڕێکی دیاریکراو لە پشتگیری دارایی بۆ گەشەپێدەران دابین دەکات بۆ دڵنیابوون لەوەی کە گەشەپێدەران دەتوانن بەردەوام بن لە پێشکەشکردنی خزمەتگوزارییەکانی گەشەپێدان بۆ ماوەیەکی زۆر، و لە کۆتاییدا دەتوانن هەموو پلاندانانی کاغەزی سپی بەدیبهێنن هەروەها کەناڵێکی کاریگەر بۆ بانگەشەکردن بۆ ڕێکلامکەرانی بەرهەمەکە دابین بکەن.';
			case 'aboutUSCTminingItme4': return '4. یاساکانی دابەشکردن بە شێوەیەک داڕێژراون کە 40%ی کۆی داهاتەکە وەک کۆمیسیۆنی خزمەتگوزاری تەکنیکی گەشەپێدەر بەکاردەهێنرێت، و 60%ی دیکەش وەک پاداشتی ئامادەنەبوونی کۆمەڵگا بەکاردەهێنرێت. بەشی پاداشتی ئامادەنەبوون مۆدێلێکی دابەشکردنی فرە ئاست هاوشێوەی DTC دەگرێتەبەر، و ئەم پاداشتانەی ئامادەنەبوون بەپێی ڕێژەی... 6:3:1، و 60%ی پاداشتی ئامادەنەبوون بۆ یەک کانگاکردنی USCT هەر جارێک بۆ ئەو ئامادەنەبوونە تەرخانکراوە کە لە ئێستادا سەیری ڕیکلامەکە دەکات , 30% بۆ پێشنیارکەری ئاستی دووەم تەرخانکراوە، و 10% بۆ پێشنیارکەری ئاستی دووەم تەرخانکراوە بە هەمان شێوە، دەتوانیت هەمان پاداشتی پێشنیارکراوی ئەو هاوڕێیانە بەدەستبهێنیت کە پێشنیاری دەکەیت لە ڕێگەی کانگاکردنی USCT دابەشکردن ئەوەیە کە هەر کەسێک دەتوانێت بڕێکی تاڕادەیەک زۆر لە سوودەکانی USDT بەدەستبهێنێت بە پەرەپێدانی تیمێکی ئۆفلاین.';
			case 'aboutUSCTminingItme5': return '5. خولی فەسڵکردن 7 ڕۆژە، واتە هەر 7 ڕۆژ جارێک ڕەوایی لەگەڵ پلاتفۆرمی ڕێکلامدا دەپشکنرێت، و داهاتی کاریگەری پشتڕاستکراوە و بڕی ڕاستەقینە لە باڵانسەکەدا تۆمار دەکرێت. کەمترین بڕی پارە بۆ هەر کشانەوەیەک 10USDTە.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Lines ${x} to ${y}';
			case 'wallet': return 'جزدان';
			case 'multiChainWallet': return 'جزدانی فرە زنجیرەیی';
			case 'deposit': return 'پارە دانان';
			case 'transfer': return 'گواستنەوە';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} لە ناونیشانی جزدان';
			case 'transactions': return 'مامەڵەکان';
			case 'network': return 'Network';
			case 'walletAddress': return 'ناویشنانی جزدان دانێ';
			case 'currentAddress': return 'current Address';
			case 'depositAddress': return 'ناونیشانی ناردن';
			case 'receivingMoneyAddress': return 'پارە گەیشتە ئەم ناونیشانە';
			case 'applyTempDepositAddress': return 'داواکاری پێشکەش بکە بۆ ناونیشانی دانانی کاتی';
			case 'tempDepositAddressTip': return '1.ئەمە ناونیشانی پارەدانێکی هاوبەشە. تکایە دوای تەواوبوونی بەکرێدانەکە یان پابەند نەبوون، بڕە پارەکە مەخەنە ناوەوە. بڕە پارەکە لەدەست دەچێت ئەگەر ئەمە ڕووبدات.';
			case 'tempDepositAddressTip2': return '2.پێش ئەوەی پارە دابنێیت، تکایە دڵنیابە لەوەی کە [ناوی زنجیرەکە] و [ناوی دراو] بە تەواوی یەکدەگرنەوە؛ ئەگەر نیشانەیەکی گرێبەستە، پێویستە پشتڕاستی بکەیتەوە کە [ستانداردی گرێبەست] و [ناونیشانی گرێبەست] بە تەواوی یەکدەگرنەوە.';
			case 'tempDepositAddressTip3': return '3.تکایە هەوڵ مەدە ئەو پارانە دابنێیت کە لەگەڵ هیچ کام لە پارامێتەرەکانی ناو ئامۆژگارییەکانی سەرەوەدا ناگونجێت، ئەگەرنا بڕە پارەکە لەدەست دەچێت.';
			case 'tempDepositAddressTip4': return '4.ئەگەر پێویستت بە دانانی جۆرەکانی تری سەروەت و سامانە، تکایە بگۆڕە بۆ لاپەڕەی دراوی گونجاو و هەڵبژاردەکانی پارامێتەر بۆ ئەوەی داوای ناونیشانێکی نوێ بکەیت.';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'ناونیشانەکە دوای '),
				diff,
				const TextSpan(text: ' بەسەر دەچێت، و ماوەی ڕەوایی دەتوانرێت '),
				tap('بە دەست درێژکراوەتەوە'),
				const TextSpan(text: ' لە ماوەی 12 کاتژمێر پێش بەسەرچوونەکە.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'تەنها دەتوانرێت لە ماوەی 12 کاتژمێر پێشوەختە نوێ بکرێتەوە';
			case 'theReceivingAddressValidForLongtime': return 'ناونیشانی وەرگرتن بۆ ماوەیەکی زۆر کاریگەرە.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'ناونیشانی وەرگرتن بۆ ماوەیەکی زۆر کاریگەرە و لە کاتی ڕاستەقینەدا بە شێوەیەکی ئۆتۆماتیکی کرێدت دەکرێت.';
			case 'confirmDeposited': return 'پاراستنی Deposited';
			case 'unbindThisDepositAddress': return 'ئەم ناونیشانەی پارەدانەکە هەڵبگرە';
			case 'confirmDepositedTip': return 'ئەگەر پارەکان گواستراونەتەوە، تکایە دوای ١٠ خولەک کلیک لەسەر دوگمەی سەرەوە بکە بۆ دەستپێکردنی ژمێریاری بۆ جزدانەکە.';
			case 'unbindDepositAddressTip': return 'بۆ کەمکردنەوەی سەرپێچی کارپێکردنی گرێبەستە زیرەکەکان، ئەگەر لە ماوەی کارکردندا هیچ پارەیەکی زیاتر دانەنرێت، تکایە ناونیشانی دانانەکە بکەرەوە.';
			case 'transferToAddress': return 'گواستنەوە بۆ ناونیشان';
			case 'longPressToPaste': return 'پەستانێکی درێژ بۆ لێدان';
			case 'all': return 'هەموو';
			case 'balanceX': return ({required Object x}) => 'هاوسەنگی ${x}';
			case 'transferOut': return 'گواستنەوە بۆ دەرەوە';
			case 'depositXcoins': return ({required Object x}) => 'پاراستنی ${x}';
			case 'sender': return 'نێرەر';
			case 'recipient': return 'وەرگر';
			case 'memo': return 'یاداشت';
			case 'kind': return 'میهرەبان';
			case 'transferAmountExceedsAvailableBalance': return 'بڕی گواستنەوە لە باڵانسی بەردەست زیاترە';
			case 'pleaseEnterValidAmount': return 'تکایە بڕە پارەیەکی دروست دابنێ';
			case 'networkFee': return 'کرێی تۆڕ';
			case 'fee': return 'کرێ';
			case 'validLengthXcharacters': return ({required Object x}) => 'درێژی دروست ${x} پیتە';
			case 'historys': return 'مێژووەکان';
			case 'dtcCreditdetail': return 'وردەکارییەکانی قەرزی دێڵتا';
			case 'usdCreditdetail': return 'وردەکاری قەرزی USD';
			case 'dappSquare': return 'چوارگۆشەی dApp';
			case 'amountRaised': return 'بڕی کۆکراوە';
			case 'disbursedAmount': return 'بڕی خەرجکراو';
			case 'participationTimes': return 'کاتەکانی بەشداریکردن';
			case 'completionRate': return 'رێژەی تەواوبوون';
			case 'exchangeRate': return 'ڕێژەی ئاڵوگۆڕ';
			case 'icpCrowdfunding': return 'کۆمپانیای ئای سی پی';
			case 'crowdfunding': return 'کراودفاندینگ';
			case 'trendsCurve': return 'کێوی ڕەوتەکان';
			case 'fullScreenView': return 'دیمەنی تەواوی شاشە';
			case 'walletBalance': return 'باڵانسی جزدان: ';
			case 'manageWallet': return 'بەڕێوەبردنی جزدان';
			case 'fundraiseAmount': return 'بڕی کۆکردنەوەی پارە';
			case 'exchangeRewardAmount': return ' بڕی پاداشتی ئاڵوگۆڕ';
			case 'fundraise': return 'کۆکردنەوەی پارە';
			case 'rangeIntegersX': return ({required Object x}) => 'مەودا: ژمارە تەواوەکان ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'بە سەرکەوتوویی بەشداری لە کۆکردنەوەی پارەدا کرد و پاداشتی ${amount}DTCT وەرگرت';
			case 'amountSummary': return 'پوختەی بڕی';
			case 'changePreferred': return 'گۆڕانکاری پەسەندکراو';
			case 'changePreferredAddress': return 'ناونیشانی پەسەندکراو بگۆڕە';
			case 'preferredAddressTip': return 'لەکاتی وەرگرتنی پارە بە بەکارهێنانی ژمارەی مۆبایلی تۆمارکراو یان DID، پارەکان بە شێوەیەکی ئۆتۆماتیکی دەگوازرێنەوە بۆ ناونیشانی پەسەندکراو.';
			case 'newAddress': return 'ناونیشانی نوێ';
			case 'newAddressTip': return 'بۆ ڕێگریکردن لە خراپ بەکارهێنان، کاتێک زیاتر لە یەک ناونیشانی جزدان هەیە، کرێی مامەڵەکردن بۆ هەر ناونیشانێکی نوێ کە دروست دەکرێت، خەرج دەکرێت.';
			case 'createNew': return 'دروستکردنی نوێ';
			case 'chainNetworkName': return 'تۆڕی زنجیرەیی';
			case 'from': return 'لە';
			case 'to': return 'بۆ';
			case 'noAvailableDepositAmountDetected': return 'هیچ بڕە پارەیەکی پێشەکی بەردەست دەستنیشان نەکراوە !';
			case 'crossChainReceiveMoneyMonitoring': return 'پارەی وەرگرتنی زنجیرەی بڕاو لە چاودێریکردندایە ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'وەرگیراو('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'دڵنیاکردنەوە('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'تێبینییەکان (پێویستە بۆ تازەپێگەیشتووان بخوێنرێتەوە)';
			case 'whyUseSharedAddresses': return 'بۆچی ناونیشانی هاوبەش بەکاربهێنرێت؟';
			case 'useSharedrAdvantage': return 'کاتێک باس لە وەبەرهێنانی زنجیرەکان دەکرێت، سوودەکانی بەکارهێنانی ناونیشانی هاوبەش بریتین لە:';
			case 'useSharedrAdvantage1': return '1. کەمکردنەوەی بەفیڕۆدانی کرێی گواستنەوە و کەمکردنەوەی تێچووی بەکارهێنەر. چونکە ئەگەر ناونیشانێکی تایبەت بەکاربهێنرێت، ئەوا پارەکان زۆر بڵاودەبنەوە. بۆ ئەوەی بەکارهێنەرانی دیکە ئاسانکاری بۆ گواستنەوەی دەرەوە بکەن لە کاتی کشانەوەدا، کاتێک بەکارهێنەر پارەیەکی پێشەکی دەکات، گواستنەوەی لاوەکی پارەکان پێویستی بە کۆکردنەوە هەیە بۆ یەکێک یان ژمارەیەکی کەم لە ناونیشانەکان بۆ بەڕێوەبردن.';
			case 'useSharedrAdvantage2': return '2. In the sharing solution, the program only needs to maintain a relatively small address pool, which can quickly match outgoing funds and perform lightweight collection monitoring, which can reduce computing resource overhead. In contrast, with exclusive addresses, the situation is exactly the opposite.';
			case 'tokenType': return 'جۆری نیشانە';
			case 'contract': return 'گرێبەست';
			case 'contractStandard': return 'ستانداردی گرێبەست';
			case 'contractAddress': return 'ناونیشانی گرێبەست';
			case 'native': return 'ڕەسەن';
			case 'confirmUnbindingPleaseEnterYes': return 'بۆ پشتڕاستکردنەوەی بەستنەوە، تکایە "بەڵێ"';
			case 'listAllWorkingTempReceivingAddresses': return 'لیستکردنی هەموو ناونیشانە وەرگرەکانی زنجیرە بڕاوەکانی کارکردن';
			case 'setNote': return 'تێبینی دابنێ';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'درێژی ناتوانێت لە ${x} بایت زیاتر بێت';
			case 'transferFee': return 'کرێی گواستنەوە';
			case 'crossChainFee': return 'کرێی cross-chain';
			case 'crossChainTransferOutError': return 'هەڵەی گواستنەوەی زنجیرەکان بۆ دەرەوە';
			case 'chainName': return 'ناوی زنجیرە';
			case 'message': return 'پەیام';
			case 'dontShowAgain': return 'جارێکی تر نیشان مەدەرەوە';
			case 'queuing': return 'ڕیزکردن';
			case 'optional': return 'ئیختیاری';
			case 'publiclyVisible': return 'بە ئاشکرا دیارە';
			case 'rates': return 'ڕێژەکان';
			case 'minimum': return 'کەمترین';
			case 'maximum': return 'زۆرترین';
			case 'minimumBlockConfirmations': return 'کەمترین پشتڕاستکردنەوەکانی بلۆک';
			case 'dsmsVerifyTerminal': return 'تێرمیناڵی پشتڕاستکەرەوەی DSMS';
			case 'overall': return 'بە گشتی';
			case 'my': return 'من';
			case 'getVerifierPermissions': return 'مۆڵەتی پشتڕاستکەرەوە وەربگرە';
			case 'checkValidatorQualifications': return 'پشکنینی بڕوانامەی مۆڵەتی چەسپێنەر';
			case 'qualification': return 'بڕوانامە';
			case 'upperLimit': return 'سنووری سەرەوە';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'زۆرترین ژمارەی تێرمیناڵەکان ڕێگەپێدراوە بۆ دەستگەیشتن';
			case 'numberOfExistingAccessTerminals': return 'ژمارەی تێرمیناڵەکانی دەستگەیشتن کە هەن';
			case 'applyingForDSMSVerifierPermissionsTips': return 'پێش ئەوەی داوای مۆڵەتی پشتڕاستکەرەوە بکەیت، پێویستە مۆبایلێکی ئەندرۆیدی بێکار و ژمارەیەکی تایبەت بە دەستگەیشتن ئامادە بکەیت، و بەرنامەی تێرمیناڵی دەستگەیشتن بە DSMS دابەزێنیت و دایبمەزرێنیت.';
			case 'downloadLink': return 'بەستەری دابەزاندن';
			case 'alreadyReadyFollowingTheAboveTips': return 'لە ئێستاوە ئامادەی پەیڕەوکردنی ئەو ئامۆژگارییانەی سەرەوەم';
			case 'globalUniversal': return 'گەردوونی جیهانی';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'لە ئێستادا پشتڕاستکەرەوەی ناوخۆیی بەس نییە بۆ بەشداریکردن لە خزمەتگوزاری دەستڕاگەیشتن بە پشتڕاستکردنەوەی DSMS. تکایە خزمەتگوزاری دەستڕاگەیشتن "'),
				gu,
				const TextSpan(text: '" هەڵبژێرە.'),
			]);
			case 'asDedicatedNumberForAccess': return 'وەک ژمارەیەکی تایبەت بۆ دەستگەیشتن';
			case 'pleaseCheckTip': return ({required Object tip}) => 'تکایە "${tip}" بپشکنە';
			case 'inputLengthTooShort': return 'درێژی زانیاری زۆر کورت';
			case 'shortName': return 'short-name';
			case 'pleaseEnterXname': return ({required Object name}) => 'تکایە ${name} بنووسە';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'داواکاری پێشکەش دەکرێت، تکایە چاوەڕوان بن...';
			case 'applyForDSMSVerifierPermission': return 'داواکاری بۆ مۆڵەتی پشتڕاستکەرەوەی DSMS بکە';
			case 'confirmInformation': return 'زانیاری پشتڕاست بکەرەوە';
			case 'lastHeartbeat': return 'دوا لێدانی دڵ';
			case 'expirationTime': return 'کاتی بەسەرچوون';
			case 'country': return 'وڵات';
			case 'accessTerminals': return 'تێرمیناڵەکانی دەستڕاگەیشتن';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'کۆی ژمارەی تێرمیناڵەکانی ژمارەی دەستگەیشتن بە DSMS';
			case 'textContent': return 'ناوەڕۆکی دەق';
			case 'scanQRcodeToLogin': return 'سکانکردنی QRcode بۆ چوونەژوورەوە';
			case 'confirmLogin': return 'دووپاتکردنەوەی چوونەژوورەوە';
			case 'authorizeSubApplicationToLogin': return 'ڕێگە بەم بەرنامە لاوەکییە بدە بۆ چوونەژوورەوە';
			case 'authorizationSuccessful': return 'ڕێگەپێدان سەرکەوتوو بوو!';
			case 'launchSMSprogram': return 'دەستپێکردنی بەرنامەی کورتەنامە';
			case 'notApplied': return 'کارپێنەکراوە';
			case 'validityPeriod': return 'ماوەی کاریگەری';
			case 'renewal': return 'نوێبوونەوە';
			case 'scanCodeToAuthorizeTerminalLogin': return 'کۆد سکان بکە بۆ ڕێگەدان بە چوونەژوورەوەی تێرمیناڵ';
			case 'rewards': return 'پاداشت';
			case 'roles': return 'ڕۆڵەکان';
			case 'developerCenter': return 'ناوەندی گەشەپێدەر';
			case 'appName': return 'ناوی ئەپ';
			case 'pleaseSelect': return 'تکایە هەڵبژێرە';
			case 'category': return 'پۆل';
			case 'keywords': return 'وشەی سەرەکی';
			case 'pleaseEnterAkeyword': return 'تکایە وشەیەکی سەرەکی دابنێ';
			case 'createApplication': return 'دروستکردنی بەرنامە';
			case 'appType': return 'جۆری ئەپ';
			case 'numberOfCategoriesMustBetween1and3': return 'ژمارەی پۆلەکان دەبێت لە نێوان 1 و 3 بێت';
			case 'appLogoSpecifications': return 'فۆرماتە وێنە: png، قەبارە: لە ماوەی 100KB، ڕوونی (پێکسڵ): 256 * 256';
			case 'localAlbum': return 'ئەلبوومی ناوخۆیی';
			case 'networkPath': return 'ڕێڕەوی تۆڕ';
			case 'imageURLkAddress': return 'ناونیشانی URLی وێنە';
			case 'urlAddressFormatIsIncorrect': return 'فۆرماتەکەی ناونیشانی URL هەڵەیە';
			case 'imageFormatOnlySupportsPng': return 'فۆرماتەکەی وێنە تەنها پشتگیری "png" دەکات.';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'درێژییەکە دەبێت لە نێوان ${a}-${b} کاراکتەرەکاندا بێت';
			case 'introduction': return 'پێشەکی';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'قەبارەی وێنەکە ناتوانێت لە ${a} گەورەتر بێت، لە ئێستادا ${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'ڕوونکردنەوەی وێنەکە دەبێت: ${p1} (پێکسڵەکان), لە ئێستادا ${p2}';
			case 'becomeDeveloper': return 'ببە بە گەشەپێدەر';
			case 'developerInformation': return 'زانیاری گەشەپێدەر';
			case 'teamName': return 'ناوی تیم';
			case 'website': return 'ماڵپەڕ';
			case 'other': return 'ئەوەی تر';
			case 'githubVerification': return 'چەندکردنەوەی گیتوب';
			case 'exampleUrl': return 'نموونەی Url';
			case 'githubVerificationTip': return ({required Object did}) => 'تکایە ئەژمێری GitHub ی خۆت بەکاربهێنە بۆ دروستکردنی پەڕگەیەکی \'delta.did\' لە کۆگاکەدا بە ناوەڕۆکی \'${did}\'؛ پاشان، url githubusercontent ی پەڕگەکە بخەرە ناو ئەم بۆکسەی چوونەژوورەوە بۆ ڕەسەنایەتی.';
			case 'createApp': return 'دروستکردنی ئەپ';
			case 'appManagement': return 'بەڕێوەبردنی ئەپ';
			case 'statusLogs': return 'لۆگەکانی دۆخ';
			case 'bad': return 'خراپ';
			case 'normal': return 'ئاسایی';
			case 'good': return 'باشە';
			case 'onceCreatedItCannotBeChanged': return 'کاتێک دروستکرا، ناتوانرێت بگۆڕدرێت!';
			case 'manageApplicationEntity': return 'بەڕێوەبردنی یەکەیەکی بەرنامە';
			case 'currentVersion': return 'وەشانەکەی ئێستا';
			case 'submitVersion': return 'وەشان پێشکەش بکە';
			case 'packageOnlySupportZipCompressedFile': return 'پاکێجەکە تەنها پشتگیری لە پەڕگەی پاڵەپەستۆکراوی زیپ دەکات';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'پەڕگەی \'${name}\' لە پاکێجی زیپدا نەدۆزرایەوە';
			case 'fileList': return 'لیستی فایلەکان: ';
			case 'programPackage': return 'پاکێجی بەرنامە: ';
			case 'automaticallyExtractFromVersionFile': return 'بە شێوەیەکی ئۆتۆماتیکی لە پەڕگەی \'.version\' دەربهێنە';
			case 'dappVersionFormatTip': return 'فۆرماتەکەی ژمارەی وەشانی دەبێت دەهەمی بێت و وردبینییەکەی دەبێت بە ٢ ژمارە بپارێزرێت، و زۆرترینی ناتوانێت لە ٩٩.٩٩ زیاتر بێت';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'ژمارەی وەشانی دەبێت گەورەتر بێت لە وەشانی ئێستا \'${v}\'';
			case 'versionNotes': return 'تێبینی وەشانی: ';
			case 'dappInfo': return 'زانیاری داپ';
			case 'updateRelease': return 'نوێکردنەوەی بڵاوکردنەوە';
			case 'loadAndRun': return 'بارکردن و جێبەجێکردن';
			case 'notYetSubmittedProgramPackage': return 'هێشتا پاکێجێکی بەرنامە پێشکەش نەکراوە!';
			case 'authorizeMinidAppLogin': return 'ڕێگەدان بە چوونەژوورەوەی مینی-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'ڕێگەپێدان پشتڕاست بکەرەوە، تکایە "بەڵێ" داخڵ بکە';
			case 'authorizeNow': return 'ئێستا ڕێگەپێدان';
			case 'operation': return 'ئۆپەراسیۆن: ';
			case 'statusChange': return 'گۆڕینی دۆخ';
			case 'changeTo': return 'گۆڕانکاری بۆ: ';
			case 'notes': return 'تێبینی: ';
			case 'changesNotEffective': return 'گۆڕانکارییەکان کاریگەر نین!';
			case 'released': return 'ئازاد';
			case 'inPublicBeta': return 'لە تاقیکاری گشتیدا';
			case 'developers': return 'گەشەپێدەران: ';
			case 'reviewList': return 'لیستی پێداچوونەوە: ';
			case 'postReview': return 'پۆست پێداچوونەوە';
			case 'scoreNow': return 'ئێستا گۆڵ تۆمار بکە';
			case 'description': return 'وەسف: ';
			case 'noData': return '(^-^) \n بێ داتا';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'وەشانەکە لە ${a}ەوە بۆ ${b} نوێکراوەتەوە';
			case 'loadNewVersion': return 'بارکردنی وەشانی نوێ';
			case 'name': return 'ناو: ';
			case 'canisterId': return 'CanisterId: ';
			case 'updateTime': return 'کاتی نوێکردنەوە';
			case 'contractCanistersState': return 'دەوڵەتی کانستەرەکانی گرێبەست';
			case 'userDistribution': return 'دابەشکردنی بەکارهێنەر';
			case 'settings': return 'ڕێکخستنەکان';
			case 'security': return 'ئاسایشی';
			case 'invite': return 'بانگهێشت';
			case 'more': return 'زیاتر...';
			case 'receiveAddress': return 'ناونیشانی وەرگرتن: ';
			case 'hangingAmount': return 'هەڵواسینی';
			case 'hangingAmountTips': return 'بڕی هەڵواسینی تۆمارێکی کاتی ئەو پاداشتانەیە کە لەلایەن کانگاکردنی تیمی ژێردەستەکەتەوە دروست دەبن. کاتێک کانگایەک ئەنجام دەدەیت، ئەم بڕە پارانە کۆدەکرێنەوە بۆ بڕی هەڵپەسێردراو.';
			case 'pendingAmount': return 'هەڵپەسێردراو';
			case 'pendingAmountTips': return 'بڕی چاوەڕوانکراو ئاماژەیە بۆ ئەو بڕە پارەیەی کە پشتڕاست نەکراوەتەوە و بەراورد نەکراوە لەگەڵ ڕێکلامکەر. ئەو بڕە پارەیەی کە پشتڕاستکراوەتەوە دەگوازرێتەوە بۆ تۆماری ڕەوای USCT. ئەگەر هەر بەشێکی نادروست هەبێت، ئەوا دەخرێتە دەرەوە.';
			case 'received': return 'وەرگیراوە';
			case 'processing': return 'پڕۆسێسکردن';
			case 'replied': return 'وەڵامی دایەوە';
			case 'rejected': return 'ڕەتکرایەوە';
			case 'unknown': return 'نەناسراو';
			case 'insufficientBalance': return 'هاوسەنگی بەس نییە!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'باڵانسی ${x} بەس نییە بۆ پێدانی کرێی تۆڕی نێوان زنجیرەکان';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'مامەڵێک هەیە کە تەواو نەبووە و لە ئێستادا ناتوانرێت بگوازرێتەوە.';
			case 'thisfunctionNotSupportExternalCalls': return 'ئەم کارە پشتگیری لە پەیوەندی دەرەکی ناکات';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'هیچ ناونیشانێکی هاوتا نییە کە بتوانرێت بەکاربهێنرێت بۆ پێدانی کرێی زنجیرە بڕاوەکان، تکایە بگۆڕە بۆ تۆڕەکانی زنجیرەی تر بۆ هەوڵدان.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'زۆرترین بڕی تاکە گواستنەوەی هاوتاکراوی ئێستا ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'یاداشتنامەکە نابێت لە ٦٤ بایت زیاتر بێت';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'باسەنگی بەس نییە، بڕە پارەکە بریتییە لە: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'ژمارەی ناونیشانە وەرگرەکانی بەستراو ناتوانێت لە 3 زیاتر بێت. \nئەگەر پێویستت بە بەستنەوەی ناونیشانی وەرگرتنی نوێ بوو، \nتکایە سەرەتا ناونیشانی وەرگرێکی تر بکەرەوە.';
			case 'parametersA_exception': return ({required Object x}) => ' پارامێتەرەکان: ${x}, ئیستسنای';
			case 'transferAmountMustBeLargerThan0': return 'بڕی گواستنەوە دەبێت لە 0 گەورەتر بێت';
			case 'authorizationHasExpired': return 'ڕێگەپێدان بەسەرچووە';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'ئەپەکە لەلایەن خاوەنەکەیەوە ڕێگەپێنەدراوە';
			case 'authenticationTokenIsInvalid': return 'نیشانەی ڕەسەنایەتی نادروستە';
			case 'verifyInfoIsInvalidOrExpired': return 'دڵنیابوون لەوەی زانیاری نادروستە یان بەسەرچووە';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'دڵنیابە کە ژمارەی تێرمیناڵەکانی دەستڕاگەیشتن سنووری یەکێک لە 10,000 تێپەڕاندووە';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'کاتی بەشداریکردن لە کانگادا دەبێت زیاتر لە ٣ ڕۆژ بێت';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'ژمارەی ئەندامانی بازنەی سەلامەتی ناتوانێت لە ٣ کەس کەمتر بێت';
			case 'avatarIsNotSet': return 'ئاڤاتاری دانەنراوە';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'ژمارەی ڕەوانەکردنی ڕاستەوخۆ ناتوانێت لە ٣ کەس کەمتر بێت';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'سنوری کاتیی بەس نییە، ژمارەی مۆبایل تەنها ساڵانە جارێک دەتوانرێت بگۆڕدرێت.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'ئەم ژمارە مۆبایلە پێشتر بوونی هەیە و ناتوانرێت دووبارە بکرێتەوە';
			case 'securityCodeIsIncorrect': return 'کۆدی ئاسایش هەڵەیە';
			case 'securityCodeMayHaveExpired': return 'ڕەنگە کۆدی ئاسایش بەسەرچووبێت';
			case 'sessionIdIsInvalidOrExpired': return 'ناسنامەی دانیشتنەکە نادروستە یان بەسەرچووە';
			case 'sessionHasBeenAuthorized': return 'دانیشتنەکە ڕێگەپێدراوە!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'تەنها دەتوانرێت لە ماوەی ${x} ڕۆژ پێش بەسەرچوون نوێ بکرێتەوە';
			case 'notYetGrantedDeveloperPermissions': return 'هێشتا مۆڵەتی گەشەپێدەر نەدراوە';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'ئیمەیڵی مەیدانی ${x} بەتاڵ بێت';
			case 'emailFormatError': return 'هەڵەی فۆرمات ئیمەیڵ';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'فۆرماتەکەی \'${x}\' هەڵەیە';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'درێژی مەیدانی \'${x}\' دەبێت لە نێوان ${y} و ${z} پیتەکاندا بێت.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'هەڵبژاردنی \'${x}\' دەبێت لە نێوان ${y} و ${z} بێت';
			case 'unchanged_sameAsOldContent': return 'نەگۆڕاوە، هەمان ناوەڕۆکی کۆن!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' پێشتر بوونی هەیە!';
			case 'mobileNumberHasNotJoinedDelta': return 'ئەم ژمارە مۆبایلە هێشتا پەیوەندی بە Delta نەکردووە!';
			case 'referrerIdCannotBeEmpty': return 'ناتوانرێت ئاماژەپێکراو بەتاڵ بێت! ';
			case 'referrerIdDoesNotExist': return 'referrerId بوونی نییە!';
			case 'didIsIncorrectOrInvalid': return 'DID هەڵەیە یان نادروستە!';
			case 'accessTokenIsIncorrectOrInvalid': return 'accessToken هەڵەیە یان نادروستە!';
			case 'minimumWithdrawalAmountIs1USD': return 'کەمترین بڕی کشانەوە 1USD';
			case 'miningTimeIsNotYet': return 'کاتی کانگاکردن هێشتا نییە';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'پێشتر بوونی هەیە، تکایە دووبارە زیاد مەکە!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'ژمارەی تۆمارکردن ناتوانرێت وەک ژمارەی دەستڕاگەیشتن بە پشتڕاستکردنەوە بەکاربهێنرێت';
			case 'canotAddYourSelf': return 'ناتوانیت خۆت زیاد بکەیت';
			case 'logOut': return 'دەرچوون';
			case 'confirmLogout': return 'دڵنیای لە دەرچوون';
			case 'logOutTipsText': return 'بیرخستنەوەی دۆستانە: بەپێی ڕێکەوتنی پەیوەندیدار لە کاغەزی سپیدا، هەر پشتڕاستکردنەوەی چوونەژوورەوەی ئەکاونتەکە بڕێکی دیاریکراو لە دراوی DTC لەلایەن تۆوە بەکاردەهێنێت بۆ ئەوەی وەک هاندانێک پارەی پشتڕاستکەرەوە بدەیت. تکایە ئەگەر پێویست نەبوو هەوڵ مەدە بچیتە ژوورەوە و بچیتە دەرەوە. بۆ ئەوەی دەستبەجێ دەربچیت کلیک لەم دوگمەیەی خوارەوە بکە.';
			case 'ConfirmLogoutPleaseEnterYes': return 'دڵنیای لەوەی کە ئەتەوێ لە ئەکاونتەکەت بچیتە دەرەوە؟ "بەڵێ"';
			case 'tip': return 'سەرنج';
			case 'cancel': return 'بگەرێوە';
			case 'close': return 'داخستن';
			case 'selected': return 'دیاریکردن';
			case 'edit': return 'گۆرانکاری';
			case 'submit': return 'ناردرا';
			case 'goBack': return 'بگەڕێوە دواوە';
			case 'copiedToClipboard': return 'هەڵگیرا .';
			case 'nickname': return 'نازناوو';
			case 'confirm': return 'دڵنیابوون';
			case 'cannotBeEmpty': return 'ناتوانێت بەتاڵ بێت';
			case 'deleteSuccessful': return 'بەسەرکەوتوی سڕاوە!';
			case 'successfullyModified': return 'بە سەرکەوتوویی دەستکاری کراوە!';
			case 'executionSuccessful': return 'جێبەجێکردن سەرکەوتوو بوو!';
			case 'parameterException': return 'ئیستسنای پارامێتەر!';
			case 'preview': return 'بینین';
			case 'followSystem': return 'بەدواداچوون بۆ سیستەم';
			case 'change': return 'دەسکاریکردن';
			case 'replace': return 'شوێن گرتنەوە';
			case 'view': return 'بینین';
			case 'manage': return 'بەڕێوەبردن';
			case 'modify': return 'دەستکاری بکە';
			case 'replacedSuccessfully': return 'بە سەرکەوتوویی گۆڕدرا!';
			case 'authentication': return 'ڕەسەنایەتی';
			case 'reacquire': return 'بەدەستهێنانەوەی دووبارە';
			case 'tryAgain': return 'دووبارە هەوڵبدەوە';
			case 'querying': return 'پرسیارکردن ...';
			case 'writingToOnChain_pleaseWait': return 'نووسین بۆ سەر زنجیرەکە، تکایە چاوەڕوان بە ...';
			case 'versionCheck': return 'پشکنینی وەشانی';
			case 'alreadyLatestVersion': return 'پێشتر نوێترین وەشانی!';
			case 'foundNewVersion': return 'وەشانێکی نوێ دۆزرایەوە:';
			case 'upgradeLink': return 'بەستەری بەرزکردنەوە: ';
			case 'deviceDescription': return 'وەسفکردنی ئامێر: ';
			case 'notification30SecondsBeforeMiningStops': return '30 چرکە پێش وەستانی کانگاکردن بیرخستنەوەی ئاگادارکردنەوە جێبەجێ بکە!';
			case 'goMining': return 'بڕۆ بۆ کانگا';
			case 'deltaMiningReminder': return 'بیرخستنەوەی کانگاکانی دێڵتا';
			case 'clickToMine_miningIsAboutToStop': return 'کلیک لێرە بکە بۆ مین، خەریکە کانگاکردن بوەستێت!';
			case 'incorrect_input': return 'هاتنە ژوورەوەی هەڵە !';
			case 'are_you_sure_delete': return 'دڵنیای دەتەوێت بسڕیتەوە?';
			case 'delete_account': return 'سڕینەوەی ئەکاونت';
			case 'how_to_operate_it': return 'چۆن کارپێکردنی؟';
			case 'deletion_warning_tip': return 'ئەگەر ئەکاونتەکەت بسڕیتەوە، هەموو دێڵتا کۆینەکانت لەدەست دەدەیت و هەموو داهاتەکانی ئەندامانی تریش لەدەست دەچێت.';
			case 'launchWhatsAppProgram': return 'دەستپێکردنی بەرنامەی واتسئەپ';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'ژمارەی دەستگەیشتن بەم ئایکۆنە ئاماژەیە بۆ ئەوەی کە پشتگیری پشتڕاستکردنەوەی نامەی واتسئەپیش دەکەن. لە کاتی ناردنی نامەی نێودەوڵەتیدا پێشنیار دەکرێت واتسئەپ بەکاربهێنیت بۆ زیادکردنی ڕێژەی سەرکەوتن و کەمکردنەوەی تێچوونەکان.';
			case 'ihaveSentVerificationString': return 'من ڕستەی پشتڕاستکردنەوەم ناردووە';
			case 'totalOfPeople': return 'کۆی گشتی خەڵک: ';
			case 'numberOfPeopleMining': return 'ژمارەی ئەو کەسانەی کە کانگا دەکەن';
			case 'useBrowserScanQRcodeToSMSprogram': return 'دەتوانیت وێبگەڕێک لەسەر ئامێرێکی تر بەکاربهێنیت بۆ سکانکردنی کۆدی QR و گواستنەوەی بۆ بەرنامەی SMS';
			case 'toggle': return 'گۆڕین';
			case 'DSMSverifier': return 'دڵنیاکەرەوەی DSMS';
			case 'activate': return 'چالاککردن';
			case 'activated': return 'چالاککراوه';
			case 'generateActivationCommand': return 'فرمانی چالاککردن دروست بکە';
			case 'activationCommand': return 'فەرمانی چالاککردن';
			case 'activationSentedTip': return 'دوای ناردنی کورتەنامەی چالاککردنەوە، تکایە دۆخی چالاککردن لەسەر ئامێری تێرمیناڵی دەستگەیشتن بپشکنە.';
			case 'biometricsNotEnabledTip': return 'ئامێرەکەت بایۆمەتری (ڕووخسار یان پەنجەمۆر)ی چالاک نەکردووە، تکایە چالاکی بکە بۆ بەردەوامبوون.';
			case 'error': return 'هەڵەیە';
			case 'exceptionOccurredWhenCallingBiometric': return 'ئیستسنایەک ڕوویدا لەکاتی بانگکردنی فەنکشنی ناسینەوەی بایۆمەتری (ڕووخسار یان پەنجەمۆر)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: 'ژمارەکانی دەستڕاگەیشتن '),
				checkedNum,
				const TextSpan(text: ' پشکنینیان بۆ کراوە، پێویستە '),
				shouldNum,
				const TextSpan(text: ' هەڵبژێردرێت.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'ئایا ${text} نێردراوە بۆ ژمارەکانی دەستگەیشتن ${n} لە سەرەوە؟';
			case 'interface': return 'ڕووکار:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'کات بەسەرچوونی چاوەڕوانی یان ناتەبایی ژمارەی نێرەر';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'ژمارەی مۆبایلی ئەو ئەندامەی بازنەی ئاسایش کە پڕت کردۆتەوە ناگونجێت:${x}';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'بەلایەنی کەمەوە ${n} ژمارەی مۆبایل دەبێت پڕبکرێتەوە';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'لە ماوەی ١٠ خولەکدا دوای چوونە دەرەوە بچۆرە ژوورەوە بۆ ئەوەی پشتڕاستکردنەوەی دوو فاکتەری نەبێت.';
			case 'noAccessNumberInYourRegionYet': return 'هێشتا ژمارەیەکی دەستگەیشتن لە ناوچەکەتدا نییە';
			case 'notEnoughAccessNumbersInYourRegion': return 'لە هەرێمەکەتدا ژمارەی دەستگەیشتن بەس نییە';
			case 'tipsForDeployDSMSterminal': return 'سیستەمەکە بە شێوەیەکی ئۆتۆماتیکی هەندێک ژمارەی دەستگەیشتن لە وڵاتانی دیکەوە بۆ تۆ بارکردووە. بۆ ئەوەی خزمەتگوزاری پشتڕاستکردنەوەی باشتر و کەمتر تێچووی پێشکەش بکرێت، پێشنیار دەکرێت کە تۆ یان ڕەوانەکەرەکەت پەیوەندی بکەیت بۆ بڵاوکردنەوەی تێرمیناڵەکانی DSMS لە ناوخۆدا بۆ بەدەستهێنانی کرێی پشتڕاستکردنەوە.';
			case 'noOneCanProvideMeTheSecurityCode': return 'کەس ناتوانێت کۆدی ئاسایشم بۆ دابین بکات?';
			case 'useSupplementalMode': return 'دۆخی تەواوکەر بەکاربهێنە';
			case 'returnToSecurityCodeMode': return 'گەڕانەوە بۆ دۆخی کۆدی ئاسایش';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'تکایە ژمارەی مۆبایلی پەیوەندیداریان داخڵ بکە، دەتوانرێت کۆدی وڵات لاببرێت.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'ژمارەی مۆبایل بۆ ${name} هەڵەیە';
			case 'matchingVerificationStrategyIs': return 'ستراتیژی پشتڕاستکردنەوەی هاوتاکردن بریتییە لە...:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'هاوسەنگی زیاترە لە 3 ICP، پێویست بە ڕشتنی سووتەمەنی ناکات بۆ ئێستا.';
			case 'escrowAccount': return 'ئەژمێری ئیسکرۆ';
			case 'fuelRelay': return 'ڕێلەی سووتەمەنی';
			case 'pourFuel': return 'سووتەمەنی ڕژێنە';
			case 'fuelState': return 'دۆخی سووتەمەنی';
			case 'pouringFuelTips': return 'ڕشتنی سووتەمەنی هیچ سوود و زیانێکت بۆ ناهێنێت، مەبەست لێی دەوڵەمەندکردنی ئەزموونی سیستەمی دێڵتایە.';
			case 'sponsorDevelopersByWatchingAds': return 'سپۆنسەری گەشەپێدەران بە سەیرکردنی ڕێکلامەکان';
			case 'status': return 'دۆخ';
			case 'date': return 'بەروار';
			default: return null;
		}
	}
}

extension on _StringsDe {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'Abb. Anfang';
			case 'switchLanguage': return 'Sprache wechseln';
			case 'languageSwitch': return 'Sprachwechsel';
			case 'slogan': return 'Aufbau einer dezentralen Wirtschaft im Delta';
			case 'countryRegionCode': return 'Länder-/Gebietscode';
			case 'countryRegionSelection': return 'Auswahl der Länder und Regionen';
			case 'nextStep': return 'der nächste Schritt';
			case 'yourPhoneNumber': return 'Ihre Telefonnummer.';
			case 'pleaseSelectCountryAndRegion': return 'Bitte wählen Sie Ihr Land/Ihre Region';
			case 'pleaseEnterPhoneNumber': return 'Bitte geben Sie eine gültige Telefonnummer ein!';
			case 'referrerDid': return 'Referrer DID';
			case 'pleaseEnterTheReferrersDid': return 'Bitte geben Sie eine gültige dezentrale Identitätskennung des Überweisers ein';
			case 'thisDidIsInvalid': return 'Diese DID ist ungültig.';
			case 'nicknameFormatTips': return 'Der Nickname darf nicht leer sein und darf nicht länger als 16 Ziffern sein.';
			case 'additionalIinformation': return 'Zusätzliche Informationen';
			case 'invitationSubject': return 'Eine Einladung zur Delta-Konsensbildung';
			case 'invitationLetter': return ({required Object did}) => 'Hallo, ich nehme an der Delta-Konsensbildung teil!\n Delta ist eine neue Open-Source-Plattform für digitale Währungen, die auf dem ICP läuft und die es Ihnen ermöglicht, verschiedene digitale Währungen ohne Passwörter, private Schlüssel oder Mnemonics zu verwalten und zu nutzen. Bitte klicken Sie auf diesen Link https://delta.kim/auto/download, um die Anwendung zu installieren. Jetzt sind Sie eingeladen, sich an der Konsensbildung zu beteiligen und auch Währungen zu prägen.\n Referrer DID: ${did}';
			case 'dSMSverification': return 'DSMS-Validierung';
			case 'getAccessNumbers': return 'Besorgen Sie sich einige Zugangsnummern';
			case 'getAccessNumberPromptMessage': return 'Klicken Sie auf die Schaltfläche "Abrufen" unten, um eine Reihe von SMS-Verifizierungszugangsnummern in der Warteschlange zu drehen.';
			case 'optionalAccessNumbers': return 'Optionale Zugangsnummer';
			case 'accessNumber': return 'Zugangsnummer';
			case 'TELCO': return 'Betreiber (eines Kraftwerks, eines Verkehrsnetzes usw.)';
			case 'score': return 'Ergebnis';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('de'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Bitte kreuzen Sie '),
					nBuilder(n),
					const TextSpan(text: ' Zugangsnummern an und klicken Sie auf die Schaltfläche "'),
					span('text'),
					const TextSpan(text: '", um zum nächsten Schritt zu gelangen.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Bitte kreuzen Sie '),
					nBuilder(n),
					const TextSpan(text: ' Zugangsnummern an und klicken Sie auf die Schaltfläche "'),
					span('text'),
					const TextSpan(text: '", um zum nächsten Schritt zu gelangen. '),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta ist ein quelloffenes, dezentralisiertes, globales digitales Währungsexperiment und ein Ökosystem von Kryptowährungsanwendungen.';
			case 'deltaGoalsDesc': return 'Ziel ist es, den Menschen die Möglichkeit zu geben, mit Delta neue digitale Währungen mitzugestalten, die universell, fair, sicher, schnell und umweltfreundlich sind. Und verschiedene effektive Anwendungsszenarien für diese digitalen Währungen und bisherige Kryptowährungen bereitzustellen.';
			case 'details': return 'Einzelheiten';
			case 'get': return 'gewinnen';
			case 'select': return 'Option';
			case 'send': return 'Senden';
			case 'complete': return 'erfüllen.';
			case 'selectedAccessNumberPrompt': return 'Wenn Sie diese Option auswählen, wird die vollständige Zugangsnummer angezeigt und eine Authentifizierungszeichenfolge generiert.';
			case 'location': return 'Platzierung';
			case 'verificationString': return 'Validierungsstring';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Bitte verwenden Sie Ihre Telefonnummer '),
				num,
				const TextSpan(text: ' und senden Sie '),
				label,
				const TextSpan(text: ' an '),
				accessNumber,
				const TextSpan(text: ', um die Überprüfung abzuschließen.'),
			]);
			case 'ihaveSentTheSMS': return 'Ich habe eine Textnachricht gesendet';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Der Validierungsstring ist 6 Minuten lang gültig, verbleibende Zeit: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Zu schnell, um ${x} Sekunden auf die Fortsetzung zu warten!';
			case 'waitingForVerificationSMS': return 'Ich warte auf die Verifizierungs-SMS...';
			case 'partSuccsForVerificationSMS': return 'Die SMS-Verifizierung eines der Zugangsterminals wurde bestanden!';
			case 'creatingAccessToken': return 'Zugriffstoken wird erstellt...';
			case 'intoDelta': return 'Innerhalb von Delta';
			case 'deltaAccountIsLoggedIn': return 'Ihr Delta-Konto ist angemeldet';
			case 'iHavLoggedOut': return 'Ich bin raus.';
			case 'startTwoFactorVerification': return 'Start der doppelten Verifizierung';
			case 'securityCircleVerification': return 'Circle of Safety Validierung';
			case 'generateSecurityCode': return 'Sicherheitscode generieren';
			case 'generateSecurityCodeHintText': return 'Der generierte Sicherheitscode wird an ein zufällig ausgewähltes Mitglied Ihres Sicherheitskreises gesendet.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Sie haben keinen Sicherheitskreis eingerichtet, Ihr Konto ist sehr unsicher, bitte geben Sie einen beliebigen 6-stelligen Platzhalter ein und gehen Sie zum nächsten Schritt.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Der Sicherheitscode wurde generiert, bitte kontaktieren Sie die folgenden Familienmitglieder und Freunde, um den Sicherheitscode für Sie zu extrahieren, damit Sie die Überprüfung bestehen können. 30 Minuten lang gültig!';
			case 'itGetSecurityCodeTip': return 'Tipp: Sie erhalten den Sicherheitscode, indem Sie auf der Seite Delta App -> Menü -> Sicherheit bereitstellen auf Ihren Konto-Nickname doppelklicken.';
			case 'securityCircleMemberList': return 'Mitgliederliste des Sicherheitskreises:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Bitte wählen Sie einen Verwandten oder Freund in der Mitgliederliste aus, der einen Sicherheitscode generieren und Ihnen zur Verifizierung Ihrer wahren Identität geben soll. Der Zweck besteht darin, zu verhindern, dass das Konto von anderen kontrolliert wird, wenn die Mobiltelefonnummer verloren geht oder gestohlen wird.';
			case 'formatIsXdigits': return ({required Object num}) => 'Format als ${num} Ziffern';
			case 'signInSuccessfully': return 'Erfolgreich eingeloggt!';
			case 'twoFAandLogin': return 'Doppelte Authentifizierung und Anmeldung';
			case 'verificationSuccessful': return 'Überprüfen Sie den Erfolg!';
			case 'validationFailed': return 'Validierung fehlgeschlagen!';
			case 'dappInfo': return 'DApp-Informationen';
			case 'securityCircle': return 'Sicherheitsring';
			case 'securityCode': return 'Sicherheitscode';
			case 'provideSecurity': return 'Bereitstellung von Sicherheit';
			case 'addManully': return 'Manuell hinzufügen';
			case 'addFromContacts': return 'Aus dem Adressbuch hinzufügen';
			case 'addSecurityCircle': return 'Kreis der Sicherheit hinzufügen';
			case 'inputType': return 'Eingabe Typ';
			case 'mobileNumber': return 'Mobiltelefonnummer';
			case 'did': return 'Adresse';
			case 'pleaseEnterValidDID': return 'Bitte geben Sie eine gültige dezentrale Identitätskennung ein';
			case 'pleaseEnterValidWalletAddress': return 'Bitte geben Sie eine gültige Brieftaschenadresse ein';
			case 'appellation': return 'Anrede';
			case 'appellationHint': return 'Wie nennst du es, etwa "Baby"?';
			case 'addSecurityCircleTips': return 'Bitte fügen Sie keine Personen, denen Sie nicht vertrauen, zu Ihrem Sicherheitskreis hinzu.';
			case 'referralTeam': return 'Empfohlene Teams';
			case 'profile': return 'Konto-Informationen';
			case 'menu': return 'Menü';
			case 'directly': return 'direkt';
			case 'indirectly': return 'indirekt';
			case 'inviteContacts': return 'Einladung Kontakt';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Ihr Eingeladener ist '),
				nickname,
				const TextSpan(text: ' und Sie haben '),
				num1,
				const TextSpan(text: ' Personen direkt vermittelt, von denen '),
				num2,
				const TextSpan(text: ' derzeit online sind.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Sie haben indirekt '),
				num1,
				const TextSpan(text: ' Personen vermittelt, von denen '),
				num2,
				const TextSpan(text: ' derzeit online sind.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Laden Sie Ihre Freunde ein, Delta beizutreten und den sozialen Konsens gemeinsam zu verbessern. Für jede direkte Empfehlung erhöht die Mining-Rate einer Person die Basisrate um '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Laden Sie Freunde ein, sich Delta anzuschließen und gemeinsam den sozialen Konsens zu verbessern. Jede indirekte Empfehlung einer Person erhöht die Mining-Rate um '),
				rate2,
				const TextSpan(text: ' des Basistarifs.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Sind Sie sicher, dass Sie "${name}" löschen wollen?';
			case 'safetyCircleRoleQ': return 'Was ist der Zweck des Sicherheitsrings?';
			case 'safetyCircleRoleA': return 'Schützen Sie Ihr Konto durch eine sekundäre Authentifizierung in sensiblen Situationen.';
			case 'howSecurityCirclesWorkQ': return 'Wie funktionieren die Sicherheitsringe?';
			case 'howSecurityCirclesWorkA': return 'Sollte eine Verifizierung durch den Circle of Safety erforderlich sein, wählt das Delta Smart Contracts-Programm nach dem Zufallsprinzip ein Mitglied aus der Buddy-Liste des Circle of Safety aus, das Ihnen hilft, einen Sicherheitscode zu erhalten, um die Identitätsverifizierung für Sie abzuschließen. Wenn Sie das Mitglied nach dem Sicherheitscode fragen, kann es bestätigen, ob Sie Sie selbst sind oder nicht. Gleichzeitig fordert das Programm Sie auf: "Verweigern Sie die Angabe des Sicherheitscodes, wenn Sie es nicht sind", um Ihre Kontosicherheit zu schützen. Sie sollten also immer darauf achten, dass die Mitglieder Ihres Sicherheitskreises Personen sind, denen Sie vertrauen können.';
			case 'securityCircleBeUsedQ': return 'Wann wird es verwendet?';
			case 'securityCircleBeUsedA1': return '1. wenn Sie die Kontrolle über Ihre Delta APP verlieren, ist es in der Regel der Fall, dass Ihr Mobiltelefon verloren geht oder gestohlen wird.';
			case 'securityCircleBeUsedA2': return '(2) Bei einigen sensiblen Vorgängen muss das Programm Delta Smart Contract bestätigen, dass Sie es sind.';
			case 'provideSafetyTip1': return 'Wenn Ihr Buddy Sie nach seinem Sicherheitscode fragt, müssen Sie bestätigen, dass es sein eigener Code ist.';
			case 'provideSafetyTip2': return 'Sie bieten Sicherheit für die oben genannten Freunde, die Sie als vertrauenswürdigste Person in ihrem Sicherheitskreis eingestuft haben und Sie als Sicherheitsbestätigung benötigen, falls sie auf ihrem Konto sensible Vorgänge durchführen.';
			case 'provideSafetyTip3': return 'Doppelklicken Sie auf den Avatar der anderen Person, um bei Bedarf den Sicherheitscode zu extrahieren.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'Die andere Partei verfügt derzeit nicht über einen Sicherheitscode, der extrahiert werden muss!';
			case 'existSecurityCodeTip': return 'Bitte vergewissern Sie sich, dass der Freund oder das Familienmitglied, der/das Sie um den Sicherheitscode bittet, mit dem Freund oder Familienmitglied identisch ist. Zum Schutz Ihres Freundes oder Familienmitglieds sollten Sie die Angabe des Sicherheitscodes verweigern, wenn der Freund oder das Familienmitglied nicht mit dem Freund oder Familienmitglied identisch ist.';
			case 'avatarSettings': return 'Avatar-Einstellungen';
			case 'NFTAvatarPropertyRightsText': return 'Haftungsausschluss: Die Verwendung des betreffenden NFT als Avatar dient nur der persönlichen Vorliebe und hat nichts mit dem Besitz der geistigen Eigentumsrechte an diesem NFT zu tun.';
			case 'projectWebsite': return 'Projekt-Website.';
			case 'whitepaper': return 'Whitepaper:';
			case 'indexID': return 'Index Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Index zwischen ${start} und ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Geben Sie die Index-ID Ihres Lieblings-NFT ein, und das Programm lädt ihn automatisch als Avatar für Sie.';
			case 'miningRate': return 'Abbaugeschwindigkeit';
			case 'miningDetails': return 'Bergbau Details';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Gesamtabbaurate: '),
				rate,
				const TextSpan(text: ' δ/Tag'),
			]);
			case 'EndOfMiningSession': return 'Cycle Mining ist vorbei:';
			case 'tapToMineDeltaCoin': return 'Klicken Sie, um Delta-Münzen abzubauen ↑';
			case 'clickToStartMining': return 'Klicken Sie, um mit dem Abbau zu beginnen!';
			case 'miningHasStoppedPromptDesc': return 'Alle 24 Stunden findet ein Mining-Zyklus statt. Klicken Sie auf das Blitzsymbol, um eine neue Mining-Runde zu starten.Deltas Mining ist ein Zuteilungsmechanismus, der keine zusätzliche Rechenleistung und keinen Netzwerkverkehr von Ihrem Gerät verbraucht.';
			case 'aboutBaseRate': return 'Über den Basiszinssatz?';
			case 'baseRateDescription': return 'Wie im Whitepaper vereinbart, wird die Regel zur Senkung des Basistarifs für Delta-Mining in zwei Phasen unterteilt.\nPhase 1: Der Satz beträgt 32δ/Tag, wenn die Zahl der Teilnehmer (Anmeldungen) 3.000 oder weniger beträgt. Ausgehend von dieser Zahl wird der Basissatz jedes Mal halbiert, wenn die Zahl der Teilnehmer um den Faktor 10 steigt.\nPhase 2: Wenn die Zahl der Teilnehmer 30 Millionen oder mehr erreicht, wird der Basissatz jedes Mal halbiert, wenn sich die Zahl der Teilnehmer um den Faktor 3 erhöht. Bis die letzte Ausgrabung die Produktion stoppt.';
			case 'baseRate': return 'Grundgebühr (wie bei ISDN)';
			case 'directReferralRewards': return 'Direkter Empfehlungsbonus';
			case 'directReferralRewardDesc': return 'Für jede direkte Empfehlung wird Ihre Mining-Rate um ein zusätzliches 1/3 der Basisrate erhöht, während sie Mining betreiben.\n\n Darüber hinaus wird der Mining-Status Ihrer Empfehlungen auch für Ihren Bonus für direkte Empfehlungen angerechnet.';
			case 'indirectReferralRewards': return 'Indirekter Empfehlungsbonus';
			case 'indirectReferralRewardDesc': return 'Wenn eine indirekte Empfehlung abbaut, wird Ihre Abbaurate um ein zusätzliches Zehntel der Basisrate erhöht.\n\n Jede Person, die Ihr direktes Empfehlungsteam weiterempfiehlt, stellt eine indirekte Empfehlung für Sie dar.';
			case 'mine': return '(Erz oder andere Ressourcen aus einem Bergwerk) abbauen';
			case 'thisMiningInformation': return 'Aktuelle Bergbauinformationen';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Beteiligt am Bergbau: '),
				x,
				const TextSpan(text: ' mal'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Gesamtgewinn dieses Mal: '),
				x,
				const TextSpan(text: ' Delta-Münzen'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Basisverdienst: '),
				x,
				const TextSpan(text: ' Münzen'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Direkter Beitrag des Teams: '),
				x,
				const TextSpan(text: ' Münzen'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Indirekter Beitrag des Teams: '),
				x,
				const TextSpan(text: ' Münzen'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Länge der Zeit zwischen den Grabungen: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Effektive Abbaustunden: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} Stunden';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Um die Sicherheit von Vermögenswerten zu gewährleisten, sollten die Mitglieder des Sicherheitskreises jederzeit 3-5 vertrauenswürdige Personen beibehalten.';
			case 'index': return 'Indizierung';
			case 'amount': return 'Geldsumme';
			case 'balance': return 'Salden';
			case 'timeStamp': return 'Zeitstempel';
			case 'summary': return 'Abstracts';
			case 'miningHasStopped': return 'Der Bergbau wurde eingestellt.';
			case 'miningHasStoppedDesc': return 'Ihr Mining ist momentan gestoppt und Sie werden sofort anfangen, Geld zu verdienen.';
			case 'startMining': return 'Bergbau beginnen';
			case 'changeMobileNumber': return 'Änderung der Mobiltelefonnummer';
			case 'currentMobileNumber': return 'Aktuelle Handynummer';
			case 'newMobileNumber': return 'Neue Mobiltelefonnummer';
			case 'securityCodeFormatIs6digits': return 'Das Format des Sicherheitscodes ist 6-stellig!';
			case 'startVrification': return 'Überprüfung starten';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Diese Mobilfunknummer existiert bereits, zugehörige DID: ${dId}';
			case 'noDataYet': return 'Keine Daten verfügbar';
			case 'previousMobileNumber': return 'Frühere Mobiltelefonnummer';
			case 'changeLog': return 'Aufzeichnung der Änderungen';
			case 'referralLinkToShare': return 'Empfohlene Links zum Teilen';
			case 'referrer': return 'Referrer';
			case 'isoCountryCode': return 'ISO-Ländercode';
			case 'avatarLogo': return 'Kopfzeilenlogo';
			case 'creationTime': return 'Erstellungszeit';
			case 'lastUpdate': return 'Letzte Aktualisierung';
			case 'numberOfSecurityCircleMembers': return 'Anzahl der Mitglieder von Sicherheitskreisen';
			case 'theLatestMining': return 'Letzte Ausgrabung';
			case 'effectiveMiningDays': return 'Anzahl der Tage des effektiven Abbaus';
			case 'modifyNickname': return 'Nickname ändern';
			case 'didNotChange': return 'Keine Änderung!';
			case 'kycVerification': return 'KYC-Prüfung';
			case 'faceID': return 'Gesichtserkennung';
			case 'touchID': return 'Fingerabdruck-ID';
			case 'biometricsAuthorizationTest': return 'Prüfung der biometrischen Authentifizierung';
			case 'currentState': return 'aktueller Stand';
			case 'biometricsAuthenticationLocalizedReason': return 'Verwenden Sie die Entsperrung Ihres Geräts, um Ihre Identität zu bestätigen.';
			case 'graph': return 'Archiv von Grafiken (z. B. Karten, Dokumente oder botanische Abbildungen)';
			case 'referralRelationshipGraph': return 'Mapping der Verweisungsbeziehungen';
			case 'nativeContacts': return 'Lokale Kontakte';
			case 'registrationAndMiningTrends': return 'Registrierung und Bergbautrends';
			case 'inMining': return 'Bergbau';
			case 'registrationVolume': return 'Anmeldevolumen';
			case 'unmined': return 'ungenutzt';
			case 'mined': return 'abgebaut';
			case 'communityMining': return 'Bergbau in der Gemeinschaft';
			case 'consensusPromotionFund': return 'Konsensförderungsfonds';
			case 'ecologicalAwardFund': return 'Ökologischer Anreizfonds';
			case 'icpFuelCrowdfunding': return 'ICP Fuel Crowdfunding';
			case 'coreDeveloperRewards': return 'Belohnungen für Hauptentwickler';
			case 'totalAllocation': return 'Gesamtverteilung';
			case 'miningRatio': return 'Bergbauquote';
			case 'billion.30': return '30 Milliarden';
			case 'billion.60': return '60 Milliarden';
			case 'billion.180': return '180 Milliarden.';
			case 'billion.300': return '300 Milliarden';
			case 'watchAdsToSupportDevelopers': return 'Anzeigen ansehen, um Entwickler zu unterstützen';
			case 'loadingAdcomponents': return 'Anzeigenkomponenten laden...';
			case 'timeIsNotUp': return 'Die Zeit ist noch nicht um!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Konnte nicht geladen werden, möglicherweise ist das Netzwerk blockiert!';
			case 'pendingUSCTrecords': return 'Ausstehende USCT-Aufzeichnungen';
			case 'pendingUSCTrecordsDesc': return 'Ausstehende USCT-Datensätze werden innerhalb von 15-30 Tagen mit der Werbeplattform abgeglichen, und gültige Datensätze werden in die USCT-Datensatzliste übertragen, und der entsprechende USCT-Betrag wird dem Kontostand gutgeschrieben.';
			case 'validity': return 'Gültigkeit';
			case 'advertiser': return 'Inserenten';
			case 'earned': return 'verdient';
			case 'withdraw': return 'Geld abheben';
			case 'validUSCTrecords': return 'Effektive USCT-Aufzeichnungen';
			case 'USCTmining': return 'USCT Bergbau';
			case 'aboutUSCTmining': return 'Über den USCT-Bergbau?';
			case 'aboutUSCTminingItme1': return '1. USDT ist ein weltweit beliebter US-Dollar-Stablecoin, der an den wichtigsten Kryptowährungsbörsen auf der ganzen Welt problemlos in nationale Landeswährungen umgetauscht werden kann.';
			case 'aboutUSCTminingItme2': return '(2) USCT ist eine vorübergehende Maßnahme der Erlöse aus dem USCT-Mining, bekannt als USD-Guthaben, das schließlich in USDT umgewandelt wird, je nach dem tatsächlichen Abrechnungsbetrag und den Verteilungsregeln der Werbeplattform und dem entsprechenden Anteil.';
			case 'aboutUSCTminingItme3': return '3) USCT Mining ist eine Funktion der Delta-Gemeinschaft zur Realisierung von Verkehrsanzeigen. Sie macht sich die große Nutzerbasis der Delta-Gemeinschaft zunutze, um Werbetreibenden, Delta-Entwicklern und Abwesenden mehrere Vorteile zu bieten. Es soll abwesenden Arbeitnehmern in der Anfangsphase, in der sich das Delta-Ökosystem noch nicht gebildet hat und noch nicht floriert, ein gewisses effektives Einkommen verschaffen; gleichzeitig bietet es den Entwicklern eine gewisse finanzielle Unterstützung, um sicherzustellen, dass sie über einen langen Zeitraum hinweg Entwicklungsdienste anbieten können und letztendlich in der Lage sind, alle Pläne des Whitepapers zu verwirklichen; und es bietet auch einen effektiven Werbekanal für die Produktwerber.';
			case 'aboutUSCTminingItme4': return '(4) Die Verteilungsregeln sind so gestaltet, dass 40 % der Gesamteinnahmen als Provisionen für den technischen Dienst der Entwickler und die restlichen 60 % als Belohnungen für Abwesenheit in der Gemeinde verwendet werden. Abwesenheit Belohnung Teil der Multi-Level-Distribution-Modell ähnlich wie DTC, die Abwesenheit Belohnung wird in drei Teile nach dem Verhältnis von 6:3:1, jedes Mal, wenn einer der Abwesenheit Belohnung von USCT Bergbau 6 Teile für die Abwesenheit der aktuellen Anzeigen, 3 Teile für die übergeordnete Referrer, 1 Teil für die zweite Ebene Referrer zugeordnet werden. In ähnlicher Weise können Sie die gleiche Empfehlungsprämie auch für die Freunde erhalten, die Sie durch USCT Mining werben. Der Vorteil dieser mehrstufigen Verteilung ist, dass jeder eine relativ große Menge an USDT verdienen kann, indem er ein Downline-Team aufbaut.';
			case 'aboutUSCTminingItme5': return '5. die Abrechnungsfrist beträgt 7 Tage, d.h. alle 7 Tage wird die Gültigkeit mit der Werbeplattform überprüft und die bestätigte Gültigkeit des Erlöses und der tatsächliche Betrag werden im Guthaben verbucht. Der Mindestbetrag für jede Auszahlung beträgt 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Zeilen ${x} bis ${y}.';
			case 'wallet': return 'Geldbörsen';
			case 'multiChainWallet': return 'Multiketten-Geldbörse';
			case 'deposit': return 'Einzahlung (z. B. auf ein Bankkonto)';
			case 'transfer': return 'Überweisung (Geld auf ein Bankkonto)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} in der Wallet-Adresse';
			case 'transactions': return 'Transaktionsaufzeichnungen';
			case 'network': return 'Vernetzungen';
			case 'walletAddress': return 'Adresse der Brieftasche';
			case 'currentAddress': return 'aktuelle Adresse';
			case 'depositAddress': return 'Adresse aufladen';
			case 'receivingMoneyAddress': return 'Adresse des Zahlungsempfängers';
			case 'applyTempDepositAddress': return 'Adresse für die Beantragung einer vorübergehenden Aufstockung';
			case 'tempDepositAddressTip': return '(1) Dies ist eine gemeinsame Kautionsadresse. Bitte hinterlegen Sie den Betrag nicht, nachdem der Mietvertrag abgelaufen ist oder Sie ungebunden wurden. Wenn dies geschieht, ist der Betrag verloren.';
			case 'tempDepositAddressTip2': return 'Bevor Sie eine Einzahlung vornehmen, vergewissern Sie sich bitte, dass [Kettenname] und [Münzname] genau übereinstimmen; im Falle von Vertrags-Token müssen Sie auch sicherstellen, dass [Vertragsstandard] und [Vertragsadresse] genau übereinstimmen.';
			case 'tempDepositAddressTip3': return '(3) Versuchen Sie bitte nicht, Geldbeträge einzuzahlen, die nicht mit einem der Parameter in den oben genannten Tipps übereinstimmen, da der Betrag sonst verloren geht.';
			case 'tempDepositAddressTip4': return '(4) Wenn Sie andere Arten von Vermögenswerten einzahlen möchten, wechseln Sie bitte auf die entsprechende Währungsseite und die Parameteroptionen, um eine neue Adresse zu beantragen.';
			case 'applyExtensionOfValidity': return 'Antrag auf Verlängerung der Gültigkeitsdauer';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Diese Adresse läuft nach '),
				diff,
				const TextSpan(text: ' ab und ist '),
				tap('manuell verlängern'),
				const TextSpan(text: ' für 12 Stunden vor Ablauf gültig.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Kann nur 12 Stunden im Voraus verlängert werden';
			case 'theReceivingAddressValidForLongtime': return 'Diese Adresse ist für eine lange Zeit gültig.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Diese Sammeladresse ist lange Zeit gültig und wird automatisch in Echtzeit gutgeschrieben.';
			case 'confirmDeposited': return 'Bestätigung der Hinterlegung';
			case 'unbindThisDepositAddress': return 'Entbündeln Sie diese Top-up-Adresse';
			case 'confirmDepositedTip': return 'Wenn das Guthaben überwiesen wurde, klicken Sie auf die obige Schaltfläche, um die Abrechnung mit Ihrer Brieftasche nach 10 Minuten auszulösen.';
			case 'unbindDepositAddressTip': return 'Um den laufenden Overhead des Smart Contracts zu reduzieren, heben Sie bitte die Bindung der Aufladeadresse auf, wenn Sie während der Gültigkeitsdauer kein Geld mehr einzahlen werden.';
			case 'transferToAddress': return 'zur Adresse gehen';
			case 'longPressToPaste': return 'Langes Drücken zum Einfügen';
			case 'all': return 'vollständig';
			case 'balanceX': return ({required Object x}) => 'Saldo ${x}';
			case 'transferOut': return 'sich herausstellen';
			case 'depositXcoins': return ({required Object x}) => 'Gutschrift ${x}';
			case 'sender': return 'Absender';
			case 'recipient': return 'Empfänger';
			case 'memo': return 'Hinweis';
			case 'kind': return 'Art (des Lebens)';
			case 'transferAmountExceedsAvailableBalance': return 'Übertragungen über den verfügbaren Saldo hinaus';
			case 'pleaseEnterValidAmount': return 'Bitte geben Sie einen gültigen Betrag ein';
			case 'networkFee': return 'Bearbeitungsgebühr für das Netz';
			case 'fee': return 'Bearbeitungsgebühr';
			case 'validLengthXcharacters': return ({required Object x}) => 'Adresse gültige Länge ${x} Zeichen';
			case 'historys': return 'historische Aufzeichnung';
			case 'dtcCreditdetail': return 'Delta-Punkte Details';
			case 'usdCreditdetail': return 'USD Punkte Details';
			case 'dappSquare': return 'dApp-Platz';
			case 'amountRaised': return 'Aufgenommener Betrag';
			case 'disbursedAmount': return 'Ausgegebener Betrag';
			case 'participationTimes': return 'Anzahl der Teilnehmer';
			case 'completionRate': return 'Abschlussquote';
			case 'exchangeRate': return 'Währungswechselkurs';
			case 'icpCrowdfunding': return 'ICP Crowdfunding';
			case 'crowdfunding': return 'Crowdfunding';
			case 'trendsCurve': return 'Trendkurve';
			case 'fullScreenView': return 'Vollbildansicht';
			case 'walletBalance': return 'Guthaben im Portemonnaie:';
			case 'manageWallet': return 'Brieftasche verwalten';
			case 'fundraiseAmount': return 'Fundraising';
			case 'exchangeRewardAmount': return 'Einlösen des Prämienbetrags';
			case 'fundraise': return 'Fundraising';
			case 'rangeIntegersX': return ({required Object x}) => 'Bereich: Ganzzahl ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Nehmen Sie erfolgreich an einer Spendensammlung teil und erhalten Sie eine Belohnung von ${amount}DTCT';
			case 'amountSummary': return 'Zusammenfassung der Beträge';
			case 'changePreferred': return 'Änderung der Präferenz';
			case 'changePreferredAddress': return 'Bevorzugte Adresse ändern';
			case 'preferredAddressTip': return 'Die Gelder werden automatisch an die bevorzugte Adresse überwiesen, wenn die Gelder über eine registrierte Handynummer oder DID abgeholt werden.';
			case 'newAddress': return 'Neue Adresse';
			case 'newAddressTip': return 'Um Missbrauch vorzubeugen, wird bei mehr als einer Wallet-Adresse eine Transaktionsgebühr für jede neu angelegte Adresse erhoben.';
			case 'createNew': return 'neu gebaut';
			case 'chainNetworkName': return 'Kettennetzname';
			case 'from': return 'von (einem Ort) kommen';
			case 'to': return 'bis (eine Zeit)';
			case 'noAvailableDepositAmountDetected': return 'Es wurde kein verfügbarer Einzahlungsbetrag gefunden!';
			case 'crossChainReceiveMoneyMonitoring': return 'Kettenübergreifendes Sammeln ist Hören ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Empfangen ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Bestätigung in Bearbeitung ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Anmerkungen (Pflichtlektüre für Neulinge)';
			case 'whyUseSharedAddresses': return 'Warum eine gemeinsame Adresse verwenden?';
			case 'useSharedrAdvantage': return 'Die Vorteile der Verwendung gemeinsamer Adressen bei der Hinterlegung über Ketten hinweg sind folgende:';
			case 'useSharedrAdvantage1': return '1. die Verschwendung von Überweisungsgebühren zu reduzieren und die Kosten für die Nutzung für die Nutzer zu senken. Wegen der Verwendung von exklusiven Adresse, wird es zu viel Streuung der Mittel führen, in der Regel, um die anschließende Übertragung von anderen Nutzern in der Rücknahme von Geldern zu erleichtern, wenn der Benutzer lädt die zweite Übertragung von Geldern müssen in einem oder einer kleinen Anzahl von Adresse Management gepoolt werden.';
			case 'useSharedrAdvantage2': return 'Bei der gemeinsamen Nutzung muss das Programm nur einen relativ kleinen Pool von Adressen vorhalten, der schnell mit ausgehenden Übertragungen und leichten Sammelüberwachungen abgeglichen werden kann, was den Rechenaufwand reduziert. Im Gegensatz dazu wäre das Gegenteil der Fall, wenn exklusive Adressen verwendet würden.';
			case 'tokenType': return 'Token-Typ';
			case 'contract': return 'vertraglich';
			case 'contractStandard': return 'Vertragsstandard';
			case 'contractAddress': return 'Vertragsadresse';
			case 'native': return 'Protozoen';
			case 'confirmUnbindingPleaseEnterYes': return 'Um die Entbindung zu bestätigen, geben Sie bitte "ja" ein.';
			case 'listAllWorkingTempReceivingAddresses': return 'Liste aller funktionierenden kettenübergreifenden Aufladeadressen';
			case 'setNote': return 'Einrichten von Notizen';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Kann nicht länger als ${x} Bytes sein';
			case 'transferFee': return 'Ablösesumme';
			case 'crossChainFee': return 'Kettengebühr';
			case 'crossChainTransferOutError': return 'Querverbindungsfehler';
			case 'chainName': return 'Kettenname';
			case 'message': return 'Nachrichten';
			case 'dontShowAgain': return 'nicht mehr angezeigt';
			case 'queuing': return 'Warteschlange';
			case 'optional': return 'optional';
			case 'publiclyVisible': return 'öffentlich sichtbar';
			case 'rates': return 'Tarif';
			case 'minimum': return 'Minimum';
			case 'maximum': return 'Obergrenze';
			case 'minimumBlockConfirmations': return 'Mindestanzahl von Blockbestätigungen';
			case 'dsmsVerifyTerminal': return 'DSMS-Validierungsterminal';
			case 'overall': return 'Regenschirm';
			case 'my': return 'meine';
			case 'checkValidatorQualifications': return 'Überprüfung der Berechtigungen von Authentifikatoren';
			case 'getVerifierPermissions': return 'Authentifikator-Rechte erhalten';
			case 'qualification': return 'natürliche Begabungen';
			case 'upperLimit': return 'Grenze';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Maximale Anzahl der zulässigen Zugangsterminals';
			case 'numberOfExistingAccessTerminals': return 'Anzahl der vorhandenen Zugangsterminals';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Vor der Beantragung von Authentifizierungsrechten müssen Sie ein Android-Mobiltelefon im Ruhezustand und eine spezielle Zugangsnummer vorbereiten sowie die DSMS Access Terminal-Anwendung herunterladen und installieren.';
			case 'downloadLink': return 'Download-Link';
			case 'alreadyReadyFollowingTheAboveTips': return 'Es ist fertig gemäß den oben genannten Tipps';
			case 'globalUniversal': return 'für den weltweiten Einsatz';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Derzeit gibt es nicht genügend lokale Authentifikatoren, um am DSMS-Authentifizierungs-Zugangsdienst teilzunehmen. Bitte wählen Sie den Zugangsdienst "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'als reine Zugangsnummer';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Bitte kreuzen Sie das Feld "${tip}" an.';
			case 'inputLengthTooShort': return 'Eingabelänge zu kurz';
			case 'shortName': return 'Akronyme';
			case 'pleaseEnterXname': return ({required Object name}) => 'Bitte geben Sie ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Die Bewerbung wird eingereicht, bitte warten Sie...';
			case 'applyForDSMSVerifierPermission': return 'Beantragen Sie DSMS-Validator-Privilegien';
			case 'confirmInformation': return 'Bestätigung der Informationen';
			case 'lastHeartbeat': return 'letzter Herzschlag';
			case 'expirationTime': return 'fällige Zeit';
			case 'country': return 'Nationen';
			case 'accessTerminals': return 'Zugangsterminal';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Gesamtzahl der DSMS-Zugangsnummern-Terminals';
			case 'textContent': return 'Inhalt des Textes';
			case 'scanQRcodeToLogin': return 'Zum Einloggen wischen';
			case 'confirmLogin': return 'Anmeldung bestätigen';
			case 'authorizeSubApplicationToLogin': return 'Diese Teilanwendung zum Einloggen autorisieren';
			case 'authorizationSuccessful': return 'Die Genehmigung war erfolgreich!';
			case 'launchSMSprogram': return 'Start des SMS-Programms';
			case 'notApplied': return 'Kein Antrag';
			case 'validityPeriod': return 'Gültigkeitsdauer';
			case 'renewal': return 'Verlängerungsantrag';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Code scannen, um Terminalanmeldung zu autorisieren';
			case 'rewards': return 'Anreize';
			case 'roles': return 'Zeichen';
			case 'developerCenter': return 'Entwicklerzentrum';
			case 'appName': return 'Name der Anwendung';
			case 'pleaseSelect': return 'bitte auswählen';
			case 'category': return 'Kategorie';
			case 'keywords': return 'Stichwort';
			case 'pleaseEnterAkeyword': return 'Bitte geben Sie ein Stichwort ein';
			case 'createApplication': return 'Anwendungen erstellen';
			case 'appType': return 'Art der Anwendung';
			case 'numberOfCategoriesMustBetween1and3': return 'Die Anzahl der Kategorien muss zwischen 1 und 3 liegen.';
			case 'appLogoSpecifications': return 'Bildformat: png, Größe: bis 100KB, Auflösung (Pixel): 256*256';
			case 'localAlbum': return 'Lokale Fotoalben';
			case 'networkPath': return 'Netzwerkpfad';
			case 'imageURLkAddress': return 'Bild-URL';
			case 'urlAddressFormatIsIncorrect': return 'Falsch formatierte URL-Adresse';
			case 'imageFormatOnlySupportsPng': return 'Bilder werden nur im "png"-Format unterstützt.';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'Die Länge muss zwischen ${a}-${b} Zeichen liegen.';
			case 'introduction': return 'kurz';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'Die Bildgröße kann nicht größer sein als ${a}, derzeit ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'Die Bildauflösung muss sein: ${p1}(Pixel), derzeit ${p2}';
			case 'becomeDeveloper': return 'Werden Sie ein Entwickler';
			case 'developerInformation': return 'Informationen für Entwickler';
			case 'teamName': return 'Name der Mannschaft';
			case 'website': return 'Knoten';
			case 'other': return 'andere als';
			case 'githubVerification': return 'Github-Überprüfung';
			case 'exampleUrl': return 'Beispiel Url';
			case 'githubVerificationTip': return ({required Object did}) => 'Bitte verwenden Sie Ihr GitHub-Konto, um in Ihrem Repository eine Datei "delta.did" mit dem Inhalt "${did}" zu erstellen; fügen Sie dann die githubusercontent Url-Adresse dieser Datei zur Authentifizierung in dieses Eingabefeld ein.';
			case 'createApp': return 'Anwendungen erstellen';
			case 'appManagement': return 'Anwendungsmanagement';
			case 'statusLogs': return 'Statusprotokoll';
			case 'bad': return 'nicht gut';
			case 'normal': return 'üblich';
			case 'good': return 'eine ausgezeichnete';
			case 'onceCreatedItCannotBeChanged': return 'Einmal erstellt, kann es nicht mehr geändert werden!';
			case 'manageApplicationEntity': return 'Verwaltung von Anwendungsentitäten';
			case 'currentVersion': return 'aktuelle Version';
			case 'submitVersion': return 'Eingereichte Version';
			case 'packageOnlySupportZipCompressedFile': return 'Das Paket unterstützt nur zip-komprimierte Dateien';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Die Datei \'${name}\' wurde im Zip-Paket nicht gefunden.';
			case 'fileList': return 'Liste der Dokumente:';
			case 'programPackage': return 'Programmierpaket:';
			case 'automaticallyExtractFromVersionFile': return 'Automatisch aus \'.version\'-Dateien extrahiert';
			case 'dappVersionFormatTip': return 'Das Format der Versionsnummer muss eine Dezimalzahl mit einer Genauigkeit von 2 Ziffern sein, die maximal 99,99 betragen darf.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Die Versionsnummer muss größer sein als die aktuelle Version \'${v}\'.';
			case 'versionNotes': return 'Impressum:';
			case 'updateRelease': return 'neue Version';
			case 'loadAndRun': return 'Laden und ausführen';
			case 'notYetSubmittedProgramPackage': return 'Das Programmpaket ist noch nicht eingereicht worden!';
			case 'authorizeMinidAppLogin': return 'mini-dApp Anmeldung autorisieren';
			case 'confirmAuthorizationPleaseEnterYes': return 'Um die Genehmigung zu bestätigen, geben Sie bitte "ja" ein.';
			case 'authorizeNow': return 'Sofortige Genehmigung';
			case 'operation': return 'Betrieb.';
			case 'statusChange': return 'Statusänderung';
			case 'changeTo': return 'Wechseln zu:';
			case 'notes': return 'Bemerkung.';
			case 'changesNotEffective': return 'Die Änderung ist nicht gültig!';
			case 'released': return 'Veröffentlicht';
			case 'inPublicBeta': return 'offene Beta';
			case 'developers': return 'Entwickelt von.';
			case 'reviewList': return 'Kommentarliste.';
			case 'postReview': return 'Hinterlassen Sie einen Kommentar';
			case 'scoreNow': return 'Jetzt bewerten';
			case 'description': return 'Beschreibung.';
			case 'noData': return '(^-^)\n Keine Daten';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Die Version wurde von ${a} auf ${b} aktualisiert.';
			case 'loadNewVersion': return 'Neue Version laden';
			case 'name': return 'Name.';
			case 'canisterId': return 'Tank-Id.';
			case 'updateTime': return 'Aktualisierungszeit';
			case 'contractCanistersState': return 'Vertrag Tank Status';
			case 'userDistribution': return 'Benutzerverteilung';
			case 'settings': return 'Einstellung';
			case 'security': return 'Sicherheit';
			case 'invite': return 'Einladungen';
			case 'more': return 'Mehr...';
			case 'receiveAddress': return 'Empfangsadresse:';
			case 'hangingAmount': return 'hängend';
			case 'hangingAmountTips': return 'Ausstehende Beträge sind temporäre Aufzeichnungen von Belohnungen, die durch den Abbau durch Ihr untergeordnetes Team generiert wurden. Sobald Sie eine Abbausitzung durchgeführt haben, werden diese Beträge in den Ausstehenden Beträgen gesammelt.';
			case 'pendingAmount': return 'ausstehend';
			case 'pendingAmountTips': return 'Ausstehende Beträge sind solche, die noch nicht gegenüber Inserenten bestätigt wurden, und solche mit gültigen Übereinstimmungen werden in gültige USCT-Datensätze übertragen, wobei ungültige Teile, falls vorhanden, ausgeschlossen werden.';
			case 'received': return 'erhalten';
			case 'processing': return 'in Arbeit';
			case 'replied': return 'Befragter';
			case 'rejected': return 'Ablehnung';
			case 'unknown': return 'unkartiert';
			case 'insufficientBalance': return 'Unzureichendes Gleichgewicht!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Das Guthaben von ${x} reicht nicht aus, um die Gebühren des Cross-Link-Netzwerks zu decken';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Eine Transaktion ist noch nicht abgeschlossen und kann zu diesem Zeitpunkt nicht übertragen werden';
			case 'thisfunctionNotSupportExternalCalls': return 'Diese Funktion kann nicht von außen aufgerufen werden.';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Es gibt keine Übereinstimmung mit einer Adresse, die zur Zahlung von Cross-Chain-Gebühren verwendet werden kann. Bitte wechseln Sie zu einem anderen Kettennetzwerk, um es zu versuchen.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'Die aktuelle Übereinstimmung mit dem Höchstbetrag, der in einer einzigen Transaktion überwiesen werden kann, beträgt ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Bemerkungen dürfen 64 Bytes nicht überschreiten';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Der Saldo ist unzureichend und der Betrag beträgt: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Sie können nicht mehr als 3 Adressen binden.\nWenn Sie eine neue Zahlungsadresse binden müssen.\nBitte heben Sie zuerst die Bindung einer anderen Adresse auf.';
			case 'parametersA_exception': return ({required Object x}) => 'Parameter: ${x}, Ausnahme';
			case 'parameterException': return 'Parameter-Ausnahme!';
			case 'transferAmountMustBeLargerThan0': return 'Der Transferbetrag muss größer als 0 sein';
			case 'authorizationHasExpired': return 'Die Zulassung ist abgelaufen';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'Die App wurde vom Eigentümer nicht autorisiert';
			case 'authenticationTokenIsInvalid': return 'Ungültiges Authentifizierungstoken';
			case 'verifyInfoIsInvalidOrExpired': return 'Ungültige oder abgelaufene Validierungsinformationen';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Überprüfen Sie, ob die Anzahl der Zugangsterminals die Grenze von einem von zehntausend überschritten hat.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'Die Teilnahme am Bergbau muss mehr als 3 Tage betragen';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Die Anzahl der Mitglieder des Sicherheitskreises darf nicht weniger als drei betragen';
			case 'avatarIsNotSet': return 'Avatar nicht gesetzt';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Die Anzahl der direkten Verweise darf nicht weniger als 3 betragen.';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Die zeitliche Begrenzung ist unzureichend, und Sie können Ihre Mobiltelefonnummer nur einmal im Jahr ändern.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Diese Mobiltelefonnummer existiert bereits und kann nicht dupliziert werden';
			case 'securityCodeIsIncorrect': return 'Falscher Sicherheitscode';
			case 'securityCodeMayHaveExpired': return 'Der Sicherheitscode ist möglicherweise abgelaufen';
			case 'sessionIdIsInvalidOrExpired': return 'Ungültige oder abgelaufene Sitzungsnummer';
			case 'sessionHasBeenAuthorized': return 'Die Sitzung wurde zum Abschluss genehmigt!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Kann nur innerhalb von ${x} Tagen vor Ablauf der Laufzeit verlängert werden';
			case 'notYetGrantedDeveloperPermissions': return 'Noch keine Entwicklerrechte';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Feld ${x} kann nicht null sein';
			case 'emailFormatError': return 'Fehler im E-Mail-Format';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Formatierungsfehler \'${x}\'';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Das Feld "${x}" muss zwischen ${y} und ${z} Zeichen lang sein.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Der Auswahlbereich "${x}" muss zwischen ${y} und ${z} liegen.';
			case 'unchanged_sameAsOldContent': return 'Unverändert, gleicher Inhalt wie früher!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' existiert bereits!';
			case 'mobileNumberHasNotJoinedDelta': return 'Diese Handynummer wurde nicht zu Delta hinzugefügt!';
			case 'referrerIdCannotBeEmpty': return 'Die Referrer-ID darf nicht leer sein!';
			case 'referrerIdDoesNotExist': return 'Referrer ID existiert nicht!';
			case 'didIsIncorrectOrInvalid': return 'Die DID ist falsch oder ungültig!';
			case 'accessTokenIsIncorrectOrInvalid': return 'Der accessToken ist falsch oder ungültig!';
			case 'minimumWithdrawalAmountIs1USD': return 'Mindestens 1USD für eine einzelne Abhebung';
			case 'miningTimeIsNotYet': return 'Es ist noch nicht an der Zeit, Bergbau zu betreiben.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Bereits vorhanden, bitte nicht erneut hinzufügen!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Registrierungsnummer kann nicht als Zugangsnummer für die Authentifizierung verwendet werden';
			case 'canotAddYourSelf': return 'Kann dich nicht hinzufügen';
			case 'logOut': return 'Abmelden';
			case 'confirmLogout': return 'Bestätigen Sie die Abmeldung';
			case 'logOutTipsText': return 'Bitte beachten Sie: Wie im Whitepaper beschrieben, wird bei jeder Verifizierung Ihres Kontos ein bestimmter Betrag Ihrer DTC-Münzen verbraucht, der als Anreiz an den Verifizierer ausgezahlt wird. Versuchen Sie also nicht, sich unnötig ein- und auszuloggen, sondern klicken Sie auf die Schaltfläche unten, um sich sofort auszuloggen.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Bitte geben Sie "ja" ein, um die Abmeldung zu bestätigen.';
			case 'tip': return 'auf etw. aufmerksam machen';
			case 'cancel': return 'Stornierungen';
			case 'close': return 'Klageschrift';
			case 'selected': return 'ausgewählt';
			case 'edit': return 'Compiler';
			case 'submit': return 'vorlegen (einen Bericht usw.)';
			case 'goBack': return 'Regression (in der Psychologie)';
			case 'copiedToClipboard': return 'Sie wurde in die Zwischenablage kopiert.';
			case 'nickname': return 'Kosewort';
			case 'confirm': return 'erkennen';
			case 'cannotBeEmpty': return 'Kann nicht leer sein';
			case 'deleteSuccessful': return 'Erfolgreich gelöscht!';
			case 'successfullyModified': return 'Die Änderung war erfolgreich!';
			case 'executionSuccessful': return 'Die Umsetzung war erfolgreich!';
			case 'preview': return 'Vorschauen';
			case 'followSystem': return 'Wiedervorlageverfahren';
			case 'change': return 'Variation';
			case 'replace': return 'Ersetzungen';
			case 'view': return 'auschecken';
			case 'manage': return 'Geschäftsführung';
			case 'modify': return 'Änderungen';
			case 'replacedSuccessfully': return 'Ersetzung erfolgreich!';
			case 'authentication': return 'Authentifizierung';
			case 'reacquire': return 'abrufen.';
			case 'tryAgain': return 'Versuchen Sie es noch einmal.';
			case 'querying': return 'Es werden Erkundigungen eingezogen ...';
			case 'writingToOnChain_pleaseWait': return 'Es wird gerade in die Kette geschrieben, bitte warten Sie ...';
			case 'versionCheck': return 'Versionserkennung';
			case 'alreadyLatestVersion': return 'Bereits die neueste Version!';
			case 'foundNewVersion': return 'Entdecken Sie die neue Version:';
			case 'upgradeLink': return 'Upgrade-Link:';
			case 'deviceDescription': return 'Beschreibung der Ausrüstung.';
			case 'notification30SecondsBeforeMiningStops': return 'Führen Sie die Benachrichtigungserinnerung 30 Sekunden vor dem Ende des Minings aus!';
			case 'goMining': return 'Gehe Bergbau';
			case 'deltaMiningReminder': return 'Delta Mining-Erinnerung';
			case 'clickToMine_miningIsAboutToStop': return 'Klicken Sie hier, um zu schürfen. Der Bergbau wird bald eingestellt!';
			case 'incorrect_input': return 'Falsche Eingabe!';
			case 'are_you_sure_delete': return 'Sind Sie sicher, dass Sie löschen möchten?';
			case 'delete_account': return 'Konto löschen';
			case 'how_to_operate_it': return 'Siehst du, wie es funktioniert?';
			case 'deletion_warning_tip': return 'Wenn Sie Ihr Konto löschen, verlieren Sie alle Ihre Delta-Münzen und alle Einnahmen anderer Mitglieder gehen ebenfalls verloren.';
			case 'launchWhatsAppProgram': return 'WhatsApp-Programm starten';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Zugangsnummern mit diesem Symbol unterstützen auch die WhatsApp-Nachrichtenverifizierung. Beim internationalen Versand von Nachrichten empfiehlt sich die Verwendung von WhatsApp, um die Erfolgsquote zu erhöhen und Kosten zu senken.';
			case 'ihaveSentVerificationString': return 'Ich habe eine Bestätigungszeichenfolge gesendet';
			case 'totalOfPeople': return 'Gesamtzahl der Personen: ';
			case 'numberOfPeopleMining': return 'Anzahl der Mining-Personen';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Sie können einen Browser auf einem anderen Gerät verwenden, um den QR-Code zu scannen und an das SMS-Programm weiterzuleiten';
			case 'toggle': return 'Umschalten';
			case 'DSMSverifier': return 'DSMS-Verifizierer';
			case 'activate': return 'Aktivieren';
			case 'activated': return 'Aktiviert';
			case 'generateActivationCommand': return 'Aktivierungsbefehl generieren';
			case 'activationCommand': return 'Aktivierungsbefehl';
			case 'activationSentedTip': return 'Nachdem die Aktivierungs-SMS versendet wurde, prüfen Sie bitte den Aktivierungsstatus auf dem Zugangsterminal.';
			case 'biometricsNotEnabledTip': return 'Biometrie (Gesicht oder Fingerabdruck) ist auf Ihrem Gerät nicht aktiviert. Bitte aktivieren Sie sie, um fortzufahren.';
			case 'error': return 'Fehler';
			case 'exceptionOccurredWhenCallingBiometric': return 'Beim Aufruf der biometrischen Funktion (Gesicht oder Fingerabdruck) ist eine Ausnahme aufgetreten!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' Zugangsnummern sind geprüft, '),
				shouldNum,
				const TextSpan(text: ' sollte ausgewählt werden.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Wurde ${text} an die oben genannten ${n} Zugangsnummern gesendet?';
			case 'interface': return 'Schnittstelle:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Wartezeitüberschreitung oder Absendernummer stimmt nicht überein';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Die von Ihnen eingegebene Handynummer des Sicherheitskreismitglieds stimmt nicht überein: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Melden Sie sich innerhalb von 10 Minuten nach der Abmeldung wieder an, um die Zwei-Faktor-Verifizierung zu vermeiden.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Mindestens ${n} Mobiltelefonnummern müssen eingetragen werden';
			case 'noAccessNumberInYourRegionYet': return 'In Ihrer Region gibt es noch keine Zugangsnummer';
			case 'notEnoughAccessNumbersInYourRegion': return 'Nicht genügend Zugangsnummern in Ihrer Region';
			case 'tipsForDeployDSMSterminal': return 'Das System hat automatisch einige Zugangsnummern aus anderen Ländern für Sie geladen. Um bessere und kostengünstigere Verifizierungsdienste anbieten zu können, wird empfohlen, dass Sie oder Ihre Empfehlungsperson das DSMS-Terminal lokal einsetzen, um Verifizierungsgebühren zu verdienen.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Kann mir niemand den Sicherheitscode geben?';
			case 'useSupplementalMode': return 'Ergänzenden Modus verwenden';
			case 'returnToSecurityCodeMode': return 'Zurück zum Sicherheitscode-Modus';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Bitte geben Sie die zugehörige Handynummer ein. Die Landesvorwahl kann weggelassen werden.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Die Handynummer von ${name} ist falsch';
			case 'matchingVerificationStrategyIs': return 'Die passende Verifizierungsstrategie ist:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Der Saldo ist größer als 3 ICP, es muss derzeit kein Kraftstoff nachgefüllt werden.';
			case 'escrowAccount': return 'Treuhandkonto';
			case 'fuelRelay': return 'Kraftstoffrelais';
			case 'pourFuel': return 'Kraftstoff einfüllen';
			case 'fuelState': return 'Kraftstoffzustand';
			case 'pouringFuelTips': return 'Das Einfüllen von Kraftstoff bringt Ihnen weder Vorteile noch Nachteile, sein Zweck besteht darin, das Delta-Systemerlebnis zu bereichern.';
			case 'sponsorDevelopersByWatchingAds': return 'Sponsern Sie Entwickler, indem Sie sich Werbung ansehen';
			case 'status': return 'Status';
			case 'date': return 'Datum';
			default: return null;
		}
	}
}

extension on _StringsEl {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'εικ. αρχή';
			case 'switchLanguage': return 'Αλλαγή γλώσσας';
			case 'languageSwitch': return 'Αλλαγή γλώσσας';
			case 'slogan': return 'Οικοδόμηση μιας αποκεντρωμένης οικονομίας στο Δέλτα';
			case 'countryRegionCode': return 'Κωδικός χώρας/περιοχής';
			case 'countryRegionSelection': return 'Επιλογή χωρών και περιφερειών';
			case 'nextStep': return 'το επόμενο βήμα';
			case 'yourPhoneNumber': return 'Ο αριθμός τηλεφώνου σας.';
			case 'pleaseSelectCountryAndRegion': return 'Επιλέξτε τη χώρα/περιοχή σας';
			case 'pleaseEnterPhoneNumber': return 'Παρακαλώ εισάγετε έναν έγκυρο αριθμό τηλεφώνου!';
			case 'referrerDid': return 'Referrer DID';
			case 'pleaseEnterTheReferrersDid': return 'Παρακαλούμε εισάγετε ένα έγκυρο αναγνωριστικό αποκεντρωμένης ταυτότητας παραπομπής';
			case 'thisDidIsInvalid': return 'Αυτό το DID είναι άκυρο.';
			case 'nicknameFormatTips': return 'Το ψευδώνυμο δεν πρέπει να είναι κενό και το μήκος του δεν πρέπει να υπερβαίνει τα 16 ψηφία.';
			case 'additionalIinformation': return 'Πρόσθετες πληροφορίες';
			case 'invitationSubject': return 'Πρόσκληση για την οικοδόμηση συναίνεσης στη Δέλτα';
			case 'invitationLetter': return ({required Object did}) => 'Γεια σας, συμμετέχω στο Delta Consensus Building!\n Η Delta είναι μια νέα πλατφόρμα ψηφιακών νομισμάτων ανοιχτού κώδικα που τρέχει στο ICP, η οποία σας επιτρέπει να διαχειρίζεστε και να χρησιμοποιείτε διάφορα ψηφιακά νομίσματα χωρίς κωδικούς πρόσβασης, ιδιωτικά κλειδιά ή μνημονικά. Κάντε κλικ σε αυτόν τον σύνδεσμο https://delta.kim/auto/download για να εγκαταστήσετε την εφαρμογή και τώρα καλείστε να συμμετάσχετε και εσείς στην οικοδόμηση συναίνεσης και στην κοπή νομισμάτων.\n Referrer DID: ${did}';
			case 'dSMSverification': return 'Επικύρωση DSMS';
			case 'getAccessNumbers': return 'Πάρτε μερικούς αριθμούς πρόσβασης';
			case 'getAccessNumberPromptMessage': return 'Κάντε κλικ στο κουμπί "Αποκτήστε" παρακάτω για να περιστρέψετε ένα σύνολο αριθμών πρόσβασης επαλήθευσης SMS στην ουρά.';
			case 'optionalAccessNumbers': return 'Προαιρετικός αριθμός πρόσβασης';
			case 'accessNumber': return 'αριθμός πρόσβασης';
			case 'TELCO': return 'φορέας εκμετάλλευσης (σταθμού παραγωγής ενέργειας, δικτύου μεταφορών κ.λπ.)';
			case 'score': return 'σκορ';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('el'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Παρακαλώ σημειώστε '),
					nBuilder(n),
					const TextSpan(text: ' αριθμούς πρόσβασης και κάντε κλικ στο κουμπί "'),
					span('text'),
					const TextSpan(text: '" για να προχωρήσετε στο επόμενο βήμα.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Επιλέξτε '),
					nBuilder(n),
					const TextSpan(text: ' αριθμούς πρόσβασης και κάντε κλικ στο κουμπί "'),
					span('text'),
					const TextSpan(text: '" για να προχωρήσετε στο επόμενο βήμα.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Η Delta είναι ένα ανοικτού κώδικα, αποκεντρωμένο, παγκόσμιο πείραμα ψηφιακού νομίσματος και ένα οικοσύστημα εφαρμογών κρυπτονομισμάτων.';
			case 'deltaGoalsDesc': return 'Στόχος είναι να μπορέσουν οι άνθρωποι να χρησιμοποιήσουν τη Delta για να συνδιαμορφώσουν νέα ψηφιακά νομίσματα που θα είναι καθολικά, δίκαια, ασφαλή, γρήγορα και πράσινα. Και να παρέχει διάφορα αποτελεσματικά σενάρια εφαρμογής για αυτά τα ψηφιακά νομίσματα και τα προηγούμενα κρυπτονομίσματα.';
			case 'details': return 'στοιχεία';
			case 'get': return 'κέρδος';
			case 'select': return 'επιλογή';
			case 'send': return 'αποστολή';
			case 'complete': return 'πληρούν';
			case 'selectedAccessNumberPrompt': return 'Όταν επιλεγεί, εμφανίζεται ο πλήρης αριθμός πρόσβασης και δημιουργείται μια συμβολοσειρά ελέγχου ταυτότητας.';
			case 'location': return 'τοποθέτηση';
			case 'verificationString': return 'συμβολοσειρά επικύρωσης';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Παρακαλούμε χρησιμοποιήστε τον αριθμό τηλεφώνου σας '),
				num,
				const TextSpan(text: ' και στείλτε '),
				label,
				const TextSpan(text: ' στο '),
				accessNumber,
				const TextSpan(text: ' για να ολοκληρώσετε την επαλήθευση.'),
			]);
			case 'ihaveSentTheSMS': return 'Έχω στείλει ένα μήνυμα κειμένου';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Η συμβολοσειρά επικύρωσης είναι έγκυρη για 6 λεπτά, εναπομένον χρόνος: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Πολύ γρήγορα για να περιμένετε ${x} δευτερόλεπτα για να συνεχίσετε!';
			case 'waitingForVerificationSMS': return 'Αναμονή για SMS επαλήθευσης...';
			case 'partSuccsForVerificationSMS': return 'Ένα από τα τερματικά πρόσβασης έχει περάσει την επαλήθευση SMS!';
			case 'creatingAccessToken': return 'Δημιουργείται token πρόσβασης...';
			case 'intoDelta': return 'Μέσα στη Delta';
			case 'deltaAccountIsLoggedIn': return 'Ο λογαριασμός σας Delta είναι συνδεδεμένος';
			case 'iHavLoggedOut': return 'Εγώ φεύγω.';
			case 'startTwoFactorVerification': return 'Έναρξη διπλής επαλήθευσης';
			case 'securityCircleVerification': return 'Κύκλος επικύρωσης της ασφάλειας';
			case 'generateSecurityCode': return 'Δημιουργία κωδικού ασφαλείας';
			case 'generateSecurityCodeHintText': return 'Ο παραγόμενος κωδικός ασφαλείας θα σταλεί σε ένα τυχαία επιλεγμένο μέλος του κύκλου ασφαλείας σας.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Δεν έχετε ορίσει κύκλο ασφαλείας, ο λογαριασμός σας είναι πολύ ανασφαλής, παρακαλώ εισάγετε οποιοδήποτε 6ψήφιο σύμβολο και προχωρήστε στο επόμενο βήμα.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Ο κωδικός ασφαλείας έχει δημιουργηθεί, παρακαλούμε επικοινωνήστε με τους ακόλουθους συγγενείς και φίλους για να ζητήσετε να εξαγάγετε τον κωδικό ασφαλείας για να περάσετε την επαλήθευση.Ισχύει για 30 λεπτά!';
			case 'itGetSecurityCodeTip': return 'Συμβουλή: Μπορείτε να λάβετε τον κωδικό ασφαλείας κάνοντας διπλό κλικ στο ψευδώνυμο του λογαριασμού σας στη σελίδα Delta App -> Μενού -> Παροχή ασφάλειας.';
			case 'securityCircleMemberList': return 'Λίστα μελών του κύκλου ασφαλείας:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Επιλέξτε έναν συγγενή ή φίλο στη λίστα μελών για να δημιουργήσετε και να σας παράσχετε έναν κωδικό ασφαλείας για να επαληθεύσετε την πραγματική σας ταυτότητα. Ο σκοπός είναι να αποτρέψετε τον έλεγχο του λογαριασμού από άλλους όταν ο αριθμός του κινητού τηλεφώνου χαθεί ή κλαπεί.';
			case 'formatIsXdigits': return ({required Object num}) => 'Μορφή ως ψηφία ${num}';
			case 'signInSuccessfully': return 'Συνδεθείτε με επιτυχία!';
			case 'twoFAandLogin': return 'Διπλή αυθεντικοποίηση και σύνδεση';
			case 'verificationSuccessful': return 'Επαληθεύστε την επιτυχία!';
			case 'validationFailed': return 'Η επικύρωση απέτυχε!';
			case 'dappInfo': return 'Πληροφορίες DApp';
			case 'securityCircle': return 'δαχτυλίδι ασφαλείας';
			case 'securityCode': return 'κωδικός ασφαλείας';
			case 'provideSecurity': return 'παροχή ασφάλειας';
			case 'addManully': return 'Προσθέστε χειροκίνητα';
			case 'addFromContacts': return 'Προσθήκη από το βιβλίο διευθύνσεων';
			case 'addSecurityCircle': return 'Προσθέστε τον Κύκλο Ασφάλειας';
			case 'inputType': return 'Τύπος εισόδου';
			case 'mobileNumber': return 'αριθμός κινητού τηλεφώνου';
			case 'did': return 'ID διεύθυνσης';
			case 'pleaseEnterValidDID': return 'Παρακαλούμε εισάγετε ένα έγκυρο αναγνωριστικό αποκεντρωμένης ταυτότητας';
			case 'pleaseEnterValidWalletAddress': return 'Παρακαλώ εισάγετε μια έγκυρη διεύθυνση πορτοφολιού';
			case 'appellation': return 'μορφή διεύθυνσης';
			case 'appellationHint': return 'Πώς το λέτε, όπως "μωρό";';
			case 'addSecurityCircleTips': return 'Μην προσθέτετε άτομα που δεν εμπιστεύεστε στον κύκλο ασφαλείας σας.';
			case 'referralTeam': return 'Συνιστώμενες ομάδες';
			case 'profile': return 'Πληροφορίες λογαριασμού';
			case 'menu': return 'μενού';
			case 'directly': return 'άμεση';
			case 'indirectly': return 'έμμεση';
			case 'inviteContacts': return 'Πρόσκληση Επικοινωνία';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Ο προσκεκλημένος σας είναι '),
				nickname,
				const TextSpan(text: ' και έχετε παραπέμψει άμεσα '),
				num1,
				const TextSpan(text: ' άτομα, εκ των οποίων '),
				num2,
				const TextSpan(text: ' είναι σήμερα online.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Έχετε παραπέμψει έμμεσα '),
				num1,
				const TextSpan(text: ' άτομα, εκ των οποίων '),
				num2,
				const TextSpan(text: ' είναι σήμερα online.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Προσκαλέστε τους φίλους σας να συμμετάσχουν στη Delta και να βελτιώσετε μαζί την κοινωνική συναίνεση. Για κάθε άμεση παραπομπή το ποσοστό εξόρυξης ενός ατόμου αυξάνει το βασικό ποσοστό κατά '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Προσκαλέστε τους φίλους σας να γίνουν μέλη της Delta για να αυξήσετε την κοινωνική συναίνεση και για κάθε έμμεση παραπομπή, το ποσοστό εξόρυξης αυξάνεται κατά '),
				rate2,
				const TextSpan(text: ' του βασικού ποσοστού.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Είστε σίγουροι ότι θέλετε να διαγράψετε το "${name}";';
			case 'safetyCircleRoleQ': return 'Ποιος είναι ο σκοπός του δακτυλίου ασφαλείας;';
			case 'safetyCircleRoleA': return 'Προστατέψτε το λογαριασμό σας παρέχοντας δευτερεύοντα έλεγχο ταυτότητας σε ευαίσθητες καταστάσεις.';
			case 'howSecurityCirclesWorkQ': return 'Πώς λειτουργούν οι δακτύλιοι ασφαλείας;';
			case 'howSecurityCirclesWorkA': return 'Σε περίπτωση που απαιτείται επαλήθευση του Circle of Safety, το πρόγραμμα Delta Smart Contracts θα επιλέξει τυχαία ένα μέλος της λίστας Circle of Safety buddy που θα σας βοηθήσει να λάβετε έναν κωδικό ασφαλείας για να ολοκληρωθεί η επαλήθευση της ταυτότητας για εσάς. Όταν ζητήσετε από το μέλος τον κωδικό ασφαλείας, μπορεί να επιβεβαιώσει αν είστε εσείς ή όχι. Ταυτόχρονα, το πρόγραμμα θα σας προτρέπει: "Αρνηθείτε να παράσχετε τον κωδικό ασφαλείας αν δεν είστε εσείς", ώστε να προστατεύεται η ασφάλεια του λογαριασμού σας. Επομένως, θα πρέπει πάντα να βεβαιώνεστε ότι τα μέλη του κύκλου ασφαλείας σας είναι άτομα που μπορείτε να εμπιστευτείτε.';
			case 'securityCircleBeUsedQ': return 'Πότε θα χρησιμοποιηθεί;';
			case 'securityCircleBeUsedA1': return '1. Όταν χάνετε τον έλεγχο του Delta APP, συνήθως πρόκειται για απώλεια ή κλοπή του κινητού σας τηλεφώνου.';
			case 'securityCircleBeUsedA2': return '2. Σε περίπτωση ορισμένων ευαίσθητων λειτουργιών, το πρόγραμμα Delta Smart Contract πρέπει να επιβεβαιώσει ότι είστε εσείς.';
			case 'provideSafetyTip1': return 'Όταν το φιλαράκι σας σας ζητήσει τον κωδικό ασφαλείας του, βεβαιωθείτε ότι είναι ο δικός του.';
			case 'provideSafetyTip2': return 'Παρέχετε ασφάλεια στους παραπάνω φίλους, οι οποίοι σας έχουν ορίσει ως το πιο έμπιστο πρόσωπο στον κύκλο ασφαλείας τους και σας χρειάζονται για να τους παρέχετε επιβεβαίωση ασφαλείας σε περίπτωση που συναντήσει ευαίσθητες λειτουργίες στο λογαριασμό τους.';
			case 'provideSafetyTip3': return 'Κάντε διπλό κλικ στο άβαταρ του άλλου ατόμου για να εξαγάγετε τον κωδικό ασφαλείας όταν χρειάζεται.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'Το άλλο μέρος δεν διαθέτει επί του παρόντος έναν κωδικό ασφαλείας που πρέπει να εξαχθεί!';
			case 'existSecurityCodeTip': return 'Βεβαιωθείτε ότι ο φίλος ή το μέλος της οικογένειας που σας ζητάει τον κωδικό ασφαλείας είναι ο ίδιος με τον φίλο ή το μέλος της οικογένειας. Για την προστασία του φίλου ή του μέλους της οικογένειας, θα πρέπει να αρνηθείτε να δώσετε τον κωδικό ασφαλείας εάν δεν τον έχει δώσει ο ίδιος ο φίλος ή το μέλος της οικογένειας.';
			case 'avatarSettings': return 'Ρυθμίσεις Avatar';
			case 'NFTAvatarPropertyRightsText': return 'Αποποίηση ευθυνών: Η χρήση του εν λόγω NFT ως avatar γίνεται μόνο για προσωπική προτίμηση και δεν έχει καμία σχέση με την κατοχή των δικαιωμάτων πνευματικής ιδιοκτησίας του εν λόγω NFT.';
			case 'projectWebsite': return 'Ιστοσελίδα του έργου:';
			case 'whitepaper': return 'λευκό χαρτί:';
			case 'indexID': return 'Ευρετήριο Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Δείκτης μεταξύ ${start} και ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Εισάγετε το index id του αγαπημένου σας NFT και το πρόγραμμα θα το φορτώσει αυτόματα ως avatar για εσάς.';
			case 'miningRate': return 'ποσοστό εξόρυξης';
			case 'miningDetails': return 'Λεπτομέρειες εξόρυξης';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Συνολική τιμή εξόρυξης: '),
				rate,
				const TextSpan(text: ' δ/ημέρα'),
			]);
			case 'EndOfMiningSession': return 'Η εξόρυξη κύκλων τελείωσε:';
			case 'tapToMineDeltaCoin': return 'Κάντε κλικ για να εξορύξετε νομίσματα Delta ↑';
			case 'clickToStartMining': return 'Κάντε κλικ για να ξεκινήσετε την εξόρυξη!';
			case 'miningHasStoppedPromptDesc': return 'Η εξόρυξη έχει σταματήσει, κάθε 24 ώρες είναι ένας κύκλος εξόρυξης, κάντε κλικ στο εικονίδιο του κεραυνού για να ξεκινήσετε έναν νέο γύρο εξόρυξης.Η εξόρυξη της Delta είναι ένας μηχανισμός κατανομής που δεν καταναλώνει πρόσθετη αριθμητική ισχύ και κίνηση δικτύου από τη συσκευή σας.';
			case 'aboutBaseRate': return 'Σχετικά με το βασικό επιτόκιο;';
			case 'baseRateDescription': return 'Όπως συμφωνήθηκε στο ενημερωτικό δελτίο, ο κανόνας μείωσης του βασικού συντελεστή για την εξόρυξη Delta θα χωριστεί σε δύο φάσεις.\nΦάση 1: Το ποσοστό θα είναι 32δ/ημέρα όταν ο αριθμός των συμμετεχόντων (εγγραφές) είναι 3.000 ή λιγότεροι. Χρησιμοποιώντας αυτό ως αρχική βάση, το βασικό ποσοστό μειώνεται στο μισό κάθε φορά που ο αριθμός των ατόμων αυξάνεται κατά 10 φορές.\nΦάση 2: Όταν ο αριθμός των συμμετεχόντων φτάσει τα 30 εκατομμύρια ή περισσότερο, το βασικό ποσοστό μειώνεται στο μισό κάθε φορά που ο αριθμός των συμμετεχόντων αυξάνεται κατά ένα παράγοντα 3. Μέχρι να σταματήσει η παραγωγή της τελικής εκσκαφής.';
			case 'baseRate': return 'βασικός ρυθμός (όπως στο ISDN)';
			case 'directReferralRewards': return 'Μπόνους άμεσης παραπομπής';
			case 'directReferralRewardDesc': return 'Για κάθε άμεση παραπομπή, το ποσοστό εξόρυξης θα αυξάνεται κατά επιπλέον 1/3 του βασικού ποσοστού όταν βρίσκονται σε λειτουργία εξόρυξης.\n\n Επιπλέον, η κατάσταση εξόρυξης των παραπομπών σας θα προσμετράται επίσης στο μπόνους άμεσης παραπομπής.';
			case 'indirectReferralRewards': return 'Μπόνους έμμεσης παραπομπής';
			case 'indirectReferralRewardDesc': return 'Όταν μια έμμεση παραπομπή κάνει εξόρυξη, ο ρυθμός εξόρυξης αυξάνεται κατά 1/10 του βασικού ρυθμού.\n\n Η ομάδα άμεσης παραπομπής σας, κάθε άτομο που παραπέμπει εκ νέου αποτελεί μια έμμεση παραπομπή για εσάς.';
			case 'mine': return 'εξάγετε (μετάλλευμα ή άλλο πόρο από ορυχείο)';
			case 'thisMiningInformation': return 'Τρέχουσες πληροφορίες εξόρυξης';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Συμμετείχα στην εξόρυξη: '),
				x,
				const TextSpan(text: ' φορές'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Συνολικό κέρδος αυτή τη φορά: '),
				x,
				const TextSpan(text: ' Δέλτα νομίσματα'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Βασικά κέρδη: '),
				x,
				const TextSpan(text: ' νομίσματα'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Άμεση συνεισφορά της ομάδας: '),
				x,
				const TextSpan(text: ' νομίσματα'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Έμμεση συνεισφορά της ομάδας: '),
				x,
				const TextSpan(text: ' νομίσματα'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Χρονικό διάστημα μεταξύ των ανασκαφών: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Αποτελεσματικές ώρες εξόρυξης: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} ώρες';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Για την ασφάλεια των περιουσιακών στοιχείων, τα μέλη του κύκλου ασφαλείας θα πρέπει να διατηρούν ανά πάσα στιγμή 3-5 έμπιστα άτομα.';
			case 'index': return 'ευρετηρίαση';
			case 'amount': return 'χρηματικό ποσό';
			case 'balance': return 'υπόλοιπα';
			case 'timeStamp': return 'timestamp';
			case 'summary': return 'περιλήψεις';
			case 'miningHasStopped': return 'Η εξόρυξη έχει σταματήσει.';
			case 'miningHasStoppedDesc': return 'Η εξόρυξή σας έχει σταματήσει και θα αρχίσετε να κερδίζετε αμέσως.';
			case 'startMining': return 'Ξεκινήστε την εξόρυξη';
			case 'changeMobileNumber': return 'Αλλαγή αριθμού κινητού τηλεφώνου';
			case 'currentMobileNumber': return 'Τρέχων αριθμός κινητού τηλεφώνου';
			case 'newMobileNumber': return 'Νέος αριθμός κινητού τηλεφώνου';
			case 'securityCodeFormatIs6digits': return 'Η μορφή του κωδικού ασφαλείας είναι 6 ψηφία!';
			case 'startVrification': return 'Έναρξη επαλήθευσης';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Αυτός ο αριθμός κινητού υπάρχει ήδη, σχετικό DID: ${dId}';
			case 'noDataYet': return 'Δεν υπάρχουν διαθέσιμα στοιχεία';
			case 'previousMobileNumber': return 'Προηγούμενος αριθμός κινητού τηλεφώνου';
			case 'changeLog': return 'Καταγραφή των αλλαγών';
			case 'referralLinkToShare': return 'Συνιστώμενοι σύνδεσμοι για να μοιραστείτε';
			case 'referrer': return 'παραπομπή';
			case 'isoCountryCode': return 'Κωδικός χώρας ISO';
			case 'avatarLogo': return 'λογότυπο κεφαλίδας';
			case 'creationTime': return 'Χρόνος δημιουργίας';
			case 'lastUpdate': return 'Τελευταία ενημέρωση';
			case 'numberOfSecurityCircleMembers': return 'Αριθμός μελών των κύκλων ασφαλείας';
			case 'theLatestMining': return 'Τελευταία ανασκαφή';
			case 'effectiveMiningDays': return 'Αριθμός ημερών πραγματικής εξόρυξης';
			case 'modifyNickname': return 'Αλλαγή ψευδώνυμου';
			case 'didNotChange': return 'Καμία αλλαγή!';
			case 'kycVerification': return 'Επαλήθευση KYC';
			case 'faceID': return 'Αναγνώριση προσώπου';
			case 'touchID': return 'Αναγνώριση δακτυλικών αποτυπωμάτων';
			case 'biometricsAuthorizationTest': return 'Δοκιμές βιομετρικής πιστοποίησης ταυτότητας';
			case 'currentState': return 'τρέχουσα κατάσταση';
			case 'biometricsAuthenticationLocalizedReason': return 'Χρησιμοποιήστε το ξεκλείδωμα της συσκευής σας για να επαληθεύσετε την ταυτότητά σας.';
			case 'graph': return 'αρχείο γραφικών (π.χ. χάρτες, έγγραφα ή βοτανικά στοιχεία)';
			case 'referralRelationshipGraph': return 'Χαρτογράφηση σχέσεων παραπομπής';
			case 'nativeContacts': return 'Τοπικές επαφές';
			case 'registrationAndMiningTrends': return 'Τάσεις εγγραφής και εξόρυξης';
			case 'inMining': return 'εξόρυξη';
			case 'registrationVolume': return 'όγκος εγγραφής';
			case 'unmined': return 'ανεκμετάλλευτο';
			case 'mined': return 'εξορύσσεται';
			case 'communityMining': return 'Κοινοτικά ορυχεία';
			case 'consensusPromotionFund': return 'Ταμείο Προώθησης της συναίνεσης';
			case 'ecologicalAwardFund': return 'Ταμείο οικολογικών κινήτρων';
			case 'icpFuelCrowdfunding': return 'ICP Fuel Crowdfunding';
			case 'coreDeveloperRewards': return 'Βασικές ανταμοιβές προγραμματιστών';
			case 'totalAllocation': return 'Συνολική κατανομή';
			case 'miningRatio': return 'Αναλογία εξόρυξης';
			case 'billion.30': return '30 δισεκατομμύρια';
			case 'billion.60': return '60 δισεκατομμύρια';
			case 'billion.180': return '180 δισεκατομμύρια.';
			case 'billion.300': return '300 δισεκατομμύρια';
			case 'watchAdsToSupportDevelopers': return 'Παρακολουθήστε διαφημίσεις για να υποστηρίξετε τους προγραμματιστές';
			case 'loadingAdcomponents': return 'Φόρτωση διαφημιστικών στοιχείων...';
			case 'timeIsNotUp': return 'Ο χρόνος δεν τελείωσε!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Απέτυχε να φορτώσει, πιθανόν μπλοκαρισμένο δίκτυο!';
			case 'pendingUSCTrecords': return 'Εκκρεμείς εγγραφές USCT';
			case 'pendingUSCTrecordsDesc': return 'Οι εκκρεμείς εγγραφές USCT θα επιβεβαιώνονται από τη διαφημιστική πλατφόρμα εντός 15-30 ημερών και οι έγκυρες εγγραφές θα μεταφέρονται στον κατάλογο εγγραφών USCT και το αντίστοιχο ποσό USCT θα προστίθεται στο υπόλοιπο του λογαριασμού.';
			case 'validity': return 'εγκυρότητα';
			case 'advertiser': return 'διαφημιστές';
			case 'earned': return 'κερδισμένο';
			case 'withdraw': return 'αποσύρω';
			case 'validUSCTrecords': return 'Αποτελεσματικά αρχεία USCT';
			case 'USCTmining': return 'Μεταλλεία USCT';
			case 'aboutUSCTmining': return 'Σχετικά με τα ορυχεία της USCT;';
			case 'aboutUSCTminingItme1': return '1. Το USDT είναι ένα παγκοσμίως δημοφιλές stablecoin σε δολάρια ΗΠΑ, το οποίο μπορεί εύκολα να ανταλλαχθεί με εθνικά κρατικά νομίσματα στα μεγαλύτερα ανταλλακτήρια κρυπτονομισμάτων σε όλο τον κόσμο.';
			case 'aboutUSCTminingItme2': return '2. Το USCT είναι ένα προσωρινό μέτρο των εσόδων της εξόρυξης USCT, γνωστό ως πίστωση USD, η οποία τελικά θα μετατραπεί σε USDT σύμφωνα με το πραγματικό ποσό διακανονισμού και τους κανόνες διανομής της διαφημιστικής πλατφόρμας και την αντίστοιχη αναλογία.';
			case 'aboutUSCTminingItme3': return '3. Το USCT Mining είναι μια λειτουργία υλοποίησης διαφημίσεων κυκλοφορίας της κοινότητας Delta. Εκμεταλλεύεται τη μεγάλη βάση χρηστών της κοινότητας Delta για να παρέχει πολλαπλά οφέλη για τους διαφημιστές, τους προγραμματιστές της Delta και τους απόντες. Έχει σχεδιαστεί για να παρέχει ένα ορισμένο ποσό αποτελεσματικού εισοδήματος για τους απόντες εργαζόμενους στο αρχικό στάδιο, όταν το οικοσύστημα της Delta δεν έχει ακόμη διαμορφωθεί και ευημερήσει- ταυτόχρονα, παρέχει επίσης ορισμένη οικονομική υποστήριξη για τους προγραμματιστές, ώστε να διασφαλιστεί ότι μπορούν να συνεχίσουν να παρέχουν υπηρεσίες ανάπτυξης για μεγάλο χρονικό διάστημα και τελικά να είναι σε θέση να υλοποιήσουν όλα τα σχέδια που περιέχονται στο whitepaper- και παρέχει επίσης ένα αποτελεσματικό κανάλι προώθησης για τους διαφημιστές των προϊόντων.';
			case 'aboutUSCTminingItme4': return '4. Οι κανόνες διανομής έχουν σχεδιαστεί έτσι ώστε το 40 % των συνολικών εσόδων να χρησιμοποιείται ως προμήθειες τεχνικών υπηρεσιών των προγραμματιστών και το υπόλοιπο 60 % να χρησιμοποιείται ως ανταμοιβή για τις κοινοτικές απουσίες. Το μέρος ανταμοιβής απουσίας του μοντέλου διανομής πολλαπλών επιπέδων παρόμοιο με το DTC, η ανταμοιβή απουσίας θα διαιρεθεί σε τρία μέρη σύμφωνα με την αναλογία 6:3:1, κάθε φορά που ένα από τα ανταμοιβή απουσίας της εξόρυξης USCT 6 μέρη που κατανέμονται στην απουσία των τρεχουσών διαφημίσεων, 3 μέρη που κατανέμονται στον ανώτερο παραπέμποντα, 1 μέρος που κατανέμεται στον παραπέμποντα του δεύτερου επιπέδου. Ομοίως, μπορείτε επίσης να λάβετε την ίδια ανταμοιβή παραπομπής για τους φίλους που παραπέμπετε μέσω της εξόρυξης USCT. Το πλεονέκτημα αυτής της πολυεπίπεδης διανομής είναι ότι ο καθένας μπορεί να κερδίσει ένα σχετικά μεγάλο ποσό USDT αναπτύσσοντας μια ομάδα downline.';
			case 'aboutUSCTminingItme5': return '5. Η περίοδος διακανονισμού είναι 7 ημέρες, δηλαδή κάθε 7 ημέρες ελέγχεται η εγκυρότητα με τη διαφημιστική πλατφόρμα και η επιβεβαιωμένη εγκυρότητα των εσόδων και το πραγματικό ποσό θα καταγράφονται στο υπόλοιπο. Το ελάχιστο ποσό για κάθε ανάληψη είναι 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Γραμμές ${x} έως ${y}.';
			case 'wallet': return 'πορτοφόλια';
			case 'multiChainWallet': return 'πορτοφόλι πολλαπλών αλυσίδων';
			case 'deposit': return 'κατάθεση (π.χ. σε τραπεζικό λογαριασμό)';
			case 'transfer': return 'μεταφορά (χρήματα σε τραπεζικό λογαριασμό)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} στη διεύθυνση πορτοφολιού';
			case 'transactions': return 'Αρχεία συναλλαγών';
			case 'network': return 'δικτυωτό δίκτυο';
			case 'walletAddress': return 'Διεύθυνση πορτοφολιού';
			case 'currentAddress': return 'τρέχουσα διεύθυνση';
			case 'depositAddress': return 'Διεύθυνση επαναφόρτισης';
			case 'receivingMoneyAddress': return 'διεύθυνση δικαιούχου';
			case 'applyTempDepositAddress': return 'Διεύθυνση για την αίτηση προσωρινής αναπλήρωσης';
			case 'tempDepositAddressTip': return '1. Πρόκειται για μια κοινή διεύθυνση κατάθεσης. Παρακαλείστε να μην καταθέσετε το ποσό μετά τη λήξη της μίσθωσης ή μετά την αποδέσμευσή σας. Εάν συμβεί αυτό, το ποσό θα χαθεί.';
			case 'tempDepositAddressTip2': return '2. Πριν κάνετε μια κατάθεση, βεβαιωθείτε ότι το [Όνομα αλυσίδας] και το [Όνομα νομίσματος] ταιριάζουν ακριβώς- στην περίπτωση των συμβολαίων, πρέπει επίσης να βεβαιωθείτε ότι το [Πρότυπο συμβολαίου] και η [Διεύθυνση συμβολαίου] ταιριάζουν ακριβώς.';
			case 'tempDepositAddressTip3': return '3. Μην επιχειρήσετε να καταθέσετε χρήματα που δεν ταιριάζουν με καμία από τις παραμέτρους στις παραπάνω συμβουλές, διαφορετικά το ποσό θα χαθεί.';
			case 'tempDepositAddressTip4': return '4. Εάν πρέπει να καταθέσετε άλλα είδη περιουσιακών στοιχείων, μεταβείτε στη σελίδα με το αντίστοιχο νόμισμα και τις επιλογές παραμέτρων για να υποβάλετε αίτηση για νέα διεύθυνση.';
			case 'applyExtensionOfValidity': return 'Αίτηση για παράταση της περιόδου ισχύος';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Αυτή η διεύθυνση θα λήξει μετά από '),
				diff,
				const TextSpan(text: ' και θα είναι '),
				tap('manually extend'),
				const TextSpan(text: ' έγκυρη για 12 ώρες πριν τη λήξη.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Μπορεί να ανανεωθεί μόνο 12 ώρες νωρίτερα';
			case 'theReceivingAddressValidForLongtime': return 'Αυτή η διεύθυνση ισχύει για μεγάλο χρονικό διάστημα.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Αυτή η διεύθυνση συλλογής ισχύει για μεγάλο χρονικό διάστημα και πιστώνεται αυτόματα σε πραγματικό χρόνο.';
			case 'confirmDeposited': return 'Επιβεβαίωση της κατάθεσης';
			case 'unbindThisDepositAddress': return 'Αποδεσμεύστε αυτή τη διεύθυνση ανανέωσης';
			case 'confirmDepositedTip': return 'Εάν έχουν μεταφερθεί χρήματα, κάντε κλικ στο παραπάνω κουμπί για να ενεργοποιήσετε την τιμολόγηση στο πορτοφόλι σας μετά από 10 λεπτά.';
			case 'unbindDepositAddressTip': return 'Προκειμένου να μειωθεί η επιβάρυνση λειτουργίας του έξυπνου συμβολαίου, παρακαλείστε να αποδεσμεύσετε τη διεύθυνση ανανέωσης, εάν δεν θα καταθέσετε άλλα χρήματα κατά τη διάρκεια της περιόδου ισχύος.';
			case 'transferToAddress': return 'πηγαίνετε στη διεύθυνση';
			case 'longPressToPaste': return 'Παρατεταμένο πάτημα για επικόλληση';
			case 'all': return 'πλήρες';
			case 'balanceX': return ({required Object x}) => 'Υπόλοιπο ${x}';
			case 'transferOut': return 'αποδειχθεί';
			case 'depositXcoins': return ({required Object x}) => 'Πιστώθηκε ${x}';
			case 'sender': return 'αποστολέας';
			case 'recipient': return 'παραλήπτης';
			case 'memo': return 'σημείωση';
			case 'kind': return 'τρόπος (ζωής)';
			case 'transferAmountExceedsAvailableBalance': return 'Μεταφορές πέραν του διαθέσιμου υπολοίπου';
			case 'pleaseEnterValidAmount': return 'Παρακαλώ εισάγετε ένα έγκυρο ποσό';
			case 'networkFee': return 'Τέλος χειρισμού δικτύου';
			case 'fee': return 'τέλος διεκπεραίωσης';
			case 'validLengthXcharacters': return ({required Object x}) => 'Ισχύον μήκος διεύθυνσης ${x} χαρακτήρες';
			case 'historys': return 'ιστορικό αρχείο';
			case 'dtcCreditdetail': return 'Λεπτομέρειες πόντων Delta';
			case 'usdCreditdetail': return 'Λεπτομέρειες πόντων USD';
			case 'dappSquare': return 'dApp Plaza';
			case 'amountRaised': return 'Συγκεντρωθέν ποσό';
			case 'disbursedAmount': return 'Εκδοθέν ποσό';
			case 'participationTimes': return 'Αριθμός συμμετεχόντων';
			case 'completionRate': return 'ποσοστό ολοκλήρωσης';
			case 'exchangeRate': return 'Συναλλαγματική Ισοτιμία';
			case 'icpCrowdfunding': return 'ICP Crowdfunding';
			case 'crowdfunding': return 'crowdfunding';
			case 'trendsCurve': return 'καμπύλη τάσης';
			case 'fullScreenView': return 'προβολή σε πλήρη οθόνη';
			case 'walletBalance': return 'Υπόλοιπο πορτοφολιού:';
			case 'manageWallet': return 'Διαχείριση πορτοφολιού';
			case 'fundraiseAmount': return 'συγκέντρωση χρημάτων';
			case 'exchangeRewardAmount': return 'Εξαργύρωση του ποσού ανταμοιβής';
			case 'fundraise': return 'Ερανος';
			case 'rangeIntegersX': return ({required Object x}) => 'Εύρος: ακέραιος ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Συμμετέχετε επιτυχώς στη συγκέντρωση χρημάτων και ανταμείβεστε με ${amount}DTCT';
			case 'amountSummary': return 'Περίληψη των ποσών';
			case 'changePreferred': return 'Αλλαγή προτίμησης';
			case 'changePreferredAddress': return 'Αλλαγή προτιμώμενης διεύθυνσης';
			case 'preferredAddressTip': return 'Τα χρήματα θα μεταφερθούν αυτόματα στην προτιμώμενη διεύθυνση όταν τα χρήματα συλλέγονται με τη χρήση ενός καταχωρημένου αριθμού κινητού τηλεφώνου ή DID.';
			case 'newAddress': return 'Νέα διεύθυνση';
			case 'newAddressTip': return 'Για να αποφευχθεί η κατάχρηση, όταν υπάρχουν περισσότερες από μία διευθύνσεις πορτοφολιού, επιβάλλεται τέλος συναλλαγής για κάθε νέα διεύθυνση που δημιουργείται.';
			case 'createNew': return 'νεόδμητο';
			case 'chainNetworkName': return 'όνομα δικτύου αλυσίδας';
			case 'from': return 'προέρχονται από (έναν τόπο)';
			case 'to': return 'μέχρι (μια στιγμή)';
			case 'noAvailableDepositAmountDetected': return 'Δεν εντοπίστηκε διαθέσιμο ποσό κατάθεσης!';
			case 'crossChainReceiveMoneyMonitoring': return 'Η συλλογή διασταυρούμενων αλυσίδων ακούει ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Ελήφθη ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Επιβεβαίωση σε εξέλιξη ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Σημειώσεις (πρέπει να διαβάσετε για αρχάριους)';
			case 'whyUseSharedAddresses': return 'Γιατί να χρησιμοποιήσετε μια κοινή διεύθυνση;';
			case 'useSharedrAdvantage': return 'Τα πλεονεκτήματα της χρήσης κοινών διευθύνσεων κατά την κατάθεση μεταξύ αλυσίδων είναι τα εξής:';
			case 'useSharedrAdvantage1': return '1. Μείωση της σπατάλης των τελών μεταφοράς και μείωση του κόστους χρήσης για τους χρήστες. Λόγω της χρήσης της αποκλειστικής διεύθυνσης, θα οδηγήσει σε υπερβολική διασπορά των κεφαλαίων, γενικά, προκειμένου να διευκολυνθεί η επακόλουθη μεταφορά άλλων χρηστών κατά την ανάληψη κεφαλαίων, όταν ο χρήστης επαναφορτίζει τη δεύτερη μεταφορά κεφαλαίων πρέπει να συγκεντρωθεί σε μία ή σε μικρό αριθμό διαχείρισης διευθύνσεων.';
			case 'useSharedrAdvantage2': return '2. Στο κοινόχρηστο σχήμα, το πρόγραμμα χρειάζεται μόνο να διατηρεί μια σχετικά μικρή δεξαμενή διευθύνσεων που μπορεί να αντιστοιχιστεί γρήγορα με εξερχόμενες μεταφορές και ελαφριά ακρόαση συλλογής, γεγονός που μειώνει την επιβάρυνση των υπολογιστικών πόρων. Αντίθετα, το αντίθετο θα συνέβαινε αν χρησιμοποιούνταν αποκλειστικές διευθύνσεις.';
			case 'tokenType': return 'Τύπος Token';
			case 'contract': return 'εργολάβος';
			case 'contractStandard': return 'πρότυπο σύμβασης';
			case 'contractAddress': return 'διεύθυνση σύμβασης';
			case 'native': return 'πρωτόζωα';
			case 'confirmUnbindingPleaseEnterYes': return 'Για να επιβεβαιώσετε την αποδέσμευση, πληκτρολογήστε "ναι".';
			case 'listAllWorkingTempReceivingAddresses': return 'Κατάλογος όλων των διευθύνσεων επαναφόρτισης cross-chain που λειτουργούν';
			case 'setNote': return 'Ρύθμιση σημειώσεων';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Δεν μπορεί να είναι μεγαλύτερο από ${x} bytes';
			case 'transferFee': return 'αμοιβή μεταφοράς';
			case 'crossChainFee': return 'αμοιβή διασταυρούμενης αλυσίδας';
			case 'crossChainTransferOutError': return 'σφάλμα μεταφοράς διασταυρούμενων δεσμών';
			case 'chainName': return 'όνομα αλυσίδας';
			case 'message': return 'μηνύματα';
			case 'dontShowAgain': return 'δεν εμφανίζεται πλέον';
			case 'queuing': return 'ουρά';
			case 'optional': return 'προαιρετικό';
			case 'publiclyVisible': return 'δημόσια ορατά';
			case 'rates': return 'τιμολόγιο';
			case 'minimum': return 'ελάχιστο';
			case 'maximum': return 'ανώτατο όριο';
			case 'minimumBlockConfirmations': return 'Ελάχιστος αριθμός επιβεβαιώσεων μπλοκ';
			case 'dsmsVerifyTerminal': return 'Τερματικό επικύρωσης DSMS';
			case 'overall': return 'ομπρέλα';
			case 'my': return 'το  μου';
			case 'checkValidatorQualifications': return 'Έλεγχος προσόντων προνομίων αυθεντικοποιητή';
			case 'getVerifierPermissions': return 'Λήψη προνομίων αυθεντικοποιητή';
			case 'qualification': return 'φυσικά προσόντα';
			case 'upperLimit': return 'όριο';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Μέγιστος αριθμός επιτρεπόμενων τερματικών πρόσβασης';
			case 'numberOfExistingAccessTerminals': return 'Αριθμός τερματικών πρόσβασης σε λειτουργία';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Πριν κάνετε αίτηση για προνόμια αυθεντικοποιητή, πρέπει να προετοιμάσετε ένα κινητό τηλέφωνο Android σε αδράνεια και έναν ειδικό αριθμό πρόσβασης και να κατεβάσετε και να εγκαταστήσετε την εφαρμογή DSMS Access Terminal.';
			case 'downloadLink': return 'σύνδεσμος λήψης';
			case 'alreadyReadyFollowingTheAboveTips': return 'Είναι έτοιμο σύμφωνα με τις παραπάνω συμβουλές';
			case 'globalUniversal': return 'για παγκόσμια χρήση';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Προς το παρόν δεν υπάρχουν αρκετοί τοπικοί επαληθευτές για να συμμετάσχουν στην υπηρεσία πρόσβασης για τον έλεγχο ταυτότητας DSMS, παρακαλούμε επιλέξτε την υπηρεσία πρόσβασης "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'ως αριθμός μόνο για πρόσβαση';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Παρακαλώ σημειώστε το πλαίσιο "${tip}".';
			case 'inputLengthTooShort': return 'Πολύ μικρό μήκος εισόδου';
			case 'shortName': return 'ακρωνύμια';
			case 'pleaseEnterXname': return ({required Object name}) => 'Παρακαλώ εισάγετε ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Η αίτηση υποβάλλεται, παρακαλώ περιμένετε...';
			case 'applyForDSMSVerifierPermission': return 'Υποβάλετε αίτηση για προνόμια επικυρωτή DSMS';
			case 'confirmInformation': return 'Επιβεβαίωση πληροφοριών';
			case 'lastHeartbeat': return 'τελικός χτύπος της καρδιάς';
			case 'expirationTime': return 'οφειλόμενος χρόνος';
			case 'country': return 'έθνη';
			case 'accessTerminals': return 'τερματικό πρόσβασης';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Συνολικός αριθμός τερματικών αριθμού πρόσβασης DSMS';
			case 'textContent': return 'Περιεχόμενο κειμένου';
			case 'scanQRcodeToLogin': return 'Σύρετε για να συνδεθείτε';
			case 'confirmLogin': return 'Επιβεβαίωση σύνδεσης';
			case 'authorizeSubApplicationToLogin': return 'Εξουσιοδότηση αυτής της υποεφαρμογής για σύνδεση';
			case 'authorizationSuccessful': return 'Η εξουσιοδότηση ήταν επιτυχής!';
			case 'launchSMSprogram': return 'Έναρξη του προγράμματος SMS';
			case 'notApplied': return 'Καμία εφαρμογή';
			case 'validityPeriod': return 'περίοδος ισχύος';
			case 'renewal': return 'αίτηση ανανέωσης';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Σαρώστε τον κωδικό για να εξουσιοδοτήσετε την είσοδο στο τερματικό';
			case 'rewards': return 'κίνητρα';
			case 'roles': return 'χαρακτήρας';
			case 'developerCenter': return 'Κέντρο προγραμματιστών';
			case 'appName': return 'Όνομα εφαρμογής';
			case 'pleaseSelect': return 'παρακαλώ επιλέξτε';
			case 'category': return 'κατηγορία';
			case 'keywords': return 'byword';
			case 'pleaseEnterAkeyword': return 'Παρακαλώ εισάγετε μια λέξη-κλειδί';
			case 'createApplication': return 'Δημιουργία εφαρμογών';
			case 'appType': return 'Τύπος εφαρμογής';
			case 'numberOfCategoriesMustBetween1and3': return 'Ο αριθμός των κατηγοριών πρέπει να είναι μεταξύ 1 και 3.';
			case 'appLogoSpecifications': return 'Μορφή εικόνας: png, μέγεθος: εντός 100KB, ανάλυση (pixel): 256*256';
			case 'localAlbum': return 'Τοπικά άλμπουμ φωτογραφιών';
			case 'networkPath': return 'διαδρομή δικτύου';
			case 'imageURLkAddress': return 'URL εικόνας';
			case 'urlAddressFormatIsIncorrect': return 'Λανθασμένα διαμορφωμένη διεύθυνση URL';
			case 'imageFormatOnlySupportsPng': return 'Οι εικόνες υποστηρίζονται μόνο σε μορφή "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'Το μήκος πρέπει να είναι μεταξύ των χαρακτήρων ${a}-${b}.';
			case 'introduction': return 'σύντομο';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'Το μέγεθος της εικόνας δεν μπορεί να είναι μεγαλύτερο από ${a}, προς το παρόν ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'Η ανάλυση της εικόνας πρέπει να είναι: ${p1}(pixels), επί του παρόντος ${p2}';
			case 'becomeDeveloper': return 'Γίνετε Developer';
			case 'developerInformation': return 'Πληροφορίες για τον προγραμματιστή';
			case 'teamName': return 'Όνομα ομάδας';
			case 'website': return 'κόμβος';
			case 'other': return 'εκτός από';
			case 'githubVerification': return 'Επαλήθευση Github';
			case 'exampleUrl': return 'Παράδειγμα Url';
			case 'githubVerificationTip': return ({required Object did}) => 'Παρακαλούμε χρησιμοποιήστε το λογαριασμό σας στο GitHub για να δημιουργήσετε ένα αρχείο \'delta.did\' στο αποθετήριό σας με το περιεχόμενο \'${did}\'.Στη συνέχεια, επικολλήστε τη διεύθυνση Url του αρχείου githubusercontent σε αυτό το πλαίσιο εισαγωγής για έλεγχο ταυτότητας.';
			case 'createApp': return 'Δημιουργία εφαρμογών';
			case 'appManagement': return 'διαχείριση εφαρμογών';
			case 'statusLogs': return 'Ημερολόγιο κατάστασης';
			case 'bad': return 'δεν είναι καλό';
			case 'normal': return 'συνηθισμένο';
			case 'good': return 'ένα εξαιρετικό';
			case 'onceCreatedItCannotBeChanged': return 'Μόλις δημιουργηθεί, δεν μπορεί να αλλάξει!';
			case 'manageApplicationEntity': return 'Διαχείριση οντοτήτων εφαρμογής';
			case 'currentVersion': return 'τρέχουσα έκδοση';
			case 'submitVersion': return 'Υποβληθείσα έκδοση';
			case 'packageOnlySupportZipCompressedFile': return 'Το πακέτο υποστηρίζει μόνο συμπιεσμένα αρχεία zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Το αρχείο \'${name}\' δεν βρέθηκε στο πακέτο zip.';
			case 'fileList': return 'Κατάλογος εγγράφων:';
			case 'programPackage': return 'Πακέτο προγραμματισμού:';
			case 'automaticallyExtractFromVersionFile': return 'Εξάγεται αυτόματα από τα αρχεία \'.version\'';
			case 'dappVersionFormatTip': return 'Η μορφή του αριθμού έκδοσης πρέπει να είναι δεκαδική με ακρίβεια 2 ψηφίων, με μέγιστο όριο 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Ο αριθμός έκδοσης πρέπει να είναι μεγαλύτερος από την τρέχουσα έκδοση \'${v}\'';
			case 'versionNotes': return 'Εκτύπωση:';
			case 'updateRelease': return 'νέα έκδοση';
			case 'loadAndRun': return 'Φορτώστε και εκτελέστε';
			case 'notYetSubmittedProgramPackage': return 'Το πακέτο προγράμματος δεν έχει ακόμη υποβληθεί!';
			case 'authorizeMinidAppLogin': return 'Εξουσιοδότηση σύνδεσης mini-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Για να επιβεβαιώσετε την εξουσιοδότηση, πληκτρολογήστε "ναι".';
			case 'authorizeNow': return 'Άμεση έγκριση';
			case 'operation': return 'Λειτουργία.';
			case 'statusChange': return 'Αλλαγή κατάστασης';
			case 'changeTo': return 'Αλλαγή σε:';
			case 'notes': return 'Παρατηρήσεις.';
			case 'changesNotEffective': return 'Η αλλαγή δεν είναι έγκυρη !';
			case 'released': return 'Δημοσιευμένο';
			case 'inPublicBeta': return 'ανοιχτή beta';
			case 'developers': return 'Αναπτύχθηκε από.';
			case 'reviewList': return 'Λίστα σχολίων.';
			case 'postReview': return 'Αφήστε ένα σχόλιο';
			case 'scoreNow': return 'Βαθμολογήστε τώρα';
			case 'description': return 'Περιγραφή.';
			case 'noData': return '(^-^)\n Δεν υπάρχουν διαθέσιμα στοιχεία';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Η έκδοση έχει ενημερωθεί από ${a} σε ${b}.';
			case 'loadNewVersion': return 'Φόρτωση νέας έκδοσης';
			case 'name': return 'Όνομα.';
			case 'canisterId': return 'Tank Id.';
			case 'updateTime': return 'χρόνος ενημέρωσης';
			case 'contractCanistersState': return 'Κατάσταση δεξαμενής συμβολαίου';
			case 'userDistribution': return 'διανομή χρηστών';
			case 'settings': return 'Ρύθμιση';
			case 'security': return 'Ασφάλεια';
			case 'invite': return 'προσκλήσεις';
			case 'more': return 'Περισσότερα...';
			case 'receiveAddress': return 'Διεύθυνση λήψης:';
			case 'hangingAmount': return 'κρέμασμα';
			case 'hangingAmountTips': return 'Τα εκκρεμή ποσά είναι προσωρινά αρχεία των ανταμοιβών που παράγονται από την εξόρυξη από την ομάδα των υφισταμένων σας, μόλις πραγματοποιήσετε μια συνεδρία εξόρυξης, τα ποσά αυτά θα συγκεντρωθούν στα εκκρεμή ποσά.';
			case 'pendingAmount': return 'εκκρεμής';
			case 'pendingAmountTips': return 'Τα εκκρεμή ποσά είναι εκείνα που δεν έχουν ακόμη επιβεβαιωθεί έναντι των διαφημιζόμενων, και εκείνα με έγκυρες αντιστοιχίες θα μεταφερθούν σε έγκυρες εγγραφές USCT, με εξαίρεση τα άκυρα τμήματα, εάν υπάρχουν.';
			case 'received': return 'έλαβε';
			case 'processing': return 'σε εξέλιξη';
			case 'replied': return 'ερωτώμενος';
			case 'rejected': return 'απόρριψη';
			case 'unknown': return 'αχαρτογράφητο';
			case 'insufficientBalance': return 'Ανεπαρκής ισορροπία!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Το υπόλοιπο ${x} δεν επαρκεί για την κάλυψη των τελών του δικτύου διασύνδεσης';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Μια συναλλαγή δεν έχει ακόμη ολοκληρωθεί και δεν μπορεί να μεταφερθεί αυτή τη στιγμή';
			case 'thisfunctionNotSupportExternalCalls': return 'Αυτή η λειτουργία δεν υποστηρίζεται για εξωτερική κλήση';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Δεν υπάρχει ταύτιση για μια διεύθυνση που μπορεί να χρησιμοποιηθεί για την πληρωμή των τελών cross-chain, παρακαλούμε μεταβείτε σε άλλο δίκτυο αλυσίδας για να δοκιμάσετε.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'Η τρέχουσα αντιστοιχία με το μέγιστο ποσό που μπορεί να μεταφερθεί σε μία μόνο συναλλαγή είναι ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Οι παρατηρήσεις δεν πρέπει να υπερβαίνουν τα 64 bytes';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Το υπόλοιπο είναι ανεπαρκές και το ποσό είναι: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Δεν μπορείτε να δεσμεύσετε περισσότερες από 3 διευθύνσεις.\nΕάν πρέπει να δεσμεύσετε μια νέα διεύθυνση πληρωμής.\nΠαρακαλούμε να αποδεσμεύσετε πρώτα μια άλλη διεύθυνση.';
			case 'parametersA_exception': return ({required Object x}) => 'Παράμετροι: ${x}, εξαίρεση';
			case 'parameterException': return 'Εξαίρεση παραμέτρου!';
			case 'transferAmountMustBeLargerThan0': return 'Το ποσό μεταφοράς πρέπει να είναι μεγαλύτερο από 0';
			case 'authorizationHasExpired': return 'Η άδεια έχει λήξει';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'Η εφαρμογή δεν έχει εξουσιοδοτηθεί από τον ιδιοκτήτη';
			case 'authenticationTokenIsInvalid': return 'Μη έγκυρο διακριτικό ελέγχου ταυτότητας';
			case 'verifyInfoIsInvalidOrExpired': return 'Άκυρες ή ληγμένες πληροφορίες επικύρωσης';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Επαληθεύστε ότι ο αριθμός των τερματικών πρόσβασης έχει υπερβεί το όριο ένα στα δέκα χιλιάδες.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'Η συμμετοχή στην εξόρυξη πρέπει να υπερβαίνει τις 3 ημέρες';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Ο αριθμός των μελών του κύκλου ασφαλείας δεν μπορεί να είναι μικρότερος από τρία.';
			case 'avatarIsNotSet': return 'Το Avatar δεν έχει οριστεί';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Ο αριθμός των άμεσων παραπομπών δεν μπορεί να είναι μικρότερος από 3';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Το χρονικό όριο είναι ανεπαρκές και μπορείτε να αλλάξετε τον αριθμό του κινητού σας τηλεφώνου μόνο μία φορά το χρόνο.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Αυτός ο αριθμός κινητού τηλεφώνου υπάρχει ήδη και δεν μπορεί να αναπαραχθεί';
			case 'securityCodeIsIncorrect': return 'Λανθασμένος κωδικός ασφαλείας';
			case 'securityCodeMayHaveExpired': return 'Ο κωδικός ασφαλείας μπορεί να έχει λήξει';
			case 'sessionIdIsInvalidOrExpired': return 'Μη έγκυρο ή ληγμένο αναγνωριστικό συνεδρίας';
			case 'sessionHasBeenAuthorized': return 'Η σύνοδος εγκρίθηκε για να ολοκληρωθεί!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Μπορεί να ανανεωθεί μόνο εντός ${x} ημερών πριν από τη λήξη της διάρκειας.';
			case 'notYetGrantedDeveloperPermissions': return 'Δεν υπάρχουν ακόμα δικαιώματα ανάπτυξης';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Το πεδίο ${x} δεν μπορεί να είναι null';
			case 'emailFormatError': return 'Σφάλμα μορφής email';
			case 'theXformatIsIncorrect': return ({required Object x}) => '\'${x}\' σφάλμα μορφοποίησης';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Το πεδίο "${x}" πρέπει να έχει μήκος μεταξύ ${y} και ${z} χαρακτήρων.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Το εύρος επιλογής \'${x}\' πρέπει να είναι μεταξύ ${y} και ${z}.';
			case 'unchanged_sameAsOldContent': return 'Αμετάβλητο, ίδιο περιεχόμενο με το παλιό!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' υπάρχει ήδη!';
			case 'mobileNumberHasNotJoinedDelta': return 'Αυτός ο αριθμός κινητού δεν έχει προστεθεί στη Delta!';
			case 'referrerIdCannotBeEmpty': return 'Το αναγνωριστικό παραπομπής δεν μπορεί να είναι κενό!';
			case 'referrerIdDoesNotExist': return 'Το αναγνωριστικό παραπομπής δεν υπάρχει!';
			case 'didIsIncorrectOrInvalid': return 'Το DID είναι λανθασμένο ή άκυρο!';
			case 'accessTokenIsIncorrectOrInvalid': return 'Το accessToken είναι λανθασμένο ή άκυρο!';
			case 'minimumWithdrawalAmountIs1USD': return 'Ελάχιστο 1USD για μία μόνο ανάληψη';
			case 'miningTimeIsNotYet': return 'Δεν ήρθε ακόμα η ώρα να ορυχτείς.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Υπάρχει ήδη, παρακαλώ μην το προσθέσετε ξανά!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Δεν είναι δυνατή η χρήση του αριθμού εγγραφής ως αριθμού πρόσβασης για έλεγχο ταυτότητας';
			case 'canotAddYourSelf': return 'Δεν μπορείτε να προσθέσετε τον εαυτό σας';
			case 'logOut': return 'Αποσύνδεση';
			case 'confirmLogout': return 'Επιβεβαίωση αποσύνδεσης';
			case 'logOutTipsText': return 'Σημείωση: Σύμφωνα με το whitepaper, κάθε επαλήθευση του λογαριασμού σας θα καταναλώνει ένα ορισμένο ποσό από τα νομίσματα DTC που θα καταβληθούν στον επαληθευτή ως κίνητρο, οπότε μην προσπαθείτε να συνδεθείτε και να βγείτε χωρίς λόγο, κάνοντας κλικ στο παρακάτω κουμπί θα αποσυνδεθείτε αμέσως.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Παρακαλούμε πληκτρολογήστε "ναι" για να επιβεβαιώσετε την αποσύνδεση.';
			case 'tip': return 'να τραβήξω την προσοχή σε κάτι.';
			case 'cancel': return 'ακυρώσεις';
			case 'close': return 'cloture';
			case 'selected': return 'επιλεγμένο';
			case 'edit': return 'μεταγλωττιστής';
			case 'submit': return 'να υποβάλει (μια έκθεση κ.λπ.)';
			case 'goBack': return 'παλινδρόμηση (στην ψυχολογία)';
			case 'copiedToClipboard': return 'Έχει αντιγραφεί στο πρόχειρο.';
			case 'nickname': return 'προσφιλής όρος';
			case 'confirm': return 'αναγνωρίστε το';
			case 'cannotBeEmpty': return 'Δεν μπορεί να είναι κενό';
			case 'deleteSuccessful': return 'Διαγράφηκε με επιτυχία!';
			case 'successfullyModified': return 'Η τροποποίηση ήταν επιτυχής!';
			case 'executionSuccessful': return 'Η εφαρμογή ήταν επιτυχής!';
			case 'preview': return 'προεπισκοπήσεις';
			case 'followSystem': return 'σύστημα παρακολούθησης';
			case 'change': return 'παραλλαγή';
			case 'replace': return 'αντικαταστάσεις';
			case 'view': return 'ελέγξτε';
			case 'manage': return 'διαχειριστικό';
			case 'modify': return 'τροποποιήσεις';
			case 'replacedSuccessfully': return 'Αντικατάσταση επιτυχής!';
			case 'authentication': return 'πιστοποίηση ταυτότητας';
			case 'reacquire': return 'ανάκτηση';
			case 'tryAgain': return 'Δοκιμάστε ξανά.';
			case 'querying': return 'Γίνονται έρευνες ...';
			case 'writingToOnChain_pleaseWait': return 'Γίνεται εγγραφή στην αλυσίδα, παρακαλώ περιμένετε ...';
			case 'versionCheck': return 'ανίχνευση έκδοσης';
			case 'alreadyLatestVersion': return 'Ήδη η τελευταία έκδοση!';
			case 'foundNewVersion': return 'Ανακαλύψτε τη νέα έκδοση:';
			case 'upgradeLink': return 'Σύνδεσμος αναβάθμισης:';
			case 'deviceDescription': return 'Περιγραφή εξοπλισμού.';
			case 'notification30SecondsBeforeMiningStops': return 'Εκτελέστε υπενθύμιση ειδοποίησης 30 δευτερόλεπτα πριν σταματήσει η εξόρυξη!';
			case 'goMining': return 'Πηγαίνετε εξόρυξη';
			case 'deltaMiningReminder': return 'Delta Mining Reminder';
			case 'clickToMine_miningIsAboutToStop': return 'Κάντε κλικ εδώ για το δικό μου, η εξόρυξη θα σταματήσει σύντομα!';
			case 'incorrect_input': return 'Λανθασμένη εισαγωγή!';
			case 'are_you_sure_delete': return 'Είστε βέβαιοι ότι θα διαγράψετε;';
			case 'delete_account': return 'Διαγραφή λογαριασμού';
			case 'how_to_operate_it': return 'Δείτε πώς να το λειτουργήσετε;';
			case 'deletion_warning_tip': return 'Εάν διαγράψετε τον λογαριασμό σας, θα χάσετε όλα τα νομίσματα Delta και όλα τα κέρδη από άλλα μέλη θα χαθούν επίσης.';
			case 'launchWhatsAppProgram': return 'Εκκίνηση του προγράμματος WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Οι αριθμοί πρόσβασης με αυτό το εικονίδιο υποστηρίζουν επίσης την επαλήθευση μηνυμάτων WhatsApp. Κατά την αποστολή διεθνών μηνυμάτων, συνιστάται να χρησιμοποιείτε το WhatsApp για να αυξήσετε το ποσοστό επιτυχίας και να μειώσετε το κόστος.';
			case 'ihaveSentVerificationString': return 'Έχω στείλει μια συμβολοσειρά επαλήθευσης';
			case 'totalOfPeople': return 'Σύνολο ατόμων: ';
			case 'numberOfPeopleMining': return 'Αριθμός ατόμων που εξορύσσονται';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Μπορείτε να χρησιμοποιήσετε ένα πρόγραμμα περιήγησης σε άλλη συσκευή για να σαρώσετε τον κώδικα QR και να τον μεταβιβάσετε στο πρόγραμμα SMS';
			case 'toggle': return 'Εναλλαγή';
			case 'DSMSverifier': return 'DSMS Verifier';
			case 'activate': return 'Ενεργοποίηση';
			case 'activated': return 'Activated';
			case 'generateActivationCommand': return 'Δημιουργία εντολής ενεργοποίησης';
			case 'activationCommand': return 'Εντολή ενεργοποίησης';
			case 'activationSentedTip': return 'Μετά την αποστολή του SMS ενεργοποίησης, ελέγξτε την κατάσταση ενεργοποίησης στην τερματική συσκευή πρόσβασης.';
			case 'biometricsNotEnabledTip': return 'Τα βιομετρικά στοιχεία (πρόσωπο ή δακτυλικό αποτύπωμα) δεν είναι ενεργοποιημένα στη συσκευή σας. Ενεργοποιήστε τα για να συνεχίσετε.';
			case 'error': return 'Σφάλμα';
			case 'exceptionOccurredWhenCallingBiometric': return 'Παρουσιάστηκε εξαίρεση κατά την κλήση της βιομετρικής λειτουργίας (πρόσωπο ή δακτυλικό αποτύπωμα)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' αριθμοί πρόσβασης είναι επιλεγμένοι, θα πρέπει να επιλεγεί '),
				shouldNum,
				const TextSpan(text: '.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Έχει σταλεί το ${text} στους αριθμούς πρόσβασης ${n} παραπάνω;';
			case 'interface': return 'Interface:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Λήξη χρόνου αναμονής ή αναντιστοιχία αριθμού αποστολέα';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Ο αριθμός κινητού του μέλους του κύκλου ασφαλείας που συμπληρώσατε δεν ταιριάζει: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Συνδεθείτε εντός 10 λεπτών μετά την αποσύνδεση για να αποφύγετε την επαλήθευση δύο παραγόντων.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Πρέπει να συμπληρωθούν τουλάχιστον ${n} αριθμοί κινητών τηλεφώνων';
			case 'noAccessNumberInYourRegionYet': return 'Δεν υπάρχει ακόμη αριθμός πρόσβασης στην περιοχή σας';
			case 'notEnoughAccessNumbersInYourRegion': return 'Δεν υπάρχουν αρκετοί αριθμοί πρόσβασης στην περιοχή σας';
			case 'tipsForDeployDSMSterminal': return 'Το σύστημα έχει φορτώσει αυτόματα ορισμένους αριθμούς πρόσβασης από άλλες χώρες για εσάς. Προκειμένου να παρέχετε καλύτερες και φθηνότερες υπηρεσίες επαλήθευσης, συνιστάται εσείς ή το άτομο που σας παραπέμπει να αναπτύξετε το τερματικό DSMS τοπικά για να κερδίσετε τέλη επαλήθευσης.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Κανείς δεν μπορεί να μου δώσει τον κωδικό ασφαλείας;';
			case 'useSupplementalMode': return 'Χρήση συμπληρωματικής λειτουργίας';
			case 'returnToSecurityCodeMode': return 'Επιστροφή στη λειτουργία κωδικού ασφαλείας';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Παρακαλώ εισάγετε τον αντίστοιχο αριθμό κινητού τηλεφώνου. Ο κωδικός χώρας μπορεί να παραλειφθεί.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Ο αριθμός κινητού του ${name} δεν είναι σωστός';
			case 'matchingVerificationStrategyIs': return 'Η αντίστοιχη στρατηγική επαλήθευσης είναι:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Το υπόλοιπο είναι μεγαλύτερο από 3 ICP, δεν χρειάζεται να χύσετε καύσιμο προς το παρόν.';
			case 'escrowAccount': return 'Escrow Account';
			case 'fuelRelay': return 'Fuel Relay';
			case 'pourFuel': return 'Pour fuel';
			case 'fuelState': return 'Κατάσταση καυσίμου';
			case 'pouringFuelTips': return 'Η έκχυση καυσίμου δεν σας φέρνει πλεονεκτήματα ή μειονεκτήματα, σκοπός της είναι να εμπλουτίσει την εμπειρία του συστήματος Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Χορηγός προγραμματιστών παρακολουθώντας διαφημίσεις';
			case 'status': return 'status';
			case 'date': return 'ημερομηνία';
			default: return null;
		}
	}
}

extension on _StringsEs {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'fig. principio';
			case 'switchLanguage': return 'Cambiar de idioma';
			case 'languageSwitch': return 'Cambio de idioma';
			case 'slogan': return 'Construir una economía descentralizada en el delta';
			case 'countryRegionCode': return 'Código país/zona';
			case 'countryRegionSelection': return 'Selección de países y regiones';
			case 'nextStep': return 'el siguiente paso';
			case 'yourPhoneNumber': return 'Tu número de teléfono.';
			case 'pleaseSelectCountryAndRegion': return 'Seleccione su país/región';
			case 'pleaseEnterPhoneNumber': return 'Introduzca un número de teléfono válido.';
			case 'referrerDid': return 'Remitente DID';
			case 'pleaseEnterTheReferrersDid': return 'Por favor, introduzca una identidad descentralizada válida del remitente';
			case 'thisDidIsInvalid': return 'Este DID no es válido.';
			case 'nicknameFormatTips': return 'El apodo no debe estar vacío y su longitud no debe superar los 16 dígitos.';
			case 'additionalIinformation': return 'Información complementaria';
			case 'invitationSubject': return 'Una invitación a la creación de consenso Delta';
			case 'invitationLetter': return ({required Object did}) => 'Hola, ¡participo en la construcción del consenso Delta!\n Delta es una nueva plataforma de moneda digital de código abierto que se ejecuta en ICP y permite gestionar y utilizar varias monedas digitales sin contraseñas, claves privadas o mnemónicos. Por favor, haga clic en este enlace https://delta.kim/auto/download para instalar la aplicación y ahora usted está invitado a unirse a la creación de consenso y acuñación de monedas también.\n Referrer DID: ${did}';
			case 'dSMSverification': return 'Validación de la AAMD';
			case 'getAccessNumbers': return 'Obtenga algunos números de acceso';
			case 'getAccessNumberPromptMessage': return 'Haz clic en el botón "Obtener" para rotar un conjunto de números de acceso de verificación por SMS en la cola.';
			case 'optionalAccessNumbers': return 'Número de acceso opcional';
			case 'accessNumber': return 'número de acceso';
			case 'TELCO': return 'operador (de una central eléctrica, red de transporte, etc.)';
			case 'score': return 'puntuación';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('es'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Marque '),
					nBuilder(n),
					const TextSpan(text: ' números de acceso y haga clic en el botón "'),
					span('text'),
					const TextSpan(text: '" para pasar al siguiente paso.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Marque '),
					nBuilder(n),
					const TextSpan(text: ' números de acceso y haga clic en el botón "'),
					span('text'),
					const TextSpan(text: '" para pasar al siguiente paso.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta es un experimento de moneda digital global descentralizada de código abierto y un ecosistema de aplicaciones de criptomoneda.';
			case 'deltaGoalsDesc': return 'El objetivo es hacer posible que la gente utilice Delta para co-construir nuevas monedas digitales que sean universales, justas, seguras, rápidas y ecológicas. Y proporcionar diversos escenarios de aplicación eficaces para estas monedas digitales y las criptomonedas anteriores.';
			case 'details': return 'datos';
			case 'get': return 'ganar';
			case 'select': return 'opción';
			case 'send': return 'enviando';
			case 'complete': return 'cumplir';
			case 'selectedAccessNumberPrompt': return 'Cuando se selecciona, se muestra el número de acceso completo y se genera una cadena de autenticación.';
			case 'location': return 'colocación';
			case 'verificationString': return 'cadena de validación';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Utilice su número de teléfono '),
				num,
				const TextSpan(text: ' y envíe '),
				label,
				const TextSpan(text: ' a '),
				accessNumber,
				const TextSpan(text: ' para completar la verificación.'),
			]);
			case 'ihaveSentTheSMS': return 'He enviado un mensaje de texto';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'La cadena de validación es válida durante 6 minutos, tiempo restante: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => '¡Demasiado rápido para esperar ${x} segundos para continuar!';
			case 'waitingForVerificationSMS': return 'Esperando SMS de verificación...';
			case 'partSuccsForVerificationSMS': return 'Se ha superado la verificación por SMS de uno de los terminales de acceso.';
			case 'creatingAccessToken': return 'Se está creando el token de acceso...';
			case 'intoDelta': return 'Dentro de Delta';
			case 'deltaAccountIsLoggedIn': return 'Su cuenta Delta ha iniciado sesión';
			case 'iHavLoggedOut': return 'Estoy fuera.';
			case 'startTwoFactorVerification': return 'Inicio de la doble verificación';
			case 'securityCircleVerification': return 'Validación del Círculo de Seguridad';
			case 'generateSecurityCode': return 'Generar código de seguridad';
			case 'generateSecurityCodeHintText': return 'El código de seguridad generado se enviará a un miembro de su círculo de seguridad seleccionado al azar.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'No ha configurado un círculo de seguridad, su cuenta es muy insegura, por favor introduzca cualquier marcador de posición de 6 dígitos y vaya al siguiente paso.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'El código de seguridad ha sido generado, por favor contacte con los siguientes familiares y amigos para solicitarles que le extraigan el código de seguridad para pasar la verificación. ¡válido durante 30 minutos!';
			case 'itGetSecurityCodeTip': return 'Consejo: Puede obtener el código de seguridad haciendo doble clic en el apodo de su cuenta en la página Delta App -> Menu -> Provide Security.';
			case 'securityCircleMemberList': return 'Lista de miembros del círculo de seguridad:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Seleccione un familiar o amigo en la lista de miembros para generar y proporcionarle un código de seguridad para verificar su verdadera identidad. El propósito es evitar que otros controlen la cuenta cuando se pierde o le roban el número de teléfono móvil.';
			case 'formatIsXdigits': return ({required Object num}) => 'Formato como ${num} dígitos';
			case 'signInSuccessfully': return 'Conéctese correctamente.';
			case 'twoFAandLogin': return 'Doble autenticación e inicio de sesión';
			case 'verificationSuccessful': return 'Verifique el éxito.';
			case 'validationFailed': return 'Validación fallida.';
			case 'dappInfo': return 'DApp Información';
			case 'securityCircle': return 'anillo de seguridad';
			case 'securityCode': return 'código de seguridad';
			case 'provideSecurity': return 'proporcionar seguridad';
			case 'addManully': return 'Añadir manualmente';
			case 'addFromContacts': return 'Añadir desde la Agenda';
			case 'addSecurityCircle': return 'Añadir círculo de seguridad';
			case 'inputType': return 'Tipo de entrada';
			case 'mobileNumber': return 'número de teléfono móvil';
			case 'did': return 'Dirección';
			case 'pleaseEnterValidDID': return 'Introduzca un identificador de identidad descentralizada válido';
			case 'pleaseEnterValidWalletAddress': return 'Introduzca una dirección de monedero válida';
			case 'appellation': return 'forma de dirección';
			case 'appellationHint': return '¿Cómo lo llamas, como "bebé"?';
			case 'addSecurityCircleTips': return 'Por favor, no añadas a tu círculo de seguridad a personas en las que no confíes.';
			case 'referralTeam': return 'Equipos recomendados';
			case 'profile': return 'Información sobre la cuenta';
			case 'menu': return 'menú';
			case 'directly': return 'directo';
			case 'indirectly': return 'indirecta';
			case 'inviteContacts': return 'Invitación Contacto';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Tu invitado es '),
				nickname,
				const TextSpan(text: ' y has referido directamente a '),
				num1,
				const TextSpan(text: ' personas, de las cuales '),
				num2,
				const TextSpan(text: ' están actualmente en línea.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Ha remitido indirectamente a '),
				num1,
				const TextSpan(text: ' personas, de las cuales '),
				num2,
				const TextSpan(text: ' están actualmente en línea.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Invita a tus amigos a unirse a Delta y mejorar juntos el consenso social. Por cada recomendación directa, la tasa de minería de una persona aumenta la tasa base en '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Invita a amigos a unirse a Delta y mejorar juntos el consenso social. Cada recomendación indirecta de una persona aumentará la tasa de extracción en '),
				rate2,
				const TextSpan(text: ' de la tasa base.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => '¿Estás seguro de que quieres borrar "${name}"?';
			case 'safetyCircleRoleQ': return '¿Para qué sirve el anillo de seguridad?';
			case 'safetyCircleRoleA': return 'Proteja su cuenta proporcionando autenticación secundaria en situaciones delicadas.';
			case 'howSecurityCirclesWorkQ': return '¿Cómo funcionan los anillos de seguridad?';
			case 'howSecurityCirclesWorkA': return 'En el caso de que sea necesaria una verificación del Círculo de Seguridad, el programa Delta Smart Contracts seleccionará al azar a un miembro de la lista de amigos del Círculo de Seguridad para que le ayude a proporcionarle un código de seguridad que complete la verificación de identidad por usted. Cuando le pida el código de seguridad al miembro, éste podrá confirmar si usted es usted o no. Al mismo tiempo, el programa le indicará: "Rechace proporcionar el código de seguridad si no es usted", para proteger la seguridad de su cuenta. Por tanto, asegúrate siempre de que los miembros de tu círculo de seguridad son personas de confianza.';
			case 'securityCircleBeUsedQ': return '¿Cuándo se utilizará?';
			case 'securityCircleBeUsedA1': return '1. Cuando se pierde el control de la APP Delta, suele ocurrir que el teléfono móvil se pierde o es robado.';
			case 'securityCircleBeUsedA2': return '2. En el caso de algunas operaciones sensibles, el programa Delta Smart Contract necesita confirmar que es usted.';
			case 'provideSafetyTip1': return 'Cuando tu compañero te pida su código de seguridad, asegúrate de confirmar que es el suyo.';
			case 'provideSafetyTip2': return 'Estás proporcionando seguridad a los amigos mencionados, que te han establecido como la persona de mayor confianza en su círculo de seguridad y necesitan que les proporciones una confirmación de seguridad en caso de que se encuentren con operaciones delicadas en su cuenta.';
			case 'provideSafetyTip3': return 'Haz doble clic en el avatar de la otra persona para extraer el código de seguridad cuando sea necesario.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'La otra parte no tiene actualmente un código de seguridad que deba ser extraído.';
			case 'existSecurityCodeTip': return 'Por favor, asegúrese de que el amigo o familiar que le pide el código de seguridad es el mismo que usted. Para la protección de su amigo o familiar, debe negarse a facilitar el código de seguridad si no se lo proporciona el propio amigo o familiar.';
			case 'avatarSettings': return 'Configuración del avatar';
			case 'NFTAvatarPropertyRightsText': return 'Descargo de responsabilidad: El uso de la NFT en cuestión como avatar es sólo por preferencia personal y no tiene nada que ver con la titularidad de los derechos de propiedad intelectual de dicha NFT.';
			case 'projectWebsite': return 'Página web del proyecto:';
			case 'whitepaper': return 'Libro blanco:';
			case 'indexID': return 'Índice Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Índice entre ${start} y ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Introduce el identificador de índice de tu NFT favorito y el programa lo cargará automáticamente como avatar para ti.';
			case 'miningRate': return 'tasa de extracción';
			case 'miningDetails': return 'Detalles mineros';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Tasa de extracción total: '),
				rate,
				const TextSpan(text: ' δ/día'),
			]);
			case 'EndOfMiningSession': return 'Se acabó la minería cíclica:';
			case 'tapToMineDeltaCoin': return 'Haz clic para minar monedas Delta ↑.';
			case 'clickToStartMining': return 'Haz clic para empezar a minar';
			case 'miningHasStoppedPromptDesc': return 'La minería se ha detenido, cada 24 horas es un ciclo de minería, haga clic en el icono del rayo para iniciar una nueva ronda de mining.Delta de la minería es un mecanismo de asignación que no consume energía aritmética adicional y el tráfico de red de su dispositivo.';
			case 'aboutBaseRate': return '¿Sobre el tipo básico?';
			case 'baseRateDescription': return 'Como se acordó en el libro blanco, la regla de disminución de la tasa base para la minería Delta se dividirá en dos fases.\nFase 1: La tasa será de 32δ/día cuando el número de participantes (inscripciones) sea de 3.000 o menos. Partiendo de esta base, la tasa base se reducirá a la mitad cada vez que el número de personas se multiplique por 10.\nFase 2: Cuando el número de participantes alcanza los 30 millones o más, la tasa base se reduce a la mitad cada vez que el número de participantes se multiplica por 3. Hasta que la última excavación detiene la producción.';
			case 'baseRate': return 'tarifa básica (como en RDSI)';
			case 'directReferralRewards': return 'Bonificación por recomendación directa';
			case 'directReferralRewardDesc': return 'Por cada recomendación directa, tu tarifa de minería se incrementará en 1/3 adicional de la tarifa base mientras estén minando.\n\n Además, el estado de minería de sus referidos también contará para su bonificación por referidos directos.';
			case 'indirectReferralRewards': return 'Bonificación indirecta por recomendación';
			case 'indirectReferralRewardDesc': return 'Cuando un referido indirecto está minando, tu tasa de minado se incrementa en 1/10 adicional de la tasa base.\n\n Para su equipo de referidos directos, cada persona a la que vuelven a referir representa un referido indirecto para usted.';
			case 'mine': return 'extraer (mineral u otro recurso de una mina)';
			case 'thisMiningInformation': return 'Información minera actual';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Participó en la minería: '),
				x,
				const TextSpan(text: ' veces'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Ganancia total esta vez: '),
				x,
				const TextSpan(text: ' monedas Delta'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Ganancias base: '),
				x,
				const TextSpan(text: ' monedas'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contribución directa del equipo: '),
				x,
				const TextSpan(text: ' monedas'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contribución indirecta del equipo: '),
				x,
				const TextSpan(text: ' monedas'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Tiempo entre excavaciones: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Tiempo efectivo de extracción: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} horas';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Para la seguridad de los activos, los miembros del círculo de seguridad deben mantener entre 3 y 5 personas de confianza en todo momento.';
			case 'index': return 'indexación';
			case 'amount': return 'suma de dinero';
			case 'balance': return 'saldos';
			case 'timeStamp': return 'marca de tiempo';
			case 'summary': return 'resúmenes';
			case 'miningHasStopped': return 'La minería se ha detenido.';
			case 'miningHasStoppedDesc': return 'Tu minería está actualmente parada, empieza a ganar ahora.';
			case 'startMining': return 'Empezar a minar';
			case 'changeMobileNumber': return 'Cambio de número de teléfono móvil';
			case 'currentMobileNumber': return 'Número de teléfono móvil actual';
			case 'newMobileNumber': return 'Nuevo número de teléfono móvil';
			case 'securityCodeFormatIs6digits': return 'El formato del código de seguridad es de 6 dígitos.';
			case 'startVrification': return 'Iniciar verificación';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Este número de móvil ya existe, DID asociado: ${dId}';
			case 'noDataYet': return 'No hay datos disponibles';
			case 'previousMobileNumber': return 'Número de teléfono móvil anterior';
			case 'changeLog': return 'Registro de cambios';
			case 'referralLinkToShare': return 'Enlaces recomendados para compartir';
			case 'referrer': return 'remitente';
			case 'isoCountryCode': return 'Código ISO del país';
			case 'avatarLogo': return 'logotipo de cabecera';
			case 'creationTime': return 'Tiempo de creación';
			case 'lastUpdate': return 'Última actualización';
			case 'numberOfSecurityCircleMembers': return 'Número de miembros de los círculos de seguridad';
			case 'theLatestMining': return 'Última excavación';
			case 'effectiveMiningDays': return 'Número de días de extracción efectiva';
			case 'modifyNickname': return 'Cambiar apodo';
			case 'didNotChange': return '¡Sin cambios!';
			case 'kycVerification': return 'Verificación KYC';
			case 'faceID': return 'Face ID';
			case 'touchID': return 'Identificación por huella dactilar';
			case 'biometricsAuthorizationTest': return 'Pruebas de autenticación biométrica';
			case 'currentState': return 'estado actual';
			case 'biometricsAuthenticationLocalizedReason': return 'Utilice el desbloqueo de su dispositivo para verificar su identidad.';
			case 'graph': return 'archivo de gráficos (por ejemplo, mapas, documentos o figuras botánicas)';
			case 'referralRelationshipGraph': return 'Mapa de relaciones de referencia';
			case 'nativeContacts': return 'Contactos locales';
			case 'registrationAndMiningTrends': return 'Registro y tendencias mineras';
			case 'inMining': return 'minería';
			case 'registrationVolume': return 'volumen de registro';
			case 'unmined': return 'sin explotar';
			case 'mined': return 'minado';
			case 'communityMining': return 'Minería comunitaria';
			case 'consensusPromotionFund': return 'Fondo de Promoción del Consenso';
			case 'ecologicalAwardFund': return 'Fondo de Incentivos Ecológicos';
			case 'icpFuelCrowdfunding': return 'Financiación colectiva de ICP Fuel';
			case 'coreDeveloperRewards': return 'Recompensas para desarrolladores';
			case 'totalAllocation': return 'Distribución general';
			case 'miningRatio': return 'Ratio de extracción';
			case 'billion.30': return '30.000 millones';
			case 'billion.60': return '60.000 millones';
			case 'billion.180': return '180.000 millones.';
			case 'billion.300': return '300.000 millones';
			case 'watchAdsToSupportDevelopers': return 'Ver anuncios para apoyar a los desarrolladores';
			case 'loadingAdcomponents': return 'Cargando componentes de anuncios...';
			case 'timeIsNotUp': return 'No se ha acabado el tiempo.';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Fallo al cargar, ¡posiblemente red bloqueada!';
			case 'pendingUSCTrecords': return 'Registros pendientes del USCT';
			case 'pendingUSCTrecordsDesc': return 'Los registros USCT pendientes se confirmarán contra la plataforma publicitaria en un plazo de 15 a 30 días y los registros válidos se transferirán a la lista de registros USCT y el importe USCT correspondiente se añadirá al saldo de la cuenta.';
			case 'validity': return 'validez';
			case 'advertiser': return 'anunciantes';
			case 'earned': return 'ganado';
			case 'withdraw': return 'retirar fondos';
			case 'validUSCTrecords': return 'Registros efectivos del USCT';
			case 'USCTmining': return 'Minería USCT';
			case 'aboutUSCTmining': return '¿Sobre la minería de la USCT?';
			case 'aboutUSCTminingItme1': return '1. USDT es una stablecoin en dólares estadounidenses muy popular en todo el mundo que puede cambiarse fácilmente por monedas soberanas nacionales en las principales bolsas de criptomonedas del mundo.';
			case 'aboutUSCTminingItme2': return '2. USCT es una medida temporal de los ingresos de la minería USCT, conocida como crédito USD, que finalmente se convertirá en USDT de acuerdo con la cantidad de liquidación real y las normas de distribución de la plataforma de publicidad y la proporción correspondiente.';
			case 'aboutUSCTminingItme3': return '3. USCT Mining es una función de realización de anuncios de tráfico de la comunidad Delta. Aprovecha la gran base de usuarios de la comunidad Delta para proporcionar múltiples beneficios a los anunciantes, a los desarrolladores de Delta y a los ausentes. Está diseñado para proporcionar una cierta cantidad de ingresos efectivos a los trabajadores ausentes en la fase inicial, cuando el ecosistema Delta aún no se ha formado y prosperado; al mismo tiempo, también proporciona cierto apoyo financiero a los desarrolladores para garantizar que puedan seguir prestando servicios de desarrollo durante un largo periodo de tiempo y, en última instancia, poder realizar todos los planes del libro blanco; y también proporciona un canal de promoción eficaz para los anunciantes de productos.';
			case 'aboutUSCTminingItme4': return '4. Las normas de distribución están diseñadas para que el 40% de la recaudación total se destine a comisiones de servicios técnicos a promotores y el 60% restante a recompensas por absentismo de la comunidad. 5. Parte de la recompensa de absentismo del modelo de distribución multinivel similar a DTC, la recompensa de absentismo se dividirá en tres partes de acuerdo con la proporción de 6:3:1, cada vez que una de las recompensas de absentismo de la minería USCT 6 partes asignadas al absentismo de los anuncios actuales, 3 partes asignadas al referente superior, 1 parte asignada al referente de segundo nivel. Del mismo modo, también puede obtener la misma recompensa de recomendante para los amigos que recomiende a través de la minería USCT. El beneficio de esta distribución multinivel es que cualquiera puede ganar una cantidad relativamente grande de USDT mediante el desarrollo de un equipo de línea descendente.';
			case 'aboutUSCTminingItme5': return '5. El periodo de liquidación es de 7 días, es decir, cada 7 días se comprueba la validez con la plataforma publicitaria, y se registrará en el saldo la validez confirmada de los ingresos y el importe real. El importe mínimo para cada retirada es de 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Filas ${x} a ${y}.';
			case 'wallet': return 'monederos';
			case 'multiChainWallet': return 'monedero multicadena';
			case 'deposit': return 'depósito (por ejemplo, en una cuenta bancaria)';
			case 'transfer': return 'transferencia (dinero a una cuenta bancaria)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} en la dirección del monedero';
			case 'transactions': return 'Registros de transacciones';
			case 'network': return 'reticulación';
			case 'walletAddress': return 'Dirección de la cartera';
			case 'currentAddress': return 'dirección actual';
			case 'depositAddress': return 'Dirección de recarga';
			case 'receivingMoneyAddress': return 'dirección del beneficiario';
			case 'applyTempDepositAddress': return 'Dirección para solicitar una recarga temporal';
			case 'tempDepositAddressTip': return '1. Esta es una dirección de depósito compartido. Por favor, no deposite el importe después de que el contrato de alquiler haya expirado o después de que le hayan desvinculado. Si esto ocurre, el importe se perderá.';
			case 'tempDepositAddressTip2': return '2. Antes de realizar un depósito, asegúrese de que el [Nombre de la cadena] y el [Nombre de la moneda] coinciden exactamente; en el caso de los tokens de contrato, también debe asegurarse de que el [Estándar del contrato] y la [Dirección del contrato] coinciden exactamente.';
			case 'tempDepositAddressTip3': return '3. Por favor, no intente depositar fondos que no coincidan con ninguno de los parámetros de los consejos anteriores, de lo contrario se perderá el importe.';
			case 'tempDepositAddressTip4': return '4. Si necesita depositar otros tipos de activos, cambie a la página de la divisa correspondiente y parametrice las opciones para solicitar una nueva dirección.';
			case 'applyExtensionOfValidity': return 'Solicitud de prórroga';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Esta dirección expirará después de '),
				diff,
				const TextSpan(text: ' y será '),
				tap('manually extend'),
				const TextSpan(text: ' válida durante 12 horas antes de expirar.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Sólo puede renovarse con 12 horas de antelación';
			case 'theReceivingAddressValidForLongtime': return 'Esta dirección es válida durante mucho tiempo.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Esta dirección de cobro es válida durante mucho tiempo y se abona automáticamente en tiempo real.';
			case 'confirmDeposited': return 'Confirmación del depósito';
			case 'unbindThisDepositAddress': return 'Desagregar esta dirección de recarga';
			case 'confirmDepositedTip': return 'Si se han transferido fondos, haga clic en el botón de arriba para activar el abono en su monedero transcurridos 10 minutos.';
			case 'unbindDepositAddressTip': return 'Para reducir la sobrecarga del contrato inteligente, desvincule la dirección de recarga si no va a depositar más fondos durante el periodo de validez.';
			case 'transferToAddress': return 'ir a la dirección';
			case 'longPressToPaste': return 'Pulsación larga para pegar';
			case 'all': return 'completo';
			case 'balanceX': return ({required Object x}) => 'Saldo ${x}';
			case 'transferOut': return 'resultar';
			case 'depositXcoins': return ({required Object x}) => 'Acreditado ${x}';
			case 'sender': return 'remitente';
			case 'recipient': return 'destinatario';
			case 'memo': return 'nota';
			case 'kind': return 'modo (de vida)';
			case 'transferAmountExceedsAvailableBalance': return 'Transferencias superiores al saldo disponible';
			case 'pleaseEnterValidAmount': return 'Introduzca un importe válido';
			case 'networkFee': return 'Tasa de tramitación de la red';
			case 'fee': return 'gastos de tramitación';
			case 'validLengthXcharacters': return ({required Object x}) => 'Dirección longitud válida ${x} caracteres';
			case 'historys': return 'registro histórico';
			case 'dtcCreditdetail': return 'Detalles de los puntos Delta';
			case 'usdCreditdetail': return 'Detalles de los puntos USD';
			case 'dappSquare': return 'Plaza dApp';
			case 'amountRaised': return 'Importe recaudado';
			case 'disbursedAmount': return 'Importe emitido';
			case 'participationTimes': return 'Número de participantes';
			case 'completionRate': return 'tasa de finalización';
			case 'exchangeRate': return 'tipo de cambio';
			case 'icpCrowdfunding': return 'Crowdfunding del ICP';
			case 'crowdfunding': return 'financiación colectiva';
			case 'trendsCurve': return 'curva de tendencia';
			case 'fullScreenView': return 'pantalla completa';
			case 'walletBalance': return 'Saldo de la cartera:';
			case 'manageWallet': return 'Gestionar cartera';
			case 'fundraiseAmount': return 'recaudación de fondos';
			case 'exchangeRewardAmount': return 'Canjear el importe de la recompensa';
			case 'fundraise': return 'Recaudar fondos';
			case 'rangeIntegersX': return ({required Object x}) => 'Rango: entero ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Participa con éxito en la recaudación de fondos y recibe una recompensa de ${amount}DTCT';
			case 'amountSummary': return 'Resumen de importes';
			case 'changePreferred': return 'Cambio de preferencia';
			case 'changePreferredAddress': return 'Cambiar dirección preferida';
			case 'preferredAddressTip': return 'Los fondos se transferirán automáticamente a la dirección preferida cuando se cobren utilizando un número de móvil registrado o un DID.';
			case 'newAddress': return 'Nueva dirección';
			case 'newAddressTip': return 'Para evitar abusos, cuando hay más de una dirección de monedero, se cobra una comisión de transacción por cada nueva dirección creada.';
			case 'createNew': return 'de nueva construcción';
			case 'chainNetworkName': return 'nombre de la red de cadenas';
			case 'from': return 'proceder de (un lugar)';
			case 'to': return 'hasta (un tiempo)';
			case 'noAvailableDepositAmountDetected': return 'No se ha detectado ningún importe de depósito disponible.';
			case 'crossChainReceiveMoneyMonitoring': return 'La colección de cadenas cruzadas está escuchando ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Recibido ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Confirmación en curso ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Notas (lectura obligada para los novatos)';
			case 'whyUseSharedAddresses': return '¿Por qué utilizar una dirección compartida?';
			case 'useSharedrAdvantage': return 'Las ventajas de utilizar direcciones compartidas al depositar a través de cadenas son las siguientes:';
			case 'useSharedrAdvantage1': return '1. Reducir el desperdicio de las tasas de transferencia y reducir el coste de uso para los usuarios. Debido a la utilización de la dirección exclusiva, que dará lugar a demasiada dispersión de los fondos, por lo general con el fin de facilitar la posterior transferencia de otros usuarios en la retirada de fondos, cuando el usuario recarga la segunda transferencia de fondos tienen que ser agrupados en uno o un pequeño número de gestión de direcciones.';
			case 'useSharedrAdvantage2': return '2. En el esquema compartido, el programa sólo necesita mantener un conjunto relativamente pequeño de direcciones que se pueden emparejar rápidamente con las transferencias salientes y la escucha de recogida ligera, lo que reduce la sobrecarga de recursos computacionales. En cambio, ocurriría lo contrario si se utilizaran direcciones exclusivas.';
			case 'tokenType': return 'Tipo de ficha';
			case 'contract': return 'contractual';
			case 'contractStandard': return 'norma contractual';
			case 'contractAddress': return 'dirección del contrato';
			case 'native': return 'protozoos';
			case 'confirmUnbindingPleaseEnterYes': return 'Para confirmar la desvinculación, introduzca "sí".';
			case 'listAllWorkingTempReceivingAddresses': return 'Lista de todas las direcciones de recarga de la cadena';
			case 'setNote': return 'Configurar notas';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'No puede tener más de ${x} bytes';
			case 'transferFee': return 'tasa de transferencia';
			case 'crossChainFee': return 'tasa por cruce de cadenas';
			case 'crossChainTransferOutError': return 'error de transferencia de enlaces cruzados';
			case 'chainName': return 'nombre de la cadena';
			case 'message': return 'mensajes';
			case 'dontShowAgain': return 'ya no aparece';
			case 'queuing': return 'cola';
			case 'optional': return 'opcional';
			case 'publiclyVisible': return 'públicamente visible';
			case 'rates': return 'tarifa';
			case 'minimum': return 'mínimo';
			case 'maximum': return 'límite superior';
			case 'minimumBlockConfirmations': return 'Número mínimo de confirmaciones de bloque';
			case 'dsmsVerifyTerminal': return 'Terminal de validación DSMS';
			case 'overall': return 'paraguas';
			case 'my': return 'mi';
			case 'checkValidatorQualifications': return 'Comprobación de los privilegios del autenticador';
			case 'getVerifierPermissions': return 'Obtener privilegios de autenticador';
			case 'qualification': return 'dotaciones naturales';
			case 'upperLimit': return 'límite';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Número máximo de terminales de acceso permitidos';
			case 'numberOfExistingAccessTerminals': return 'Número de terminales de acceso existentes';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Antes de solicitar privilegios de autenticador, debe preparar un teléfono móvil Android inactivo y un número de acceso dedicado, y descargar e instalar la aplicación DSMS Access Terminal.';
			case 'downloadLink': return 'enlace de descarga';
			case 'alreadyReadyFollowingTheAboveTips': return 'Está listo según los consejos anteriores';
			case 'globalUniversal': return 'para uso global';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Actualmente no hay suficientes autenticadores locales para participar en el servicio de acceso de autenticación DSMS, por favor seleccione el servicio de acceso "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'como número de acceso exclusivo';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Marque la casilla "${tip}".';
			case 'inputLengthTooShort': return 'Longitud de entrada demasiado corta';
			case 'shortName': return 'acrónimos';
			case 'pleaseEnterXname': return ({required Object name}) => 'Por favor, introduzca ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'La solicitud está siendo enviada, por favor espere...';
			case 'applyForDSMSVerifierPermission': return 'Solicitar privilegios de validador de DSMS';
			case 'confirmInformation': return 'Confirmación de la información';
			case 'lastHeartbeat': return 'latido final';
			case 'expirationTime': return 'tiempo debido';
			case 'country': return 'naciones';
			case 'accessTerminals': return 'terminal de acceso';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Número total de terminales de número de acceso DSMS';
			case 'textContent': return 'Contenido del texto';
			case 'scanQRcodeToLogin': return 'Pase el dedo para iniciar sesión';
			case 'confirmLogin': return 'Confirmar inicio de sesión';
			case 'authorizeSubApplicationToLogin': return 'Autorizar esta sub-solicitud para iniciar sesión';
			case 'authorizationSuccessful': return 'La autorización se ha realizado correctamente.';
			case 'launchSMSprogram': return 'Lanzamiento del programa SMS';
			case 'notApplied': return 'Ninguna solicitud';
			case 'validityPeriod': return 'período de validez';
			case 'renewal': return 'solicitud de renovación';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Escanee el código para autorizar el inicio de sesión en el terminal';
			case 'rewards': return 'incentivos';
			case 'roles': return 'carácter';
			case 'developerCenter': return 'Centro de desarrollo';
			case 'appName': return 'Nombre de la aplicación';
			case 'pleaseSelect': return 'seleccione';
			case 'category': return 'categoría';
			case 'keywords': return 'byword';
			case 'pleaseEnterAkeyword': return 'Introduzca una palabra clave';
			case 'createApplication': return 'Creación de aplicaciones';
			case 'appType': return 'Tipo de aplicación';
			case 'numberOfCategoriesMustBetween1and3': return 'El número de categorías debe estar comprendido entre 1 y 3';
			case 'appLogoSpecifications': return 'Formato de imagen: png, tamaño: menos de 100 KB, resolución (píxeles): 256*256';
			case 'localAlbum': return 'Álbumes de fotos locales';
			case 'networkPath': return 'ruta de red';
			case 'imageURLkAddress': return 'URL de la imagen';
			case 'urlAddressFormatIsIncorrect': return 'Dirección URL con formato incorrecto';
			case 'imageFormatOnlySupportsPng': return 'Las imágenes sólo se admiten en formato "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'La longitud debe estar comprendida entre ${a}-${b} caracteres.';
			case 'introduction': return 'breve';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'El tamaño de la imagen no puede ser superior a ${a}, actualmente ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'La resolución de la imagen debe ser: ${p1}(píxeles), actualmente ${p2}';
			case 'becomeDeveloper': return 'Conviértase en desarrollador';
			case 'developerInformation': return 'Información para desarrolladores';
			case 'teamName': return 'Nombre del equipo';
			case 'website': return 'nodo';
			case 'other': return 'que no sean';
			case 'githubVerification': return 'Verificación en Github';
			case 'exampleUrl': return 'Ejemplo de Url';
			case 'githubVerificationTip': return ({required Object did}) => 'Utilice su cuenta de GitHub para crear un archivo \'delta.did\' en su repositorio con el contenido de \'${did}\'; a continuación, pegue la dirección Url de githubusercontent de ese archivo en este cuadro de entrada para la autenticación.';
			case 'createApp': return 'Creación de aplicaciones';
			case 'appManagement': return 'gestión de aplicaciones';
			case 'statusLogs': return 'Registro de estado';
			case 'bad': return 'no sirve';
			case 'normal': return 'habitual';
			case 'good': return 'un excelente';
			case 'onceCreatedItCannotBeChanged': return 'Una vez creado, no se puede modificar.';
			case 'manageApplicationEntity': return 'Gestión de entidades de aplicación';
			case 'currentVersion': return 'versión actual';
			case 'submitVersion': return 'Versión presentada';
			case 'packageOnlySupportZipCompressedFile': return 'El paquete sólo admite archivos comprimidos en zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'No se ha encontrado el archivo \'${name}\' en el paquete zip.';
			case 'fileList': return 'Lista de documentos:';
			case 'programPackage': return 'Paquete de programación:';
			case 'automaticallyExtractFromVersionFile': return 'Extraído automáticamente de los archivos \'.version\'.';
			case 'dappVersionFormatTip': return 'El formato del número de versión debe ser un decimal con una precisión de 2 dígitos, sin superar un máximo de 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'El número de versión debe ser mayor que la versión actual \'${v}\'';
			case 'versionNotes': return 'Pie de imprenta:';
			case 'updateRelease': return 'nueva versión';
			case 'loadAndRun': return 'Cargar y ejecutar';
			case 'notYetSubmittedProgramPackage': return 'Aún no se ha presentado el programa.';
			case 'authorizeMinidAppLogin': return 'Autorizar el inicio de sesión en la miniapp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Para confirmar la autorización, introduzca "sí".';
			case 'authorizeNow': return 'Autorización inmediata';
			case 'operation': return 'Operación.';
			case 'statusChange': return 'Cambio de estado';
			case 'changeTo': return 'Cambia a:';
			case 'notes': return 'Observaciones.';
			case 'changesNotEffective': return '¡El cambio no es válido !';
			case 'released': return 'Publicado en';
			case 'inPublicBeta': return 'beta abierta';
			case 'developers': return 'Desarrollado por.';
			case 'reviewList': return 'Lista de comentarios.';
			case 'postReview': return 'Deja un comentario';
			case 'scoreNow': return 'Tarifas';
			case 'description': return 'Descripción.';
			case 'noData': return '(^-^)\n No hay datos disponibles';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Se ha actualizado la versión de ${a} a ${b}.';
			case 'loadNewVersion': return 'Cargar nueva versión';
			case 'name': return 'Nombre.';
			case 'canisterId': return 'Id. del depósito';
			case 'updateTime': return 'tiempo de actualización';
			case 'contractCanistersState': return 'Estado del depósito contractual';
			case 'userDistribution': return 'distribución de usuarios';
			case 'settings': return 'Configuración';
			case 'security': return 'Seguridad';
			case 'invite': return 'invitaciones';
			case 'more': return 'Más...';
			case 'receiveAddress': return 'Recibir dirección:';
			case 'hangingAmount': return 'colgando';
			case 'hangingAmountTips': return 'Las Cantidades Pendientes son registros temporales de las recompensas generadas por la minería de su equipo subordinado, una vez que haya realizado una sesión de minería estas cantidades se recogerán en las Cantidades Pendientes.';
			case 'pendingAmount': return 'pendiente';
			case 'pendingAmountTips': return 'Los importes pendientes son los que aún no se han confirmado contra los anunciantes, y los que tengan coincidencias válidas se transferirán a registros USCT válidos, excluyendo las partes no válidas, si las hubiera.';
			case 'received': return 'recibido';
			case 'processing': return 'en curso';
			case 'replied': return 'encuestado';
			case 'rejected': return 'rechazo';
			case 'unknown': return 'uncharted';
			case 'insufficientBalance': return 'Equilibrio insuficiente.';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'El saldo de ${x} es insuficiente para cubrir las tasas de la red de enlaces cruzados';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Todavía no se ha completado una transacción y no se puede transferir en este momento';
			case 'thisfunctionNotSupportExternalCalls': return 'Esta función no admite llamadas externas';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'No hay ninguna coincidencia para una dirección que se pueda utilizar para pagar tasas de cadena cruzada, por favor, cambie a otra red de cadena para intentarlo.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'La coincidencia actual con el importe máximo que se puede transferir en una sola transacción es de ${x}.';
			case 'memoMustNotBeMoreThan64bytes': return 'Las observaciones no deben superar los 64 bytes';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'El saldo es insuficiente y el importe es de: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'No puede vincular más de 3 direcciones.\nSi necesita vincular una nueva dirección de pago.\nDesvincule primero otra dirección.';
			case 'parametersA_exception': return ({required Object x}) => 'Parámetros: ${x}, excepción';
			case 'parameterException': return 'Excepción de parámetro';
			case 'transferAmountMustBeLargerThan0': return 'El importe de la transferencia debe ser superior a 0';
			case 'authorizationHasExpired': return 'Autorización caducada';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'La aplicación no ha sido autorizada por el propietario';
			case 'authenticationTokenIsInvalid': return 'Token de autenticación no válido';
			case 'verifyInfoIsInvalidOrExpired': return 'Información de validación no válida o caducada';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Verificar que el número de terminales de acceso ha superado el límite de uno entre diez mil.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'La participación en la minería debe ser superior a 3 días';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'El número de miembros del círculo de seguridad no puede ser inferior a tres';
			case 'avatarIsNotSet': return 'Avatar no fijado';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'El número de remisiones directas no puede ser inferior a 3';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'El plazo es insuficiente y sólo puedes cambiar de número de teléfono móvil una vez al año.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Este número de teléfono móvil ya existe y no se puede duplicar';
			case 'securityCodeIsIncorrect': return 'Código de seguridad incorrecto';
			case 'securityCodeMayHaveExpired': return 'El código de seguridad puede haber caducado';
			case 'sessionIdIsInvalidOrExpired': return 'Identificador de sesión no válido o caducado';
			case 'sessionHasBeenAuthorized': return 'Se autorizó la finalización de la sesión.';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Sólo puede renovarse dentro de los ${x} días anteriores al vencimiento del plazo';
			case 'notYetGrantedDeveloperPermissions': return 'Aún no hay derechos de desarrollador';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'El campo ${x} no puede ser nulo';
			case 'emailFormatError': return 'Error de formato de correo electrónico';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Error de formato \'${x}';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'El campo "${x}" debe tener entre ${y} y ${z} caracteres.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'El rango de selección \'${x}\' debe estar comprendido entre ${y} y ${z}.';
			case 'unchanged_sameAsOldContent': return 'Sin cambios, ¡el mismo contenido que antes!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: ¡\'${y}\' ya existe!';
			case 'mobileNumberHasNotJoinedDelta': return '¡Este número de móvil no ha sido añadido a Delta!';
			case 'referrerIdCannotBeEmpty': return 'El ID de referencia no puede estar vacío.';
			case 'referrerIdDoesNotExist': return 'El ID de referencia no existe.';
			case 'didIsIncorrectOrInvalid': return 'El DID es incorrecto o inválido.';
			case 'accessTokenIsIncorrectOrInvalid': return 'El accessToken es incorrecto o inválido.';
			case 'minimumWithdrawalAmountIs1USD': return 'Mínimo 1USD para una sola retirada';
			case 'miningTimeIsNotYet': return 'Aún no es hora de minar.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Ya existe, ¡por favor no lo añada de nuevo!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'No se puede utilizar el número de registro como número de acceso de autenticación';
			case 'canotAddYourSelf': return 'No puedes agregarte';
			case 'logOut': return 'Cerrar sesión';
			case 'confirmLogout': return 'Confirmar cierre de sesión';
			case 'logOutTipsText': return 'Nota: Según el informe técnico, cada verificación de inicio de sesión de su cuenta consumirá una cierta cantidad de sus monedas DTC que se pagará al verificador como incentivo, así que no intente iniciar y cerrar sesión innecesariamente, haciendo clic en el botón de abajo cerrará sesión inmediatamente.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Por favor, introduzca "sí" para confirmar el cierre de sesión.';
			case 'tip': return 'llamar la atención sobre algo';
			case 'cancel': return 'anulaciones';
			case 'close': return 'coagulación';
			case 'selected': return 'seleccionado';
			case 'edit': return 'compilador';
			case 'submit': return 'presentar (un informe, etc.)';
			case 'goBack': return 'regresión (en psicología)';
			case 'copiedToClipboard': return 'Se ha copiado en el portapapeles.';
			case 'nickname': return 'término cariñoso';
			case 'confirm': return 'reconocer';
			case 'cannotBeEmpty': return 'No puede estar vacío';
			case 'deleteSuccessful': return '¡Borrado con éxito!';
			case 'successfullyModified': return 'La modificación ha sido un éxito.';
			case 'executionSuccessful': return 'La aplicación fue un éxito.';
			case 'preview': return 'avances';
			case 'followSystem': return 'sistema de seguimiento';
			case 'change': return 'variación';
			case 'replace': return 'recambios';
			case 'view': return 'comprobar';
			case 'manage': return 'dirección';
			case 'modify': return 'modificaciones';
			case 'replacedSuccessfully': return '¡Reemplazo con éxito!';
			case 'authentication': return 'autenticación';
			case 'reacquire': return 'recuperar';
			case 'tryAgain': return 'Inténtalo de nuevo.';
			case 'querying': return 'Se están haciendo averiguaciones...';
			case 'writingToOnChain_pleaseWait': return 'Se está escribiendo en la cadena, por favor espere ...';
			case 'versionCheck': return 'detección de versiones';
			case 'alreadyLatestVersion': return '¡Ya está la última versión!';
			case 'foundNewVersion': return 'Descubra la nueva versión:';
			case 'upgradeLink': return 'Enlace de actualización:';
			case 'deviceDescription': return 'Descripción del equipamiento.';
			case 'notification30SecondsBeforeMiningStops': return '¡Ejecute el recordatorio de notificación 30 segundos antes de que se detenga la minería!';
			case 'goMining': return 'Ir a minar';
			case 'deltaMiningReminder': return 'Recordatorio de minería Delta';
			case 'clickToMine_miningIsAboutToStop': return '¡Haga clic aquí para minar, la minería se detendrá pronto!';
			case 'incorrect_input': return '¡Entrada incorrecta!';
			case 'are_you_sure_delete': return '¿Estás seguro de eliminar?';
			case 'delete_account': return 'Eliminar cuenta';
			case 'how_to_operate_it': return '¿Ves cómo operarlo?';
			case 'deletion_warning_tip': return 'Si elimina su cuenta, perderá todas sus monedas Delta y también se perderán todas las ganancias de otros miembros';
			case 'launchWhatsAppProgram': return 'Iniciar el programa WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Los números de acceso con este icono también admiten la verificación de mensajes de WhatsApp. Al enviar mensajes internacionales, se recomienda utilizar WhatsApp para aumentar la tasa de éxito y reducir los costos.';
			case 'ihaveSentVerificationString': return 'He enviado una cadena de verificación';
			case 'totalOfPeople': return 'Total de personas: ';
			case 'numberOfPeopleMining': return 'Número de personas minando';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Puedes usar un navegador en otro dispositivo para escanear el código QR y pasarlo al programa SMS';
			case 'toggle': return 'Alternar';
			case 'DSMSverifier': return 'DSMS Verificador';
			case 'activate': return 'Activar';
			case 'activated': return 'Activado';
			case 'generateActivationCommand': return 'Generar comando de activación';
			case 'activationCommand': return 'Comando de activación';
			case 'activationSentedTip': return 'Después de enviar el SMS de activación, verifique el estado de activación en el dispositivo terminal de acceso';
			case 'biometricsNotEnabledTip': return 'La biometría (rostro o huella digital) no está habilitada en su dispositivo. Habilítela para continuar';
			case 'error': return 'Error';
			case 'exceptionOccurredWhenCallingBiometric': return '¡Se produjo una excepción al llamar a la función biométrica (rostro o huella digital)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: 'Se verifican '),
				checkedNum,
				const TextSpan(text: ' números de acceso, se debe seleccionar '),
				shouldNum,
				const TextSpan(text: '.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '¿Se ha enviado ${text} a los ${n} números de acceso anteriores?';
			case 'interface': return 'Interfaz:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Tiempo de espera agotado o discrepancia en el número del remitente';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'El número de móvil del miembro del círculo de seguridad que ingresaste no coincide: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Inicie sesión dentro de los 10 minutos posteriores al cierre de sesión para evitar la verificación de dos factores.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Se deben completar al menos ${n} números de teléfono móvil';
			case 'noAccessNumberInYourRegionYet': return 'Aún no hay ningún número de acceso en tu región';
			case 'notEnoughAccessNumbersInYourRegion': return 'No hay suficientes números de acceso en su región';
			case 'tipsForDeployDSMSterminal': return 'El sistema ha cargado automáticamente algunos números de acceso de otros países. Para brindar servicios de verificación mejores y más económicos, se recomienda que usted o la persona que lo refirió implementen el terminal DSMS localmente para obtener comisiones de verificación.';
			case 'noOneCanProvideMeTheSecurityCode': return '¿Nadie puede proporcionarme el código de seguridad?';
			case 'useSupplementalMode': return 'Usar modo suplementario';
			case 'returnToSecurityCodeMode': return 'Regresar al modo de código de seguridad';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Por favor, introduzca el número de móvil asociado. El código de país puede omitirse.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'El número de móvil de ${name} es incorrecto';
			case 'matchingVerificationStrategyIs': return 'La estrategia de verificación de coincidencia es:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'El saldo es mayor a 3 ICP, no es necesario agregar combustible por ahora.';
			case 'escrowAccount': return 'Cuenta de depósito en garantía';
			case 'fuelRelay': return 'Relé de combustible';
			case 'pourFuel': return 'Vierte combustible';
			case 'fuelState': return 'Estado del combustible';
			case 'pouringFuelTips': return 'Verter combustible no aporta ninguna ventaja ni desventaja, su propósito es enriquecer la experiencia del sistema Delta';
			case 'sponsorDevelopersByWatchingAds': return 'Patrocina a desarrolladores viendo anuncios';
			case 'status': return 'Estado';
			case 'date': return 'Fecha';
			default: return null;
		}
	}
}

extension on _StringsFr {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'fig. début';
			case 'switchLanguage': return 'Changer de langue';
			case 'languageSwitch': return 'Changement de langue';
			case 'slogan': return 'Construire une économie décentralisée dans le delta';
			case 'countryRegionCode': return 'Code pays/zone';
			case 'countryRegionSelection': return 'Sélection de pays et de régions';
			case 'nextStep': return 'l\'étape suivante';
			case 'yourPhoneNumber': return 'Votre numéro de téléphone.';
			case 'pleaseSelectCountryAndRegion': return 'Veuillez sélectionner votre pays/région';
			case 'pleaseEnterPhoneNumber': return 'Veuillez saisir un numéro de téléphone valide !';
			case 'referrerDid': return 'Référent DID';
			case 'pleaseEnterTheReferrersDid': return 'Veuillez saisir l\'identité décentralisée d\'un référent valide';
			case 'thisDidIsInvalid': return 'Cette DID n\'est pas valide.';
			case 'nicknameFormatTips': return 'Le pseudonyme ne doit pas être vide et ne doit pas comporter plus de 16 chiffres.';
			case 'additionalIinformation': return 'Informations complémentaires';
			case 'invitationSubject': return 'Une invitation à la recherche d\'un consensus au sein du Delta';
			case 'invitationLetter': return ({required Object did}) => 'Bonjour, je participe à la construction du consensus Delta !\n Delta est une nouvelle plateforme de monnaie numérique open source fonctionnant sur ICP, qui vous permet de gérer et d\'utiliser diverses monnaies numériques sans mots de passe, clés privées ou mnémoniques. Veuillez cliquer sur ce lien https://delta.kim/auto/download pour installer l\'application et vous êtes maintenant invité à participer à la construction du consensus et à la frappe des monnaies.\n Référent DID : ${did}';
			case 'dSMSverification': return 'Validation du DSMS';
			case 'getAccessNumbers': return 'Obtenir des numéros d\'accès';
			case 'getAccessNumberPromptMessage': return 'Cliquez sur le bouton "Obtenir" ci-dessous pour faire tourner une série de numéros d\'accès de vérification par SMS dans la file d\'attente.';
			case 'optionalAccessNumbers': return 'Numéro d\'accès optionnel';
			case 'accessNumber': return 'numéro d\'accès';
			case 'TELCO': return 'opérateur (d\'une centrale électrique, d\'un réseau de transport, etc.)';
			case 'score': return 'score';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('fr'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Veuillez cocher '),
					nBuilder(n),
					const TextSpan(text: ' numéros d\'accès et cliquer sur le bouton "'),
					span('text'),
					const TextSpan(text: '" pour passer à l\'étape suivante.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Veuillez cocher '),
					nBuilder(n),
					const TextSpan(text: ' numéros d\'accès et cliquer sur le bouton "'),
					span('text'),
					const TextSpan(text: '" pour passer à l\'étape suivante. '),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta est une expérience de monnaie numérique mondiale décentralisée et open source, ainsi qu\'un écosystème d\'applications de crypto-monnaie.';
			case 'deltaGoalsDesc': return 'L\'objectif est de permettre aux gens d\'utiliser Delta pour co-construire de nouvelles monnaies numériques universelles, équitables, sûres, rapides et écologiques. Et de fournir divers scénarios d\'application efficaces pour ces monnaies numériques et les crypto-monnaies précédentes.';
			case 'details': return 'particularités';
			case 'get': return 'gain';
			case 'select': return 'option';
			case 'send': return 'envoi';
			case 'complete': return 'remplir';
			case 'selectedAccessNumberPrompt': return 'Lorsque cette option est sélectionnée, le numéro d\'accès complet s\'affiche et une chaîne d\'authentification est générée.';
			case 'location': return 'placement';
			case 'verificationString': return 'chaîne de validation';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Veuillez utiliser votre numéro de téléphone '),
				num,
				const TextSpan(text: ' et envoyer '),
				label,
				const TextSpan(text: ' à '),
				accessNumber,
				const TextSpan(text: ' pour terminer la vérification.'),
			]);
			case 'ihaveSentTheSMS': return 'J\'ai envoyé un message texte';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'La chaîne de validation est valable pendant 6 minutes, temps restant : '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Trop rapide pour attendre ${x} secondes pour continuer !';
			case 'waitingForVerificationSMS': return 'En attente du SMS de vérification...';
			case 'partSuccsForVerificationSMS': return 'La vérification par SMS de l\'un des terminaux d\'accès a été effectuée !';
			case 'creatingAccessToken': return 'Création d\'un jeton d\'accès...';
			case 'intoDelta': return 'A l\'intérieur de Delta';
			case 'deltaAccountIsLoggedIn': return 'Votre compte Delta est connecté';
			case 'iHavLoggedOut': return 'Je ne suis plus dans le coup.';
			case 'startTwoFactorVerification': return 'Démarrage de la double vérification';
			case 'securityCircleVerification': return 'Validation du cercle de sécurité';
			case 'generateSecurityCode': return 'Générer un code de sécurité';
			case 'generateSecurityCodeHintText': return 'Le code de sécurité généré sera envoyé à un membre de votre cercle de sécurité choisi au hasard.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Vous n\'avez pas défini de cercle de sécurité, votre compte n\'est pas du tout sécurisé. Veuillez saisir un code de 6 chiffres et passer à l\'étape suivante.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Le code de sécurité a été généré, veuillez contacter la famille et les amis suivants pour leur demander d\'extraire le code de sécurité afin que vous puissiez passer la vérification. valable pendant 30 minutes !';
			case 'itGetSecurityCodeTip': return 'Conseil : vous pouvez obtenir le code de sécurité en double-cliquant sur le pseudonyme de votre compte dans l\'application Delta -> Menu -> Fournir la sécurité.';
			case 'securityCircleMemberList': return 'Liste des membres du cercle de sécurité:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Veuillez sélectionner un parent ou un ami dans la liste des membres pour générer et vous fournir un code de sécurité afin de vérifier votre véritable identité. Le but est d\'empêcher le compte d\'être contrôlé par d\'autres lorsque le numéro de téléphone mobile est perdu ou volé.';
			case 'formatIsXdigits': return ({required Object num}) => 'Format sous forme de chiffres ${num}';
			case 'signInSuccessfully': return 'Connexion réussie !';
			case 'twoFAandLogin': return 'Double authentification et connexion';
			case 'verificationSuccessful': return 'Vérifier le succès !';
			case 'validationFailed': return 'La validation a échoué !';
			case 'dappInfo': return 'Informations sur le DApp';
			case 'securityCircle': return 'anneau de sécurité';
			case 'securityCode': return 'code de sécurité';
			case 'provideSecurity': return 'assurer la sécurité';
			case 'addManully': return 'Ajouter manuellement';
			case 'addFromContacts': return 'Ajouter à partir du carnet d\'adresses';
			case 'addSecurityCircle': return 'Ajouter un cercle de sécurité';
			case 'inputType': return 'Type d\'entrée';
			case 'mobileNumber': return 'numéro de téléphone mobile';
			case 'did': return 'Identité de l\'adresse';
			case 'pleaseEnterValidDID': return 'Veuillez saisir une identité décentralisée valide';
			case 'pleaseEnterValidWalletAddress': return 'Veuillez saisir une adresse de portefeuille valide';
			case 'appellation': return 'formulaire d\'adresse';
			case 'appellationHint': return 'Comment l\'appelez-vous, comme "bébé" ?';
			case 'addSecurityCircleTips': return 'N\'ajoutez pas de personnes en qui vous n\'avez pas confiance à votre cercle de sécurité.';
			case 'referralTeam': return 'Équipes recommandées';
			case 'profile': return 'Informations sur le compte';
			case 'menu': return 'menu';
			case 'directly': return 'direct';
			case 'indirectly': return 'indirecte';
			case 'inviteContacts': return 'Invitation Contact';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Votre invité est '),
				nickname,
				const TextSpan(text: ' et vous avez référé directement '),
				num1,
				const TextSpan(text: ' personnes, dont '),
				num2,
				const TextSpan(text: ' sont actuellement en ligne.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Vous avez référencé indirectement '),
				num1,
				const TextSpan(text: ' personnes, dont '),
				num2,
				const TextSpan(text: ' sont actuellement en ligne.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Invitez vos amis à rejoindre Delta et améliorez ensemble le consensus social. Pour chaque recommandation directe, le taux d\'extraction d\'une personne augmente le taux de base de '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Invitez des amis à rejoindre Delta et, ensemble, améliorez le consensus social en augmentant le taux de base de '),
				rate2,
				const TextSpan(text: ' pour chaque personne indirectement recommandée.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Êtes-vous sûr de vouloir supprimer "${name}" ?';
			case 'safetyCircleRoleQ': return 'À quoi sert l\'anneau de sécurité ?';
			case 'safetyCircleRoleA': return 'Protégez votre compte en fournissant une authentification secondaire dans les situations sensibles.';
			case 'howSecurityCirclesWorkQ': return 'Comment fonctionnent les anneaux de sécurité ?';
			case 'howSecurityCirclesWorkA': return 'Dans le cas où une vérification par le Cercle de sécurité est nécessaire, le programme Delta Smart Contracts sélectionnera au hasard un membre de la liste de copains du Cercle de sécurité pour l\'aider à vous fournir un code de sécurité afin de compléter la vérification d\'identité à votre place. Lorsque vous demanderez le code de sécurité au membre, il pourra confirmer si vous êtes bien vous ou non. En même temps, le programme vous demandera : "Refusez de fournir le code de sécurité s\'il ne s\'agit pas de vous", afin de protéger la sécurité de votre compte. Vous devez donc toujours vous assurer que les membres de votre cercle de sécurité sont des personnes de confiance.';
			case 'securityCircleBeUsedQ': return 'Quand sera-t-il utilisé ?';
			case 'securityCircleBeUsedA1': return '1) Lorsque vous perdez le contrôle de votre Delta APP, il s\'agit généralement de la perte ou du vol de votre téléphone portable.';
			case 'securityCircleBeUsedA2': return '2) Dans le cas de certaines opérations sensibles, le programme Delta Smart Contract doit confirmer qu\'il s\'agit bien de vous.';
			case 'provideSafetyTip1': return 'Lorsque votre copain vous demande son code de sécurité, assurez-vous de confirmer qu\'il s\'agit bien du sien.';
			case 'provideSafetyTip2': return 'Vous assurez la sécurité des amis susmentionnés, qui vous ont désigné comme la personne la plus digne de confiance dans leur cercle de sécurité et qui ont besoin que vous leur fournissiez une confirmation de sécurité au cas où ils effectueraient des opérations sensibles sur leur compte.';
			case 'provideSafetyTip3': return 'Double-cliquez sur l\'avatar de l\'autre personne pour extraire le code de sécurité si nécessaire.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'L\'autre partie n\'a pas de code de sécurité à extraire !';
			case 'existSecurityCodeTip': return 'Assurez-vous que l\'ami ou le membre de la famille qui vous demande le code de sécurité est le même que l\'ami ou le membre de la famille. Pour la protection de votre ami ou du membre de la famille, vous devez refuser de fournir le code de sécurité si l\'ami ou le membre de la famille n\'est pas le même que l\'ami ou le membre de la famille.';
			case 'avatarSettings': return 'Paramètres de l\'avatar';
			case 'NFTAvatarPropertyRightsText': return 'Clause de non-responsabilité : l\'utilisation du NFT en question comme avatar est uniquement une préférence personnelle et n\'a rien à voir avec la détention des droits de propriété intellectuelle de ce NFT.';
			case 'projectWebsite': return 'Site web du projet:';
			case 'whitepaper': return 'livre blanc:';
			case 'indexID': return 'Index Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Index entre ${start} et ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Saisissez l\'identifiant de votre NFT préféré et le programme le chargera automatiquement comme avatar pour vous.';
			case 'miningRate': return 'taux d\'exploitation minière';
			case 'miningDetails': return 'Détails de l\'exploitation minière';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Taux d\'extraction total : '),
				rate,
				const TextSpan(text: ' δ/jour'),
			]);
			case 'EndOfMiningSession': return 'Le cycle minier est terminé :';
			case 'tapToMineDeltaCoin': return 'Cliquez pour extraire des pièces de Delta ↑';
			case 'clickToStartMining': return 'Cliquez pour commencer l\'exploitation minière !';
			case 'miningHasStoppedPromptDesc': return 'L\'exploitation minière s\'est arrêtée, chaque 24 heures est un cycle d\'exploitation minière, cliquez sur l\'icône de l\'éclair pour commencer un nouveau cycle d\'exploitation minière.l\'exploitation minière de Delta est un mécanisme d\'allocation qui ne consomme pas de puissance arithmétique supplémentaire et de trafic réseau de votre appareil.';
			case 'aboutBaseRate': return 'À propos du taux de base ?';
			case 'baseRateDescription': return 'Comme convenu dans le livre blanc, la règle de diminution du taux de base pour le Delta Mining sera divisée en deux phases.\nPhase 1 : Le taux sera de 32δ/jour lorsque le nombre de participants (inscriptions) est inférieur ou égal à 3 000. Sur cette base, le taux de base est divisé par deux chaque fois que le nombre de personnes augmente d\'un facteur 10.\nPhase 2 : Lorsque le nombre de participants atteint 30 millions ou plus, le taux de base est divisé par deux chaque fois que le nombre de participants augmente d\'un facteur 3. Jusqu\'à ce que la dernière fouille arrête la production.';
			case 'baseRate': return 'débit de base (comme pour le RNIS)';
			case 'directReferralRewards': return 'Prime de parrainage direct';
			case 'directReferralRewardDesc': return 'Pour chaque parrainage direct, votre taux de minage sera augmenté d\'un tiers supplémentaire du taux de base pendant qu\'ils minent.\n\n De plus, le statut minier de vos filleuls sera également pris en compte dans le calcul de votre bonus de parrainage direct.';
			case 'indirectReferralRewards': return 'Prime de parrainage indirect';
			case 'indirectReferralRewardDesc': return 'Lorsqu\'un référent indirect exploite une mine, votre taux d\'exploitation est augmenté d\'un dixième du taux de base.\n\n Votre équipe de référents directs, chaque personne qu\'ils référencent à nouveau représente un référent indirect pour vous.';
			case 'mine': return 'extraire (minerai ou autre ressource d\'une mine)';
			case 'thisMiningInformation': return 'Informations actuelles sur l\'exploitation minière';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Participation à l\'exploitation minière : '),
				x,
				const TextSpan(text: ' fois'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Gain total cette fois-ci : '),
				x,
				const TextSpan(text: ' Delta coins'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Gains de base : '),
				x,
				const TextSpan(text: ' pièces'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contribution directe de l\'équipe : '),
				x,
				const TextSpan(text: ' pièces'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contribution indirecte de l\'équipe : '),
				x,
				const TextSpan(text: ' pièces'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Durée de l\'intervalle entre les fouilles : '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Heures d\'extraction effectives : '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} heures';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Pour la sécurité des biens, les membres du cercle de sécurité doivent avoir en permanence 3 à 5 personnes de confiance.';
			case 'index': return 'indexation';
			case 'amount': return 'somme d\'argent';
			case 'balance': return 'soldes';
			case 'timeStamp': return 'horodatage';
			case 'summary': return 'résumés';
			case 'miningHasStopped': return 'L\'exploitation minière a cessé.';
			case 'miningHasStoppedDesc': return 'Votre activité minière est actuellement arrêtée et vous commencerez à gagner de l\'argent immédiatement.';
			case 'startMining': return 'Commencer l\'exploitation minière';
			case 'changeMobileNumber': return 'Changement de numéro de téléphone mobile';
			case 'currentMobileNumber': return 'Numéro de téléphone mobile actuel';
			case 'newMobileNumber': return 'Nouveau numéro de téléphone mobile';
			case 'securityCodeFormatIs6digits': return 'Le format du code de sécurité est de 6 chiffres !';
			case 'startVrification': return 'Début de la vérification';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Ce numéro mobile existe déjà, DID associé : ${dId}';
			case 'noDataYet': return 'Pas de données disponibles';
			case 'previousMobileNumber': return 'Numéro de téléphone mobile précédent';
			case 'changeLog': return 'Enregistrement des modifications';
			case 'referralLinkToShare': return 'Liens recommandés à partager';
			case 'referrer': return 'référent';
			case 'isoCountryCode': return 'Code pays ISO';
			case 'avatarLogo': return 'logo de l\'en-tête';
			case 'creationTime': return 'Temps de création';
			case 'lastUpdate': return 'Dernière mise à jour';
			case 'numberOfSecurityCircleMembers': return 'Nombre de membres des cercles de sécurité';
			case 'theLatestMining': return 'Dernier coup de pioche';
			case 'effectiveMiningDays': return 'Nombre de jours d\'exploitation minière effective';
			case 'modifyNickname': return 'Changer de pseudo';
			case 'didNotChange': return 'Pas de changement !';
			case 'kycVerification': return 'Vérification KYC';
			case 'faceID': return 'Face ID';
			case 'touchID': return 'Identification par empreinte digitale';
			case 'biometricsAuthorizationTest': return 'Essais d\'authentification biométrique';
			case 'currentState': return 'état actuel';
			case 'biometricsAuthenticationLocalizedReason': return 'Utilisez le déverrouillage de votre appareil pour vérifier votre identité.';
			case 'graph': return 'des archives de graphiques (par exemple des cartes, des documents ou des figures botaniques)';
			case 'referralRelationshipGraph': return 'Cartographie des relations d\'orientation';
			case 'nativeContacts': return 'Contacts locaux';
			case 'registrationAndMiningTrends': return 'Tendances en matière d\'enregistrement et d\'exploitation minière';
			case 'inMining': return 'l\'exploitation minière';
			case 'registrationVolume': return 'volume d\'enregistrement';
			case 'unmined': return 'inexploité';
			case 'mined': return 'miné';
			case 'communityMining': return 'Exploitation minière communautaire';
			case 'consensusPromotionFund': return 'Fonds de promotion du consensus';
			case 'ecologicalAwardFund': return 'Fonds d\'incitation écologique';
			case 'icpFuelCrowdfunding': return 'ICP Fuel Crowdfunding';
			case 'coreDeveloperRewards': return 'Récompenses pour les développeurs de base';
			case 'totalAllocation': return 'Répartition globale';
			case 'miningRatio': return 'Taux d\'exploitation minière';
			case 'billion.30': return '30 milliards d\'euros';
			case 'billion.60': return '60 milliards d\'euros';
			case 'billion.180': return '180 milliards d\'euros.';
			case 'billion.300': return '300 milliards d\'euros';
			case 'watchAdsToSupportDevelopers': return 'Regarder des publicités pour soutenir les développeurs';
			case 'loadingAdcomponents': return 'Chargement des composants de l\'annonce...';
			case 'timeIsNotUp': return 'Le temps n\'est pas écoulé !';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Le chargement a échoué, le réseau est peut-être bloqué !';
			case 'pendingUSCTrecords': return 'Dossiers en attente de l\'USCT';
			case 'pendingUSCTrecordsDesc': return 'Les enregistrements USCT en attente seront confirmés par la plateforme publicitaire dans un délai de 15 à 30 jours, les enregistrements valides seront transférés dans la liste des enregistrements USCT et le montant USCT approprié sera ajouté au solde du compte.';
			case 'validity': return 'validité';
			case 'advertiser': return 'annonceurs';
			case 'earned': return 'gagnés';
			case 'withdraw': return 'retirer';
			case 'validUSCTrecords': return 'Registres effectifs de l\'USCT';
			case 'USCTmining': return 'USCT Mining';
			case 'aboutUSCTmining': return 'Sur les mines de l\'USCT ?';
			case 'aboutUSCTminingItme1': return '1) USDT est un stablecoin en dollars américains mondialement populaire qui peut être facilement échangé contre des monnaies souveraines nationales sur les principaux échanges de crypto-monnaies dans le monde entier.';
			case 'aboutUSCTminingItme2': return '2) USCT est une mesure temporaire du produit du minage USCT, connu sous le nom de crédit USD, qui sera finalement converti en USDT en fonction du montant de règlement réel et des règles de distribution de la plate-forme publicitaire et de la proportion correspondante.';
			case 'aboutUSCTminingItme3': return '3) USCT Mining est une fonction de réalisation d\'annonces de trafic de la communauté Delta. Elle tire parti de la vaste base d\'utilisateurs de la communauté Delta pour offrir de multiples avantages aux annonceurs, aux développeurs de Delta et aux absents. Il est conçu pour fournir un certain revenu effectif aux travailleurs absents au début, lorsque l\'écosystème Delta n\'est pas encore formé et prospère ; en même temps, il fournit également un certain soutien financier aux développeurs pour s\'assurer qu\'ils peuvent continuer à fournir des services de développement pendant une longue période, et finalement être en mesure de réaliser tous les plans dans le livre blanc ; et il fournit également un canal promotionnel efficace pour les annonceurs de produits.';
			case 'aboutUSCTminingItme4': return '4) Les règles de distribution sont conçues de manière à ce que 40 % des recettes totales soient utilisées comme commissions de service technique pour les développeurs et les 60 % restants comme récompenses pour l\'absentéisme au sein de la communauté. La récompense pour absentéisme fait partie du modèle de distribution multiniveau similaire au DTC, la récompense pour absentéisme sera divisée en trois parties selon le ratio 6:3:1, chaque fois qu\'une récompense pour absentéisme du minage USCT 6 parties allouées à l\'absentéisme des annonces actuelles, 3 parties allouées au référent supérieur, 1 partie allouée au référent de second niveau. De même, vous pouvez obtenir la même récompense pour les amis que vous recommandez par le biais de USCT mining. L\'avantage de cette distribution à plusieurs niveaux est que n\'importe qui peut gagner une quantité relativement importante d\'USDT en développant une équipe de downline.';
			case 'aboutUSCTminingItme5': return '5) La période de règlement est de 7 jours, c\'est-à-dire que tous les 7 jours, la validité est vérifiée auprès de la plateforme publicitaire, et la validité confirmée du produit et le montant réel seront enregistrés dans le solde. Le montant minimum pour chaque retrait est de 10 USD.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Lignes ${x} à ${y}.';
			case 'wallet': return 'sacs à main';
			case 'multiChainWallet': return 'portefeuille multichaîne';
			case 'deposit': return 'dépôt (par exemple sur un compte bancaire)';
			case 'transfer': return 'transfert (argent sur un compte bancaire)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} dans l\'adresse du portefeuille';
			case 'transactions': return 'Registres des transactions';
			case 'network': return 'réticulation';
			case 'walletAddress': return 'Adresse du portefeuille';
			case 'currentAddress': return 'adresse actuelle';
			case 'depositAddress': return 'Adresse de recharge';
			case 'receivingMoneyAddress': return 'adresse du bénéficiaire';
			case 'applyTempDepositAddress': return 'Adresse pour la demande d\'un complément temporaire';
			case 'tempDepositAddressTip': return '1) Il s\'agit d\'une adresse de dépôt partagé. Veuillez ne pas déposer le montant après l\'expiration du bail ou après la déliaison. Dans ce cas, le montant sera perdu.';
			case 'tempDepositAddressTip2': return '2) Avant d\'effectuer un dépôt, veuillez vous assurer que le [Nom de la chaîne] et le [Nom de la pièce] correspondent exactement ; dans le cas des jetons de contrat, vous devez également vous assurer que la [Norme du contrat] et l\'[Adresse du contrat] correspondent exactement.';
			case 'tempDepositAddressTip3': return '3) N\'essayez pas de déposer des fonds qui ne correspondent à aucun des paramètres mentionnés dans les conseils ci-dessus, sinon le montant sera perdu.';
			case 'tempDepositAddressTip4': return '4) Si vous devez déposer d\'autres types d\'actifs, veuillez passer à la page de la devise correspondante et aux options de paramètres pour demander une nouvelle adresse.';
			case 'applyExtensionOfValidity': return 'Demande de prolongation de la période de validité';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Cette adresse expirera après '),
				diff,
				const TextSpan(text: ' et sera '),
				tap('manually extend'),
				const TextSpan(text: ' valide pendant 12 heures avant l\'expiration.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Le renouvellement ne peut se faire que 12 heures à l\'avance';
			case 'theReceivingAddressValidForLongtime': return 'Cette adresse est valable pour une longue période.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Cette adresse de collecte est valable pour une longue durée et est automatiquement créditée en temps réel.';
			case 'confirmDeposited': return 'Confirmation des dépôts';
			case 'unbindThisDepositAddress': return 'Dégrouper cette adresse de recharge';
			case 'confirmDepositedTip': return 'Si les fonds ont été transférés, cliquez sur le bouton ci-dessus pour déclencher la facturation à votre portefeuille après 10 minutes.';
			case 'unbindDepositAddressTip': return 'Afin de réduire les frais de fonctionnement du contrat intelligent, veuillez délier l\'adresse de recharge si vous ne déposez plus de fonds pendant la période de validité.';
			case 'transferToAddress': return 'aller à l\'adresse';
			case 'longPressToPaste': return 'Appui long pour coller';
			case 'all': return 'complet';
			case 'balanceX': return ({required Object x}) => 'Solde ${x}';
			case 'transferOut': return 'tourner';
			case 'depositXcoins': return ({required Object x}) => 'Crédité ${x}';
			case 'sender': return 'expéditeur';
			case 'recipient': return 'destinataire';
			case 'memo': return 'note';
			case 'kind': return 'mode (de vie)';
			case 'transferAmountExceedsAvailableBalance': return 'Transferts excédant le solde disponible';
			case 'pleaseEnterValidAmount': return 'Veuillez saisir un montant valide';
			case 'networkFee': return 'Frais de gestion du réseau';
			case 'fee': return 'frais de dossier';
			case 'validLengthXcharacters': return ({required Object x}) => 'Longueur valide de l\'adresse ${x} caractères';
			case 'historys': return 'historique';
			case 'dtcCreditdetail': return 'Détails des points Delta';
			case 'usdCreditdetail': return 'Détails des points USD';
			case 'dappSquare': return 'dApp Square';
			case 'amountRaised': return 'Montant collecté';
			case 'disbursedAmount': return 'Montant émis';
			case 'participationTimes': return 'Nombre de participants';
			case 'completionRate': return 'taux d\'achèvement';
			case 'exchangeRate': return 'taux de change';
			case 'icpCrowdfunding': return 'ICP Crowdfunding';
			case 'crowdfunding': return 'crowdfunding';
			case 'trendsCurve': return 'courbe de tendance';
			case 'fullScreenView': return 'Vue plein écran';
			case 'walletBalance': return 'Solde du portefeuille :';
			case 'manageWallet': return 'Gérer le portefeuille';
			case 'fundraiseAmount': return 'collecte de fonds';
			case 'exchangeRewardAmount': return 'Utilisation du montant de la récompense';
			case 'fundraise': return 'collecte de fonds';
			case 'rangeIntegersX': return ({required Object x}) => 'Plage : entier ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Participez avec succès à la collecte de fonds et soyez récompensé ${amount}DTCT';
			case 'amountSummary': return 'Résumé des montants';
			case 'changePreferred': return 'Changement de préférence';
			case 'changePreferredAddress': return 'Changement d\'adresse préférée';
			case 'preferredAddressTip': return 'Les fonds seront automatiquement transférés à l\'adresse préférée lorsque les fonds sont collectés à l\'aide d\'un numéro de téléphone mobile ou d\'un DID enregistré.';
			case 'newAddress': return 'Nouvelle adresse';
			case 'newAddressTip': return 'Pour éviter les abus, lorsqu\'il y a plus d\'une adresse de portefeuille, des frais de transaction sont prélevés pour chaque nouvelle adresse créée.';
			case 'createNew': return 'nouvellement construit';
			case 'chainNetworkName': return 'nom du réseau en chaîne';
			case 'from': return 'venir de (un lieu)';
			case 'to': return 'jusqu\'à (un moment)';
			case 'noAvailableDepositAmountDetected': return 'Aucun montant de dépôt disponible n\'a été détecté !';
			case 'crossChainReceiveMoneyMonitoring': return 'La collection de chaînes croisées est à l\'écoute ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Reçu ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Confirmation en cours ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Notes (à lire absolument pour les débutants)';
			case 'whyUseSharedAddresses': return 'Pourquoi utiliser une adresse partagée ?';
			case 'useSharedrAdvantage': return 'Les avantages de l\'utilisation d\'adresses partagées lors du dépôt entre chaînes sont les suivants :';
			case 'useSharedrAdvantage1': return '1. réduire le gaspillage des frais de transfert et abaisser le coût d\'utilisation pour les utilisateurs. En raison de l\'utilisation d\'adresses exclusives, il y aura une trop grande dispersion des fonds, généralement pour faciliter le transfert ultérieur d\'autres utilisateurs dans le retrait des fonds, lorsque l\'utilisateur recharge le deuxième transfert de fonds doit être regroupé dans une ou un petit nombre d\'adresses de gestion.';
			case 'useSharedrAdvantage2': return '2) Dans le schéma partagé, le programme ne doit maintenir qu\'une réserve d\'adresses relativement petite qui peut être rapidement associée aux transferts sortants et à l\'écoute de la collecte légère, ce qui réduit la surcharge de ressources informatiques. Le contraire serait vrai si des adresses exclusives étaient utilisées.';
			case 'tokenType': return 'Type de jeton';
			case 'contract': return 'entrepreneur';
			case 'contractStandard': return 'norme contractuelle';
			case 'contractAddress': return 'adresse du contrat';
			case 'native': return 'protozoaires';
			case 'confirmUnbindingPleaseEnterYes': return 'Pour confirmer la déliaison, veuillez saisir "oui".';
			case 'listAllWorkingTempReceivingAddresses': return 'Liste de toutes les adresses de recharge de la chaîne de travail';
			case 'setNote': return 'Mise en place de notes';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Ne peut être plus long que ${x} octets';
			case 'transferFee': return 'frais de transfert';
			case 'crossChainFee': return 'redevance inter-chaîne';
			case 'crossChainTransferOutError': return 'erreur de transfert de liaison transversale';
			case 'chainName': return 'nom de la chaîne';
			case 'message': return 'messages';
			case 'dontShowAgain': return 'n\'est plus affiché';
			case 'queuing': return 'file d\'attente';
			case 'optional': return 'facultatif';
			case 'publiclyVisible': return 'publiquement visible';
			case 'rates': return 'tarif';
			case 'minimum': return 'minimum';
			case 'maximum': return 'limite supérieure';
			case 'minimumBlockConfirmations': return 'Nombre minimum de confirmations de blocs';
			case 'dsmsVerifyTerminal': return 'Terminal de validation DSMS';
			case 'overall': return 'parapluie';
			case 'my': return 'mon';
			case 'checkValidatorQualifications': return 'Vérification des qualifications des privilèges de l\'authentificateur';
			case 'getVerifierPermissions': return 'Obtenir les privilèges de l\'authentificateur';
			case 'qualification': return 'les dotations naturelles';
			case 'upperLimit': return 'limite';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Nombre maximal de terminaux d\'accès autorisés';
			case 'numberOfExistingAccessTerminals': return 'Nombre de terminaux d\'accès en place';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Avant de demander des privilèges d\'authentification, vous devez préparer un téléphone portable Android inactif et un numéro d\'accès dédié, puis télécharger et installer l\'application DSMS Access Terminal.';
			case 'downloadLink': return 'lien de téléchargement';
			case 'alreadyReadyFollowingTheAboveTips': return 'Il est prêt selon les conseils ci-dessus';
			case 'globalUniversal': return 'pour une utilisation globale';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Actuellement, il n\'y a pas assez d\'authentificateurs locaux pour participer au service d\'accès à l\'authentification DSMS, veuillez sélectionner le service d\'accès "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'comme numéro d\'accès seulement';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Veuillez cocher la case "${tip}".';
			case 'inputLengthTooShort': return 'Longueur d\'entrée trop courte';
			case 'shortName': return 'acronymes';
			case 'pleaseEnterXname': return ({required Object name}) => 'Veuillez saisir ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'La demande est en cours d\'envoi, veuillez patienter...';
			case 'applyForDSMSVerifierPermission': return 'Demander les privilèges d\'un validateur DSMS';
			case 'confirmInformation': return 'Confirmation des informations';
			case 'lastHeartbeat': return 'dernier battement de cœur';
			case 'expirationTime': return 'délai prévu';
			case 'country': return 'nations';
			case 'accessTerminals': return 'terminal d\'accès';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Nombre total de terminaux d\'accès au DSMS';
			case 'textContent': return 'Contenu du texte';
			case 'scanQRcodeToLogin': return 'Glisser pour se connecter';
			case 'confirmLogin': return 'Confirmer la connexion';
			case 'authorizeSubApplicationToLogin': return 'Autoriser cette sous-candidature à se connecter';
			case 'authorizationSuccessful': return 'L\'autorisation a été délivrée avec succès !';
			case 'launchSMSprogram': return 'Lancement du programme SMS';
			case 'notApplied': return 'Pas de demande';
			case 'validityPeriod': return 'période de validité';
			case 'renewal': return 'demande de renouvellement';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Scanner le code pour autoriser la connexion au terminal';
			case 'rewards': return 'incitations';
			case 'roles': return 'caractère';
			case 'developerCenter': return 'Centre des développeurs';
			case 'appName': return 'Nom de l\'application';
			case 'pleaseSelect': return 'veuillez sélectionner';
			case 'category': return 'catégorie';
			case 'keywords': return 'mot-clé';
			case 'pleaseEnterAkeyword': return 'Veuillez saisir un mot-clé';
			case 'createApplication': return 'Création d\'applications';
			case 'appType': return 'Type d\'application';
			case 'numberOfCategoriesMustBetween1and3': return 'Le nombre de catégories doit être compris entre 1 et 3';
			case 'appLogoSpecifications': return 'Format de l\'image : png, taille : jusqu\'à 100KB, résolution (pixel) : 256*256';
			case 'localAlbum': return 'Albums de photos locales';
			case 'networkPath': return 'chemin du réseau';
			case 'imageURLkAddress': return 'URL de l\'image';
			case 'urlAddressFormatIsIncorrect': return 'Adresse URL mal formatée';
			case 'imageFormatOnlySupportsPng': return 'Les images ne sont prises en charge qu\'au format "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'La longueur doit être comprise entre ${a}-${b} caractères.';
			case 'introduction': return 'bref';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'La taille de l\'image ne peut être supérieure à ${a}, actuellement ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'La résolution de l\'image doit être : ${p1}(pixels), actuellement ${p2}';
			case 'becomeDeveloper': return 'Devenir développeur';
			case 'developerInformation': return 'Informations sur le développeur';
			case 'teamName': return 'Nom de l\'équipe';
			case 'website': return 'nœud';
			case 'other': return 'autres que';
			case 'githubVerification': return 'Vérification Github';
			case 'exampleUrl': return 'Exemple d\'Url';
			case 'githubVerificationTip': return ({required Object did}) => 'Veuillez utiliser votre compte GitHub pour créer un fichier \'delta.did\' dans votre dépôt avec le contenu \'${did}\' ; ensuite, collez l\'adresse Url githubusercontent de ce fichier dans cette boîte de saisie pour l\'authentification.';
			case 'createApp': return 'Création d\'applications';
			case 'appManagement': return 'gestion des applications';
			case 'statusLogs': return 'Journal de bord';
			case 'bad': return 'pas bon';
			case 'normal': return 'habituel';
			case 'good': return 'un excellent';
			case 'onceCreatedItCannotBeChanged': return 'Une fois créé, il ne peut être modifié !';
			case 'manageApplicationEntity': return 'Gestion des entités d\'application';
			case 'currentVersion': return 'version actuelle';
			case 'submitVersion': return 'Version soumise';
			case 'packageOnlySupportZipCompressedFile': return 'Le paquet ne prend en charge que les fichiers compressés au format zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Le fichier \'${name}\' n\'a pas été trouvé dans le paquet zip.';
			case 'fileList': return 'Liste des documents :';
			case 'programPackage': return 'Paquet de programmation :';
			case 'automaticallyExtractFromVersionFile': return 'Extrait automatiquement des fichiers \'.version\'.';
			case 'dappVersionFormatTip': return 'Le format du numéro de version doit être décimal avec une précision de 2 chiffres, sans dépasser un maximum de 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Le numéro de version doit être supérieur à la version actuelle \'${v}\'';
			case 'versionNotes': return 'Impression :';
			case 'updateRelease': return 'nouvelle version';
			case 'loadAndRun': return 'Charger et exécuter';
			case 'notYetSubmittedProgramPackage': return 'Le paquet de programmes n\'a pas encore été soumis !';
			case 'authorizeMinidAppLogin': return 'Autoriser la connexion à mini-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Pour confirmer l\'autorisation, veuillez indiquer "oui".';
			case 'authorizeNow': return 'Autorisation immédiate';
			case 'operation': return 'Fonctionnement.';
			case 'statusChange': return 'Changement de statut';
			case 'changeTo': return 'Modifier en :';
			case 'notes': return 'Remarques.';
			case 'changesNotEffective': return 'La modification n\'est pas valide !';
			case 'released': return 'Publié';
			case 'inPublicBeta': return 'bêta ouverte';
			case 'developers': return 'Développé par.';
			case 'reviewList': return 'Liste de commentaires.';
			case 'postReview': return 'Laisser un commentaire';
			case 'scoreNow': return 'Noter maintenant';
			case 'description': return 'Description.';
			case 'noData': return '(^-^)\n Pas de données disponibles';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'La version a été mise à jour de ${a} à ${b}.';
			case 'loadNewVersion': return 'Charger la nouvelle version';
			case 'name': return 'Nom.';
			case 'canisterId': return 'Tank Id.';
			case 'updateTime': return 'temps de mise à jour';
			case 'contractCanistersState': return 'Statut du réservoir contractuel';
			case 'userDistribution': return 'répartition des utilisateurs';
			case 'settings': return 'Paramètres';
			case 'security': return 'Sécurité';
			case 'invite': return 'invitations';
			case 'more': return 'Plus...';
			case 'receiveAddress': return 'Adresse de réception :';
			case 'hangingAmount': return 'suspendu';
			case 'hangingAmountTips': return 'Les montants en attente sont des enregistrements temporaires des récompenses générées par l\'exploitation minière de votre équipe subordonnée. Une fois que vous avez effectué une session d\'exploitation minière, ces montants seront collectés dans les montants en attente.';
			case 'pendingAmount': return 'en attente';
			case 'pendingAmountTips': return 'Les montants en attente sont ceux qui n\'ont pas encore été confirmés par rapport aux annonceurs, et ceux qui sont valablement appariés seront transférés dans l\'enregistrement USCT valide, et toute partie non valide sera exclue.';
			case 'received': return 'reçu';
			case 'processing': return 'en cours';
			case 'replied': return 'répondant';
			case 'rejected': return 'rejet';
			case 'unknown': return 'inexploré';
			case 'insufficientBalance': return 'Bilan insuffisant !';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Le solde de ${x} est insuffisant pour couvrir les frais du réseau de liaison croisée';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Une transaction n\'a pas encore été effectuée et ne peut pas être transférée pour le moment.';
			case 'thisfunctionNotSupportExternalCalls': return 'Cette fonction ne peut pas être appelée de l\'extérieur.';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Il n\'y a pas de correspondance pour une adresse qui peut être utilisée pour payer des frais inter-chaînes, veuillez passer à un autre réseau de chaînes pour essayer.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'La correspondance actuelle avec le montant maximum pouvant être transféré en une seule transaction est de ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Les remarques ne doivent pas dépasser 64 octets';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Solde insuffisant, montant : ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Vous ne pouvez pas lier plus de 3 adresses.\nSi vous devez lier une nouvelle adresse de paiement.\nVeuillez d\'abord délier une autre adresse';
			case 'parametersA_exception': return ({required Object x}) => 'Paramètres : ${x}, exception';
			case 'parameterException': return 'Exception de paramètre !';
			case 'transferAmountMustBeLargerThan0': return 'Le montant du transfert doit être supérieur à 0';
			case 'authorizationHasExpired': return 'L\'autorisation a expiré';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'L\'application n\'a pas été autorisée par le propriétaire';
			case 'authenticationTokenIsInvalid': return 'Jeton d\'authentification invalide';
			case 'verifyInfoIsInvalidOrExpired': return 'Informations de validation invalides ou expirées';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Vérifier que le nombre de terminaux d\'accès a dépassé la limite d\'un sur dix mille.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'La participation à l\'exploitation minière doit être supérieure à 3 jours';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Le nombre de membres du cercle de sécurité ne peut être inférieur à trois';
			case 'avatarIsNotSet': return 'Avatar non défini';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Le nombre de références directes ne peut être inférieur à 3';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Le délai est insuffisant et vous ne pouvez changer de numéro de téléphone mobile qu\'une fois par an.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Ce numéro de téléphone mobile existe déjà et ne peut être dupliqué';
			case 'securityCodeIsIncorrect': return 'Code de sécurité incorrect';
			case 'securityCodeMayHaveExpired': return 'Le code de sécurité a peut-être expiré';
			case 'sessionIdIsInvalidOrExpired': return 'Identifiant de session invalide ou expiré';
			case 'sessionHasBeenAuthorized': return 'La session a été autorisée à s\'achever !';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Ne peut être renouvelé que dans les ${x} jours précédant l\'expiration de la période de validité';
			case 'notYetGrantedDeveloperPermissions': return 'Pas encore de droits de développeur';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Le champ ${x} ne peut pas être nul';
			case 'emailFormatError': return 'Erreur de format d\'e-mail';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Erreur de formatage "${x}".';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Le champ "${x}" doit comporter entre ${y} et ${z} caractères.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'La plage de sélection "${x}" doit être comprise entre ${y} et ${z}.';
			case 'unchanged_sameAsOldContent': return 'Inchangé, même contenu que l\'ancien !';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x} : \'${y}\' existe déjà !';
			case 'mobileNumberHasNotJoinedDelta': return 'Ce numéro de portable n\'a pas été ajouté à Delta !';
			case 'referrerIdCannotBeEmpty': return 'L\'ID du référent ne peut pas être vide !';
			case 'referrerIdDoesNotExist': return 'L\'ID du référent n\'existe pas !';
			case 'didIsIncorrectOrInvalid': return 'La DID est incorrecte ou invalide !';
			case 'accessTokenIsIncorrectOrInvalid': return 'Le code d\'accès est incorrect ou invalide !';
			case 'minimumWithdrawalAmountIs1USD': return 'Minimum 1USD pour un retrait unique';
			case 'miningTimeIsNotYet': return 'Il n\'est pas encore temps de miner.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Existe déjà, ne l\'ajoutez pas à nouveau !';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Impossible d\'utiliser le numéro d\'enregistrement comme numéro d\'accès à l\'authentification';
			case 'canotAddYourSelf': return 'Impossible de s\'ajouter';
			case 'logOut': return 'Déconnexion';
			case 'confirmLogout': return 'Confirmer la déconnexion';
			case 'logOutTipsText': return 'Veuillez noter : Selon le livre blanc, chaque vérification de votre compte consommera une certaine quantité de vos pièces DTC qui seront payées au vérificateur en tant qu\'incitation, donc n\'essayez pas de vous connecter et de vous déconnecter inutilement, en cliquant sur le bouton ci-dessous vous vous déconnecterez immédiatement.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Veuillez saisir "oui" pour confirmer la déconnexion.';
			case 'tip': return 'attirer l\'attention sur qqch.';
			case 'cancel': return 'annulations';
			case 'close': return 'coagulation';
			case 'selected': return 'sélectionné';
			case 'edit': return 'compilateur';
			case 'submit': return 'soumettre (un rapport, etc.)';
			case 'goBack': return 'régression (en psychologie)';
			case 'copiedToClipboard': return 'Il a été copié dans le presse-papiers.';
			case 'nickname': return 'terme affectueux';
			case 'confirm': return 'reconnaître';
			case 'cannotBeEmpty': return 'Ne peut être vide';
			case 'deleteSuccessful': return 'Supprimé avec succès !';
			case 'successfullyModified': return 'La modification est réussie !';
			case 'executionSuccessful': return 'La mise en œuvre a été couronnée de succès !';
			case 'preview': return 'avant-premières';
			case 'followSystem': return 'système de suivi';
			case 'change': return 'variation';
			case 'replace': return 'changement (d\'adresse, etc.)';
			case 'view': return 'vérifier';
			case 'manage': return 'managérial';
			case 'modify': return 'modifications';
			case 'replacedSuccessfully': return 'Remplacement réussi !';
			case 'authentication': return 'l\'authentification';
			case 'reacquire': return 'récupérer';
			case 'tryAgain': return 'Réessayez.';
			case 'querying': return 'Des demandes de renseignements sont en cours ...';
			case 'writingToOnChain_pleaseWait': return 'Il est en cours d\'écriture dans la chaîne, veuillez patienter ...';
			case 'versionCheck': return 'détection de la version';
			case 'alreadyLatestVersion': return 'Déjà la dernière version !';
			case 'foundNewVersion': return 'Découvrez la nouvelle version :';
			case 'upgradeLink': return 'Lien de mise à niveau :';
			case 'deviceDescription': return 'Description de l\'équipement.';
			case 'notification30SecondsBeforeMiningStops': return 'Exécutez un rappel de notification 30 secondes avant l\'arrêt du minage !';
			case 'goMining': return 'Allez miner';
			case 'deltaMiningReminder': return 'Rappel de Delta Mining';
			case 'clickToMine_miningIsAboutToStop': return 'Cliquez ici pour miner, le minage s\'arrêtera bientôt !';
			case 'incorrect_input': return 'Saisie incorrecte !';
			case 'are_you_sure_delete': return 'Êtes-vous sûr de vouloir supprimer ?';
			case 'delete_account': return 'Supprimer le compte';
			case 'how_to_operate_it': return 'Voyez comment l\'utiliser ?';
			case 'deletion_warning_tip': return 'Si vous supprimez votre compte, vous perdrez toutes vos pièces Delta et tous les gains des autres membres seront également perdus.';
			case 'launchWhatsAppProgram': return 'Lancer le programme WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Les numéros d\'accès avec cette icône prennent également en charge la vérification des messages WhatsApp. Lors de l\'envoi de messages internationaux, il est recommandé d\'utiliser WhatsApp pour augmenter le taux de réussite et réduire les coûts.';
			case 'ihaveSentVerificationString': return 'J\'ai envoyé une chaîne de vérification';
			case 'totalOfPeople': return 'Total de personnes: ';
			case 'numberOfPeopleMining': return 'Nombre de personnes minières';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Vous pouvez utiliser un navigateur sur un autre appareil pour scanner le code QR et le transmettre au programme SMS';
			case 'toggle': return 'Basculer';
			case 'DSMSverifier': return 'Vérificateur DSMS';
			case 'activate': return 'Activer';
			case 'activated': return 'Activé';
			case 'generateActivationCommand': return 'Générer la commande d\'activation';
			case 'activationCommand': return 'Commande d\'activation';
			case 'activationSentedTip': return 'Une fois le SMS d\'activation envoyé, veuillez vérifier l\'état d\'activation sur le terminal d\'accès.';
			case 'biometricsNotEnabledTip': return 'La biométrie (visage ou empreinte digitale) n\'est pas activée sur votre appareil. Veuillez l\'activer pour continuer.';
			case 'error': return 'Erreur';
			case 'exceptionOccurredWhenCallingBiometric': return 'Une exception s\'est produite lors de l\'appel de la fonction biométrique (visage ou empreinte digitale) !';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: 'Les numéros d\'accès '),
				checkedNum,
				const TextSpan(text: ' sont vérifiés, '),
				shouldNum,
				const TextSpan(text: ' doit être sélectionné.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text} a-t-il été envoyé aux ${n} numéros d\'accès ci-dessus ?';
			case 'interface': return 'Interface :';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Délai d\'attente dépassé ou numéro d\'expéditeur incohérent';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Le numéro de téléphone portable du membre du cercle de sécurité que vous avez renseigné ne correspond pas : ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Connectez-vous dans les 10 minutes suivant votre déconnexion pour éviter la vérification à deux facteurs.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Au moins ${n} numéros de téléphone mobile doivent être renseignés';
			case 'noAccessNumberInYourRegionYet': return 'Il n\'y a pas encore de numéro d\'accès dans votre région';
			case 'notEnoughAccessNumbersInYourRegion': return 'Pas assez de numéros d\'accès dans votre région';
			case 'tipsForDeployDSMSterminal': return 'Le système a automatiquement chargé pour vous des numéros d\'accès d\'autres pays. Afin de vous offrir des services de vérification plus performants et moins coûteux, il est recommandé que vous ou votre référent déployiez le terminal DSMS localement pour percevoir des frais de vérification. ';
			case 'noOneCanProvideMeTheSecurityCode': return 'Personne ne peut me fournir le code de sécurité ?';
			case 'useSupplementalMode': return 'Utiliser le mode supplémentaire';
			case 'returnToSecurityCodeMode': return 'Retour au mode code de sécurité';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Veuillez saisir le numéro de téléphone mobile associé. L\'indicatif du pays peut être omis.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Le numéro de téléphone portable de ${name} est incorrect';
			case 'matchingVerificationStrategyIs': return 'La stratégie de vérification correspondante est: ';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Le solde est supérieur à 3 ICP, pas besoin de verser de carburant pour le moment.';
			case 'escrowAccount': return 'Compte séquestre';
			case 'fuelRelay': return 'Relais de carburant';
			case 'pourFuel': return 'Verser du carburant';
			case 'fuelState': return 'État du carburant';
			case 'pouringFuelTips': return 'Verser du carburant ne vous apporte aucun avantage ni inconvénient, son but est d\'enrichir l\'expérience du système Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Sponsorisez des développeurs en regardant des publicités';
			case 'status': return 'Statut';
			case 'date': return 'Date';
			default: return null;
		}
	}
}

extension on _StringsIt {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'inizio fig.';
			case 'switchLanguage': return 'Cambia lingua';
			case 'languageSwitch': return 'Cambio di lingua';
			case 'slogan': return 'Costruire un\'economia decentrata nel Delta';
			case 'countryRegionCode': return 'Codice paese/area';
			case 'countryRegionSelection': return 'Selezione di paesi e regioni';
			case 'nextStep': return 'il passo successivo';
			case 'yourPhoneNumber': return 'Il vostro numero di telefono.';
			case 'pleaseSelectCountryAndRegion': return 'Selezionare il proprio paese/regione';
			case 'pleaseEnterPhoneNumber': return 'Inserire un numero di telefono valido!';
			case 'referrerDid': return 'Referente DID';
			case 'pleaseEnterTheReferrersDid': return 'Inserire l\'id dell\'identità decentralizzata di un referente valido';
			case 'thisDidIsInvalid': return 'Questo DID non è valido.';
			case 'nicknameFormatTips': return 'Il nickname non deve essere vuoto e non deve superare le 16 cifre.';
			case 'additionalIinformation': return 'Informazioni aggiuntive';
			case 'invitationSubject': return 'Un invito alla creazione di consenso nel Delta';
			case 'invitationLetter': return ({required Object did}) => 'Salve, partecipo alla creazione del consenso di Delta!\n Delta è una nuova piattaforma open source per le valute digitali che gira su ICP e che consente di gestire e utilizzare varie valute digitali senza password, chiavi private o mnemoniche. Cliccate su questo link https://delta.kim/auto/download per installare l\'applicazione e ora siete invitati a partecipare alla creazione del consenso e al conio delle valute.\n Referente DID: ${did}';
			case 'dSMSverification': return 'Convalida del DSMS';
			case 'getAccessNumbers': return 'Ottenere alcuni numeri di accesso';
			case 'getAccessNumberPromptMessage': return 'Fare clic sul pulsante "Ottieni" qui sotto per ruotare una serie di numeri di accesso di verifica via SMS nella coda.';
			case 'optionalAccessNumbers': return 'Numero di accesso opzionale';
			case 'accessNumber': return 'numero di accesso';
			case 'TELCO': return 'operatore (di una centrale elettrica, di una rete di trasporto, ecc.)';
			case 'score': return 'punteggio';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('it'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Selezionare '),
					nBuilder(n),
					const TextSpan(text: ' numeri di accesso e fare clic sul pulsante "'),
					span('text'),
					const TextSpan(text: '" per passare alla fase successiva.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Selezionare '),
					nBuilder(n),
					const TextSpan(text: ' numeri di accesso e fare clic sul pulsante "'),
					span('text'),
					const TextSpan(text: '" per passare alla fase successiva.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta è un esperimento di valuta digitale globale open source e decentralizzata e un ecosistema di applicazioni per criptovalute.';
			case 'deltaGoalsDesc': return 'L\'obiettivo è rendere possibile l\'uso di Delta per co-costruire nuove valute digitali che siano universali, eque, sicure, veloci ed ecologiche. E fornire diversi scenari applicativi efficaci per queste valute digitali e per le precedenti criptovalute.';
			case 'details': return 'particolari';
			case 'get': return 'guadagno';
			case 'select': return 'opzione';
			case 'send': return 'invio';
			case 'complete': return 'adempiere';
			case 'selectedAccessNumberPrompt': return 'Quando viene selezionato, viene visualizzato il numero di accesso completo e viene generata una stringa di autenticazione.';
			case 'location': return 'posizionamento';
			case 'verificationString': return 'stringa di convalida';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Utilizzare il numero di telefono '),
				num,
				const TextSpan(text: ' e inviare '),
				label,
				const TextSpan(text: ' a '),
				accessNumber,
				const TextSpan(text: ' per completare la verifica.'),
			]);
			case 'ihaveSentTheSMS': return 'Ho inviato un messaggio di testo';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'La stringa di validazione è valida per 6 minuti, tempo rimanente: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Troppo veloce per aspettare ${x} secondi per continuare!';
			case 'waitingForVerificationSMS': return 'In attesa dell\'SMS di verifica...';
			case 'partSuccsForVerificationSMS': return 'Uno dei terminali di accesso ha superato la verifica SMS!';
			case 'creatingAccessToken': return 'Token di accesso in corso di creazione...';
			case 'intoDelta': return 'All\'interno di Delta';
			case 'deltaAccountIsLoggedIn': return 'Il tuo account Delta è connesso';
			case 'iHavLoggedOut': return 'Sono fuori.';
			case 'startTwoFactorVerification': return 'Avvio della doppia verifica';
			case 'securityCircleVerification': return 'Convalida del cerchio di sicurezza';
			case 'generateSecurityCode': return 'Generare il codice di sicurezza';
			case 'generateSecurityCodeHintText': return 'Il codice di sicurezza generato sarà inviato a un membro della vostra cerchia di sicurezza scelto a caso.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Non avete impostato un circolo di sicurezza, il vostro account è molto insicuro, inserite un qualsiasi segnaposto di 6 cifre e passate alla fase successiva.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Il codice di sicurezza è stato generato, si prega di contattare i seguenti familiari e amici per richiedere di estrarre il codice di sicurezza per superare la verifica. valido per 30 minuti!';
			case 'itGetSecurityCodeTip': return 'Suggerimento: è possibile ottenere il codice di sicurezza facendo doppio clic sul nickname del proprio account nell\'App Delta -> Menu -> Fornisci sicurezza.';
			case 'securityCircleMemberList': return 'Elenco dei membri del circolo di sicurezza:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Seleziona un parente o un amico nell\'elenco dei membri per generare e fornirti un codice di sicurezza per verificare la tua vera identità. Lo scopo è impedire che l\'account venga controllato da altri in caso di smarrimento o furto del numero di cellulare.';
			case 'formatIsXdigits': return ({required Object num}) => 'Formato come ${num} cifre';
			case 'signInSuccessfully': return 'Effettuare il login con successo!';
			case 'twoFAandLogin': return 'Doppia autenticazione e login';
			case 'verificationSuccessful': return 'Verificare il successo!';
			case 'validationFailed': return 'Convalida fallita!';
			case 'dappInfo': return 'Informazioni sulla DApp';
			case 'securityCircle': return 'anello di sicurezza';
			case 'securityCode': return 'codice di sicurezza';
			case 'provideSecurity': return 'fornire sicurezza';
			case 'addManully': return 'Aggiungere manualmente';
			case 'addFromContacts': return 'Aggiungi dalla rubrica';
			case 'addSecurityCircle': return 'Aggiungere il cerchio di sicurezza';
			case 'inputType': return 'Tipo di ingresso';
			case 'mobileNumber': return 'numero di telefono cellulare';
			case 'did': return 'Indirizzo id';
			case 'pleaseEnterValidDID': return 'Inserire un\'identità decentralizzata valida';
			case 'pleaseEnterValidWalletAddress': return 'Inserire un indirizzo di portafoglio valido';
			case 'appellation': return 'forma di indirizzo';
			case 'appellationHint': return 'Come lo chiamate, come "bambino"?';
			case 'addSecurityCircleTips': return 'Non aggiungere alla tua cerchia di sicurezza persone di cui non ti fidi.';
			case 'referralTeam': return 'Squadre consigliate';
			case 'profile': return 'Informazioni sul conto';
			case 'menu': return 'menu';
			case 'directly': return 'diretto';
			case 'indirectly': return 'indiretto';
			case 'inviteContacts': return 'Contatto per l\'invito';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Il vostro invitato è '),
				nickname,
				const TextSpan(text: ' e avete indirizzato direttamente '),
				num1,
				const TextSpan(text: ' persone, di cui '),
				num2,
				const TextSpan(text: ' sono attualmente online.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Avete indirizzato indirettamente '),
				num1,
				const TextSpan(text: ' persone, di cui '),
				num2,
				const TextSpan(text: ' sono attualmente online.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Invitate i vostri amici a unirsi a Delta e migliorate insieme il consenso sociale. Per ogni referral diretto, il tasso di estrazione di una persona aumenta il tasso base di '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Invita gli amici a unirsi a Delta e migliorare insieme il consenso sociale Ogni raccomandazione indiretta di una persona aumenterà la tariffa di mining di '),
				rate2,
				const TextSpan(text: ' della tariffa base.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Siete sicuri di voler cancellare "${name}"?';
			case 'safetyCircleRoleQ': return 'Qual è lo scopo dell\'anello di sicurezza?';
			case 'safetyCircleRoleA': return 'Proteggete il vostro account fornendo un\'autenticazione secondaria in situazioni delicate.';
			case 'howSecurityCirclesWorkQ': return 'Come funzionano gli anelli di sicurezza?';
			case 'howSecurityCirclesWorkA': return 'Nel caso in cui sia necessaria una verifica Circle of Safety, il programma Delta Smart Contracts selezionerà in modo casuale un membro dell\'elenco di amici Circle of Safety per aiutarvi a fornire un codice di sicurezza per completare la verifica dell\'identità al posto vostro. Quando si chiede il codice di sicurezza al membro, questo può confermare se l\'utente è proprio lui o meno. Allo stesso tempo, il programma chiederà: "Rifiuta di fornire il codice di sicurezza se non sei tu", in modo da proteggere la sicurezza del tuo account. Pertanto, è necessario assicurarsi sempre che i membri della propria cerchia di sicurezza siano persone di cui ci si può fidare.';
			case 'securityCircleBeUsedQ': return 'Quando verrà utilizzato?';
			case 'securityCircleBeUsedA1': return '1. Quando si perde il controllo dell\'APP Delta, di solito il telefono cellulare viene smarrito o rubato.';
			case 'securityCircleBeUsedA2': return '2. Nel caso di alcune operazioni sensibili, il programma Delta Smart Contract deve confermare di essere l\'utente.';
			case 'provideSafetyTip1': return 'Quando il vostro amico vi chiede il codice di sicurezza, assicuratevi di confermare che sia il suo.';
			case 'provideSafetyTip2': return 'State garantendo la sicurezza agli amici di cui sopra, che vi hanno definito come la persona più fidata nella loro cerchia di sicurezza e hanno bisogno di una conferma di sicurezza da parte vostra nel caso in cui dovessero effettuare operazioni sensibili sul loro conto.';
			case 'provideSafetyTip3': return 'Fare doppio clic sull\'avatar dell\'altra persona per estrarre il codice di sicurezza quando necessario.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'L\'interlocutore non dispone attualmente di un codice di sicurezza che deve essere estratto!';
			case 'existSecurityCodeTip': return 'Assicuratevi che l\'amico o il familiare che vi chiede il codice di sicurezza sia lo stesso dell\'amico o del familiare. Per proteggere l\'amico o il familiare, dovreste rifiutarvi di fornire il codice di sicurezza se l\'amico o il familiare non è lo stesso dell\'amico o del familiare.';
			case 'avatarSettings': return 'Impostazioni dell\'avatar';
			case 'NFTAvatarPropertyRightsText': return 'Disclaimer: l\'uso del NFT in questione come avatar è solo a titolo di preferenza personale e non ha nulla a che vedere con il possesso dei diritti di proprietà intellettuale di tale NFT.';
			case 'projectWebsite': return 'Sito web del progetto:';
			case 'whitepaper': return 'carta bianca:';
			case 'indexID': return 'Indice Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Indice tra ${start} e ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Inserite l\'indice del vostro NFT preferito e il programma lo caricherà automaticamente come avatar.';
			case 'miningRate': return 'tasso di estrazione mineraria';
			case 'miningDetails': return 'Dettagli sull\'estrazione';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Tasso di estrazione totale: '),
				rate,
				const TextSpan(text: ' δ/giorno'),
			]);
			case 'EndOfMiningSession': return 'Il ciclo minerario è finito:';
			case 'tapToMineDeltaCoin': return 'Clicca per estrarre le monete Delta ↑';
			case 'clickToStartMining': return 'Clicca per iniziare a estrarre!';
			case 'miningHasStoppedPromptDesc': return 'Il mining si è fermato, ogni 24 ore è un ciclo di mining, fare clic sull\'icona del fulmine per avviare un nuovo ciclo di mining.Il mining di Delta è un meccanismo di allocazione che non consuma energia aritmetica aggiuntiva e traffico di rete dal dispositivo.';
			case 'aboutBaseRate': return 'Per quanto riguarda il tasso di base?';
			case 'baseRateDescription': return 'Come concordato nel whitepaper, la regola della diminuzione della tariffa di base per il Delta mining sarà divisa in due fasi.\nFase 1: il tasso sarà di 32δ/giorno quando il numero di partecipanti (registrazioni) è pari o inferiore a 3.000. Partendo da questa base, la tariffa di base viene dimezzata ogni volta che il numero di persone aumenta di 10 volte.\nFase 2: quando il numero di partecipanti raggiunge i 30 milioni o più, il tasso base viene dimezzato ogni volta che il numero di partecipanti aumenta di un fattore 3. Fino a quando lo scavo finale non interrompe la produzione.';
			case 'baseRate': return 'tariffa di base (come in ISDN)';
			case 'directReferralRewards': return 'Bonus di rinvio diretto';
			case 'directReferralRewardDesc': return 'Per ogni referral diretto, il vostro tasso di estrazione sarà aumentato di un ulteriore 1/3 del tasso base quando sono in modalità di estrazione.\n\n Inoltre, lo stato di mining dei vostri referral conterà anche per il vostro bonus di referral diretto.';
			case 'indirectReferralRewards': return 'Bonus di rinvio indiretto';
			case 'indirectReferralRewardDesc': return 'Quando un referente indiretto sta estraendo, il vostro tasso di estrazione viene incrementato di un ulteriore 1/10 del tasso base.\n\n Per il vostro team di referral diretti, ogni persona che vi referenzia rappresenta un referral indiretto per voi.';
			case 'mine': return 'estrarre (minerale o altra risorsa da una miniera)';
			case 'thisMiningInformation': return 'Informazioni attuali sulle miniere';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Partecipazione all\'estrazione mineraria: '),
				x,
				const TextSpan(text: ' volte'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Guadagno totale questa volta: '),
				x,
				const TextSpan(text: ' monete Delta'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Guadagno base: '),
				x,
				const TextSpan(text: ' monete'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contributo diretto della squadra: '),
				x,
				const TextSpan(text: ' monete'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contributo indiretto della squadra: '),
				x,
				const TextSpan(text: ' monete'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Periodo di tempo tra gli scavi: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Ore effettive di estrazione: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} ore';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Per la sicurezza dei beni, i membri della cerchia di sicurezza devono mantenere sempre 3-5 persone di fiducia.';
			case 'index': return 'indicizzazione';
			case 'amount': return 'somma di denaro';
			case 'balance': return 'saldi';
			case 'timeStamp': return 'timestamp';
			case 'summary': return 'astratti';
			case 'miningHasStopped': return 'L\'attività estrattiva è stata interrotta.';
			case 'miningHasStoppedDesc': return 'La tua attività mineraria è attualmente ferma, inizia a guadagnare ora.';
			case 'startMining': return 'Avviare l\'estrazione mineraria';
			case 'changeMobileNumber': return 'Cambio del numero di cellulare';
			case 'currentMobileNumber': return 'Numero di cellulare attuale';
			case 'newMobileNumber': return 'Nuovo numero di cellulare';
			case 'securityCodeFormatIs6digits': return 'Il formato del codice di sicurezza è di 6 cifre!';
			case 'startVrification': return 'Avvio della verifica';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Questo numero di cellulare esiste già, DID associato: ${dId}';
			case 'noDataYet': return 'Nessun dato disponibile';
			case 'previousMobileNumber': return 'Numero di cellulare precedente';
			case 'changeLog': return 'Registrazione delle modifiche';
			case 'referralLinkToShare': return 'Link consigliati da condividere';
			case 'referrer': return 'referente';
			case 'isoCountryCode': return 'Codice paese ISO';
			case 'avatarLogo': return 'logo della testata';
			case 'creationTime': return 'Tempo di creazione';
			case 'lastUpdate': return 'Ultimo aggiornamento';
			case 'numberOfSecurityCircleMembers': return 'Numero di membri dei circoli di sicurezza';
			case 'theLatestMining': return 'Ultimo scavo';
			case 'effectiveMiningDays': return 'Numero di giorni di estrazione effettiva';
			case 'modifyNickname': return 'Cambiare soprannome';
			case 'didNotChange': return 'Nessun cambiamento!';
			case 'kycVerification': return 'Verifica KYC';
			case 'faceID': return 'Face ID';
			case 'touchID': return 'ID impronta digitale';
			case 'biometricsAuthorizationTest': return 'Test di autenticazione biometrica';
			case 'currentState': return 'stato attuale';
			case 'biometricsAuthenticationLocalizedReason': return 'Utilizza lo sblocco del tuo dispositivo per verificare la tua identità.';
			case 'graph': return 'archivio di grafici (ad esempio mappe, documenti o figure botaniche)';
			case 'referralRelationshipGraph': return 'Mappatura delle relazioni di referral';
			case 'nativeContacts': return 'Contatti locali';
			case 'registrationAndMiningTrends': return 'Tendenze di registrazione e di estrazione';
			case 'inMining': return 'estrazione mineraria';
			case 'registrationVolume': return 'volume di registrazione';
			case 'unmined': return 'non sfruttato';
			case 'mined': return 'estratto';
			case 'communityMining': return 'Estrazione mineraria comunitaria';
			case 'consensusPromotionFund': return 'Fondo per la promozione del consenso';
			case 'ecologicalAwardFund': return 'Fondo di incentivazione ecologica';
			case 'icpFuelCrowdfunding': return 'Crowdfunding per il carburante ICP';
			case 'coreDeveloperRewards': return 'Premi per gli sviluppatori Core';
			case 'totalAllocation': return 'Distribuzione complessiva';
			case 'miningRatio': return 'Rapporto di estrazione';
			case 'billion.30': return '30 miliardi di euro';
			case 'billion.60': return '60 miliardi di euro';
			case 'billion.180': return '180 miliardi di euro.';
			case 'billion.300': return '300 miliardi di euro';
			case 'watchAdsToSupportDevelopers': return 'Guardare gli annunci per sostenere gli sviluppatori';
			case 'loadingAdcomponents': return 'Caricamento dei componenti pubblicitari...';
			case 'timeIsNotUp': return 'Il tempo non è scaduto!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Caricamento fallito, forse rete bloccata!';
			case 'pendingUSCTrecords': return 'In attesa dei documenti dell\'USCT';
			case 'pendingUSCTrecordsDesc': return 'I record USCT in attesa saranno confermati dalla piattaforma pubblicitaria entro 15-30 giorni e i record validi saranno trasferiti nell\'elenco dei record USCT e l\'importo USCT appropriato sarà aggiunto al saldo del conto.';
			case 'validity': return 'validità';
			case 'advertiser': return 'inserzionisti';
			case 'earned': return 'guadagnato';
			case 'withdraw': return 'ritirare i fondi';
			case 'validUSCTrecords': return 'Registri effettivi dell\'USCT';
			case 'USCTmining': return 'Miniere USCT';
			case 'aboutUSCTmining': return 'Sulle miniere dell\'USCT?';
			case 'aboutUSCTminingItme1': return '1. USDT è una stablecoin in dollari statunitensi diffusa in tutto il mondo che può essere facilmente scambiata con le valute sovrane nazionali sui principali exchange di criptovalute in tutto il mondo.';
			case 'aboutUSCTminingItme2': return '2. USCT è una misura temporanea dei proventi del mining USCT, nota come credito USD, che alla fine sarà convertita in USDT in base all\'importo effettivo del regolamento e alle regole di distribuzione della piattaforma pubblicitaria e alla proporzione corrispondente.';
			case 'aboutUSCTminingItme3': return '3. USCT Mining è una funzione di realizzazione di annunci di traffico della comunità Delta. Sfrutta l\'ampia base di utenti della comunità Delta per fornire molteplici vantaggi agli inserzionisti, agli sviluppatori di Delta e agli assenteisti. È stato progettato per fornire una certa quantità di reddito effettivo ai lavoratori assenti nella fase iniziale, quando l\'ecosistema Delta non si è ancora formato e prosperato; allo stesso tempo, fornisce anche un certo sostegno finanziario agli sviluppatori per garantire che possano continuare a fornire servizi di sviluppo per un lungo periodo di tempo e, infine, essere in grado di realizzare tutti i piani del whitepaper; e fornisce anche un efficace canale promozionale per gli inserzionisti del prodotto.';
			case 'aboutUSCTminingItme4': return '4. Le regole di distribuzione sono state concepite in modo tale che il 40% del ricavato totale sia utilizzato come commissione per i servizi tecnici degli sviluppatori e il restante 60% sia utilizzato come ricompensa per l\'assenteismo della comunità. La parte della ricompensa per le assenze del modello di distribuzione multilivello simile a DTC, la ricompensa per le assenze sarà divisa in tre parti secondo il rapporto 6:3:1, ogni volta che una delle ricompense per le assenze dell\'estrazione USCT 6 parti assegnate all\'assenteismo degli annunci attuali, 3 parti assegnate al referente superiore, 1 parte assegnata al referente di secondo livello. Allo stesso modo, è possibile ottenere la stessa ricompensa per i referenti degli amici segnalati tramite USCT mining. Il vantaggio di questa distribuzione multilivello è che chiunque può guadagnare una quantità relativamente elevata di USDT sviluppando un team di downline.';
			case 'aboutUSCTminingItme5': return '5. Il periodo di regolamento è di 7 giorni, vale a dire che ogni 7 giorni la validità viene verificata con la piattaforma pubblicitaria e la validità confermata dei proventi e l\'importo effettivo saranno registrati nel saldo. L\'importo minimo per ogni prelievo è di 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Righe da ${x} a ${y}.';
			case 'wallet': return 'borse';
			case 'multiChainWallet': return 'portafoglio multi-catena';
			case 'deposit': return 'deposito (ad esempio su un conto bancario)';
			case 'transfer': return 'trasferimento (denaro a un conto bancario)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} nell\'indirizzo del portafoglio';
			case 'transactions': return 'Registri delle transazioni';
			case 'network': return 'reticolazione';
			case 'walletAddress': return 'Indirizzo del portafoglio';
			case 'currentAddress': return 'indirizzo attuale';
			case 'depositAddress': return 'Indirizzo di ricarica';
			case 'receivingMoneyAddress': return 'indirizzo del beneficiario';
			case 'applyTempDepositAddress': return 'Indirizzo per la richiesta di ricarica temporanea';
			case 'tempDepositAddressTip': return '1. Questo è un indirizzo di deposito condiviso. Si prega di non depositare l\'importo dopo la scadenza del contratto di locazione o dopo essere stati svincolati. In tal caso, l\'importo andrà perso.';
			case 'tempDepositAddressTip2': return '2. Prima di effettuare un deposito, assicuratevi che [Nome della catena] e [Nome della moneta] corrispondano esattamente; nel caso dei token contrattuali, dovete anche assicurarvi che [Standard del contratto] e [Indirizzo del contratto] corrispondano esattamente.';
			case 'tempDepositAddressTip3': return '3. Non tentate di depositare fondi che non corrispondono a nessuno dei parametri indicati nei suggerimenti precedenti, altrimenti l\'importo andrà perso.';
			case 'tempDepositAddressTip4': return '4. Se avete bisogno di depositare altri tipi di beni, passate alla pagina della valuta corrispondente e alle opzioni dei parametri per richiedere un nuovo indirizzo.';
			case 'applyExtensionOfValidity': return 'Richiesta di proroga del periodo di validità';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Questo indirizzo scadrà dopo '),
				diff,
				const TextSpan(text: ' e sarà '),
				tap('estendi manualmente'),
				const TextSpan(text: ' valido per 12 ore prima della scadenza.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Può essere rinnovato solo con 12 ore di anticipo';
			case 'theReceivingAddressValidForLongtime': return 'Questo indirizzo è valido per molto tempo.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Questo indirizzo di raccolta è valido a lungo e viene accreditato automaticamente in tempo reale.';
			case 'confirmDeposited': return 'Conferma dei depositi';
			case 'unbindThisDepositAddress': return 'Disaggregare questo indirizzo di ricarica';
			case 'confirmDepositedTip': return 'Se i fondi sono stati trasferiti, cliccate sul pulsante qui sopra per attivare l\'addebito sul vostro portafoglio dopo 10 minuti.';
			case 'unbindDepositAddressTip': return 'Al fine di ridurre i costi di gestione del contratto smart, si prega di disincagliare l\'indirizzo di ricarica se non si intende depositare altri fondi durante il periodo di validità.';
			case 'transferToAddress': return 'vai all\'indirizzo';
			case 'longPressToPaste': return 'Premere a lungo per incollare';
			case 'all': return 'completo';
			case 'balanceX': return ({required Object x}) => 'Saldo ${x}';
			case 'transferOut': return 'spegnersi';
			case 'depositXcoins': return ({required Object x}) => 'Accreditato ${x}';
			case 'sender': return 'mittente';
			case 'recipient': return 'destinatario';
			case 'memo': return 'nota';
			case 'kind': return 'modo (di vita)';
			case 'transferAmountExceedsAvailableBalance': return 'Trasferimenti in eccesso rispetto al saldo disponibile';
			case 'pleaseEnterValidAmount': return 'Inserire un importo valido';
			case 'networkFee': return 'Commissione di gestione della rete';
			case 'fee': return 'spese di gestione';
			case 'validLengthXcharacters': return ({required Object x}) => 'Lunghezza dell\'indirizzo valida ${x} caratteri';
			case 'historys': return 'record storico';
			case 'dtcCreditdetail': return 'Dettagli sui punti Delta';
			case 'usdCreditdetail': return 'Punti USD Dettagli';
			case 'dappSquare': return 'dApp Plaza';
			case 'amountRaised': return 'Importo raccolto';
			case 'disbursedAmount': return 'Importo emesso';
			case 'participationTimes': return 'Numero di partecipanti';
			case 'completionRate': return 'tasso di completamento';
			case 'exchangeRate': return 'tasso di cambio';
			case 'icpCrowdfunding': return 'ICP Crowdfunding';
			case 'crowdfunding': return 'crowdfunding';
			case 'trendsCurve': return 'curva di tendenza';
			case 'fullScreenView': return 'visualizzazione a schermo intero';
			case 'walletBalance': return 'Saldo del portafoglio:';
			case 'manageWallet': return 'Gestire il portafoglio';
			case 'fundraiseAmount': return 'raccolta fondi';
			case 'exchangeRewardAmount': return 'Riscattare l\'importo della ricompensa';
			case 'fundraise': return 'raccolta fondi';
			case 'rangeIntegersX': return ({required Object x}) => 'Intervallo: intero ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Partecipate con successo alla raccolta fondi e sarete ricompensati con ${amount}DTCT';
			case 'amountSummary': return 'Riepilogo degli importi';
			case 'changePreferred': return 'Cambio di preferenza';
			case 'changePreferredAddress': return 'Modifica dell\'indirizzo preferito';
			case 'preferredAddressTip': return 'I fondi saranno trasferiti automaticamente all\'indirizzo preferito quando i fondi vengono raccolti utilizzando un numero di cellulare o un DID registrato.';
			case 'newAddress': return 'Nuovo indirizzo';
			case 'newAddressTip': return 'Per evitare abusi, quando esiste più di un indirizzo di portafoglio, viene applicata una commissione di transazione per ogni nuovo indirizzo creato.';
			case 'createNew': return 'di nuova costruzione';
			case 'chainNetworkName': return 'nome della rete a catena';
			case 'from': return 'provenire da (un luogo)';
			case 'to': return 'fino a quando (un tempo)';
			case 'noAvailableDepositAmountDetected': return 'Non è stato rilevato alcun importo di deposito disponibile!';
			case 'crossChainReceiveMoneyMonitoring': return 'La collezione di catene incrociate è in ascolto ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Ricevuto ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Conferma in corso ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Note (da leggere assolutamente per i neofiti)';
			case 'whyUseSharedAddresses': return 'Perché utilizzare un indirizzo condiviso?';
			case 'useSharedrAdvantage': return 'I vantaggi dell\'uso di indirizzi condivisi quando si deposita attraverso le catene sono i seguenti:';
			case 'useSharedrAdvantage1': return '1. Ridurre lo spreco di commissioni di trasferimento e abbassare il costo di utilizzo per gli utenti. A causa dell\'utilizzo di un indirizzo esclusivo, si verifica un\'eccessiva dispersione di fondi; in genere, per facilitare il successivo trasferimento di altri utenti nel prelievo di fondi, quando l\'utente ricarica il secondo trasferimento di fondi deve essere riunito in uno o in un piccolo numero di indirizzi di gestione.';
			case 'useSharedrAdvantage2': return '2. Nello schema condiviso, il programma deve mantenere solo un pool relativamente piccolo di indirizzi che possono essere abbinati rapidamente ai trasferimenti in uscita e all\'ascolto della raccolta leggera, riducendo così l\'overhead delle risorse computazionali. Al contrario, se si utilizzassero indirizzi esclusivi, sarebbe vero il contrario.';
			case 'tokenType': return 'Tipo di gettone';
			case 'contract': return 'contrattuale';
			case 'contractStandard': return 'standard contrattuale';
			case 'contractAddress': return 'indirizzo del contratto';
			case 'native': return 'protozoi';
			case 'confirmUnbindingPleaseEnterYes': return 'Per confermare il disimpegno, inserire "sì".';
			case 'listAllWorkingTempReceivingAddresses': return 'Elenco di tutti gli indirizzi di ricarica funzionanti a catena incrociata';
			case 'setNote': return 'Impostazione delle note';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Non può essere più lungo di ${x} byte';
			case 'transferFee': return 'tassa di trasferimento';
			case 'crossChainFee': return 'tariffa trasversale alla catena';
			case 'crossChainTransferOutError': return 'errore di trasferimento del cross-link';
			case 'chainName': return 'nome della catena';
			case 'message': return 'messaggi';
			case 'dontShowAgain': return 'non più visualizzato';
			case 'queuing': return 'coda';
			case 'optional': return 'opzionale';
			case 'publiclyVisible': return 'visibile pubblicamente';
			case 'rates': return 'tariffa';
			case 'minimum': return 'minimo';
			case 'maximum': return 'limite superiore';
			case 'minimumBlockConfirmations': return 'Numero minimo di conferme di blocco';
			case 'dsmsVerifyTerminal': return 'Terminale di convalida DSMS';
			case 'overall': return 'ombrello';
			case 'my': return 'mio';
			case 'checkValidatorQualifications': return 'Verifica delle qualifiche di privilegio dell\'autenticatore';
			case 'getVerifierPermissions': return 'Ottenere i privilegi dell\'autenticatore';
			case 'qualification': return 'dotazioni naturali';
			case 'upperLimit': return 'limite';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Numero massimo di terminali di accesso consentiti';
			case 'numberOfExistingAccessTerminals': return 'Numero di terminali di accesso presenti';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Prima di richiedere i privilegi di autenticatore, è necessario preparare un telefono cellulare Android inattivo e un numero di accesso dedicato, nonché scaricare e installare l\'applicazione DSMS Access Terminal.';
			case 'downloadLink': return 'link per il download';
			case 'alreadyReadyFollowingTheAboveTips': return 'E\' pronto secondo i suggerimenti di cui sopra';
			case 'globalUniversal': return 'per uso globale';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Attualmente non ci sono abbastanza autenticatori locali per partecipare al servizio di accesso all\'autenticazione DSMS; selezionare il servizio di accesso "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'come numero di solo accesso';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Spuntare la casella "${tip}".';
			case 'inputLengthTooShort': return 'Lunghezza dell\'ingresso troppo breve';
			case 'shortName': return 'acronimi';
			case 'pleaseEnterXname': return ({required Object name}) => 'Inserire ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'La domanda è in corso di inoltro, si prega di attendere...';
			case 'applyForDSMSVerifierPermission': return 'Richiedere i privilegi di validatore DSMS';
			case 'confirmInformation': return 'Conferma delle informazioni';
			case 'lastHeartbeat': return 'battito cardiaco finale';
			case 'expirationTime': return 'tempo dovuto';
			case 'country': return 'nazioni';
			case 'accessTerminals': return 'terminale di accesso';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Numero totale di terminali del numero di accesso DSMS';
			case 'textContent': return 'Contenuto del testo';
			case 'scanQRcodeToLogin': return 'Passare il dito per accedere';
			case 'confirmLogin': return 'Confermare l\'accesso';
			case 'authorizeSubApplicationToLogin': return 'Autorizzare l\'accesso a questa sotto-applicazione';
			case 'authorizationSuccessful': return 'L\'autorizzazione è andata a buon fine!';
			case 'launchSMSprogram': return 'Lancio del programma SMS';
			case 'notApplied': return 'Nessuna applicazione';
			case 'validityPeriod': return 'periodo di validità';
			case 'renewal': return 'domanda di rinnovo';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Scansione del codice per autorizzare l\'accesso al terminale';
			case 'rewards': return 'incentivi';
			case 'roles': return 'carattere';
			case 'developerCenter': return 'Centro sviluppatori';
			case 'appName': return 'Nome dell\'applicazione';
			case 'pleaseSelect': return 'selezionare';
			case 'category': return 'categoria';
			case 'keywords': return 'sinonimo';
			case 'pleaseEnterAkeyword': return 'Inserire una parola chiave';
			case 'createApplication': return 'Creazione di applicazioni';
			case 'appType': return 'Tipo di applicazione';
			case 'numberOfCategoriesMustBetween1and3': return 'Il numero di categorie deve essere compreso tra 1 e 3.';
			case 'appLogoSpecifications': return 'Formato immagine: png, dimensione: entro 100KB, risoluzione (pixel): 256*256';
			case 'localAlbum': return 'Album fotografici locali';
			case 'networkPath': return 'percorso di rete';
			case 'imageURLkAddress': return 'URL immagine';
			case 'urlAddressFormatIsIncorrect': return 'Indirizzo URL formattato in modo errato';
			case 'imageFormatOnlySupportsPng': return 'Le immagini sono supportate solo in formato "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'La lunghezza deve essere compresa tra ${a}-${b} caratteri.';
			case 'introduction': return 'breve';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'La dimensione dell\'immagine non può essere superiore a ${a}, attualmente ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'La risoluzione dell\'immagine deve essere: ${p1}(pixel), attualmente ${p2}';
			case 'becomeDeveloper': return 'Diventare uno sviluppatore';
			case 'developerInformation': return 'Informazioni sullo sviluppatore';
			case 'teamName': return 'Nome della squadra';
			case 'website': return 'nodo';
			case 'other': return 'diversi da';
			case 'githubVerification': return 'Verifica Github';
			case 'exampleUrl': return 'Esempio di URL';
			case 'githubVerificationTip': return ({required Object did}) => 'Utilizzate il vostro account GitHub per creare un file "delta.did" nel vostro repository con il contenuto di "${did}"; quindi, incollate l\'indirizzo URL di githubusercontent di tale file in questa casella di input per l\'autenticazione.';
			case 'createApp': return 'Creazione di applicazioni';
			case 'appManagement': return 'gestione delle applicazioni';
			case 'statusLogs': return 'Registro di stato';
			case 'bad': return 'non va bene';
			case 'normal': return 'abituale';
			case 'good': return 'un eccellente';
			case 'onceCreatedItCannotBeChanged': return 'Una volta creato, non può essere modificato!';
			case 'manageApplicationEntity': return 'Gestione delle entità dell\'applicazione';
			case 'currentVersion': return 'versione attuale';
			case 'submitVersion': return 'Versione presentata';
			case 'packageOnlySupportZipCompressedFile': return 'Il pacchetto supporta solo file compressi in formato zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Il file \'${name}\' non è stato trovato nel pacchetto zip.';
			case 'fileList': return 'Elenco dei documenti:';
			case 'programPackage': return 'Pacchetto di programmazione:';
			case 'automaticallyExtractFromVersionFile': return 'Estratto automaticamente dai file \'.version\'.';
			case 'dappVersionFormatTip': return 'Il formato del numero di versione deve essere decimale con una precisione di 2 cifre, non superiore a un massimo di 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Il numero di versione deve essere maggiore della versione corrente \'${v}\'.';
			case 'versionNotes': return 'Impronta:';
			case 'updateRelease': return 'nuova versione';
			case 'loadAndRun': return 'Caricare ed eseguire';
			case 'notYetSubmittedProgramPackage': return 'Il pacchetto di programmi non è ancora stato presentato!';
			case 'authorizeMinidAppLogin': return 'Autorizzare l\'accesso alla mini-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Per confermare l\'autorizzazione, inserire "sì".';
			case 'authorizeNow': return 'Autorizzazione immediata';
			case 'operation': return 'Operazione.';
			case 'statusChange': return 'Cambiamento di stato';
			case 'changeTo': return 'Modificare in:';
			case 'notes': return 'Osservazioni.';
			case 'changesNotEffective': return 'La modifica non è valida!';
			case 'released': return 'Pubblicato';
			case 'inPublicBeta': return 'open beta';
			case 'developers': return 'Sviluppato da.';
			case 'reviewList': return 'Elenco dei commenti.';
			case 'postReview': return 'Lascia un commento';
			case 'scoreNow': return 'Vota ora';
			case 'description': return 'Descrizione.';
			case 'noData': return '(^-^)\n Nessun dato disponibile';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'La versione è stata aggiornata da ${a} a ${b}.';
			case 'loadNewVersion': return 'Carica la nuova versione';
			case 'name': return 'Nome.';
			case 'canisterId': return 'Id serbatoio.';
			case 'updateTime': return 'tempo di aggiornamento';
			case 'contractCanistersState': return 'Stato del serbatoio del contratto';
			case 'userDistribution': return 'distribuzione degli utenti';
			case 'settings': return 'Impostazione';
			case 'security': return 'Sicurezza';
			case 'invite': return 'inviti';
			case 'more': return 'Altro...';
			case 'receiveAddress': return 'Indirizzo di ricezione:';
			case 'hangingAmount': return 'appeso';
			case 'hangingAmountTips': return 'Gli Importi in sospeso sono registrazioni temporanee delle ricompense generate dall\'estrazione mineraria da parte della vostra squadra subordinata; una volta effettuata una sessione di estrazione, questi importi saranno raccolti negli Importi in sospeso.';
			case 'pendingAmount': return 'in attesa';
			case 'pendingAmountTips': return 'Gli importi in sospeso sono quelli che non sono ancora stati confermati rispetto agli inserzionisti; quelli che sono validamente abbinati saranno trasferiti al record USCT valido e qualsiasi parte non valida sarà esclusa.';
			case 'received': return 'ricevuto';
			case 'processing': return 'in corso';
			case 'replied': return 'rispondente';
			case 'rejected': return 'rifiuto';
			case 'unknown': return 'inesplorato';
			case 'insufficientBalance': return 'Equilibrio insufficiente!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Il saldo di ${x} è insufficiente a coprire le spese per la rete di cross-link';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Una transazione non è ancora stata completata e non può essere trasferita in questo momento.';
			case 'thisfunctionNotSupportExternalCalls': return 'Questa funzione non è supportata per essere chiamata esternamente';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Non c\'è corrispondenza per un indirizzo che può essere utilizzato per pagare le tariffe della catena, si prega di passare a un\'altra rete di catena per provare.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'L\'attuale corrispondenza con l\'importo massimo che può essere trasferito in una singola transazione è ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Le osservazioni non devono superare i 64 byte';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Il saldo è insufficiente e l\'importo è: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Non è possibile associare più di 3 indirizzi.\nSe è necessario associare un nuovo indirizzo di pagamento.\nSi prega di disassociare prima un altro indirizzo';
			case 'parametersA_exception': return ({required Object x}) => 'Parametri: ${x}, eccezione';
			case 'parameterException': return 'Eccezione di parametro!';
			case 'transferAmountMustBeLargerThan0': return 'L\'importo del trasferimento deve essere maggiore di 0';
			case 'authorizationHasExpired': return 'L\'autorizzazione è scaduta';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'L\'applicazione non è stata autorizzata dal proprietario';
			case 'authenticationTokenIsInvalid': return 'Token di autenticazione non valido';
			case 'verifyInfoIsInvalidOrExpired': return 'Informazioni di convalida non valide o scadute';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Verificare che il numero di terminali di accesso abbia superato il limite di uno su diecimila.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'La partecipazione all\'attività mineraria deve essere superiore a 3 giorni.';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Il numero di membri della cerchia di sicurezza non può essere inferiore a tre.';
			case 'avatarIsNotSet': return 'Avatar non impostato';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Il numero di rinvii diretti non può essere inferiore a 3.';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Il limite di tempo è insufficiente e si può cambiare il numero di cellulare solo una volta all\'anno.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Questo numero di cellulare esiste già e non può essere duplicato';
			case 'securityCodeIsIncorrect': return 'Codice di sicurezza errato';
			case 'securityCodeMayHaveExpired': return 'Il codice di sicurezza potrebbe essere scaduto';
			case 'sessionIdIsInvalidOrExpired': return 'Id di sessione non valido o scaduto';
			case 'sessionHasBeenAuthorized': return 'La sessione è stata autorizzata per il completamento!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Può essere rinnovato solo entro ${x} giorni prima della scadenza del contratto.';
			case 'notYetGrantedDeveloperPermissions': return 'Non ci sono ancora diritti per gli sviluppatori';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Il campo ${x} non può essere nullo';
			case 'emailFormatError': return 'Errore di formato dell\'e-mail';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Errore di formattazione \'${x}';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Il campo "${x}" deve avere una lunghezza compresa tra ${y} e ${z} caratteri.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'L\'intervallo di selezione \'${x}\' deve essere compreso tra ${y} e ${z}.';
			case 'unchanged_sameAsOldContent': return 'Invariato, stesso contenuto del precedente!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' esiste già!';
			case 'mobileNumberHasNotJoinedDelta': return 'Questo numero di cellulare non è stato aggiunto a Delta!';
			case 'referrerIdCannotBeEmpty': return 'L\'ID referente non può essere vuoto!';
			case 'referrerIdDoesNotExist': return 'L\'ID del referente non esiste!';
			case 'didIsIncorrectOrInvalid': return 'La DID non è corretta o non è valida!';
			case 'accessTokenIsIncorrectOrInvalid': return 'L\'accessToken non è corretto o non è valido!';
			case 'minimumWithdrawalAmountIs1USD': return 'Minimo 1USD per un singolo prelievo';
			case 'miningTimeIsNotYet': return 'Non è ancora il momento di estrarre.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Esiste già, non aggiungerlo di nuovo!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Non è possibile utilizzare il numero di registrazione come numero di accesso per l\'autenticazione.';
			case 'canotAddYourSelf': return 'Non puoi aggiungerti';
			case 'logOut': return 'Disconnettersi';
			case 'confirmLogout': return 'Confermare il logout';
			case 'logOutTipsText': return 'Nota bene: come indicato nel whitepaper, ogni verifica del vostro conto consumerà una certa quantità di monete DTC da pagare al verificatore come incentivo, quindi non cercate di accedere e uscire inutilmente, cliccando sul pulsante qui sotto uscirete immediatamente.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Inserire "sì" per confermare la disconnessione.';
			case 'tip': return 'attirare l\'attenzione su qcs.';
			case 'cancel': return 'cancellazioni';
			case 'close': return 'coagulo';
			case 'selected': return 'selezionato';
			case 'edit': return 'compilatore';
			case 'submit': return 'presentare (un rapporto, ecc.)';
			case 'goBack': return 'regressione (in psicologia)';
			case 'copiedToClipboard': return 'È stato copiato negli appunti.';
			case 'nickname': return 'termine affettuoso';
			case 'confirm': return 'riconoscere';
			case 'cannotBeEmpty': return 'Non può essere vuoto';
			case 'deleteSuccessful': return 'Eliminato con successo!';
			case 'successfullyModified': return 'La modifica ha avuto successo!';
			case 'executionSuccessful': return 'L\'implementazione è stata un successo!';
			case 'preview': return 'anteprime';
			case 'followSystem': return 'sistema di follow-up';
			case 'change': return 'variazione';
			case 'replace': return 'sostituzioni';
			case 'view': return 'controllare';
			case 'manage': return 'manageriale';
			case 'modify': return 'modifiche';
			case 'replacedSuccessfully': return 'Sostituzione riuscita!';
			case 'authentication': return 'autenticazione';
			case 'reacquire': return 'recuperare';
			case 'tryAgain': return 'Riprova.';
			case 'querying': return 'Sono in corso indagini ...';
			case 'writingToOnChain_pleaseWait': return 'La catena è in fase di scrittura, attendere...';
			case 'versionCheck': return 'rilevamento della versione';
			case 'alreadyLatestVersion': return 'Già l\'ultima versione!';
			case 'foundNewVersion': return 'Scoprite la nuova versione:';
			case 'upgradeLink': return 'Link per l\'aggiornamento:';
			case 'deviceDescription': return 'Descrizione delle attrezzature.';
			case 'notification30SecondsBeforeMiningStops': return 'Esegui un promemoria di notifica 30 secondi prima dell\'interruzione dell\'estrazione!';
			case 'goMining': return 'Vai all\'estrazione';
			case 'deltaMiningReminder': return 'Promemoria Delta Mining';
			case 'clickToMine_miningIsAboutToStop': return 'Clicca qui per estrarre, l\'estrazione si fermerà presto!';
			case 'incorrect_input': return 'Input non corretto!';
			case 'are_you_sure_delete': return 'Sei sicuro di voler eliminare?';
			case 'delete_account': return 'Elimina account';
			case 'how_to_operate_it': return 'Hai visto come usarlo?';
			case 'deletion_warning_tip': return 'Se elimini il tuo account, perderai tutte le tue monete Delta e tutti i guadagni degli altri membri andranno persi.';
			case 'launchWhatsAppProgram': return 'Avvia il programma WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'I numeri di accesso con questa icona supportano anche la verifica dei messaggi WhatsApp. Quando si inviano messaggi internazionali, si consiglia di utilizzare WhatsApp per aumentare il tasso di successo e ridurre i costi.';
			case 'ihaveSentVerificationString': return 'Ho inviato una stringa di verifica';
			case 'totalOfPeople': return 'Totale persone: ';
			case 'numberOfPeopleMining': return 'Numero di persone che estraggono';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Puoi usare un browser su un altro dispositivo per scansionare il codice QR e passarlo al programma SMS';
			case 'toggle': return 'toggle';
			case 'DSMSverifier': return 'DSMS Verificatore';
			case 'activate': return 'Attivare';
			case 'activated': return 'Attivato';
			case 'generateActivationCommand': return 'Genera comando di attivazione';
			case 'activationCommand': return 'Comando di attivazione';
			case 'activationSentedTip': return 'Dopo l\'invio dell\'SMS di attivazione, controllare lo stato di attivazione sul dispositivo terminale di accesso.';
			case 'biometricsNotEnabledTip': return 'La biometria (volto o impronta digitale) non è abilitata sul tuo dispositivo. Abilitala per continuare.';
			case 'error': return 'Errore';
			case 'exceptionOccurredWhenCallingBiometric': return 'Si è verificata un\'eccezione durante la chiamata della funzione biometrica (volto o impronta digitale)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' numeri di accesso sono controllati, '),
				shouldNum,
				const TextSpan(text: ' dovrebbe essere selezionato.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text} è stato inviato ai ${n} numeri di accesso sopra?';
			case 'interface': return 'Interfaccia:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Timeout di attesa o mancata corrispondenza del numero del mittente';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Il numero di cellulare del membro del cerchio di sicurezza che hai compilato non corrisponde: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Accedi entro 10 minuti dopo aver effettuato il logout per evitare la verifica a due fattori.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Devono essere compilati almeno ${n} numeri di telefono cellulare';
			case 'noAccessNumberInYourRegionYet': return 'Non esiste ancora alcun numero di accesso nella tua regione';
			case 'notEnoughAccessNumbersInYourRegion': return 'Non ci sono abbastanza numeri di accesso nella tua regione';
			case 'tipsForDeployDSMSterminal': return 'Il sistema ha caricato automaticamente alcuni numeri di accesso da altri paesi per te. Per fornire servizi di verifica migliori e a basso costo, si consiglia a te o al tuo referente di distribuire il terminale DSMS localmente per guadagnare commissioni di verifica.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Nessuno può fornirmi il codice di sicurezza?';
			case 'useSupplementalMode': return 'Usa la modalità supplementare';
			case 'returnToSecurityCodeMode': return 'Ritorna alla modalità codice di sicurezza';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Inserisci il numero di cellulare associato. Il prefisso internazionale può essere omesso.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Il numero di cellulare di ${name} è errato';
			case 'matchingVerificationStrategyIs': return 'La strategia di verifica corrispondente è:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Il saldo è maggiore di 3 ICP, per ora non c\'è bisogno di versare carburante.';
			case 'escrowAccount': return 'Conto di deposito a garanzia';
			case 'fuelRelay': return 'Relè carburante';
			case 'pourFuel': return 'Versare carburante';
			case 'fuelState': return 'Stato carburante';
			case 'pouringFuelTips': return 'Il versamento del carburante non comporta alcun vantaggio o svantaggio, il suo scopo è arricchire l\'esperienza del sistema Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Sponsorizza gli sviluppatori guardando gli annunci';
			case 'status': return 'Stato';
			case 'date': return 'Data';
			default: return null;
		}
	}
}

extension on _StringsJa {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return '図頭';
			case 'switchLanguage': return '言語切り替え';
			case 'languageSwitch': return '言語の切り替え';
			case 'slogan': return 'デルタにおける分散型経済の構築';
			case 'countryRegionCode': return '国/地域コード';
			case 'countryRegionSelection': return '国・地域の選択';
			case 'nextStep': return '次のステップ';
			case 'yourPhoneNumber': return '電話番号';
			case 'pleaseSelectCountryAndRegion': return '国/地域を選択してください';
			case 'pleaseEnterPhoneNumber': return '有効な電話番号を入力してください！';
			case 'referrerDid': return 'リファラーDID';
			case 'pleaseEnterTheReferrersDid': return '有効な紹介者の分散ID IDを入力してください。';
			case 'thisDidIsInvalid': return 'このDIDは無効である。';
			case 'nicknameFormatTips': return 'ニックネームは空白であってはならず、16桁を超えてはならない。';
			case 'additionalIinformation': return '追加情報';
			case 'invitationSubject': return 'デルタ合意形成への招待';
			case 'invitationLetter': return ({required Object did}) => 'こんにちは、私はデルタ合意形成に参加しています！\n DeltaはICP上で動作する新しいオープンソースのデジタル通貨プラットフォームで、パスワードや秘密鍵、ニーモニックなしで様々なデジタル通貨を管理、使用することができます。このリンク https://delta.kim/auto/download をクリックしてアプリケーションをインストールし、合意形成と通貨鋳造に参加してください。\n リファラーDID: ${did}';
			case 'dSMSverification': return 'DSMSの検証';
			case 'getAccessNumbers': return 'アクセス番号の取得';
			case 'getAccessNumberPromptMessage': return '下の「取得」ボタンをクリックして、SMS認証アクセス番号のセットをキューに回転させます。';
			case 'optionalAccessNumbers': return 'オプションのアクセス番号';
			case 'accessNumber': return 'アクセス番号';
			case 'TELCO': return '事業者';
			case 'score': return 'スコア';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ja'),
				one: () => TextSpan(children: [
					nBuilder(n),
					const TextSpan(text: ' 個のアクセス番号を確認し、"'),
					span('text'),
					const TextSpan(text: '" ボタンをクリックして次のステップに進んでください。'),
				]),
				other: () => TextSpan(children: [
					nBuilder(n),
					const TextSpan(text: ' のアクセス番号を確認し、"'),
					span('text'),
					const TextSpan(text: '" ボタンをクリックして次のステップに進んでください。'),
				]),
			);
			case 'whatIsDeltaDesc': return 'デルタは、オープンソース、分散型、グローバルなデジタル通貨の実験であり、暗号通貨アプリケーションのエコシステムである。';
			case 'deltaGoalsDesc': return 'その目標は、人々がデルタを使って、普遍的で、公正で、安全で、高速で、環境に優しい新しいデジタル通貨を共同構築できるようにすることである。そして、これらのデジタル通貨やこれまでの暗号通貨に対して、様々な効果的なアプリケーション・シナリオを提供することです。';
			case 'details': return 'しょうさい';
			case 'get': return 'ゲイン';
			case 'select': return 'オプション';
			case 'send': return '送信';
			case 'complete': return '果たす';
			case 'selectedAccessNumberPrompt': return '選択すると、完全なアクセス番号が表示され、認証文字列が生成される。';
			case 'location': return 'プレースメント';
			case 'verificationString': return 'バリデーション文字列';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: '電話番号'),
				num,
				const TextSpan(text: 'を使用し、'),
				label,
				const TextSpan(text: 'を'),
				accessNumber,
				const TextSpan(text: 'に送信して認証を完了してください。'),
			]);
			case 'ihaveSentTheSMS': return 'テキストメッセージを送信した';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: '検証文字列は 6 分以内に有効です。残り時間は '),
				time,
				const TextSpan(text: ' です。'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => '速すぎて${x}秒待っても続行できない！';
			case 'waitingForVerificationSMS': return '確認のSMSを待つ...';
			case 'partSuccsForVerificationSMS': return 'アクセス端末のSMS認証に合格しました！';
			case 'creatingAccessToken': return 'アクセストークン作成中';
			case 'intoDelta': return 'インサイド・デルタ';
			case 'deltaAccountIsLoggedIn': return 'Delta アカウントにログインしています';
			case 'iHavLoggedOut': return '私は抜ける。';
			case 'startTwoFactorVerification': return 'ダブル検証の開始';
			case 'securityCircleVerification': return '安全検証の輪';
			case 'generateSecurityCode': return 'セキュリティコードの生成';
			case 'generateSecurityCodeHintText': return '生成されたセキュリティ・コードは、あなたのセキュリティ・サークルの中からランダムに選ばれたメンバーに送信されます。';
			case 'notSetSecurityCircleEnterPlaceholderTip': return '6桁のプレースホルダーを入力して、次のステップに進んでください。';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'セキュリティコードが生成されましたので、以下の家族や友人に連絡して、セキュリティコードを抽出してもらい、認証を通過してください！';
			case 'itGetSecurityCodeTip': return 'ヒント: セキュリティコードは、デルタ航空アプリ -> メニュー -> セキュリティの提供ページでアカウントのニックネームをダブルクリックすることで取得できます。';
			case 'securityCircleMemberList': return 'セキュリティ サークル メンバー リスト:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'メンバー リストから親戚または友人を選択して、本当の身元を確認するためのセキュリティ コードを生成して提供してください。目的は、携帯電話番号が紛失または盗難されたときに、他人によってアカウントが管理されるのを防ぐことです。';
			case 'formatIsXdigits': return ({required Object num}) => '形式は ${num} 桁です';
			case 'signInSuccessfully': return 'ログインに成功しました！';
			case 'twoFAandLogin': return '二重認証とログイン';
			case 'verificationSuccessful': return '成功を確認する！';
			case 'validationFailed': return '検証に失敗した！';
			case 'dappInfo': return 'DApp情報';
			case 'securityCircle': return 'セキュリティリング';
			case 'securityCode': return 'セキュリティコード';
			case 'provideSecurity': return 'セキュリティの提供';
			case 'addManully': return '手動で追加する';
			case 'addFromContacts': return 'アドレス帳から追加';
			case 'addSecurityCircle': return '安全の輪を広げる';
			case 'inputType': return '入力タイプ';
			case 'mobileNumber': return '携帯電話番号';
			case 'did': return '住所';
			case 'pleaseEnterValidDID': return '有効な分散ID IDを入力してください。';
			case 'pleaseEnterValidWalletAddress': return '有効なウォレットアドレスを入力してください。';
			case 'appellation': return 'アドレスの形式';
			case 'appellationHint': return '"赤ちゃん "みたいなもの？';
			case 'addSecurityCircleTips': return '信頼できない人をセキュリティ・サークルに追加しないでください。';
			case 'referralTeam': return '推薦チーム';
			case 'profile': return '口座情報';
			case 'menu': return 'メニュー';
			case 'directly': return 'ダイレクト';
			case 'indirectly': return '間接的';
			case 'inviteContacts': return '招待連絡先';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'あなたの招待者はニックネーム'),
				nickname,
				const TextSpan(text: 'で、あなたは直接'),
				num1,
				const TextSpan(text: '人を紹介し、そのうち'),
				num2,
				const TextSpan(text: '人が現在オンラインです。'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'あなたは'),
				num1,
				const TextSpan(text: '人を間接的に紹介し、そのうち'),
				num2,
				const TextSpan(text: '人が現在オンラインである。'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: '友人をデルタに招待し、一緒に社会的合意を高めてください。 1 人の直接の推奨ごとに、マイニング レートが基本レートの '),
				rate1,
				const TextSpan(text: ' ずつ増加します。 '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: '友人をデルタに招待し、一緒に社会的合意を高めましょう。1 人の間接的な推奨ごとに、マイニング レートが基本レートの '),
				rate2,
				const TextSpan(text: ' ずつ増加します。'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => '本当に"${name}"を削除しますか？';
			case 'safetyCircleRoleQ': return '安全リングの目的は何ですか？';
			case 'safetyCircleRoleA': return '機密性の高い状況で二次認証を提供し、アカウントを保護します。';
			case 'howSecurityCirclesWorkQ': return 'セーフティリングの仕組み';
			case 'howSecurityCirclesWorkA': return 'サークル・オブ・セーフティ認証が必要な場合、デルタスマートコントラクトプログラムは、サークル・オブ・セーフティのバディリストからランダムにメンバーを選択し、あなたに代わって本人確認を完了するためのセーフティコードを提供します。あなたがメンバーに安全コードを求めると、メンバーはあなたが本人かどうかを確認することができます。同時に、あなたのアカウントのセキュリティを保護するため、「本人でない場合はセキュリティコードの提供を拒否してください」というプロンプトが表示されます。そのため、セキュリティ・サークルのメンバーが信頼できる人物であることを常に確認する必要があります。';
			case 'securityCircleBeUsedQ': return 'いつ使うのか？';
			case 'securityCircleBeUsedA1': return '1.デルタAPPのコントロールを失う場合、通常は携帯電話の紛失や盗難が考えられます。';
			case 'securityCircleBeUsedA2': return '2.デルタスマートコントラクトプログラムは、機密性の高い操作を行う場合、それがあなた自身であることを確認する必要があります。';
			case 'provideSafetyTip1': return 'バディがセキュリティコードを要求してきたら、それがバディ自身のものであることを確認してください。';
			case 'provideSafetyTip2': return 'あなたは、上記の友人たちにセキュリティを提供している。彼らは、あなたをセキュリティ・サークルで最も信頼できる人物として設定し、そのアカウントで機密業務に遭遇した場合に備えて、あなたにセキュリティの確認を行ってもらう必要がある。';
			case 'provideSafetyTip3': return '必要に応じて、相手のアバターをダブルクリックしてセキュリティコードを抽出します。';
			case 'doesNotSecurityCodeNeedsRetrieved': return '相手は現在、抜き取る必要のあるセキュリティーコードを持っていない！';
			case 'existSecurityCodeTip': return 'なお、セキュリティ・コードをお尋ねになるご友人やご家族が、ご本人であることをご確認ください。 ご友人やご家族を保護するため、ご友人やご家族ご本人からセキュリティ・コードをご提供いただけない場合は、セキュリティ・コードのご提供をお断りください。';
			case 'avatarSettings': return 'アバター設定';
			case 'NFTAvatarPropertyRightsText': return '免責事項：当該NFTをアバターとして使用することは、あくまで個人の嗜好であり、当該NFTの知的財産権を所有することとは関係ありません。';
			case 'projectWebsite': return 'プロジェクトのウェブサイト:';
			case 'whitepaper': return 'ホワイトペーパー:';
			case 'indexID': return 'インデックスID';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'インデックスの範囲は ${start} から ${end} までです';
			case 'inputToLoadNFTAvatarTip': return 'お気に入りのNFTのインデックスIDを入力すると、プログラムが自動的にアバターとして読み込みます。';
			case 'miningRate': return '採掘率';
			case 'miningDetails': return '鉱山の詳細';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: '合計採掘レート： '),
				rate,
				const TextSpan(text: ' δ/日'),
			]);
			case 'EndOfMiningSession': return 'サイクルマイニングは終わった：';
			case 'tapToMineDeltaCoin': return 'クリックしてデルタコインを採掘';
			case 'clickToStartMining': return 'クリックして採掘を開始する！';
			case 'miningHasStoppedPromptDesc': return '採掘は停止しています。24時間ごとに採掘サイクルがあり、稲妻のアイコンをクリックして新しいラウンドの採掘を開始します。デルタの採掘は、追加の演算能力とお使いのデバイスからのネットワークトラフィックを消費しない割り当てメカニズムです。';
			case 'aboutBaseRate': return 'ベースレートは？';
			case 'baseRateDescription': return 'ホワイトペーパーで合意されたように、デルタマイニングの基本レート減少ルールは2段階に分けられる。\nフェーズ1：参加者（登録者）数が3,000人以下の場合、レートは32δ/日となる。これを基本として、人数が10人増えるごとに基本レートを半減させる。\n第2段階：参加者数が3,000万人以上になると、参加者数が3倍になるたびに基本料金が半額になる。最終掘削が生産を停止するまで。';
			case 'baseRate': return 'きほんりょうきん';
			case 'directReferralRewards': return '直接紹介ボーナス';
			case 'directReferralRewardDesc': return '各紹介者が採掘モードにある場合、あなたの採掘レートはさらに基本レートの1/3まで上昇します。\n\n さらに、紹介者の採掘状況も直接紹介ボーナスの対象となります。';
			case 'indirectReferralRewards': return '間接的な紹介報酬';
			case 'indirectReferralRewardDesc': return '間接的な紹介者が採掘している場合、あなたの採掘レートはさらに基本レートの1/10だけアップします。\n\n あなたの直接紹介チームは、彼らが再紹介する各人があなたにとって間接紹介となります。';
			case 'mine': return '掘り出す';
			case 'thisMiningInformation': return '現在の採掘情報';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'マイニング参加回数： '),
				x,
				const TextSpan(text: '回'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '今回の獲得合計： '),
				x,
				const TextSpan(text: ' デルタコイン'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '基本収益： '),
				x,
				const TextSpan(text: 'コイン'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'チームの直接貢献： '),
				x,
				const TextSpan(text: ' コイン'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '間接的なチーム貢献： '),
				x,
				const TextSpan(text: 'コイン'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '掘るまでの期間： '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '有効採掘時間： '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x}時間';
			case 'keep3_5peopleInTheSafetyCircleTip': return '資産の安全保障のために、セキュリティ・サークルのメンバーは、常に3～5人の信頼できる人を維持する必要がある。';
			case 'index': return 'インデクシング';
			case 'amount': return '金額';
			case 'balance': return 'バランス';
			case 'timeStamp': return 'タイムスタンプ';
			case 'summary': return '抄録';
			case 'miningHasStopped': return '採掘は止まっている。';
			case 'miningHasStoppedDesc': return 'マイニングは現在停止しています。';
			case 'startMining': return '採掘開始';
			case 'changeMobileNumber': return '携帯電話番号の変更';
			case 'currentMobileNumber': return '現在の携帯電話番号';
			case 'newMobileNumber': return '新しい携帯電話番号';
			case 'securityCodeFormatIs6digits': return 'セキュリティ・コードの形式は6桁！';
			case 'startVrification': return '検証開始';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'この携帯電話番号はすでに存在し、関連するDIDは${dId}です。';
			case 'noDataYet': return 'データなし';
			case 'previousMobileNumber': return '以前の携帯電話番号';
			case 'changeLog': return '変更の記録';
			case 'referralLinkToShare': return '共有するための推奨リンク';
			case 'referrer': return 'リファラー';
			case 'isoCountryCode': return 'ISO国コード';
			case 'avatarLogo': return 'ヘッダーロゴ';
			case 'creationTime': return '作成時間';
			case 'lastUpdate': return '最終更新日';
			case 'numberOfSecurityCircleMembers': return 'セキュリティ・サークルのメンバー数';
			case 'theLatestMining': return '最後の発掘';
			case 'effectiveMiningDays': return '有効採掘日数';
			case 'modifyNickname': return 'ニックネームの変更';
			case 'didNotChange': return '変更はない！';
			case 'kycVerification': return 'KYC検証';
			case 'faceID': return 'フェイスID';
			case 'touchID': return '指紋ID';
			case 'biometricsAuthorizationTest': return 'バイオメトリクス認証テスト';
			case 'currentState': return '現在の状態';
			case 'biometricsAuthenticationLocalizedReason': return 'デバイスのロック解除を使用して本人確認を行います。';
			case 'graph': return '画像アーカイブ';
			case 'referralRelationshipGraph': return '紹介関係マッピング';
			case 'nativeContacts': return '地元の連絡先';
			case 'registrationAndMiningTrends': return '登録とマイニングの動向';
			case 'inMining': return '採掘';
			case 'registrationVolume': return '登録量';
			case 'unmined': return '未開発';
			case 'mined': return '有色';
			case 'communityMining': return 'コミュニティマイニング';
			case 'consensusPromotionFund': return 'コンセンサス推進基金';
			case 'ecologicalAwardFund': return 'エコロジー奨励基金';
			case 'icpFuelCrowdfunding': return 'ICP燃料クラウドファンディング';
			case 'coreDeveloperRewards': return 'コア開発者報酬';
			case 'totalAllocation': return '全体的な分布';
			case 'miningRatio': return '鉱業比率';
			case 'billion.30': return '300億ドル';
			case 'billion.60': return '600億ドル';
			case 'billion.180': return '1800億ドル';
			case 'billion.300': return '3,000億ドル';
			case 'watchAdsToSupportDevelopers': return '開発者をサポートする広告を見る';
			case 'loadingAdcomponents': return '広告コンポーネントの読み込み...';
			case 'timeIsNotUp': return '時間切れではない！';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return '読み込みに失敗しました。ネットワークがブロックされている可能性があります！';
			case 'pendingUSCTrecords': return '保留中のUSCTの記録';
			case 'pendingUSCTrecordsDesc': return '保留中のUSCTレコードは、15～30日以内に広告プラットフォームに対して確認され、有効なレコードはUSCTレコードリストに転送され、対応するUSCT金額がアカウント残高に追加されます。';
			case 'validity': return '妥当性';
			case 'advertiser': return '広告主';
			case 'earned': return '獲得';
			case 'withdraw': return '現金の引出し';
			case 'validUSCTrecords': return 'USCTの効果的な記録';
			case 'USCTmining': return 'USCTマイニング';
			case 'aboutUSCTmining': return 'USCTの採掘について？';
			case 'aboutUSCTminingItme1': return '1.USDTは世界的に人気のある米ドルのステーブルコインで、世界中の主要な暗号通貨取引所で各国のソブリン通貨と簡単に交換できます。';
			case 'aboutUSCTminingItme2': return '2.USCTは、USDクレジットとして知られるUSCTマイニングの収益の一時的な措置であり、広告プラットフォームの実際の決済額と分配ルール、および対応する割合に従って、最終的にUSDTに変換されます。';
			case 'aboutUSCTminingItme3': return '3. USCTマイニングは、デルタコミュニティのトラフィック広告実現機能です。デルタコミュニティの大規模なユーザーベースを活用し、広告主、デルタ開発者、不在者に複数の利益を提供します。USCTマイニングは、デルタのエコシステムがまだ形成され、繁栄していない初期段階において、不在者に一定の効果的な収入を提供するように設計されています。同時に、開発者が長期にわたって開発サービスを提供し続け、最終的にホワイトペーパーのすべての計画を実現できるように、開発者に一定の経済的支援を提供します。';
			case 'aboutUSCTminingItme4': return '4.分配ルールは、総売上の40パーセントが開発者の技術サービス手数料として、残りの60パーセントがコミュニティの欠勤報奨金として使用されるように設計されている。DTCと同様のマルチレベル分配モデルの欠勤報奨金の部分は、欠勤報奨金は6：3：1の比率に従って3つの部分に分割され、USCTマイニングの欠勤報奨金の各1つは、現在の広告の欠勤に割り当てられた6部分、優れた紹介者に割り当てられた3部分、2番目のレベルの紹介者に割り当てられた1部分。同様に、USCTマイニングを通じて紹介した友人にも同じ紹介者報酬を得ることができます。このマルチレベル分配の利点は、ダウンライン・チームを育成することにより、誰でも比較的多額のUSDTを獲得できることです。';
			case 'aboutUSCTminingItme5': return '5.決済期間は7日間です。つまり、7日間ごとに有効性が広告プラットフォームで確認され、確認された有効な収益と実際の金額が残高に記録されます。各出金の最低金額は10USDTです。';
			case 'linesXtoY': return ({required Object x, required Object y}) => '${x} から ${y} 行目';
			case 'wallet': return '財布';
			case 'multiChainWallet': return 'マルチチェーンウォレット';
			case 'deposit': return 'ちょきん';
			case 'transfer': return '振り込む';
			case 'xcoinInWallet': return ({required Object coinCode}) => 'ウォレットアドレスに${coinCode}を入れる。';
			case 'transactions': return '取引記録';
			case 'network': return '網目';
			case 'walletAddress': return '財布の住所';
			case 'currentAddress': return '現住所';
			case 'depositAddress': return 'リチャージ住所';
			case 'receivingMoneyAddress': return '受取人住所';
			case 'applyTempDepositAddress': return '一時増額申請先';
			case 'tempDepositAddressTip': return '1.この住所は共有の保証金住所です。リース期間満了後や、拘束解除後のご入金はご遠慮ください。その場合、金額は失われます。';
			case 'tempDepositAddressTip2': return '2.入金を行う前に、[チェーン名]と[コイン名]が完全に一致していることを確認してください。コントラクトトークンの場合は、[コントラクトスタンダード]と[コントラクトアドレス]が完全に一致していることも確認する必要があります。';
			case 'tempDepositAddressTip3': return '3.上記のヒントのパラメータに一致しない資金を入金しようとしないでください。';
			case 'tempDepositAddressTip4': return '4.他の種類の資産を入金する必要がある場合は、対応する通貨ページとパラメータオプションに切り替えて、新しい住所を申請してください。';
			case 'applyExtensionOfValidity': return '有効期間延長申請';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'このアドレスの有効期限は'),
				diff,
				const TextSpan(text: 'の後であり、'),
				tap('manual extend'),
				const TextSpan(text: 'は有効期限の12時間前まで有効である。'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return '更新は12時間前まで';
			case 'theReceivingAddressValidForLongtime': return 'この住所は長期間有効である。';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'このコレクション・アドレスは長期間有効で、リアルタイムで自動的に入金される。';
			case 'confirmDeposited': return '入金の確認';
			case 'unbindThisDepositAddress': return 'このトップアップアドレスをアンバンドルする';
			case 'confirmDepositedTip': return '資金が送金された場合、上のボタンをクリックすると10分後にウォレットに請求が行われます。';
			case 'unbindDepositAddressTip': return 'スマートコントラクトのランニングオーバーヘッドを削減するため、有効期間中にこれ以上資金を入金しない場合は、トップアップアドレスのバインドを解除してください。';
			case 'transferToAddress': return 'アドレスへ';
			case 'longPressToPaste': return '長押しでペースト';
			case 'all': return 'フル';
			case 'balanceX': return ({required Object x}) => '残高 ${x}';
			case 'transferOut': return 'ひっくりかえす';
			case 'depositXcoins': return ({required Object x}) => 'クレジット ${x}';
			case 'sender': return '送信者';
			case 'recipient': return '受取人';
			case 'memo': return '備考';
			case 'kind': return 'みち';
			case 'transferAmountExceedsAvailableBalance': return '利用可能残高を超える振替';
			case 'pleaseEnterValidAmount': return '有効な金額を入力してください。';
			case 'networkFee': return 'ネットワーク手数料';
			case 'fee': return '手数料';
			case 'validLengthXcharacters': return ({required Object x}) => 'アドレスの有効長 ${x} 文字';
			case 'historys': return '歴史的記録';
			case 'dtcCreditdetail': return 'デルタ・ポイント詳細';
			case 'usdCreditdetail': return 'USDポイント詳細';
			case 'dappSquare': return 'dAppスクエア';
			case 'amountRaised': return '調達額';
			case 'disbursedAmount': return '発行額';
			case 'participationTimes': return '参加者数';
			case 'completionRate': return '完走率';
			case 'exchangeRate': return '為替レート';
			case 'icpCrowdfunding': return 'ICPクラウドファンディング';
			case 'crowdfunding': return 'クラウドファンディング';
			case 'trendsCurve': return 'トレンド曲線';
			case 'fullScreenView': return '全画面表示';
			case 'walletBalance': return '財布の残高';
			case 'manageWallet': return 'ウォレットの管理';
			case 'fundraiseAmount': return '資金調達';
			case 'exchangeRewardAmount': return 'リワードの交換';
			case 'fundraise': return '資金調達';
			case 'rangeIntegersX': return ({required Object x}) => '範囲：整数 ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => '募金に成功し、奨励金を獲得しました${amount}DTCT';
			case 'amountSummary': return '金額の概要';
			case 'changePreferred': return '嗜好の変更';
			case 'changePreferredAddress': return '希望住所の変更';
			case 'preferredAddressTip': return '登録された携帯電話番号またはDIDを使用して資金が回収されると、資金は希望する住所に自動的に送金される。';
			case 'newAddress': return '新しいアドレス';
			case 'newAddressTip': return '不正使用を防ぐため、複数のウォレットアドレスが存在する場合、新しいアドレスが作成されるごとに取引手数料が発生します。';
			case 'createNew': return '新築';
			case 'chainNetworkName': return 'チェーンネットワーク名';
			case 'from': return '出づ';
			case 'to': return 'まで';
			case 'noAvailableDepositAmountDetected': return '利用可能な預金額は検出されなかった！';
			case 'crossChainReceiveMoneyMonitoring': return 'クロス・チェーン・コレクションは、...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '受取 ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '確認中 ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'ノート（初心者必読）';
			case 'whyUseSharedAddresses': return 'なぜ共有アドレスを使うのか？';
			case 'useSharedrAdvantage': return 'チェーン間の預け入れに共有アドレスを使う利点は以下の通り：';
			case 'useSharedrAdvantage1': return '1.転送手数料の無駄を削減し、ユーザーの使用コストを下げる。排他的なアドレスの使用のため、それはあまりにも多くの資金の分散につながる、一般的に資金の引き出しで他のユーザーの後続の転送を容易にするために、ユーザーが充電するときに資金の2番目の転送は、1つまたはアドレス管理の少数にプールする必要があります。';
			case 'useSharedrAdvantage2': return '2.共有スキームでは、プログラムは、発信転送と軽い収集リスニングで素早くマッチさせることができるアドレスの比較的小さなプールを維持するだけでよく、計算リソースのオーバーヘッドを減らすことができる。対照的に、排他的アドレスが使用された場合はその逆となる。';
			case 'tokenType': return 'トークン・タイプ';
			case 'contract': return '契約';
			case 'contractStandard': return '契約基準';
			case 'contractAddress': return '契約住所';
			case 'native': return '原始動物';
			case 'confirmUnbindingPleaseEnterYes': return 'バインド解除を確認するには、「はい」を入力してください。';
			case 'listAllWorkingTempReceivingAddresses': return '作業中のクロスチェーン・リチャージ・アドレスをすべてリストアップする';
			case 'setNote': return 'ノートの設定';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => '長さは ${x} バイトを超えることはできません';
			case 'transferFee': return '移籍金';
			case 'crossChainFee': return 'クロスチェーン料金';
			case 'crossChainTransferOutError': return 'クロスリンク転送エラー';
			case 'chainName': return 'チェーン名';
			case 'message': return 'メッセージ';
			case 'dontShowAgain': return '表示されなくなった';
			case 'queuing': return 'キュー';
			case 'optional': return '任意';
			case 'publiclyVisible': return '公開';
			case 'rates': return '料金表';
			case 'minimum': return '最小';
			case 'maximum': return '上限';
			case 'minimumBlockConfirmations': return '最低ブロック確認数';
			case 'dsmsVerifyTerminal': return 'DSMS検証ターミナル';
			case 'overall': return '傘';
			case 'my': return '私の';
			case 'checkValidatorQualifications': return '認証者の権限資格のチェック';
			case 'getVerifierPermissions': return '認証権限取得';
			case 'qualification': return '天賦の才能';
			case 'upperLimit': return '制限';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'アクセス許可端末の最大数';
			case 'numberOfExistingAccessTerminals': return '設置されているアクセス端末の数';
			case 'applyingForDSMSVerifierPermissionsTips': return '認証権限を申請する前に、アイドル状態のAndroid携帯電話と専用のアクセス番号を用意し、DSMS Access Terminalアプリケーションをダウンロードしてインストールする必要があります。';
			case 'downloadLink': return 'ダウンロードリンク';
			case 'alreadyReadyFollowingTheAboveTips': return '上記のヒント通りに準備完了';
			case 'globalUniversal': return 'グローバル用';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: '現在、DSMS 検証アクセス サービスに参加するためのローカル検証者が不足しています。サービスにアクセスするには、「'),
				gu,
				const TextSpan(text: '」を選択してください。'),
			]);
			case 'asDedicatedNumberForAccess': return 'アクセス専用番号として';
			case 'pleaseCheckTip': return ({required Object tip}) => '「${tip}」にチェックを入れてください';
			case 'inputLengthTooShort': return '入力の長さが短すぎる';
			case 'shortName': return '頭字語';
			case 'pleaseEnterXname': return ({required Object name}) => '${name} を入力してください';
			case 'applicationIsBeingSubmitted_pleaseWait': return '申請中です、お待ちください...';
			case 'applyForDSMSVerifierPermission': return 'DSMS Validator 特権を申請する';
			case 'confirmInformation': return '情報の確認';
			case 'lastHeartbeat': return '最後の鼓動';
			case 'expirationTime': return '期限';
			case 'country': return '列国';
			case 'accessTerminals': return 'アクセスターミナル';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'DSMSアクセス番号端末の総数';
			case 'textContent': return 'テキストコンテンツ';
			case 'scanQRcodeToLogin': return 'スワイプでログイン';
			case 'confirmLogin': return 'ログインの確認';
			case 'authorizeSubApplicationToLogin': return 'このサブアプリケーションのログインを許可する';
			case 'authorizationSuccessful': return '認可は成功した！';
			case 'launchSMSprogram': return 'SMSプログラムの開始';
			case 'notApplied': return '応募なし';
			case 'validityPeriod': return '有効期間';
			case 'renewal': return '更新申請';
			case 'scanCodeToAuthorizeTerminalLogin': return 'コードをスキャンして端末のログインを承認する';
			case 'rewards': return 'インセンティブ';
			case 'roles': return '性格';
			case 'developerCenter': return 'デベロッパーセンター';
			case 'appName': return 'アプリケーション名';
			case 'pleaseSelect': return '選択してください';
			case 'category': return 'カテゴリー';
			case 'keywords': return '笑い草';
			case 'pleaseEnterAkeyword': return 'キーワードを入力してください';
			case 'createApplication': return 'アプリケーションの作成';
			case 'appType': return 'アプリケーション・タイプ';
			case 'numberOfCategoriesMustBetween1and3': return 'カテゴリの数は1から3の間でなければならない。';
			case 'appLogoSpecifications': return '画像形式：png、サイズ：100KB以内、解像度（ピクセル）：256*256';
			case 'localAlbum': return 'ローカル・フォトアルバム';
			case 'networkPath': return 'ネットワークパス';
			case 'imageURLkAddress': return '画像URL';
			case 'urlAddressFormatIsIncorrect': return 'URLアドレスの書式が正しくない';
			case 'imageFormatOnlySupportsPng': return '画像は "png "フォーマットにのみ対応しています。';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => '長さは${a}-${b}文字の間でなければならない。';
			case 'introduction': return '簡単';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => '画像サイズは${a}より大きくできません、現在は${b}です。';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => '画像の解像度は${p1}(ピクセル)、現在は${p2}でなければならない。';
			case 'becomeDeveloper': return '開発者になる';
			case 'developerInformation': return '開発者情報';
			case 'teamName': return 'チーム名';
			case 'website': return 'ノード';
			case 'other': return 'を除く';
			case 'githubVerification': return 'Githubによる検証';
			case 'exampleUrl': return 'URLの例';
			case 'githubVerificationTip': return ({required Object did}) => 'GitHubアカウントを使って、あなたのリポジトリに\'${did}\'という内容の\'delta.did\'ファイルを作成し、そのファイルのgithubusercontent URLアドレスをこの入力ボックスに貼り付けて認証してください。';
			case 'createApp': return 'アプリケーションの作成';
			case 'appManagement': return 'アプリケーション管理';
			case 'statusLogs': return 'ステータスログ';
			case 'bad': return 'ダメ';
			case 'normal': return '通常';
			case 'good': return '優れた';
			case 'onceCreatedItCannotBeChanged': return '一度作成されると変更できない！';
			case 'manageApplicationEntity': return 'アプリケーション・エンティティの管理';
			case 'currentVersion': return '現行バージョン';
			case 'submitVersion': return '投稿バージョン';
			case 'packageOnlySupportZipCompressedFile': return '本パッケージは zip 圧縮ファイルのみをサポートします。';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'ファイル \'${name}\' が zip パッケージに見つかりませんでした。';
			case 'fileList': return '文書のリスト';
			case 'programPackage': return 'プログラミング・パッケージ：';
			case 'automaticallyExtractFromVersionFile': return '.version\'ファイルから自動的に抽出されます。';
			case 'dappVersionFormatTip': return 'バージョン番号の形式は、最大99.99を超えない2桁精度の10進数でなければならない。';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'バージョン番号は現在のバージョン \'${v}\' より大きくなければならない。';
			case 'versionNotes': return 'インプリント：';
			case 'updateRelease': return 'ニューバージョン';
			case 'loadAndRun': return 'ロードして実行する';
			case 'notYetSubmittedProgramPackage': return 'プログラムパッケージはまだ提出されていない！';
			case 'authorizeMinidAppLogin': return 'mini-dAppのログインを許可する';
			case 'confirmAuthorizationPleaseEnterYes': return '承認を確認するには、「はい」を入力してください。';
			case 'authorizeNow': return '即時認可';
			case 'operation': return 'オペレーション';
			case 'statusChange': return 'ステータス変更';
			case 'changeTo': return 'に変更する：';
			case 'notes': return '備考';
			case 'changesNotEffective': return 'この変更は無効である！';
			case 'released': return '出版';
			case 'inPublicBeta': return 'オープンベータ';
			case 'developers': return '開発者';
			case 'reviewList': return 'コメント一覧';
			case 'postReview': return 'コメントを残す';
			case 'scoreNow': return 'レート';
			case 'description': return '説明';
			case 'noData': return '(^-^)\n データなし';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'バージョンが${a}から${b}に更新されました。';
			case 'loadNewVersion': return '新バージョンのロード';
			case 'name': return '名前';
			case 'canisterId': return 'タンクID。';
			case 'updateTime': return '更新時間';
			case 'contractCanistersState': return '契約タンクの状況';
			case 'userDistribution': return 'ユーザー分布';
			case 'settings': return 'セッティング';
			case 'security': return '安全性';
			case 'invite': return '招待状';
			case 'more': return 'もっと...';
			case 'receiveAddress': return 'アドレスを受け取る：';
			case 'hangingAmount': return '未決済額';
			case 'hangingAmountTips': return '未決済金額は、部下チームによる採掘で発生した報酬の一時的な記録で、採掘セッションを行うと、これらの金額は未決済金額に集められます。';
			case 'pendingAmount': return '金額未定';
			case 'pendingAmountTips': return '未決済の金額とは、広告主との照合がまだ済んでいないもので、有効に照合されたものは有効なUSCTレコードに移され、無効な部分は除外される。';
			case 'received': return '受け取った';
			case 'processing': return '進行中';
			case 'replied': return '回答者';
			case 'rejected': return '拒否';
			case 'unknown': return '未開拓';
			case 'insufficientBalance': return 'バランス不足！';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => '${x} の残高はクロスチェーン ネットワーク料金を支払うのに不十分です';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return '取引がまだ完了しておらず、現時点では譲渡できない。';
			case 'thisfunctionNotSupportExternalCalls': return 'この関数は外部から呼び出すことはできません。';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'クロスチェーン料金の支払いに使用できるアドレスに一致するものがありません。';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => '現在、1回の取引で送金できる最高額は${x}である。';
			case 'memoMustNotBeMoreThan64bytes': return '備考は64バイトを超えてはならない';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => '残高が不十分です。金額は ${x} です';
			case 'boundRreceivingAddressesExceed3Tip': return '3つ以上のアドレスをバインドすることはできません。\n新しい支払い先をバインドする必要がある場合。\n先に別のアドレスをバインド解除してください。';
			case 'parametersA_exception': return ({required Object x}) => 'パラメータ： ${x}, 例外';
			case 'parameterException': return 'パラメータの例外！';
			case 'transferAmountMustBeLargerThan0': return '転送量は0より大きくなければならない';
			case 'authorizationHasExpired': return '認可は失効している';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'このアプリは所有者によって承認されていません。';
			case 'authenticationTokenIsInvalid': return '無効な認証トークン';
			case 'verifyInfoIsInvalidOrExpired': return '無効または期限切れのバリデーション情報';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'アクセス端末の台数が1万台に1台の制限を超えたことを確認する。';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return '採掘への参加は3日以上でなければならない';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'セキュリティー・サークルのメンバーは3人以下にはできない。';
			case 'avatarIsNotSet': return 'アバターが設定されていない';
			case 'numberOfDirectReferralsCannotBeLessThan3': return '直接の紹介者数が3人を下回ることはない。';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return '携帯電話番号の変更は1年に1度しかできない。';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'この携帯電話番号はすでに存在しており、複製することはできません。';
			case 'securityCodeIsIncorrect': return 'セキュリティコードの誤り';
			case 'securityCodeMayHaveExpired': return 'セキュリティコードの有効期限が切れている可能性があります。';
			case 'sessionIdIsInvalidOrExpired': return '無効または期限切れのセッションID';
			case 'sessionHasBeenAuthorized': return 'このセッションは終了が承認された！';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => '期間満了の${x}日前までしか更新できない。';
			case 'notYetGrantedDeveloperPermissions': return '開発者の権利はまだない';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'フィールド ${x} を NULL にすることはできません。';
			case 'emailFormatError': return '電子メールのフォーマットエラー';
			case 'theXformatIsIncorrect': return ({required Object x}) => '\'${x}\' 書式エラー';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'フィールド"${x}"の長さは${y}から${z}文字の間でなければならない。';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => '「${x}」の選択範囲は ${y} から ${z} まででなければなりません';
			case 'unchanged_sameAsOldContent': return '変更なし、以前と同じ内容！';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' はすでに存在します。';
			case 'mobileNumberHasNotJoinedDelta': return 'この携帯電話番号はデルタに追加されていません！';
			case 'referrerIdCannotBeEmpty': return 'リファラーIDを空にすることはできない！';
			case 'referrerIdDoesNotExist': return 'リファラーIDが存在しません！';
			case 'didIsIncorrectOrInvalid': return 'DIDが正しくないか無効である！';
			case 'accessTokenIsIncorrectOrInvalid': return 'accessToken が不正または無効です！';
			case 'minimumWithdrawalAmountIs1USD': return '1回の引き出しで最低1USD';
			case 'miningTimeIsNotYet': return 'まだ採掘する時期じゃない。';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'すでに存在するので、再度追加しないでください！';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return '登録番号を認証アクセス番号として使用できない';
			case 'canotAddYourSelf': return '自分自身を追加できません';
			case 'logOut': return 'ログアウト';
			case 'confirmLogout': return 'ログアウトの確認';
			case 'logOutTipsText': return '注意：ホワイトペーパーにあるように、アカウントのログイン検証のたびに、検証者にインセンティブとして支払われるDTCコインが一定量消費されます。';
			case 'ConfirmLogoutPleaseEnterYes': return 'ログアウトを確認するには「はい」を入力してください。';
			case 'tip': return '注意を引く';
			case 'cancel': return 'キャンセル';
			case 'close': return '凝固';
			case 'selected': return '選ばれた';
			case 'edit': return 'コンパイラ';
			case 'submit': return 'だす';
			case 'goBack': return '退行';
			case 'copiedToClipboard': return 'クリップボードにコピーされた。';
			case 'nickname': return '愛称';
			case 'confirm': return '認識する';
			case 'cannotBeEmpty': return '空であってはならない';
			case 'deleteSuccessful': return '正常に削除されました！';
			case 'successfullyModified': return '修正は成功した！';
			case 'executionSuccessful': return '実施は成功した！';
			case 'preview': return 'プレビュー';
			case 'followSystem': return 'フォローアップシステム';
			case 'change': return 'バリエーション';
			case 'replace': return 'リプレイスメント';
			case 'view': return '調べる';
			case 'manage': return '経営上';
			case 'modify': return '修正';
			case 'replacedSuccessfully': return '交換は成功した！';
			case 'authentication': return '認証';
			case 'reacquire': return '取り出す';
			case 'tryAgain': return 'もう一度やってみよう。';
			case 'querying': return '問い合わせ中 ...';
			case 'writingToOnChain_pleaseWait': return 'チェーンに書き込まれています。';
			case 'versionCheck': return 'バージョン検出';
			case 'alreadyLatestVersion': return 'すでに最新版だ！';
			case 'foundNewVersion': return '新バージョンをご覧ください：';
			case 'upgradeLink': return 'アップグレードリンク';
			case 'deviceDescription': return '設備の説明';
			case 'notification30SecondsBeforeMiningStops': return 'マイニングが停止する30秒前に通知リマインダーを実行します!';
			case 'goMining': return 'マイニングに行く';
			case 'deltaMiningReminder': return 'デルタ マイニング リマインダー';
			case 'clickToMine_miningIsAboutToStop': return 'マイニングするにはここをクリックしてください。マイニングは間もなく停止します!';
			case 'incorrect_input': return '入力が間違っています!';
			case 'are_you_sure_delete': return '本当に削除しますか?';
			case 'delete_account': return 'アカウントを削除';
			case 'how_to_operate_it': return '操作方法を確認しますか?';
			case 'deletion_warning_tip': return 'アカウントを削除すると、Delta コインがすべて失われ、他のメンバーからの収益もすべて失われます。';
			case 'launchWhatsAppProgram': return 'WhatsApp プログラムを起動する';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'このアイコンの付いたアクセス番号は、WhatsApp メッセージ検証もサポートしています。国際メッセージを送信する場合は、成功率を高めてコストを削減するために WhatsApp を使用することをお勧めします。';
			case 'ihaveSentVerificationString': return '検証文字列を送信しました';
			case 'totalOfPeople': return '合計人数: ';
			case 'numberOfPeopleMining': return '採掘している人の数';
			case 'useBrowserScanQRcodeToSMSprogram': return '別のデバイスのブラウザを使用して QR コードをスキャンし、それを SMS プログラムに渡すことができます';
			case 'toggle': return 'トグル';
			case 'DSMSverifier': return 'DSMS 検証者';
			case 'activate': return 'アクティブ化';
			case 'activated': return 'アクティブ化されました';
			case 'generateActivationCommand': return 'アクティベーションコマンドを生成する';
			case 'activationCommand': return 'アクティベーションコマンド';
			case 'activationSentedTip': return 'アクティベーション SMS が送信されたら、アクセス端末デバイスでアクティベーション ステータスを確認してください。';
			case 'biometricsNotEnabledTip': return 'お使いのデバイスでは生体認証 (顔または指紋) が有効になっていません。続行するには有効にしてください。';
			case 'error': return 'エラー';
			case 'exceptionOccurredWhenCallingBiometric': return '生体認証 (顔または指紋) 機能の呼び出し時に例外が発生しました!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' 個のアクセス番号がチェックされており、'),
				shouldNum,
				const TextSpan(text: ' 個を選択する必要があります。'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text} は上記の ${n} 個のアクセス番号に送信されましたか?';
			case 'interface': return 'インターフェース:';
			case 'waitingTimeoutOrSenderNumberMismatch': return '待機タイムアウトまたは送信者番号が一致しません';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => '入力したセキュリティ サークル メンバーの携帯電話番号が一致しません: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return '2要素認証を回避するには、ログアウト後10分以内にログインしてください。';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => '少なくとも ${n} 個の携帯電話番号を入力する必要があります';
			case 'noAccessNumberInYourRegionYet': return 'あなたの地域にはまだアクセス番号がありません';
			case 'notEnoughAccessNumbersInYourRegion': return 'あなたの地域ではアクセス数が足りません';
			case 'tipsForDeployDSMSterminal': return 'システムは、他の国からのアクセス番号を自動的にロードしました。より優れた低コストの検証サービスを提供するために、あなたまたは紹介者が DSMS 端末をローカルに展開して検証料金を得ることをお勧めします。';
			case 'noOneCanProvideMeTheSecurityCode': return '誰も私にセキュリティ コードを提供してくれませんか?';
			case 'useSupplementalMode': return '補足モードを使用する';
			case 'returnToSecurityCodeMode': return 'セキュリティ コード モードに戻る';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return '関連付けられている携帯電話番号を入力してください。国番号は省略できます。';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => '${name} の携帯電話番号が正しくありません';
			case 'matchingVerificationStrategyIs': return '一致する検証戦略は次のとおりです:';
			case 'balanceGreater3ICP_noNeedPourFuel': return '残高が 3 ICP より大きいため、今のところ燃料を注ぐ必要はありません。';
			case 'escrowAccount': return 'エスクローアカウント';
			case 'fuelRelay': return '燃料リレー';
			case 'pourFuel': return '燃料を注ぐ';
			case 'fuelState': return '燃料状態';
			case 'pouringFuelTips': return '燃料を注ぐことでメリットやデメリットが生じることはありません。その目的は、Delta システムのエクスペリエンスを充実させることです。';
			case 'sponsorDevelopersByWatchingAds': return '広告を見て開発者をスポンサーする';
			case 'status': return 'ステータス';
			case 'date': return '日付';
			default: return null;
		}
	}
}

extension on _StringsKo {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return '무화과 시작';
			case 'switchLanguage': return '언어 전환';
			case 'languageSwitch': return '언어 전환';
			case 'slogan': return '델타의 탈중앙화 경제 구축';
			case 'countryRegionCode': return '국가/지역 코드';
			case 'countryRegionSelection': return '국가 및 지역 선택';
			case 'nextStep': return '다음 단계';
			case 'yourPhoneNumber': return '휴대폰 번호.';
			case 'pleaseSelectCountryAndRegion': return '국가/지역을 선택하세요.';
			case 'pleaseEnterPhoneNumber': return '유효한 전화번호를 입력하세요!';
			case 'referrerDid': return '리퍼러 DID';
			case 'pleaseEnterTheReferrersDid': return '유효한 추천인의 탈중앙화 ID를 입력하세요.';
			case 'thisDidIsInvalid': return '이 DID는 유효하지 않습니다.';
			case 'nicknameFormatTips': return '닉네임은 비워서는 안 되며 길이가 16자리를 초과해서는 안 됩니다.';
			case 'additionalIinformation': return '추가 정보';
			case 'invitationSubject': return '델타항공 공감대 형성 초대';
			case 'invitationLetter': return ({required Object did}) => '안녕하세요, 저는 Delta 합의구축에 참여하고 있습니다! \n Delta는 ICP에서 실행되는 오픈소스 새로운 디지털 통화 플랫폼으로 비밀번호, 개인 키, 니모닉 없이 다양한 디지털 통화를 관리하고 사용할 수 있습니다. https://delta.kim/auto/download 링크를 클릭하여 애플리케이션을 설치하시면 합의 구축 및 코인 발행에 참여하실 수 있습니다. \n 추천자 DID: ${did}';
			case 'dSMSverification': return 'DSMS 유효성 검사';
			case 'getAccessNumbers': return '액세스 번호 얻기';
			case 'getAccessNumberPromptMessage': return '아래의 \'가져오기\' 버튼을 클릭하여 대기열에서 SMS 인증 액세스 번호 집합을 회전합니다.';
			case 'optionalAccessNumbers': return '선택적 액세스 번호';
			case 'accessNumber': return '액세스 번호';
			case 'TELCO': return '운영자(발전소, 운송 네트워크 등)';
			case 'score': return '점수';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ko'),
				one: () => TextSpan(children: [
					const TextSpan(text: '다음 단계로 진행하려면 '),
					nBuilder(n),
					const TextSpan(text: ' 개의 액세스 번호를 선택하고 "'),
					span('text'),
					const TextSpan(text: '" 버튼을 클릭하세요.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: '다음 단계로 진행하려면 '),
					nBuilder(n),
					const TextSpan(text: ' 개의 액세스 번호를 선택하고 "'),
					span('text'),
					const TextSpan(text: '" 버튼을 클릭하세요.'),
				]),
			);
			case 'whatIsDeltaDesc': return '델타는 오픈 소스 탈중앙화 글로벌 디지털 화폐 실험이자 암호화폐 애플리케이션 생태계입니다.';
			case 'deltaGoalsDesc': return '목표는 사람들이 델타를 사용하여 보편적이고, 공정하며, 안전하고, 빠르고, 친환경적인 새로운 디지털 화폐를 공동으로 구축할 수 있도록 하는 것입니다. 그리고 이러한 디지털 화폐와 기존 암호화폐에 대한 다양하고 효과적인 적용 시나리오를 제공하는 것입니다.';
			case 'details': return '세부 정보';
			case 'get': return 'gain';
			case 'select': return '옵션';
			case 'send': return '보내기';
			case 'complete': return '이행';
			case 'selectedAccessNumberPrompt': return '선택하면 전체 액세스 번호가 표시되고 인증 문자열이 생성됩니다.';
			case 'location': return '배치';
			case 'verificationString': return '유효성 검사 문자열';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: '휴대폰 번호 '),
				num,
				const TextSpan(text: '을 사용하여 '),
				label,
				const TextSpan(text: '을 '),
				accessNumber,
				const TextSpan(text: '로 전송하여 인증을 완료하세요.'),
			]);
			case 'ihaveSentTheSMS': return '문자 메시지를 보냈습니다.';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: '유효성 검사 문자열은 6분 동안 유효하며, 남은 시간: '),
				time,
				const TextSpan(text: '입니다.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => '너무 빨라서 계속하려면 ${x}초를 기다려야 합니다!';
			case 'waitingForVerificationSMS': return '인증 SMS를 기다리는 중...';
			case 'partSuccsForVerificationSMS': return '액세스 단말기 중 하나의 SMS 인증이 통과되었습니다!';
			case 'creatingAccessToken': return '액세스 토큰 생성 중...';
			case 'intoDelta': return '델타항공 내부';
			case 'deltaAccountIsLoggedIn': return '귀하의 Delta 계정이 로그인되었습니다';
			case 'iHavLoggedOut': return '전 빠질게요.';
			case 'startTwoFactorVerification': return '이중 인증 시작';
			case 'securityCircleVerification': return '안전 검증의 원';
			case 'generateSecurityCode': return '보안 코드 생성';
			case 'generateSecurityCodeHintText': return '생성된 보안 코드는 보안 서클에서 무작위로 선택된 구성원에게 전송됩니다.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return '보안 서클을 설정하지 않았거나 계정이 매우 안전하지 않은 경우 6자리 자리 표시자를 입력하고 다음 단계로 이동하세요.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return '보안 코드가 생성되었으니 다음 가족 및 친구에게 연락하여 인증을 통과할 수 있도록 보안 코드 추출을 요청하세요. 30분 동안 유효합니다!';
			case 'itGetSecurityCodeTip': return '팁: 델타항공 앱 -> 메뉴 -> 보안 정보 제공 페이지에서 계정 닉네임을 두 번 클릭하여 보안 코드를 받으실 수 있습니다.';
			case 'securityCircleMemberList': return '보안 서클 구성원 목록:';
			case 'selectA_friendToProvideSecurityCodeTip': return '회원 목록에서 친척이나 친구를 선택하여 본인 확인을 위한 보안코드를 생성 및 제공해주세요. 휴대폰 번호 분실 또는 도난 시 계정이 타인에 의해 통제되는 것을 방지하기 위한 것입니다.';
			case 'formatIsXdigits': return ({required Object num}) => '형식은 ${num}자리입니다.';
			case 'signInSuccessfully': return '로그인에 성공했습니다!';
			case 'twoFAandLogin': return '이중 인증 및 로그인';
			case 'verificationSuccessful': return '성공 확인!';
			case 'validationFailed': return '유효성 검사에 실패했습니다!';
			case 'dappInfo': return '디앱 정보';
			case 'securityCircle': return '보안 링';
			case 'securityCode': return '보안 코드';
			case 'provideSecurity': return '보안 제공';
			case 'addManully': return '수동으로 추가';
			case 'addFromContacts': return '주소록에서 추가';
			case 'addSecurityCircle': return '안전 서클 추가';
			case 'inputType': return '입력 유형';
			case 'mobileNumber': return '휴대폰 번호';
			case 'did': return '주소 ID';
			case 'pleaseEnterValidDID': return '유효한 탈중앙화 ID를 입력하세요.';
			case 'pleaseEnterValidWalletAddress': return '유효한 지갑 주소를 입력하세요.';
			case 'appellation': return '주소 형식';
			case 'appellationHint': return '"베이비"라고 부르나요?';
			case 'addSecurityCircleTips': return '신뢰할 수 없는 사람을 보안 서클에 추가하지 마세요.';
			case 'referralTeam': return '추천 팀';
			case 'profile': return '계정 정보';
			case 'menu': return '메뉴';
			case 'directly': return '직접';
			case 'indirectly': return '간접';
			case 'inviteContacts': return '초대 연락처';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: '당신의 초대인은 '),
				nickname,
				const TextSpan(text: '입니다. '),
				num1,
				const TextSpan(text: ' 사람을 직접 추천했습니다. 여기서 현재 온라인 '),
				num2,
				const TextSpan(text: ' 사람입니다.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: '간접적으로 '),
				num1,
				const TextSpan(text: '명을 추천했으며, 이 중 '),
				num2,
				const TextSpan(text: '명이 현재 온라인 상태입니다.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: '친구를 델타에 초대하여 함께 사회적 합의를 높이자.1인 채굴 속도를 직접 추천할 때마다 기초 속도를 높이는 '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: '친구를 델타에 초대하여 함께 사회적 공감대를 높이고, 각 칸마다 한 사람의 채굴 속도가 기초 속도를 높이는 '),
				rate2,
				const TextSpan(text: '를 추천합니다.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => '"${name}"을(를) 삭제하시겠습니까?';
			case 'safetyCircleRoleQ': return '안전 링의 용도는 무엇인가요?';
			case 'safetyCircleRoleA': return '민감한 상황에서 2차 인증을 제공하여 계정을 보호하세요.';
			case 'howSecurityCirclesWorkQ': return '안전 링은 어떻게 작동하나요?';
			case 'howSecurityCirclesWorkA': return '안전 서클 인증이 필요한 경우, 델타 스마트 계약 프로그램은 안전 서클 친구 목록에서 무작위로 회원을 선택하여 본인 확인을 완료할 수 있도록 안전 코드를 제공합니다. 회원에게 보안 코드를 요청하면 본인 여부를 확인할 수 있습니다. 동시에 계정 보안을 보호하기 위해 "본인이 아닌 경우 보안 코드 제공을 거부하세요"라는 메시지가 표시됩니다. 따라서 보안 서클의 구성원이 신뢰할 수 있는 사람인지 항상 확인해야 합니다.';
			case 'securityCircleBeUsedQ': return '언제 사용되나요?';
			case 'securityCircleBeUsedA1': return '1. 델타항공 앱에 대한 통제력을 상실하는 경우 일반적으로 휴대폰을 분실하거나 도난당하는 경우가 많습니다.';
			case 'securityCircleBeUsedA2': return '2. 일부 민감한 작업의 경우 델타 스마트 계약 프로그램에서 본인임을 확인해야 합니다.';
			case 'provideSafetyTip1': return '친구가 보안 코드를 요청할 경우, 해당 보안 코드가 본인 것인지 확인하세요.';
			case 'provideSafetyTip2': return '귀하는 위의 친구에게 보안을 제공하고 있으며, 해당 친구는 귀하를 보안 서클에서 가장 신뢰할 수 있는 사람으로 설정하여 계정에서 민감한 작업이 발생할 경우 보안 확인을 요청하고 있습니다.';
			case 'provideSafetyTip3': return '필요한 경우 상대방의 아바타를 두 번 클릭하여 보안 코드를 추출합니다.';
			case 'doesNotSecurityCodeNeedsRetrieved': return '상대방에게 현재 추출해야 하는 보안 코드가 없습니다!';
			case 'existSecurityCodeTip': return '보안 코드를 요청하는 친구나 가족이 본인인지 확인하세요. 친구나 가족을 보호하기 위해 친구나 가족이 본인이 아닌 경우 보안 코드 제공을 거부해야 합니다.';
			case 'avatarSettings': return '아바타 설정';
			case 'NFTAvatarPropertyRightsText': return '면책 조항: 해당 NFT를 아바타로 사용하는 것은 개인적인 취향에 따른 것이며, 해당 NFT의 지적 재산권 소유와는 무관합니다.';
			case 'projectWebsite': return '프로젝트 웹사이트:';
			case 'whitepaper': return '흰 종이:';
			case 'indexID': return '인덱스 ID';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => '색인 범위는 ${start}에서 ${end} 사이입니다.';
			case 'inputToLoadNFTAvatarTip': return '좋아하는 NFT의 인덱스 ID를 입력하면 프로그램이 자동으로 아바타로 로드합니다.';
			case 'miningRate': return '채굴 속도';
			case 'miningDetails': return '마이닝 세부 정보';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: '총 채굴 속도: '),
				rate,
				const TextSpan(text: ' δ/일'),
			]);
			case 'EndOfMiningSession': return '사이클 마이닝이 종료되었습니다:';
			case 'tapToMineDeltaCoin': return '클릭하여 델타 코인 채굴하기 ↑';
			case 'clickToStartMining': return '채굴을 시작하려면 클릭하세요!';
			case 'miningHasStoppedPromptDesc': return '채굴이 중지되었으며, 24시간마다 채굴 주기로 번개 아이콘을 클릭하여 새로운 채굴을 시작하세요.델타의 채굴은 장치에서 추가적인 연산 능력과 네트워크 트래픽을 소비하지 않는 할당 메커니즘입니다.';
			case 'aboutBaseRate': return '기본 요율은 어떻게 되나요?';
			case 'baseRateDescription': return '백서에서 합의한 대로 델타 마이닝의 기본 이자율 감소 규칙은 두 단계로 나뉩니다.\n1단계: 참여자(등록자) 수가 3,000명 이하일 때는 32δ/일이 적용됩니다. 이를 시작 기준으로 삼아 참여자 수가 10배 증가할 때마다 기본 요율이 절반으로 줄어듭니다.\n2단계: 참가자 수가 3천만 명 이상에 도달하면 참가자 수가 3배 증가할 때마다 기본 요율이 절반으로 줄어듭니다. 최종 발굴이 생산을 중단할 때까지.';
			case 'baseRate': return '기본 요금(ISDN과 동일)';
			case 'directReferralRewards': return '직접 추천 보너스';
			case 'directReferralRewardDesc': return '직접 추천을 받을 때마다 채굴하는 동안 기본 채굴률의 1/3만큼 추가로 채굴률이 증가합니다.\n\n 또한, 추천인의 채굴 상태도 직접 추천 보너스에 포함됩니다.';
			case 'indirectReferralRewards': return '간접 추천 보너스';
			case 'indirectReferralRewardDesc': return '간접 추천을 통해 채굴하는 경우, 채굴 속도가 기본 속도의 1/10만큼 추가로 증가합니다.\n\n 직접 추천 팀이 재추천하는 각 사람은 간접 추천으로 간주됩니다.';
			case 'mine': return '추출(광산에서 광석 또는 기타 자원)';
			case 'thisMiningInformation': return '현재 채굴 정보';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '채굴에 참여: '),
				x,
				const TextSpan(text: '회'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '이번 총 수익: '),
				x,
				const TextSpan(text: ' 델타 코인'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '기본 수익: '),
				x,
				const TextSpan(text: ' 코인'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '팀에 직접 기부: '),
				x,
				const TextSpan(text: ' 코인'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '간접 팀 기여: '),
				x,
				const TextSpan(text: ' 코인'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '파기 사이의 시간: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '유효 채굴 시간: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x}시간';
			case 'keep3_5peopleInTheSafetyCircleTip': return '자산 보안을 위해 보안 서클 멤버는 항상 3~5명의 신뢰할 수 있는 사람을 유지해야 합니다.';
			case 'index': return '인덱싱';
			case 'amount': return '금액 합계';
			case 'balance': return '잔액';
			case 'timeStamp': return '타임스탬프';
			case 'summary': return '초록';
			case 'miningHasStopped': return '채굴이 중단되었습니다.';
			case 'miningHasStoppedDesc': return '현재 채굴이 중단되었으며 즉시 수익이 시작됩니다.';
			case 'startMining': return '채굴 시작';
			case 'changeMobileNumber': return '휴대폰 번호 변경';
			case 'currentMobileNumber': return '현재 휴대폰 번호';
			case 'newMobileNumber': return '새 휴대폰 번호';
			case 'securityCodeFormatIs6digits': return '보안 코드 형식은 6자리입니다!';
			case 'startVrification': return '인증 시작';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => '이 휴대폰 번호는 이미 존재하며 연결된 DID: ${dId}입니다.';
			case 'noDataYet': return '사용 가능한 데이터 없음';
			case 'previousMobileNumber': return '이전 휴대폰 번호';
			case 'changeLog': return '변경 사항 기록';
			case 'referralLinkToShare': return '공유할 추천 링크';
			case 'referrer': return '참조자';
			case 'isoCountryCode': return 'ISO 국가 코드';
			case 'avatarLogo': return '헤더 로고';
			case 'creationTime': return '생성 시간';
			case 'lastUpdate': return '마지막 업데이트';
			case 'numberOfSecurityCircleMembers': return '보안 서클의 구성원 수';
			case 'theLatestMining': return '마지막 발굴';
			case 'effectiveMiningDays': return '유효 채굴 일수';
			case 'modifyNickname': return '닉네임 변경';
			case 'didNotChange': return '변경 없음!';
			case 'kycVerification': return 'KYC 인증';
			case 'faceID': return '얼굴 ID';
			case 'touchID': return '지문 ID';
			case 'biometricsAuthorizationTest': return '생체 인증 테스트';
			case 'currentState': return '현재 상태';
			case 'biometricsAuthenticationLocalizedReason': return '기기의 잠금 해제를 사용하여 신원을 확인하세요.';
			case 'graph': return '그래픽 아카이브(예: 지도, 문서 또는 식물도감)';
			case 'referralRelationshipGraph': return '추천 관계 매핑';
			case 'nativeContacts': return '로컬 연락처';
			case 'registrationAndMiningTrends': return '등록 및 채굴 동향';
			case 'inMining': return '마이닝';
			case 'registrationVolume': return '등록 규모';
			case 'unmined': return '악용되지 않음';
			case 'mined': return '채굴';
			case 'communityMining': return '커뮤니티 마이닝';
			case 'consensusPromotionFund': return '합의 촉진 기금';
			case 'ecologicalAwardFund': return '생태 인센티브 기금';
			case 'icpFuelCrowdfunding': return 'ICP 연료 크라우드 펀딩';
			case 'coreDeveloperRewards': return '핵심 개발자 보상';
			case 'totalAllocation': return '전체 분포';
			case 'miningRatio': return '채굴 비율';
			case 'billion.30': return '300억';
			case 'billion.60': return '600억';
			case 'billion.180': return '1,800억.';
			case 'billion.300': return '3,000억';
			case 'watchAdsToSupportDevelopers': return '개발자 지원을 위한 광고 보기';
			case 'loadingAdcomponents': return '광고 구성 요소 로드 중...';
			case 'timeIsNotUp': return '시간이 얼마 남지 않았습니다!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return '로드에 실패했습니다. 네트워크가 차단되었을 수 있습니다!';
			case 'pendingUSCTrecords': return '보류 중인 USCT 기록';
			case 'pendingUSCTrecordsDesc': return '보류 중인 USCT 기록은 15~30일 이내에 광고 플랫폼에서 확인되며, 유효한 기록은 USCT 기록 목록으로 전송되고 계정 잔액에 적절한 USCT 금액이 추가됩니다.';
			case 'validity': return '유효성';
			case 'advertiser': return '광고주';
			case 'earned': return '획득';
			case 'withdraw': return '자금 인출';
			case 'validUSCTrecords': return '효과적인 USCT 기록';
			case 'USCTmining': return 'USCT 마이닝';
			case 'aboutUSCTmining': return 'USCT 마이닝이란?';
			case 'aboutUSCTminingItme1': return '1. USDT는 전 세계 주요 암호화폐 거래소에서 각국 법정화폐로 쉽게 교환할 수 있는 전 세계적으로 인기 있는 미국 달러 스테이블코인입니다.';
			case 'aboutUSCTminingItme2': return '2. USCT는 USD 크레딧으로 알려진 USCT 채굴 수익금의 임시 척도이며, 광고 플랫폼의 실제 정산 금액 및 분배 규칙과 해당 비율에 따라 최종적으로 USDT로 전환됩니다.';
			case 'aboutUSCTminingItme3': return '3. USCT 마이닝은 델타 커뮤니티의 트래픽 광고 실현 기능입니다. 델타 커뮤니티의 대규모 사용자 기반을 활용하여 광고주, 델타 개발자 및 부재자에게 다양한 혜택을 제공합니다. 아직 델타 생태계가 형성되고 발전하지 않은 초기 단계의 부재자에게 일정량의 유효 수입을 제공하고, 동시에 개발자에게는 장기간 개발 서비스를 지속적으로 제공하고 궁극적으로 백서의 모든 계획을 실현할 수 있도록 일정한 재정적 지원을 제공하며, 제품 광고주에게는 효과적인 홍보 채널을 제공할 수 있도록 설계되었습니다.';
			case 'aboutUSCTminingItme4': return '4. 분배 규칙은 총 수익금의 40%를 개발자 기술 서비스 수수료로, 나머지 60%를 커뮤니티 결석 보상으로 사용하도록 설계되었습니다. 결석 보상 부분은 DTC와 유사한 다단계 분배 모델로, 결석 보상은 6:3:1의 비율에 따라 세 부분으로 나뉘며, 현재 광고의 결석자에게 할당된 6부, 상위 추천인에게 할당된 3부, 2단계 추천인에게 할당된 1부의 결석 보상 중 각각 1부를 USCT 마이닝의 결석 보상으로 배분합니다. 마찬가지로, USCT 마이닝을 통해 추천한 친구에게도 동일한 추천인 보상을 받을 수 있습니다. 이러한 다단계 분배의 장점은 누구나 다운라인 팀을 개발하여 비교적 많은 양의 USDT를 얻을 수 있다는 것입니다.';
			case 'aboutUSCTminingItme5': return '5. 정산 기간은 7일이며, 즉 7일마다 광고 플랫폼에서 유효성을 확인하고 확인된 수익금의 유효성과 실제 금액이 잔액에 기록됩니다. 각 인출의 최소 금액은 10USDT입니다.';
			case 'linesXtoY': return ({required Object x, required Object y}) => '행 ${x}~${y}를 입력합니다.';
			case 'wallet': return '지갑';
			case 'multiChainWallet': return '멀티체인 지갑';
			case 'deposit': return '입금(예: 은행 계좌)';
			case 'transfer': return '송금(은행 계좌로 송금)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '지갑 주소의 ${coinCode}';
			case 'transactions': return '거래 기록';
			case 'network': return '망상';
			case 'walletAddress': return '지갑 주소';
			case 'currentAddress': return '현재 주소';
			case 'depositAddress': return '충전 주소';
			case 'receivingMoneyAddress': return '수취인 주소';
			case 'applyTempDepositAddress': return '임시 충전 요청을 위한 주소';
			case 'tempDepositAddressTip': return '1. 공유 입금 주소입니다. 임대가 만료되었거나 해지된 후에는 금액을 입금하지 마세요. 이 경우 해당 금액은 손실됩니다.';
			case 'tempDepositAddressTip2': return '2. 입금 전 [체인명]과 [코인명]이 정확히 일치하는지 확인하시고, 컨트랙트 토큰의 경우 [계약 기준]과 [계약 주소]도 정확히 일치하는지 확인하시기 바랍니다.';
			case 'tempDepositAddressTip3': return '3. 위 팁의 매개변수와 일치하지 않는 금액을 입금하려고 시도하지 마세요. 그렇지 않으면 해당 금액이 손실됩니다.';
			case 'tempDepositAddressTip4': return '4. 다른 유형의 자산을 입금해야 하는 경우, 해당 통화 페이지와 매개변수 옵션으로 전환하여 새 주소를 신청하세요.';
			case 'applyExtensionOfValidity': return '유효 기간 연장 신청';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: '이 주소는 '),
				diff,
				const TextSpan(text: ' 이후에 만료되며 만료 전 12시간 동안 '),
				tap('수동으로 연장'),
				const TextSpan(text: ' 유효합니다.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return '12시간 전에만 갱신 가능';
			case 'theReceivingAddressValidForLongtime': return '이 주소는 오랫동안 유효합니다.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return '이 수집 주소는 오랫동안 유효하며 실시간으로 자동으로 적립됩니다.';
			case 'confirmDeposited': return '입금 확인';
			case 'unbindThisDepositAddress': return '이 충전 주소의 번들 해제';
			case 'confirmDepositedTip': return '자금이 이체된 경우 위의 버튼을 클릭하면 10분 후에 지갑으로 청구가 트리거됩니다.';
			case 'unbindDepositAddressTip': return '스마트 컨트랙트의 실행 오버헤드를 줄이기 위해 유효 기간 동안 더 이상 자금을 입금하지 않을 경우 충전 주소의 바인딩을 해제하시기 바랍니다.';
			case 'transferToAddress': return '주소로 이동';
			case 'longPressToPaste': return '길게 눌러 붙여넣기';
			case 'all': return '전체';
			case 'balanceX': return ({required Object x}) => '잔액 ${x}';
			case 'transferOut': return '턴아웃';
			case 'depositXcoins': return ({required Object x}) => '크레딧 ${x}';
			case 'sender': return '발신자';
			case 'recipient': return '수신자';
			case 'memo': return '참고';
			case 'kind': return '(삶의) 방식';
			case 'transferAmountExceedsAvailableBalance': return '사용 가능한 잔액을 초과하는 이체';
			case 'pleaseEnterValidAmount': return '유효한 금액을 입력하세요.';
			case 'networkFee': return '네트워크 처리 수수료';
			case 'fee': return '취급 수수료';
			case 'validLengthXcharacters': return ({required Object x}) => '주소 유효 길이 ${x}자';
			case 'historys': return '역사 기록';
			case 'dtcCreditdetail': return '델타항공 포인트 상세 정보';
			case 'usdCreditdetail': return 'USD 포인트 세부 정보';
			case 'dappSquare': return '디앱 플라자';
			case 'amountRaised': return '모금 금액';
			case 'disbursedAmount': return '발행 금액';
			case 'participationTimes': return '참가자 수';
			case 'completionRate': return '완료율';
			case 'exchangeRate': return '환율';
			case 'icpCrowdfunding': return 'ICP 크라우드 펀딩';
			case 'crowdfunding': return '크라우드 펀딩';
			case 'trendsCurve': return '추세 곡선';
			case 'fullScreenView': return '전체 화면 보기';
			case 'walletBalance': return '지갑 잔액:';
			case 'manageWallet': return '지갑 관리';
			case 'fundraiseAmount': return '모금';
			case 'exchangeRewardAmount': return '보상 금액 사용';
			case 'fundraise': return '모금';
			case 'rangeIntegersX': return ({required Object x}) => '범위: 정수 ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => '모금에 성공적으로 참여하여 ${amount}DTCT 보상을 받았습니다.';
			case 'amountSummary': return '금액 요약';
			case 'changePreferred': return '기본 설정 변경';
			case 'changePreferredAddress': return '기본 설정 주소 변경';
			case 'preferredAddressTip': return '등록된 휴대폰 번호 또는 DID를 사용하여 자금이 모금되면 원하는 주소로 자금이 자동으로 이체됩니다.';
			case 'newAddress': return '새 주소';
			case 'newAddressTip': return '남용을 방지하기 위해 지갑 주소가 두 개 이상일 경우, 새 주소를 생성할 때마다 거래 수수료가 발생합니다.';
			case 'createNew': return '새로 구축';
			case 'chainNetworkName': return '체인 네트워크 이름';
			case 'from': return '출신 (장소)';
			case 'to': return '(시간)까지';
			case 'noAvailableDepositAmountDetected': return '사용 가능한 입금액이 감지되지 않았습니다!';
			case 'crossChainReceiveMoneyMonitoring': return '크로스 체인 수집이 듣고 있습니다 ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '수신('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '확인 진행 중('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return '참고 사항(초보자를 위한 필수 읽기)';
			case 'whyUseSharedAddresses': return '공유 주소를 사용하는 이유는 무엇인가요?';
			case 'useSharedrAdvantage': return '여러 체인에 걸쳐 입금할 때 공유 주소를 사용하면 다음과 같은 이점이 있습니다:';
			case 'useSharedrAdvantage1': return '1. 이체 수수료 낭비를 줄이고 사용자의 사용 비용을 낮추십시오. 전용 주소의 사용으로 인해 자금이 너무 많이 분산되어 일반적으로 자금 인출시 다른 사용자의 후속 이체를 용이하게하기 위해 사용자가 두 번째 자금 이체를 재충전 할 때 자금을 하나 또는 소수의 주소 관리로 풀링해야 할 필요가 있습니다.';
			case 'useSharedrAdvantage2': return '2. 공유 방식에서는 프로그램은 발신 전송 및 라이트 콜렉션 수신과 빠르게 일치할 수 있는 비교적 작은 주소 풀만 유지하면 되므로 계산 리소스 오버헤드를 줄일 수 있습니다. 반대로 독점 주소를 사용하면 그 반대가 됩니다.';
			case 'tokenType': return '토큰 유형';
			case 'contract': return '계약';
			case 'contractStandard': return '계약 표준';
			case 'contractAddress': return '계약 주소';
			case 'native': return '원생동물';
			case 'confirmUnbindingPleaseEnterYes': return '구속력 해제를 확인하려면 "예"를 입력하세요.';
			case 'listAllWorkingTempReceivingAddresses': return '작동 중인 모든 크로스체인 충전 주소 나열';
			case 'setNote': return '노트 설정';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => '길이는 ${x}바이트를 초과할 수 없습니다.';
			case 'transferFee': return '송금 수수료';
			case 'crossChainFee': return '크로스 체인 수수료';
			case 'crossChainTransferOutError': return '교차 링크 전송 오류';
			case 'chainName': return '체인 이름';
			case 'message': return '메시지';
			case 'dontShowAgain': return '더 이상 표시되지 않음';
			case 'queuing': return '대기열';
			case 'optional': return '선택 사항';
			case 'publiclyVisible': return '공개적으로 표시';
			case 'rates': return '관세';
			case 'minimum': return '최소';
			case 'maximum': return '상한';
			case 'minimumBlockConfirmations': return '최소 차단 확인 횟수';
			case 'dsmsVerifyTerminal': return 'DSMS 유효성 검사 터미널';
			case 'overall': return '우산';
			case 'my': return 'my';
			case 'checkValidatorQualifications': return '인증자 권한 자격 확인';
			case 'getVerifierPermissions': return '인증자 권한 얻기';
			case 'qualification': return '자연 기부';
			case 'upperLimit': return 'limit';
			case 'maximumNumberOfTerminalsAllowedToAccess': return '허용되는 최대 액세스 단말기 수';
			case 'numberOfExistingAccessTerminals': return '사용 중인 액세스 단말기 수';
			case 'applyingForDSMSVerifierPermissionsTips': return '인증자 권한을 신청하기 전에 유휴 Android 휴대폰과 전용 액세스 번호를 준비하고 DSMS 액세스 터미널 애플리케이션을 다운로드하여 설치해야 합니다.';
			case 'downloadLink': return '다운로드 링크';
			case 'alreadyReadyFollowingTheAboveTips': return '위의 팁에 따라 준비되었습니다.';
			case 'globalUniversal': return '글로벌 사용';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: '현재 DSMS 인증 액세스 서비스에 참여할 수 있는 로컬 인증자가 충분하지 않습니다. 서비스에 액세스하려면 "'),
				gu,
				const TextSpan(text: '"를 선택하세요.'),
			]);
			case 'asDedicatedNumberForAccess': return '액세스 전용 번호로';
			case 'pleaseCheckTip': return ({required Object tip}) => '"${tip}" 상자를 체크해 주세요.';
			case 'inputLengthTooShort': return '입력 길이가 너무 짧음';
			case 'shortName': return '약어';
			case 'pleaseEnterXname': return ({required Object name}) => '${name}을 입력하세요.';
			case 'applicationIsBeingSubmitted_pleaseWait': return '신청서를 제출하는 중입니다... 잠시만 기다려주세요...';
			case 'applyForDSMSVerifierPermission': return 'DSMS 유효성 검사기 권한 신청하기';
			case 'confirmInformation': return '정보 확인';
			case 'lastHeartbeat': return '최종 하트비트';
			case 'expirationTime': return '마감 시간';
			case 'country': return '국가';
			case 'accessTerminals': return '액세스 터미널';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'DSMS 액세스 번호 단말기의 총 개수';
			case 'textContent': return '텍스트 콘텐츠';
			case 'scanQRcodeToLogin': return '스와이프하여 로그인';
			case 'confirmLogin': return '로그인 확인';
			case 'authorizeSubApplicationToLogin': return '로그인할 수 있도록 이 하위 애플리케이션을 승인합니다.';
			case 'authorizationSuccessful': return '인증이 성공했습니다!';
			case 'launchSMSprogram': return 'SMS 프로그램 시작하기';
			case 'notApplied': return '신청 없음';
			case 'validityPeriod': return '유효 기간';
			case 'renewal': return '갱신 신청';
			case 'scanCodeToAuthorizeTerminalLogin': return '코드를 스캔하여 단말기 로그인 인증';
			case 'rewards': return '인센티브';
			case 'roles': return '캐릭터';
			case 'developerCenter': return '개발자 센터';
			case 'appName': return '애플리케이션 이름';
			case 'pleaseSelect': return '선택해 주세요';
			case 'category': return '카테고리';
			case 'keywords': return '바이워드';
			case 'pleaseEnterAkeyword': return '키워드를 입력하세요.';
			case 'createApplication': return '애플리케이션 만들기';
			case 'appType': return '애플리케이션 유형';
			case 'numberOfCategoriesMustBetween1and3': return '카테고리 수는 1~3개 사이여야 합니다.';
			case 'appLogoSpecifications': return '이미지 형식: png, 크기: 100KB 이내, 해상도(픽셀): 256*256';
			case 'localAlbum': return '로컬 사진 앨범';
			case 'networkPath': return '네트워크 경로';
			case 'imageURLkAddress': return '이미지 URL';
			case 'urlAddressFormatIsIncorrect': return '잘못된 형식의 URL 주소';
			case 'imageFormatOnlySupportsPng': return '이미지는 "png" 형식만 지원됩니다.';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => '길이는 ${a}-${b} 문자 사이여야 합니다.';
			case 'introduction': return '개요';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => '이미지 크기는 ${a}(현재 ${b})보다 클 수 없습니다.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => '이미지 해상도: ${p1}(픽셀), 현재 ${p2}여야 합니다.';
			case 'becomeDeveloper': return '개발자 되기';
			case 'developerInformation': return '개발자 정보';
			case 'teamName': return '팀 이름';
			case 'website': return '노드';
			case 'other': return '기타';
			case 'githubVerification': return '깃허브 인증';
			case 'exampleUrl': return '예제 URL';
			case 'githubVerificationTip': return ({required Object did}) => 'GitHub 계정을 사용하여 리포지토리에 \'${did}\'의 내용으로 \'delta.did\' 파일을 생성한 다음 해당 파일의 githubusercontent URL 주소를 이 입력란에 붙여넣어 인증하세요.';
			case 'createApp': return '애플리케이션 만들기';
			case 'appManagement': return '애플리케이션 관리';
			case 'statusLogs': return '상태 로그';
			case 'bad': return '아니오';
			case 'normal': return '평소';
			case 'good': return '우수한';
			case 'onceCreatedItCannotBeChanged': return '일단 생성되면 변경할 수 없습니다!';
			case 'manageApplicationEntity': return '애플리케이션 엔티티 관리';
			case 'currentVersion': return '현재 버전';
			case 'submitVersion': return '제출된 버전';
			case 'packageOnlySupportZipCompressedFile': return '이 패키지는 zip 압축 파일만 지원합니다.';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'zip 패키지에서 \'${name}\' 파일을 찾을 수 없습니다.';
			case 'fileList': return '문서 목록:';
			case 'programPackage': return '프로그래밍 패키지:';
			case 'automaticallyExtractFromVersionFile': return '\'.version\' 파일에서 자동으로 추출됨';
			case 'dappVersionFormatTip': return '버전 번호의 형식은 최대 99.99를 넘지 않는 정밀도 2자리 소수점이어야 합니다.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => '버전 번호는 현재 버전 \'${v}\'보다 커야 합니다.';
			case 'versionNotes': return '각인:';
			case 'updateRelease': return '새 버전';
			case 'loadAndRun': return '로드 및 실행';
			case 'notYetSubmittedProgramPackage': return '프로그램 패키지가 아직 제출되지 않았습니다!';
			case 'authorizeMinidAppLogin': return '미니 앱 로그인 승인';
			case 'confirmAuthorizationPleaseEnterYes': return '승인을 확인하려면 "예"를 입력하세요.';
			case 'authorizeNow': return '즉각적인 승인';
			case 'operation': return '운영.';
			case 'statusChange': return '상태 변경';
			case 'changeTo': return '로 변경합니다:';
			case 'notes': return '비고.';
			case 'changesNotEffective': return '변경 사항이 유효하지 않습니다!';
			case 'released': return '게시됨';
			case 'inPublicBeta': return '오픈 베타';
			case 'developers': return '개발사.';
			case 'reviewList': return '댓글 목록.';
			case 'postReview': return '댓글 남기기';
			case 'scoreNow': return '지금 평가하기';
			case 'description': return '설명.';
			case 'noData': return '(^-^)\n 사용 가능한 데이터 없음';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => '버전이 ${a}에서 ${b}로 업데이트되었습니다.';
			case 'loadNewVersion': return '새 버전 로드';
			case 'name': return '이름.';
			case 'canisterId': return '탱크 ID.';
			case 'updateTime': return '업데이트 시간';
			case 'contractCanistersState': return '계약 탱크 상태';
			case 'userDistribution': return '사용자 배포';
			case 'settings': return '설정';
			case 'security': return '안전';
			case 'invite': return '초대장';
			case 'more': return '더 보기...';
			case 'receiveAddress': return '수신 주소:';
			case 'hangingAmount': return '보류 중인 금액';
			case 'hangingAmountTips': return '보류 중인 금액은 하위 팀이 채굴을 통해 생성한 보상의 임시 기록으로, 채굴 세션을 완료하면 이 금액이 보류 중인 금액에 모이게 됩니다.';
			case 'pendingAmount': return '금액 결정 예정';
			case 'pendingAmountTips': return '보류 중인 금액은 광고주에 대해 아직 확정되지 않은 금액으로, 유효하게 매칭된 금액은 유효한 USCT 레코드로 이전되며, 유효하지 않은 부분은 제외됩니다.';
			case 'received': return '받은';
			case 'processing': return '진행 중';
			case 'replied': return '응답자';
			case 'rejected': return '거부';
			case 'unknown': return '미지의 세계';
			case 'insufficientBalance': return '밸런스가 부족합니다!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => '${x}의 잔액이 크로스체인 네트워크 수수료를 지불하기에 부족합니다.';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return '거래가 아직 완료되지 않았으며 현재로서는 이체할 수 없습니다.';
			case 'thisfunctionNotSupportExternalCalls': return '이 함수는 외부에서 호출하는 것을 지원하지 않습니다.';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return '크로스체인 수수료 결제에 사용할 수 있는 주소가 일치하지 않으니 다른 체인 네트워크로 전환하여 시도해 보세요.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => '현재 단일 트랜잭션에서 이체할 수 있는 최대 금액과 일치하는 금액은 ${x}입니다.';
			case 'memoMustNotBeMoreThan64bytes': return '비고는 64바이트를 초과할 수 없습니다.';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => '잔액이 부족하며 금액은 ${x}입니다.';
			case 'boundRreceivingAddressesExceed3Tip': return '주소를 3개 이상 바인딩할 수 없습니다.\n새 결제 주소를 바인딩해야 하는 경우.\n먼저 다른 주소의 바인딩을 해제하세요.';
			case 'parametersA_exception': return ({required Object x}) => '매개변수: ${x}, 예외';
			case 'parameterException': return '매개변수 예외!';
			case 'transferAmountMustBeLargerThan0': return '이체 금액은 0보다 커야 합니다.';
			case 'authorizationHasExpired': return '인증이 만료되었습니다.';
			case 'theAppHasNotBeenAuthorizedByOwner': return '소유자가 앱을 승인하지 않았습니다.';
			case 'authenticationTokenIsInvalid': return '잘못된 인증 토큰';
			case 'verifyInfoIsInvalidOrExpired': return '유효하지 않거나 만료된 유효성 검사 정보';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return '액세스 단말기 수가 1만분의 1 제한을 초과했는지 확인합니다.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return '채굴에 참여한 기간이 3일 이상이어야 합니다.';
			case 'numberOfSafetyCircleCannotBeLessThan3': return '보안 서클의 구성원 수는 3명 이상이어야 합니다.';
			case 'avatarIsNotSet': return '아바타가 설정되지 않음';
			case 'numberOfDirectReferralsCannotBeLessThan3': return '직접 추천 횟수는 3건 이상이어야 합니다.';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return '시간 제한이 충분하지 않으며 휴대폰 번호는 1년에 한 번만 변경할 수 있습니다.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return '이 휴대폰 번호는 이미 존재하며 복제할 수 없습니다.';
			case 'securityCodeIsIncorrect': return '잘못된 보안 코드';
			case 'securityCodeMayHaveExpired': return '보안 코드가 만료되었을 수 있습니다.';
			case 'sessionIdIsInvalidOrExpired': return '유효하지 않거나 만료된 세션 ID';
			case 'sessionHasBeenAuthorized': return '세션 완료가 승인되었습니다!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => '기간 만료 전 ${x}일 이내에만 갱신할 수 있습니다.';
			case 'notYetGrantedDeveloperPermissions': return '아직 개발자 권한이 없습니다.';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => '필드 ${x}는 널일 수 없습니다.';
			case 'emailFormatError': return '이메일 형식 오류';
			case 'theXformatIsIncorrect': return ({required Object x}) => '\'${x}\' 서식 오류';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => '"${x}" 필드의 길이는 ${y}에서 ${z}자 사이여야 합니다.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => '\'${x}\' 선택 범위는 ${y}에서 ${z} 사이여야 합니다.';
			case 'unchanged_sameAsOldContent': return '기존과 동일한 내용으로 변경되지 않았습니다!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\'가 이미 존재합니다!';
			case 'mobileNumberHasNotJoinedDelta': return '이 휴대폰 번호는 델타항공에 추가되지 않았습니다!';
			case 'referrerIdCannotBeEmpty': return '리퍼러 ID는 비어 있으면 안 됩니다!';
			case 'referrerIdDoesNotExist': return '리퍼러 ID가 존재하지 않습니다!';
			case 'didIsIncorrectOrInvalid': return 'DID가 잘못되었거나 유효하지 않습니다!';
			case 'accessTokenIsIncorrectOrInvalid': return '액세스 토큰이 잘못되었거나 유효하지 않습니다!';
			case 'minimumWithdrawalAmountIs1USD': return '1회 출금 시 최소 1USD';
			case 'miningTimeIsNotYet': return '아직 채굴할 때가 아닙니다.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return '이미 존재하므로 다시 추가하지 마세요!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return '등록 번호를 인증 액세스 번호로 사용할 수 없습니다.';
			case 'canotAddYourSelf': return '본인을 추가할 수 없습니다.';
			case 'logOut': return '로그아웃';
			case 'confirmLogout': return '로그아웃 확인';
			case 'logOutTipsText': return '참고: 백서에 따라 계정을 로그인 인증할 때마다 인증자에게 인센티브로 지급되는 일정 금액의 DTC 코인이 소모되므로 불필요하게 로그인과 로그아웃을 시도하지 마시고 아래 버튼을 클릭하면 즉시 로그아웃됩니다.';
			case 'ConfirmLogoutPleaseEnterYes': return '로그아웃을 확인하려면 "예"를 입력하세요.';
			case 'tip': return 'STH에 주목하세요.';
			case 'cancel': return '취소';
			case 'close': return 'cloture';
			case 'selected': return '선택';
			case 'edit': return '컴파일러';
			case 'submit': return '제출(보고서 등)';
			case 'goBack': return '회귀(심리학 분야)';
			case 'copiedToClipboard': return '클립보드에 복사되었습니다.';
			case 'nickname': return '애정 기간';
			case 'confirm': return '인식';
			case 'cannotBeEmpty': return '비어 있을 수 없음';
			case 'deleteSuccessful': return '성공적으로 삭제되었습니다!';
			case 'successfullyModified': return '수정에 성공했습니다!';
			case 'executionSuccessful': return '구현은 성공적이었습니다!';
			case 'preview': return '미리 보기';
			case 'followSystem': return '후속 조치 시스템';
			case 'change': return '변형';
			case 'replace': return '교체';
			case 'view': return '체크 아웃';
			case 'manage': return '관리';
			case 'modify': return '수정';
			case 'replacedSuccessfully': return '교체 성공!';
			case 'authentication': return '인증';
			case 'reacquire': return '검색';
			case 'tryAgain': return '다시 시도하세요.';
			case 'querying': return '문의 중 ...';
			case 'writingToOnChain_pleaseWait': return '체인에 기록 중입니다, 기다려주세요 ...';
			case 'versionCheck': return '버전 감지';
			case 'alreadyLatestVersion': return '이미 최신 버전입니다!';
			case 'foundNewVersion': return '새 버전을 살펴보세요:';
			case 'upgradeLink': return '업그레이드 링크:';
			case 'deviceDescription': return '장비 설명.';
			case 'notification30SecondsBeforeMiningStops': return '채굴이 중단되기 30초 전에 알림 알림을 실행하세요!';
			case 'goMining': return '채굴 시작';
			case 'deltaMiningReminder': return '델타 마이닝 알림';
			case 'clickToMine_miningIsAboutToStop': return '내려면 여기를 클릭하세요. 채굴이 곧 중단됩니다!';
			case 'incorrect_input': return '잘못된 입력입니다!';
			case 'are_you_sure_delete': return '삭제하시겠습니까?';
			case 'delete_account': return '계정 삭제';
			case 'how_to_operate_it': return '작동 방법을 보셨나요?';
			case 'deletion_warning_tip': return '계정을 삭제하면 모든 델타 코인을 잃게 되며 다른 회원의 모든 수입도 잃게 됩니다.';
			case 'launchWhatsAppProgram': return 'WhatsApp 프로그램 시작';
			case 'sms': return '문자';
			case 'whatsApp_verification_tips': return '이 아이콘이 있는 접속 번호는 WhatsApp 메시지 검증도 지원합니다. 국제 메시지를 보낼 때는 WhatsApp을 사용하여 성공률을 높이고 비용을 절감하는 것이 좋습니다.';
			case 'ihaveSentVerificationString': return '확인 문자열을 보냈습니다';
			case 'totalOfPeople': return '전체 인원: ';
			case 'numberOfPeopleMining': return '채굴하는 사람 수';
			case 'useBrowserScanQRcodeToSMSprogram': return '다른 기기에서 브라우저를 사용하여 QR 코드를 스캔하고 SMS 프로그램으로 전달할 수 있습니다';
			case 'toggle': return '토글';
			case 'DSMSverifier': return 'DSMS 검증자';
			case 'activate': return '활성화';
			case 'activated': return '활성화됨';
			case 'generateActivationCommand': return '활성화 명령 생성';
			case 'activationCommand': return '활성화 명령';
			case 'activationSentedTip': return '활성화 SMS가 전송된 후, 접속 단말 장치에서 활성화 상태를 확인하세요.';
			case 'biometricsNotEnabledTip': return '기기에서 생체 인식(얼굴 또는 지문)이 활성화되어 있지 않습니다. 계속하려면 활성화해 주세요.';
			case 'error': return '오류';
			case 'exceptionOccurredWhenCallingBiometric': return '생체 인식(얼굴 또는 지문) 함수를 호출하는 중 예외가 발생했습니다!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: '개의 액세스 번호가 체크되어 있습니다. '),
				shouldNum,
				const TextSpan(text: '개를 선택해야 합니다.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text}가 위의 ${n} 접속 번호로 전송되었습니까?';
			case 'interface': return '인터페이스:';
			case 'waitingTimeoutOrSenderNumberMismatch': return '대기 시간 초과 또는 발신자 번호 불일치';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => '입력하신 보안 서클 멤버의 휴대폰 번호가 일치하지 않습니다: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return '로그아웃 후 10분 이내에 로그인하면 2단계 인증을 피할 수 있습니다.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => '최소 ${n}개의 휴대폰 번호를 입력해야 합니다';
			case 'noAccessNumberInYourRegionYet': return '귀하의 지역에는 아직 접속 번호가 없습니다';
			case 'notEnoughAccessNumbersInYourRegion': return '귀하의 지역에 접속 번호가 충분하지 않습니다';
			case 'tipsForDeployDSMSterminal': return '시스템이 다른 국가의 일부 접속 번호를 자동으로 로드했습니다. 더 나은 저렴한 검증 서비스를 제공하기 위해 귀하 또는 추천인이 검증 수수료를 받기 위해 DSMS 터미널을 현지에 배포하는 것이 좋습니다.';
			case 'noOneCanProvideMeTheSecurityCode': return '누구도 나에게 보안 코드를 제공할 수 없나요?';
			case 'useSupplementalMode': return '보충 모드 사용';
			case 'returnToSecurityCodeMode': return '보안 코드 모드로 돌아가기';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return '연관된 모바일 번호를 입력하세요. 국가 코드는 생략할 수 있습니다.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => '${name}의 휴대폰 번호가 올바르지 않습니다';
			case 'matchingVerificationStrategyIs': return '매칭 검증 전략은 다음과 같습니다.';
			case 'balanceGreater3ICP_noNeedPourFuel': return '3 ICP보다 큰 잔액, 당장은 연료를 부을 필요가 없습니다.';
			case 'escrowAccount': return '에스크로 계정';
			case 'fuelRelay': return '연료 릴레이';
			case 'pourFuel': return '연료를 붓다';
			case 'fuelState': return '연료 상태';
			case 'pouringFuelTips': return '연료를 주입하는 것은 어떠한 이점이나 단점을 가져다주지 않습니다. 그 목적은 델타 시스템 경험을 풍부하게 하는 것입니다.';
			case 'sponsorDevelopersByWatchingAds': return '광고를 시청하여 개발자 후원';
			case 'status': return '상태';
			case 'date': return '날짜';
			default: return null;
		}
	}
}

extension on _StringsNl {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'afb. begin';
			case 'switchLanguage': return 'Taal omschakelen';
			case 'languageSwitch': return 'Taalwisseling';
			case 'slogan': return 'Bouwen aan een gedecentraliseerde economie in delta';
			case 'countryRegionCode': return 'Land/gebiedscode';
			case 'countryRegionSelection': return 'Selectie van landen en regio\'s';
			case 'nextStep': return 'de volgende stap';
			case 'yourPhoneNumber': return 'Uw telefoonnummer.';
			case 'pleaseSelectCountryAndRegion': return 'Selecteer uw land/regio';
			case 'pleaseEnterPhoneNumber': return 'Voer een geldig telefoonnummer in!';
			case 'referrerDid': return 'Verwijzende DID';
			case 'pleaseEnterTheReferrersDid': return 'Voer een geldige gedecentraliseerde identiteits-id van de verwijzer in';
			case 'thisDidIsInvalid': return 'Deze DID is ongeldig.';
			case 'nicknameFormatTips': return 'De bijnaam mag niet leeg zijn en mag niet langer zijn dan 16 cijfers.';
			case 'additionalIinformation': return 'Aanvullende informatie';
			case 'invitationSubject': return 'Een uitnodiging voor Delta Consensus Building';
			case 'invitationLetter': return ({required Object did}) => 'Hallo, ik doe mee aan Delta Consensus Building!\n Delta is een nieuw open source platform voor digitale valuta dat draait op ICP, waarmee je verschillende digitale valuta kunt beheren en gebruiken zonder wachtwoorden, privésleutels of mnemonics. Klik op deze link https://delta.kim/auto/download om de applicatie te installeren en nu ben je uitgenodigd om mee te doen aan consensusvorming en het slaan van munteenheden.\n Verwijzende DID: ${did}';
			case 'dSMSverification': return 'DSMS-validatie';
			case 'getAccessNumbers': return 'Zorg voor toegangsnummers';
			case 'getAccessNumberPromptMessage': return 'Klik op de knop "Verkrijgen" hieronder om een reeks toegangsnummers voor SMS-verificatie in de wachtrij te draaien.';
			case 'optionalAccessNumbers': return 'Optioneel toegangsnummer';
			case 'accessNumber': return 'toegangsnummer';
			case 'TELCO': return 'exploitant (van een elektriciteitscentrale, transportnetwerk enz.)';
			case 'score': return 'score';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('nl'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Vink '),
					nBuilder(n),
					const TextSpan(text: ' toegangsnummers aan en klik op de knop "'),
					span('text'),
					const TextSpan(text: '" om door te gaan naar de volgende stap.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Vink '),
					nBuilder(n),
					const TextSpan(text: ' toegangsnummers aan en klik op de knop "'),
					span('text'),
					const TextSpan(text: '" om door te gaan naar de volgende stap.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta is een open source, gedecentraliseerd, wereldwijd experiment met digitale valuta en een ecosysteem van cryptocurrency-toepassingen.';
			case 'deltaGoalsDesc': return 'Het doel is om het mogelijk te maken voor mensen om Delta te gebruiken om nieuwe digitale munteenheden te bouwen die universeel, eerlijk, veilig, snel en groen zijn. En om verschillende effectieve toepassingsscenario\'s te bieden voor deze digitale valuta en eerdere cryptocurrencies.';
			case 'details': return 'gegevens';
			case 'get': return 'winst';
			case 'select': return 'optie';
			case 'send': return 'verzenden';
			case 'complete': return 'vervullen';
			case 'selectedAccessNumberPrompt': return 'Bij selectie wordt het volledige toegangsnummer weergegeven en wordt er een verificatietekenreeks gegenereerd.';
			case 'location': return 'plaatsing';
			case 'verificationString': return 'validatiestring';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Gebruik uw telefoonnummer '),
				num,
				const TextSpan(text: ' en stuur '),
				label,
				const TextSpan(text: ' naar '),
				accessNumber,
				const TextSpan(text: ' om de verificatie te voltooien.'),
			]);
			case 'ihaveSentTheSMS': return 'Ik heb een sms verstuurd';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Validatiestring is 6 minuten geldig, resterende tijd: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Te snel om ${x} seconden te wachten om verder te gaan!';
			case 'waitingForVerificationSMS': return 'Wachten op verificatie-sms...';
			case 'partSuccsForVerificationSMS': return 'De SMS-verificatie van een van de toegangsterminals is geslaagd!';
			case 'creatingAccessToken': return 'Toegangstoken wordt aangemaakt...';
			case 'intoDelta': return 'Binnen Delta';
			case 'deltaAccountIsLoggedIn': return 'Uw Delta-account is ingelogd';
			case 'iHavLoggedOut': return 'Ik ben weg.';
			case 'startTwoFactorVerification': return 'Beginnen met dubbele verificatie';
			case 'securityCircleVerification': return 'Cirkel van veiligheidsvalidatie';
			case 'generateSecurityCode': return 'Beveiligingscode genereren';
			case 'generateSecurityCodeHintText': return 'De gegenereerde beveiligingscode wordt naar een willekeurig gekozen lid van je beveiligingskring gestuurd.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'U hebt geen beveiligingscirkel ingesteld, uw account is erg onveilig, voer een willekeurige plaatshouder met 6 cijfers in en ga naar de volgende stap.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'De beveiligingscode is gegenereerd, neem contact op met de volgende familie en vrienden om hen te vragen de beveiligingscode voor u te extraheren om door de verificatie te komen. 30 minuten geldig!';
			case 'itGetSecurityCodeTip': return 'Tip: Je kunt de beveiligingscode krijgen door te dubbelklikken op je accountnaam op de Delta App -> Menu -> Beveiliging geven pagina.';
			case 'securityCircleMemberList': return 'Ledenlijst van de beveiligingskring:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Selecteer een familielid of vriend in de ledenlijst om een ​​beveiligingscode te genereren en u te voorzien om uw ware identiteit te verifiëren. Het doel is om te voorkomen dat het account door anderen wordt beheerd wanneer het mobiele telefoonnummer verloren of gestolen is.';
			case 'formatIsXdigits': return ({required Object num}) => 'Formaat als ${num} cijfers';
			case 'signInSuccessfully': return 'Succesvol inloggen!';
			case 'twoFAandLogin': return 'Dubbele verificatie en inloggen';
			case 'verificationSuccessful': return 'Controleer succes!';
			case 'validationFailed': return 'Validatie mislukt!';
			case 'dappInfo': return 'DApp-informatie';
			case 'securityCircle': return 'veiligheidsring';
			case 'securityCode': return 'beveiligingscode';
			case 'provideSecurity': return 'beveiliging bieden';
			case 'addManully': return 'Handmatig toevoegen';
			case 'addFromContacts': return 'Toevoegen vanuit adresboek';
			case 'addSecurityCircle': return 'Cirkel van veiligheid toevoegen';
			case 'inputType': return 'Type invoer';
			case 'mobileNumber': return 'mobiel telefoonnummer';
			case 'did': return 'Adres id';
			case 'pleaseEnterValidDID': return 'Voer een geldige gedecentraliseerde identiteits-id in';
			case 'pleaseEnterValidWalletAddress': return 'Voer een geldig portefeuilleadres in';
			case 'appellation': return 'vorm van adres';
			case 'appellationHint': return 'Hoe noem je het, zoals "baby"?';
			case 'addSecurityCircleTips': return 'Voeg geen mensen die je niet vertrouwt toe aan je beveiligingsgroep.';
			case 'referralTeam': return 'Aanbevolen teams';
			case 'profile': return 'Accountgegevens';
			case 'menu': return 'menu';
			case 'directly': return 'direct';
			case 'indirectly': return 'indirect';
			case 'inviteContacts': return 'Uitnodiging Contact';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Je genodigde is '),
				nickname,
				const TextSpan(text: ' en je hebt direct '),
				num1,
				const TextSpan(text: ' mensen doorverwezen, waarvan '),
				num2,
				const TextSpan(text: ' momenteel online zijn.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Je hebt indirect '),
				num1,
				const TextSpan(text: ' mensen doorverwezen, waarvan '),
				num2,
				const TextSpan(text: ' momenteel online zijn.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Nodig vrienden uit om zich bij Delta aan te sluiten en samen de sociale consensus te verbeteren. Elke directe aanbeveling van één persoon verhoogt het mijnbouwtarief met '),
				rate1,
				const TextSpan(text: ' van het basistarief. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Nodig vrienden uit om zich bij Delta aan te sluiten en samen de sociale consensus te verbeteren. Elke indirecte aanbeveling van één persoon verhoogt het mijnbouwtarief met '),
				rate2,
				const TextSpan(text: ' van het basistarief.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Weet je zeker dat je "${name}" wilt verwijderen?';
			case 'safetyCircleRoleQ': return 'Wat is het doel van de veiligheidsring?';
			case 'safetyCircleRoleA': return 'Bescherm je account door secundaire verificatie te bieden in gevoelige situaties.';
			case 'howSecurityCirclesWorkQ': return 'Hoe werken veiligheidsringen?';
			case 'howSecurityCirclesWorkA': return 'In het geval dat een Circle of Safety verificatie nodig is, zal het Delta Smart Contracts programma willekeurig een lid van de Circle of Safety buddy lijst selecteren om je te helpen met een veiligheidscode om de identiteitsverificatie voor je te voltooien. Wanneer je het lid om de veiligheidscode vraagt, kan het bevestigen of jij het bent of niet. Tegelijkertijd zal het programma vragen: "Weiger de beveiligingscode te geven als u het niet bent", om de veiligheid van uw account te beschermen. Zorg er dus altijd voor dat de leden van je beveiligingskring mensen zijn die je kunt vertrouwen.';
			case 'securityCircleBeUsedQ': return 'Wanneer wordt het gebruikt?';
			case 'securityCircleBeUsedA1': return '1. Wanneer je de controle over je Delta APP verliest, is het meestal zo dat je mobiele telefoon verloren of gestolen is.';
			case 'securityCircleBeUsedA2': return '2. Bij sommige gevoelige operaties moet het Delta Smart Contract-programma bevestigen dat jij het bent.';
			case 'provideSafetyTip1': return 'Wanneer je buddy je om zijn beveiligingscode vraagt, zorg er dan voor dat je bevestigt dat het zijn eigen code is.';
			case 'provideSafetyTip2': return 'Je biedt beveiliging aan de bovenstaande vrienden, die jou als de meest vertrouwde persoon in hun beveiligingskring hebben ingesteld en die jou nodig hebben om hun beveiliging te bevestigen voor het geval ze te maken krijgen met gevoelige operaties op hun account.';
			case 'provideSafetyTip3': return 'Dubbelklik indien nodig op de avatar van de andere persoon om de beveiligingscode uit te pakken.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'De andere partij heeft momenteel geen beveiligingscode die moet worden uitgepakt!';
			case 'existSecurityCodeTip': return 'Zorg ervoor dat de vriend of het familielid die u om de beveiligingscode vraagt dezelfde is als de vriend of het familielid. Om de veiligheid van uw vriend of familielid te beschermen, moet u weigeren de beveiligingscode te geven als de vriend of het familielid niet dezelfde is als de vriend of het familielid.';
			case 'avatarSettings': return 'Avatar-instellingen';
			case 'NFTAvatarPropertyRightsText': return 'Disclaimer: Het gebruik van de NFT in kwestie als avatar is alleen voor persoonlijke voorkeur en heeft niets te maken met het bezitten van de intellectuele eigendomsrechten van die NFT.';
			case 'projectWebsite': return 'Projectwebsite:';
			case 'whitepaper': return 'wit papier:';
			case 'indexID': return 'Index Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Index tussen ${start} en ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Voer het indexnummer van je favoriete NFT in en het programma laadt het automatisch als avatar voor je.';
			case 'miningRate': return 'mijnbouwtarief';
			case 'miningDetails': return 'Mijnbouw Details';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Totaal mijnbouwtarief: '),
				rate,
				const TextSpan(text: ' δ/dag'),
			]);
			case 'EndOfMiningSession': return 'Cycle mining is voorbij:';
			case 'tapToMineDeltaCoin': return 'Klik om Delta-munten te delven ↑';
			case 'clickToStartMining': return 'Klik om te beginnen met mijnen!';
			case 'miningHasStoppedPromptDesc': return 'Mijnbouw is gestopt, elke 24 uur is een mijnbouwcyclus, klik op het bliksempictogram om een nieuwe mijnbouwronde te starten.Delta\'s mijnbouw is een toewijzingsmechanisme dat geen extra rekenkracht en netwerkverkeer van je apparaat verbruikt.';
			case 'aboutBaseRate': return 'Over de basisrente?';
			case 'baseRateDescription': return 'Zoals overeengekomen in de whitepaper, zal de regel voor het verlagen van het basistarief voor Delta mining worden verdeeld in twee fasen.\nFase 1: Het tarief zal 32δ/dag zijn wanneer het aantal deelnemers (registraties) 3000 of minder is. Met dit als startbasis wordt het basistarief gehalveerd elke keer dat het aantal mensen met een factor 10 toeneemt.\nFase 2: Wanneer het aantal deelnemers 30 miljoen of meer bedraagt, wordt het basistarief gehalveerd telkens als het aantal deelnemers met een factor 3 toeneemt. Tot de laatste opgraving de productie stopt.';
			case 'baseRate': return 'basistarief (zoals in ISDN)';
			case 'directReferralRewards': return 'Directe Verwijsbonus';
			case 'directReferralRewardDesc': return 'Voor elke directe verwijzing wordt je mijnbouwtarief verhoogd met 1/3 van het basistarief terwijl ze aan het mijnen zijn.\n\n Daarnaast telt de mining status van je referrals ook mee voor je directe referral bonus.';
			case 'indirectReferralRewards': return 'Indirecte verwijzingsbeloningen';
			case 'indirectReferralRewardDesc': return 'Wanneer een indirecte verwijzing aan het mijnen is, wordt je mijnsnelheid verhoogd met een extra 1/10e van de basissnelheid.\n\n Je directe doorverwijzingsteam, elke persoon die ze doorverwijzen vertegenwoordigt een indirecte doorverwijzing voor jou.';
			case 'mine': return 'winnen (erts of andere bron uit een mijn)';
			case 'thisMiningInformation': return 'Actuele mijnbouwinformatie';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Deelgenomen aan mijnbouw: '),
				x,
				const TextSpan(text: ' keer'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Totale winst deze keer: '),
				x,
				const TextSpan(text: ' Delta munten'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Basisinkomsten: '),
				x,
				const TextSpan(text: ' munten'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Directe teambijdrage: '),
				x,
				const TextSpan(text: ' munten'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Indirecte teambijdrage: '),
				x,
				const TextSpan(text: ' munten'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Tijdsduur tussen opgravingen: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Effectieve mijnbouwuren: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} uur';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Voor de beveiliging van activa moeten de leden van de beveiligingscirkel altijd 3-5 vertrouwde personen aanhouden.';
			case 'index': return 'indexering';
			case 'amount': return 'som geld';
			case 'balance': return 'saldi';
			case 'timeStamp': return 'tijdstempel';
			case 'summary': return 'samenvattingen';
			case 'miningHasStopped': return 'De mijnbouw is gestopt.';
			case 'miningHasStoppedDesc': return 'Je mijnbouw is momenteel gestopt, begin nu met verdienen.';
			case 'startMining': return 'Mijnbouw starten';
			case 'changeMobileNumber': return 'Verandering van mobiel telefoonnummer';
			case 'currentMobileNumber': return 'Huidig mobiel telefoonnummer';
			case 'newMobileNumber': return 'Nieuw mobiel telefoonnummer';
			case 'securityCodeFormatIs6digits': return 'De beveiligingscode bestaat uit 6 cijfers!';
			case 'startVrification': return 'Verificatie starten';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Dit mobiele nummer bestaat al, bijbehorende DID: ${dId}';
			case 'noDataYet': return 'Geen gegevens beschikbaar';
			case 'previousMobileNumber': return 'Vorig mobiel telefoonnummer';
			case 'changeLog': return 'Verslag van wijzigingen';
			case 'referralLinkToShare': return 'Aanbevolen koppelingen om te delen';
			case 'referrer': return 'verwijzer';
			case 'isoCountryCode': return 'ISO-landcode';
			case 'avatarLogo': return 'koptekst logo';
			case 'creationTime': return 'Tijd van creatie';
			case 'lastUpdate': return 'Laatste update';
			case 'numberOfSecurityCircleMembers': return 'Aantal leden van beveiligingskringen';
			case 'theLatestMining': return 'Laatste opgraving';
			case 'effectiveMiningDays': return 'Aantal dagen effectieve mijnbouw';
			case 'modifyNickname': return 'Bijnaam wijzigen';
			case 'didNotChange': return 'Geen verandering!';
			case 'kycVerification': return 'KYC-verificatie';
			case 'faceID': return 'Gezicht ID';
			case 'touchID': return 'Vingerafdruk ID';
			case 'biometricsAuthorizationTest': return 'Biometrische verificatie testen';
			case 'currentState': return 'huidige status';
			case 'biometricsAuthenticationLocalizedReason': return 'Gebruik de ontgrendeling van uw apparaat om uw identiteit te verifiëren.';
			case 'graph': return 'archief van afbeeldingen (bijv. kaarten, documenten of botanische figuren)';
			case 'referralRelationshipGraph': return 'Verwijzingsrelatie in kaart brengen';
			case 'nativeContacts': return 'Lokale contacten';
			case 'registrationAndMiningTrends': return 'Registratie en mijnbouwtrends';
			case 'inMining': return 'mijnbouw';
			case 'registrationVolume': return 'registratievolume';
			case 'unmined': return 'Onbenut';
			case 'mined': return 'gedolven';
			case 'communityMining': return 'Mijnbouw in de Gemeenschap';
			case 'consensusPromotionFund': return 'Consensus Promotiefonds';
			case 'ecologicalAwardFund': return 'Ecologisch Stimuleringsfonds';
			case 'icpFuelCrowdfunding': return 'ICP Brandstof Crowdfunding';
			case 'coreDeveloperRewards': return 'Beloningen voor ontwikkelaars';
			case 'totalAllocation': return 'Algemene verdeling';
			case 'miningRatio': return 'Mijnbouwratio';
			case 'billion.30': return '30 miljard';
			case 'billion.60': return '60 miljard';
			case 'billion.180': return '180 miljard.';
			case 'billion.300': return '300 miljard';
			case 'watchAdsToSupportDevelopers': return 'Bekijk advertenties om ontwikkelaars te ondersteunen';
			case 'loadingAdcomponents': return 'Advertentiecomponenten laden...';
			case 'timeIsNotUp': return 'De tijd is nog niet voorbij!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Laden mislukt, mogelijk netwerk geblokkeerd!';
			case 'pendingUSCTrecords': return 'In afwachting van USCT-gegevens';
			case 'pendingUSCTrecordsDesc': return 'Hangende USCT-records worden binnen 15-30 dagen bevestigd met het advertentieplatform en geldige records worden overgezet naar de USCT-recordlijst en het juiste USCT-bedrag wordt toegevoegd aan het accountsaldo.';
			case 'validity': return 'geldigheid';
			case 'advertiser': return 'adverteerders';
			case 'earned': return 'verdiend';
			case 'withdraw': return 'geld opnemen';
			case 'validUSCTrecords': return 'Effectieve USCT-gegevens';
			case 'USCTmining': return 'USCT Mijnbouw';
			case 'aboutUSCTmining': return 'Over USCT-mijnbouw?';
			case 'aboutUSCTminingItme1': return '1. USDT is een wereldwijd populaire U.S. dollar stablecoin die gemakkelijk kan worden ingewisseld voor nationale soevereine valuta op grote cryptocurrency beurzen over de hele wereld.';
			case 'aboutUSCTminingItme2': return '2. USCT is een tijdelijke maatregel van de opbrengst van USCT mining, bekend als USD-krediet, dat uiteindelijk zal worden omgezet in USDT volgens het werkelijke afrekeningsbedrag en de distributieregels van het advertentieplatform en de overeenkomstige verhouding.';
			case 'aboutUSCTminingItme3': return '3. USCT Mining is een verkeersadvertentiefunctie van de Delta-gemeenschap. Het maakt gebruik van de grote gebruikersbasis van de Delta-gemeenschap om meerdere voordelen te bieden voor adverteerders, Delta-ontwikkelaars en afwezigen. Het is ontworpen om een bepaald bedrag aan effectieve inkomsten te verschaffen aan afwezige werknemers in het vroege stadium waarin het Delta-ecosysteem nog niet is gevormd en bloeit; tegelijkertijd biedt het ook bepaalde financiële steun aan ontwikkelaars om ervoor te zorgen dat zij gedurende een lange periode ontwikkelingsdiensten kunnen blijven leveren en uiteindelijk alle plannen in de whitepaper kunnen realiseren; en het biedt ook een effectief promotiekanaal voor de productadverteerders.';
			case 'aboutUSCTminingItme4': return '4. De verdelingsregels zijn zo ontworpen dat 40 procent van de totale opbrengst wordt gebruikt als commissies voor technische diensten voor ontwikkelaars en de resterende 60 procent als verzuimbeloningen voor de gemeenschap. Verzuimbeloning deel van het multi-level distributiemodel vergelijkbaar met DTC, zal het verzuim beloning worden verdeeld in drie delen volgens de verhouding van 6:3:1, elke keer dat een van het verzuim beloning van USCT mijnbouw 6 delen toegewezen aan het verzuim van de huidige advertenties, 3 delen toegewezen aan de superieure verwijzer, 1 deel toegewezen aan het tweede niveau verwijzer. Op dezelfde manier kun je dezelfde referrerbeloning krijgen voor de vrienden die je doorverwijst via USCT mining. Het voordeel van deze verdeling op meerdere niveaus is dat iedereen een relatief groot bedrag aan USDT kan verdienen door een downline team te ontwikkelen.';
			case 'aboutUSCTminingItme5': return '5. De afwikkelingsperiode is 7 dagen, d.w.z. elke 7 dagen wordt de geldigheid gecontroleerd met het advertentieplatform en de bevestigde geldigheid van de opbrengst en het werkelijke bedrag worden opgenomen in het saldo. Het minimumbedrag voor elke opname is 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Rijen ${x} tot ${y}.';
			case 'wallet': return 'portemonnees';
			case 'multiChainWallet': return 'multichain portemonnee';
			case 'deposit': return 'storting (bijv. op een bankrekening)';
			case 'transfer': return 'overschrijving (geld naar een bankrekening)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} in het adres van de portemonnee';
			case 'transactions': return 'Transactiegegevens';
			case 'network': return 'waterafvoer';
			case 'walletAddress': return 'Portemonnee adres';
			case 'currentAddress': return 'huidig adres';
			case 'depositAddress': return 'Oplaadadres';
			case 'receivingMoneyAddress': return 'adres begunstigde';
			case 'applyTempDepositAddress': return 'Adres voor het aanvragen van een tijdelijke opwaardering';
			case 'tempDepositAddressTip': return '1. Dit is een gedeeld borgadres. Stort het bedrag niet nadat het huurcontract is verlopen of nadat je bent ontbonden. Als dit gebeurt, gaat het bedrag verloren.';
			case 'tempDepositAddressTip2': return '2. Voordat u een storting doet, moet u ervoor zorgen dat de [Ketennaam] en [Muntnaam] precies overeenkomen; in het geval van contract tokens, moet u er ook voor zorgen dat de [Contract Standaard] en [Contract Adres] precies overeenkomen.';
			case 'tempDepositAddressTip3': return '3. Probeer geen geld te storten dat niet overeenkomt met een van de parameters in de bovenstaande tips, anders zal het bedrag verloren gaan.';
			case 'tempDepositAddressTip4': return '4. Als u andere soorten activa moet storten, ga dan naar de bijbehorende valutapagina en parameteropties om een nieuw adres aan te vragen.';
			case 'applyExtensionOfValidity': return 'Aanvraag voor verlenging van de geldigheidsperiode';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Dit adres verloopt na '),
				diff,
				const TextSpan(text: ' en is '),
				tap('handmatig verlengen'),
				const TextSpan(text: ' nog 12 uur geldig voordat het verloopt.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Kan alleen 12 uur van tevoren worden verlengd';
			case 'theReceivingAddressValidForLongtime': return 'Dit adres is lang geldig.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Dit ophaaladres is lang geldig en wordt automatisch in realtime gecrediteerd.';
			case 'confirmDeposited': return 'Bevestiging van stortingen';
			case 'unbindThisDepositAddress': return 'Ontbundel dit herlaadadres';
			case 'confirmDepositedTip': return 'Als het geld is overgemaakt, klik dan op de bovenstaande knop om het bedrag na 10 minuten naar je portemonnee over te maken.';
			case 'unbindDepositAddressTip': return 'Om de lopende overhead van het slimme contract te verminderen, verzoeken we je het opwaardeeradres te deblokkeren als je geen geld meer stort tijdens de geldigheidsperiode.';
			case 'transferToAddress': return 'ga naar adres';
			case 'longPressToPaste': return 'Lang indrukken om te plakken';
			case 'all': return 'volledig';
			case 'balanceX': return ({required Object x}) => 'Saldo ${x}';
			case 'transferOut': return 'blijken';
			case 'depositXcoins': return ({required Object x}) => 'Bijgeschreven ${x}';
			case 'sender': return 'afzender';
			case 'recipient': return 'ontvanger';
			case 'memo': return 'noot';
			case 'kind': return 'manier (van leven)';
			case 'transferAmountExceedsAvailableBalance': return 'Overboekingen boven beschikbaar saldo';
			case 'pleaseEnterValidAmount': return 'Voer een geldig bedrag in';
			case 'networkFee': return 'Netwerkbehandelingskosten';
			case 'fee': return 'administratiekosten';
			case 'validLengthXcharacters': return ({required Object x}) => 'Geldige lengte adres ${x} tekens';
			case 'historys': return 'historisch record';
			case 'dtcCreditdetail': return 'Details Delta-punten';
			case 'usdCreditdetail': return 'USD Punten Details';
			case 'dappSquare': return 'dApp-plein';
			case 'amountRaised': return 'Opgehaald bedrag';
			case 'disbursedAmount': return 'Uitgegeven bedrag';
			case 'participationTimes': return 'Aantal deelnemers';
			case 'completionRate': return 'voltooiingspercentage';
			case 'exchangeRate': return 'wisselkoers';
			case 'icpCrowdfunding': return 'ICP Crowdfunding';
			case 'crowdfunding': return 'crowdfunding';
			case 'trendsCurve': return 'trendcurve';
			case 'fullScreenView': return 'schermvullende weergave';
			case 'walletBalance': return 'Saldo portemonnee:';
			case 'manageWallet': return 'Portemonnee beheren';
			case 'fundraiseAmount': return 'fondsenwerving';
			case 'exchangeRewardAmount': return 'Het beloningsbedrag inwisselen';
			case 'fundraise': return 'fondsenwerving';
			case 'rangeIntegersX': return ({required Object x}) => 'Bereik: geheel getal ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Doe succesvol mee aan fondsenwerving en ontvang een beloning van ${amount}DTCT';
			case 'amountSummary': return 'Overzicht van bedragen';
			case 'changePreferred': return 'Verandering van voorkeur';
			case 'changePreferredAddress': return 'Voorkeursadres wijzigen';
			case 'preferredAddressTip': return 'Geld wordt automatisch overgemaakt naar het voorkeursadres wanneer geld wordt opgehaald met een geregistreerd mobiel nummer of DID.';
			case 'newAddress': return 'Nieuw adres';
			case 'newAddressTip': return 'Om misbruik te voorkomen, wordt er bij meer dan één portemonnee-adres een transactiekost aangerekend voor elk nieuw aangemaakt adres.';
			case 'createNew': return 'nieuw gebouwd';
			case 'chainNetworkName': return 'naam ketennetwerk';
			case 'from': return 'van (een plaats) komen';
			case 'to': return 'tot (een tijd)';
			case 'noAvailableDepositAmountDetected': return 'Er is geen beschikbaar depositobedrag gedetecteerd!';
			case 'crossChainReceiveMoneyMonitoring': return 'Cross-chain collectie luistert ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Ontvangen ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Bevestiging bezig ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Opmerkingen (must read voor beginners)';
			case 'whyUseSharedAddresses': return 'Waarom een gedeeld adres gebruiken?';
			case 'useSharedrAdvantage': return 'De voordelen van het gebruik van gedeelde adressen bij het storten over ketens heen zijn de volgende:';
			case 'useSharedrAdvantage1': return '1. Verminder de verspilling van overdrachtskosten en verlaag de kosten van het gebruik voor gebruikers. Vanwege het gebruik van exclusieve adres, zal het leiden tot te veel spreiding van de middelen, in het algemeen om de latere overdracht van andere gebruikers te vergemakkelijken in de intrekking van de middelen, wanneer de gebruiker de tweede overdracht van middelen oplaadt moeten worden gebundeld in een of een klein aantal adres management.';
			case 'useSharedrAdvantage2': return '2. In het gedeelde schema hoeft het programma slechts een relatief kleine pool van adressen te onderhouden die snel kunnen worden gematcht met uitgaande overdrachten en lichte verzameling luisterend, wat de overhead van rekenkracht vermindert. Het tegenovergestelde zou waar zijn als exclusieve adressen werden gebruikt.';
			case 'tokenType': return 'Type token';
			case 'contract': return 'aannemer';
			case 'contractStandard': return 'contractstandaard';
			case 'contractAddress': return 'contractadres';
			case 'native': return 'protozoa';
			case 'confirmUnbindingPleaseEnterYes': return 'Voer "ja" in om de ontkoppeling te bevestigen.';
			case 'listAllWorkingTempReceivingAddresses': return 'Lijst van alle werkende cross-chain herlaadadadressen';
			case 'setNote': return 'Notities instellen';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Kan niet langer zijn dan ${x} bytes';
			case 'transferFee': return 'transfersom';
			case 'crossChainFee': return 'ketenoverschrijdende vergoeding';
			case 'crossChainTransferOutError': return 'cross-link overdrachtsfout';
			case 'chainName': return 'ketennaam';
			case 'message': return 'berichten';
			case 'dontShowAgain': return 'niet langer weergegeven';
			case 'queuing': return 'wachtrij';
			case 'optional': return 'optioneel';
			case 'publiclyVisible': return 'publiekelijk zichtbaar';
			case 'rates': return 'tarief';
			case 'minimum': return 'minimum';
			case 'maximum': return 'bovengrens';
			case 'minimumBlockConfirmations': return 'Minimum aantal blokbevestigingen';
			case 'dsmsVerifyTerminal': return 'DSMS Valideringsterminal';
			case 'overall': return 'paraplu';
			case 'my': return 'mijn';
			case 'checkValidatorQualifications': return 'Kwalificaties van authenticatiebevoegdheden controleren';
			case 'getVerifierPermissions': return 'Verkrijg authenticator-rechten';
			case 'qualification': return 'natuurlijke begiftigingen';
			case 'upperLimit': return 'begrenzen';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Maximum aantal toegestane toegangsterminals';
			case 'numberOfExistingAccessTerminals': return 'Aantal geplaatste toegangsterminals';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Voordat u authenticatorrechten aanvraagt, moet u een ongebruikte Android mobiele telefoon en een speciaal toegangsnummer voorbereiden en de DSMS Access Terminal-toepassing downloaden en installeren.';
			case 'downloadLink': return 'downloadlink';
			case 'alreadyReadyFollowingTheAboveTips': return 'Het is klaar volgens de bovenstaande tips';
			case 'globalUniversal': return 'voor wereldwijd gebruik';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Momenteel zijn er niet genoeg lokale authenticators om deel te nemen aan de DSMS authenticatie toegangsdienst, selecteer alstublieft de "'),
				gu,
				const TextSpan(text: '" toegangsdienst.'),
			]);
			case 'asDedicatedNumberForAccess': return 'als alleen-toegangsnummer';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Vink het vakje "${tip}" aan.';
			case 'inputLengthTooShort': return 'Invoerlengte te kort';
			case 'shortName': return 'acroniemen';
			case 'pleaseEnterXname': return ({required Object name}) => 'Voer ${name} in';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Aanvraag wordt ingediend, een ogenblik geduld alstublieft...';
			case 'applyForDSMSVerifierPermission': return 'Vraag DSMS-validatorrechten aan';
			case 'confirmInformation': return 'Bevestiging van informatie';
			case 'lastHeartbeat': return 'laatste hartslag';
			case 'expirationTime': return 'tijd verschuldigd';
			case 'country': return 'naties';
			case 'accessTerminals': return 'toegangsterminal';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Totaal aantal terminals met DSMS-toegangsnummer';
			case 'textContent': return 'Inhoud tekst';
			case 'scanQRcodeToLogin': return 'Vegen om in te loggen';
			case 'confirmLogin': return 'Bevestig login';
			case 'authorizeSubApplicationToLogin': return 'Deze subapplicatie machtigen om in te loggen';
			case 'authorizationSuccessful': return 'De autorisatie was succesvol!';
			case 'launchSMSprogram': return 'Lancering van het SMS-programma';
			case 'notApplied': return 'Geen toepassing';
			case 'validityPeriod': return 'geldigheidsperiode';
			case 'renewal': return 'verlengingsaanvraag';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Scan code om aanmelden bij terminal te autoriseren';
			case 'rewards': return 'prikkels';
			case 'roles': return 'karakter';
			case 'developerCenter': return 'Centrum voor ontwikkelaars';
			case 'appName': return 'Naam toepassing';
			case 'pleaseSelect': return 'selecteer';
			case 'category': return 'categorie';
			case 'keywords': return 'bijwoord';
			case 'pleaseEnterAkeyword': return 'Voer een trefwoord in';
			case 'createApplication': return 'Toepassingen maken';
			case 'appType': return 'Type toepassing';
			case 'numberOfCategoriesMustBetween1and3': return 'Het aantal categorieën moet tussen 1 en 3 liggen';
			case 'appLogoSpecifications': return 'Afbeeldingsformaat: png, grootte: binnen 100KB, resolutie (pixel): 256*256';
			case 'localAlbum': return 'Lokale fotoalbums';
			case 'networkPath': return 'netwerkpad';
			case 'imageURLkAddress': return 'Afbeelding URL';
			case 'urlAddressFormatIsIncorrect': return 'Onjuist geformatteerd URL-adres';
			case 'imageFormatOnlySupportsPng': return 'Afbeeldingen worden alleen ondersteund in "png"-formaat.';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'De lengte moet liggen tussen ${a}-${b} tekens.';
			case 'introduction': return 'korte';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'De afbeeldingsgrootte kan niet groter zijn dan ${a}, momenteel ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'De beeldresolutie moet zijn: ${p1}(pixels), momenteel ${p2}';
			case 'becomeDeveloper': return 'Ontwikkelaar worden';
			case 'developerInformation': return 'Informatie voor ontwikkelaars';
			case 'teamName': return 'Teamnaam';
			case 'website': return 'knooppunt';
			case 'other': return 'anders dan';
			case 'githubVerification': return 'Github-verificatie';
			case 'exampleUrl': return 'Voorbeeld Url';
			case 'githubVerificationTip': return ({required Object did}) => 'Gebruik alsjeblieft je GitHub account om een \'delta.did\' bestand in je repository te maken met de inhoud van \'${did}\'; plak dan het githubusercontent Url adres van dat bestand in deze invoervak voor verificatie.';
			case 'createApp': return 'Toepassingen maken';
			case 'appManagement': return 'applicatiebeheer';
			case 'statusLogs': return 'Statuslogboek';
			case 'bad': return 'niet goed';
			case 'normal': return 'gebruikelijk';
			case 'good': return 'een uitstekende';
			case 'onceCreatedItCannotBeChanged': return 'Eenmaal gemaakt, kan het niet meer veranderd worden!';
			case 'manageApplicationEntity': return 'Applicatie-entiteiten beheren';
			case 'currentVersion': return 'huidige versie';
			case 'submitVersion': return 'Ingediende versie';
			case 'packageOnlySupportZipCompressedFile': return 'Het pakket ondersteunt alleen gecomprimeerde zip-bestanden';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Het bestand \'${name}\' is niet gevonden in het zip-pakket.';
			case 'fileList': return 'Lijst van documenten:';
			case 'programPackage': return 'Programmeerpakket:';
			case 'automaticallyExtractFromVersionFile': return 'Automatisch geëxtraheerd uit \'.version\' bestanden';
			case 'dappVersionFormatTip': return 'Het formaat van het versienummer moet een decimaal getal zijn met een precisie van 2 cijfers, met een maximum van 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Het versienummer moet groter zijn dan de huidige versie \'${v}\'.';
			case 'versionNotes': return 'Afdruk:';
			case 'updateRelease': return 'nieuwe versie';
			case 'loadAndRun': return 'Laden en uitvoeren';
			case 'notYetSubmittedProgramPackage': return 'Het programmapakket is nog niet ingediend!';
			case 'authorizeMinidAppLogin': return 'Inloggegevens mini-dApp autoriseren';
			case 'confirmAuthorizationPleaseEnterYes': return 'Voer "ja" in om de autorisatie te bevestigen.';
			case 'authorizeNow': return 'Onmiddellijke autorisatie';
			case 'operation': return 'Bediening.';
			case 'statusChange': return 'Statuswijziging';
			case 'changeTo': return 'Veranderen in:';
			case 'notes': return 'Opmerkingen.';
			case 'changesNotEffective': return 'De wijziging is niet geldig!';
			case 'released': return 'Gepubliceerd';
			case 'inPublicBeta': return 'open bèta';
			case 'developers': return 'Ontwikkeld door.';
			case 'reviewList': return 'Lijst met opmerkingen.';
			case 'postReview': return 'Laat een reactie achter';
			case 'scoreNow': return 'Nu beoordelen';
			case 'description': return 'Beschrijving.';
			case 'noData': return '(^-^)\n Geen gegevens beschikbaar';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Versie is bijgewerkt van ${a} naar ${b}.';
			case 'loadNewVersion': return 'Nieuwe versie laden';
			case 'name': return 'Naam.';
			case 'canisterId': return 'Tank Id.';
			case 'updateTime': return 'updatetijd';
			case 'contractCanistersState': return 'Status contracttank';
			case 'userDistribution': return 'gebruikersdistributie';
			case 'settings': return 'Instelling';
			case 'security': return 'Veiligheid';
			case 'invite': return 'uitnodigingen';
			case 'more': return 'Meer...';
			case 'receiveAddress': return 'Adres ontvangen:';
			case 'hangingAmount': return 'hangend';
			case 'hangingAmountTips': return 'Bedragen in afwachting zijn tijdelijke records van beloningen gegenereerd door mijnbouw door je ondergeschikte team, zodra je een mijnbouwsessie hebt gedaan worden deze bedragen verzameld in de Bedragen in afwachting.';
			case 'pendingAmount': return 'in afwachting';
			case 'pendingAmountTips': return 'Hangende bedragen zijn bedragen die nog niet zijn bevestigd door adverteerders, en bedragen die geldig gematcht zijn worden overgebracht naar het geldige USCT record, en ongeldige delen worden uitgesloten.';
			case 'received': return 'ontvangen';
			case 'processing': return 'in uitvoering';
			case 'replied': return 'respondent';
			case 'rejected': return 'afwijzing';
			case 'unknown': return 'onbekend';
			case 'insufficientBalance': return 'Onvoldoende balans!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => '${x} saldo is onvoldoende om crosslink netwerkkosten te dekken';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Een transactie is nog niet voltooid en kan op dit moment niet worden overgedragen.';
			case 'thisfunctionNotSupportExternalCalls': return 'Deze functie wordt niet ondersteund om extern te worden aangeroepen';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Er is geen match voor een adres dat kan worden gebruikt om cross-chain fees te betalen, schakel over naar een ander ketennetwerk om het te proberen.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'De huidige overeenkomst met het maximumbedrag dat in een enkele transactie kan worden overgeboekt is ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Opmerkingen mogen niet groter zijn dan 64 bytes';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Het saldo is onvoldoende en het bedrag is: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Je kunt niet meer dan 3 adressen binden.\nAls u een nieuw betaaladres wilt koppelen.\nOntkoppel eerst een ander adres';
			case 'parametersA_exception': return ({required Object x}) => 'Parameters: ${x}, uitzondering';
			case 'parameterException': return 'Parameter Uitzondering!';
			case 'transferAmountMustBeLargerThan0': return 'Het transferbedrag moet groter zijn dan 0';
			case 'authorizationHasExpired': return 'Autorisatie is verlopen';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'De app is niet geautoriseerd door de eigenaar';
			case 'authenticationTokenIsInvalid': return 'Ongeldig verificatietoken';
			case 'verifyInfoIsInvalidOrExpired': return 'Ongeldige of verlopen validatie-informatie';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Controleer of het aantal toegangsterminals de limiet van één op tienduizend heeft overschreden';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'Deelname aan mijnbouw moet meer dan 3 dagen zijn';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Het aantal leden van de veiligheidscirkel mag niet minder dan drie zijn';
			case 'avatarIsNotSet': return 'Avatar niet ingesteld';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Het aantal directe verwijzingen mag niet minder zijn dan 3';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'De tijdslimiet is onvoldoende en je kunt je mobiele telefoonnummer maar één keer per jaar wijzigen.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Dit mobiele telefoonnummer bestaat al en kan niet worden gedupliceerd';
			case 'securityCodeIsIncorrect': return 'Onjuiste beveiligingscode';
			case 'securityCodeMayHaveExpired': return 'Beveiligingscode is mogelijk verlopen';
			case 'sessionIdIsInvalidOrExpired': return 'Ongeldige of verlopen sessie-id';
			case 'sessionHasBeenAuthorized': return 'De sessie werd goedgekeurd voor voltooiing!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Kan alleen worden verlengd binnen ${x} dagen voor het verstrijken van de termijn';
			case 'notYetGrantedDeveloperPermissions': return 'Nog geen rechten voor ontwikkelaars';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Veld ${x} kan niet nul zijn';
			case 'emailFormatError': return 'Fout in e-mailindeling';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Opmaakfout \'${x}';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Het veld "${x}" moet tussen ${y} en ${z} karakters lang zijn.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Het \'${x}\' selectiebereik moet tussen ${y} en ${z} liggen.';
			case 'unchanged_sameAsOldContent': return 'Ongewijzigd, dezelfde inhoud als voorheen!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' bestaat al!';
			case 'mobileNumberHasNotJoinedDelta': return 'Dit mobiele nummer is nog niet toegevoegd aan Delta!';
			case 'referrerIdCannotBeEmpty': return 'De referrer-ID kan niet leeg zijn!';
			case 'referrerIdDoesNotExist': return 'Referrer ID bestaat niet!';
			case 'didIsIncorrectOrInvalid': return 'De DID is onjuist of ongeldig!';
			case 'accessTokenIsIncorrectOrInvalid': return 'Het toegangsToken is onjuist of ongeldig!';
			case 'minimumWithdrawalAmountIs1USD': return 'Minimaal 1USD voor een enkele opname';
			case 'miningTimeIsNotYet': return 'Het is nog geen tijd om te mijnen.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Bestaat al, voeg het niet opnieuw toe!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Kan registratienummer niet gebruiken als toegangsnummer voor verificatie';
			case 'canotAddYourSelf': return 'Kan uzelf niet toevoegen';
			case 'logOut': return 'Afmelden';
			case 'confirmLogout': return 'Uitloggen bevestigen';
			case 'logOutTipsText': return 'Let op: Volgens de whitepaper verbruikt elke loginverificatie van uw account een bepaalde hoeveelheid van uw DTC-munten die aan de verificateur wordt uitbetaald als stimulans, dus probeer niet onnodig in en uit te loggen, als u op de onderstaande knop klikt, wordt u onmiddellijk uitgelogd.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Voer "ja" in om het uitloggen te bevestigen.';
			case 'tip': return 'de aandacht op iets vestigen';
			case 'cancel': return 'annuleringen';
			case 'close': return 'stolling';
			case 'selected': return 'geselecteerd';
			case 'edit': return 'compiler';
			case 'submit': return 'indienen (een rapport enz.)';
			case 'goBack': return 'regressie (in psychologie)';
			case 'copiedToClipboard': return 'Het is gekopieerd naar het klembord.';
			case 'nickname': return 'koosnaam';
			case 'confirm': return 'herkennen';
			case 'cannotBeEmpty': return 'Kan niet leeg zijn';
			case 'deleteSuccessful': return 'Met succes verwijderd!';
			case 'successfullyModified': return 'De aanpassing was succesvol!';
			case 'executionSuccessful': return 'De implementatie was succesvol!';
			case 'preview': return 'voorbeschouwingen';
			case 'followSystem': return 'opvolgingssysteem';
			case 'change': return 'variatie';
			case 'replace': return 'verandering (van adres enz.)';
			case 'view': return 'uitchecken';
			case 'manage': return 'management';
			case 'modify': return 'wijzigingen';
			case 'replacedSuccessfully': return 'Vervanging geslaagd!';
			case 'authentication': return 'authenticatie';
			case 'reacquire': return 'ophalen';
			case 'tryAgain': return 'Probeer het opnieuw.';
			case 'querying': return 'Er wordt navraag gedaan ...';
			case 'writingToOnChain_pleaseWait': return 'Het wordt naar de ketting geschreven, even geduld ...';
			case 'versionCheck': return 'versiedetectie';
			case 'alreadyLatestVersion': return 'Nu al de nieuwste versie!';
			case 'foundNewVersion': return 'Ontdek de nieuwe versie:';
			case 'upgradeLink': return 'Link voor upgrade:';
			case 'deviceDescription': return 'Uitrusting Beschrijving.';
			case 'notification30SecondsBeforeMiningStops': return 'Voer een meldingsherinnering uit 30 seconden voordat de mijnbouw stopt!';
			case 'goMining': return 'Ga mijnen';
			case 'deltaMiningReminder': return 'Delta Mining-herinnering';
			case 'clickToMine_miningIsAboutToStop': return 'Klik hier om te minen, het minen stopt binnenkort!';
			case 'incorrect_input': return 'Onjuiste invoer!';
			case 'are_you_sure_delete': return 'Weet u zeker dat u wilt verwijderen?';
			case 'delete_account': return 'Account verwijderen';
			case 'how_to_operate_it': return 'Zie je hoe je het bedient?';
			case 'deletion_warning_tip': return 'Als u uw account verwijdert, verliest u al uw Delta-munten en alle inkomsten van andere leden.';
			case 'launchWhatsAppProgram': return 'WhatsApp-programma starten';
			case 'sms': return 'Sms\'en';
			case 'whatsApp_verification_tips': return 'Toegangsnummers met dit pictogram ondersteunen ook WhatsApp-berichtverificatie. Bij het verzenden van internationale berichten wordt aanbevolen om WhatsApp te gebruiken om het succespercentage te verhogen en de kosten te verlagen.';
			case 'ihaveSentVerificationString': return 'Ik heb een verificatiestring verzonden';
			case 'totalOfPeople': return 'Totaal aantal personen: ';
			case 'numberOfPeopleMining': return 'Aantal mensen die minen';
			case 'useBrowserScanQRcodeToSMSprogram': return 'U kunt een browser op een ander apparaat gebruiken om de QR-code te scannen en door te geven aan het SMS-programma';
			case 'toggle': return 'Toggle';
			case 'DSMSverifier': return 'DSMS-verificateur';
			case 'activate': return 'Activeren';
			case 'activated': return 'Geactiveerd';
			case 'generateActivationCommand': return 'Activeringsopdracht genereren';
			case 'activationCommand': return 'Activeringsopdracht';
			case 'activationSentedTip': return 'Controleer de activeringsstatus op het toegangsterminalapparaat nadat de activerings-sms is verzonden.';
			case 'biometricsNotEnabledTip': return 'Biometrie (gezicht of vingerafdruk) is niet ingeschakeld op uw apparaat. Schakel het in om door te gaan.';
			case 'error': return 'Fout';
			case 'exceptionOccurredWhenCallingBiometric': return 'Er is een uitzondering opgetreden bij het aanroepen van de biometrische functie (gezicht of vingerafdruk)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' toegangsnummers zijn gecontroleerd, '),
				shouldNum,
				const TextSpan(text: ' moet worden geselecteerd.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Is ${text} verzonden naar de ${n} toegangsnummers hierboven?';
			case 'interface': return 'Interface:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Wachttime-out of afzendernummer komt niet overeen';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Het mobiele nummer van het beveiligingscirkellid dat u hebt ingevuld, komt niet overeen: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Meld u binnen 10 minuten aan na het uitloggen om tweefactorauthenticatie te voorkomen.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Er moeten minimaal ${n} mobiele telefoonnummers worden ingevuld';
			case 'noAccessNumberInYourRegionYet': return 'Er is nog geen toegangsnummer in uw regio';
			case 'notEnoughAccessNumbersInYourRegion': return 'Niet genoeg toegangsnummers in uw regio';
			case 'tipsForDeployDSMSterminal': return 'Het systeem heeft automatisch een aantal toegangsnummers uit andere landen voor u geladen. Om betere en goedkopere verificatieservices te bieden, wordt aanbevolen dat u of uw verwijzende persoon de DSMS-terminal lokaal implementeert om verificatiekosten te verdienen.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Kan niemand mij de beveiligingscode geven?';
			case 'useSupplementalMode': return 'Gebruik aanvullende modus';
			case 'returnToSecurityCodeMode': return 'Terug naar beveiligingscodemodus';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Voer het bijbehorende mobiele nummer in. De landcode kan worden weggelaten.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => '${name}\'s mobiele nummer is onjuist';
			case 'matchingVerificationStrategyIs': return 'De overeenkomende verificatiestrategie is:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'De balans is groter dan 3 ICP, er hoeft voorlopig geen brandstof te worden bijgevuld.';
			case 'escrowAccount': return 'Escrow-rekening';
			case 'fuelRelay': return 'Brandstofrelais';
			case 'pourFuel': return 'Brandstof gieten';
			case 'fuelState': return 'Brandstofstatus';
			case 'pouringFuelTips': return 'Het tanken van brandstof levert u geen voor- of nadelen op. Het doel is om de ervaring met het Delta-systeem te verrijken.';
			case 'sponsorDevelopersByWatchingAds': return 'Sponsor ontwikkelaars door advertenties te bekijken';
			case 'status': return 'Status';
			case 'date': return 'Datum';
			default: return null;
		}
	}
}

extension on _StringsPl {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'rys. początek';
			case 'switchLanguage': return 'Przełącz język';
			case 'languageSwitch': return 'Zmiana języka';
			case 'slogan': return 'Budowanie zdecentralizowanej gospodarki w delcie';
			case 'countryRegionCode': return 'Kod kraju/obszaru';
			case 'countryRegionSelection': return 'Wybór krajów i regionów';
			case 'nextStep': return 'następny krok';
			case 'yourPhoneNumber': return 'Twój numer telefonu.';
			case 'pleaseSelectCountryAndRegion': return 'Wybierz swój kraj/region';
			case 'pleaseEnterPhoneNumber': return 'Wprowadź prawidłowy numer telefonu!';
			case 'referrerDid': return 'Referrer DID';
			case 'pleaseEnterTheReferrersDid': return 'Wprowadź prawidłowy identyfikator zdecentralizowanej tożsamości polecającego';
			case 'thisDidIsInvalid': return 'Ten DID jest nieprawidłowy.';
			case 'nicknameFormatTips': return 'Pseudonim nie może być pusty, a jego długość nie może przekraczać 16 cyfr.';
			case 'additionalIinformation': return 'Dodatkowe informacje';
			case 'invitationSubject': return 'Zaproszenie do budowania konsensusu w Delcie';
			case 'invitationLetter': return ({required Object did}) => 'Witam, biorę udział w budowaniu konsensusu Delta!\n Delta to nowa platforma walut cyfrowych o otwartym kodzie źródłowym działająca na ICP, która umożliwia zarządzanie i korzystanie z różnych walut cyfrowych bez haseł, kluczy prywatnych lub mnemoników. Kliknij ten link https://delta.kim/auto/download, aby zainstalować aplikację, a teraz możesz dołączyć do budowania konsensusu i bicia walut.\n Referrer DID: ${did}';
			case 'dSMSverification': return 'Walidacja DSMS';
			case 'getAccessNumbers': return 'Uzyskaj numery dostępu';
			case 'getAccessNumberPromptMessage': return 'Kliknij przycisk "Pobierz" poniżej, aby obrócić zestaw numerów dostępu do weryfikacji SMS w kolejce.';
			case 'optionalAccessNumbers': return 'Opcjonalny numer dostępu';
			case 'accessNumber': return 'numer dostępu';
			case 'TELCO': return 'operator (elektrowni, sieci transportowej itp.)';
			case 'score': return 'wynik';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('pl'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Zaznacz '),
					nBuilder(n),
					const TextSpan(text: ' numery dostępu i kliknij przycisk "'),
					span('text'),
					const TextSpan(text: '", aby przejść do następnego kroku.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Zaznacz '),
					nBuilder(n),
					const TextSpan(text: ' numery dostępu i kliknij przycisk "'),
					span('text'),
					const TextSpan(text: '", aby przejść do następnego kroku.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta to otwarty, zdecentralizowany, globalny eksperyment z walutą cyfrową i ekosystem aplikacji kryptowalutowych.';
			case 'deltaGoalsDesc': return 'Celem jest umożliwienie ludziom korzystania z Delty do współtworzenia nowych walut cyfrowych, które są uniwersalne, sprawiedliwe, bezpieczne, szybkie i ekologiczne. A także zapewnienie różnych skutecznych scenariuszy zastosowań dla tych walut cyfrowych i poprzednich kryptowalut.';
			case 'details': return 'szczegóły';
			case 'get': return 'zysk';
			case 'select': return 'opcja';
			case 'send': return 'wysyłanie';
			case 'complete': return 'spełnienie';
			case 'selectedAccessNumberPrompt': return 'Po wybraniu wyświetlany jest pełny numer dostępu i generowany jest ciąg uwierzytelniający.';
			case 'location': return 'umieszczenie';
			case 'verificationString': return 'ciąg walidacji';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Użyj swojego numeru telefonu '),
				num,
				const TextSpan(text: ' i wyślij '),
				label,
				const TextSpan(text: ' do '),
				accessNumber,
				const TextSpan(text: ', aby dokończyć weryfikację.'),
			]);
			case 'ihaveSentTheSMS': return 'Wysłałem wiadomość tekstową';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Ciąg walidacji jest ważny przez 6 minut, pozostały czas: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Zbyt szybko, by czekać ${x} sekund na kontynuację!';
			case 'waitingForVerificationSMS': return 'Czekam na SMS weryfikacyjny...';
			case 'partSuccsForVerificationSMS': return 'Jeden z terminali dostępowych przeszedł weryfikację SMS!';
			case 'creatingAccessToken': return 'Token dostępu jest tworzony...';
			case 'intoDelta': return 'Inside Delta';
			case 'deltaAccountIsLoggedIn': return 'Twoje konto Delta jest zalogowane';
			case 'iHavLoggedOut': return 'Odpadam.';
			case 'startTwoFactorVerification': return 'Rozpoczęcie podwójnej weryfikacji';
			case 'securityCircleVerification': return 'Weryfikacja kręgu bezpieczeństwa';
			case 'generateSecurityCode': return 'Generowanie kodu bezpieczeństwa';
			case 'generateSecurityCodeHintText': return 'Wygenerowany kod bezpieczeństwa zostanie wysłany do losowo wybranego członka Twojego kręgu bezpieczeństwa.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Nie skonfigurowałeś koła bezpieczeństwa, Twoje konto jest bardzo niezabezpieczone, wprowadź dowolny 6-cyfrowy symbol zastępczy i przejdź do następnego kroku.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Kod bezpieczeństwa został wygenerowany, skontaktuj się z następującą rodziną i przyjaciółmi, aby poprosić o wyodrębnienie kodu bezpieczeństwa w celu przejścia weryfikacji. ważne przez 30 minut!';
			case 'itGetSecurityCodeTip': return 'Wskazówka: Kod bezpieczeństwa można uzyskać, klikając dwukrotnie pseudonim konta w aplikacji Delta -> Menu -> Podaj zabezpieczenia.';
			case 'securityCircleMemberList': return 'Lista członków kręgu bezpieczeństwa:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Proszę wybrać krewnego lub znajomego na liście członków, aby wygenerował i przekazał Ci kod bezpieczeństwa w celu sprawdzenia Twojej prawdziwej tożsamości. Celem jest uniemożliwienie kontrolowania konta przez inne osoby w przypadku zgubienia lub kradzieży numeru telefonu komórkowego.';
			case 'formatIsXdigits': return ({required Object num}) => 'Format jako ${num} cyfr';
			case 'signInSuccessfully': return 'Zaloguj się pomyślnie!';
			case 'twoFAandLogin': return 'Podwójne uwierzytelnianie i logowanie';
			case 'verificationSuccessful': return 'Zweryfikuj sukces!';
			case 'validationFailed': return 'Weryfikacja nie powiodła się!';
			case 'dappInfo': return 'Informacje o aplikacji';
			case 'securityCircle': return 'pierścień zabezpieczający';
			case 'securityCode': return 'kod bezpieczeństwa';
			case 'provideSecurity': return 'zapewnienie bezpieczeństwa';
			case 'addManully': return 'Dodaj ręcznie';
			case 'addFromContacts': return 'Dodaj z książki adresowej';
			case 'addSecurityCircle': return 'Dodaj krąg bezpieczeństwa';
			case 'inputType': return 'Typ wejścia';
			case 'mobileNumber': return 'numer telefonu komórkowego';
			case 'did': return 'Identyfikator adresu';
			case 'pleaseEnterValidDID': return 'Wprowadź prawidłowy zdecentralizowany identyfikator tożsamości';
			case 'pleaseEnterValidWalletAddress': return 'Wprowadź prawidłowy adres portfela';
			case 'appellation': return 'forma adresu';
			case 'appellationHint': return 'Jak to nazwać, jak "dziecko"?';
			case 'addSecurityCircleTips': return 'Nie dodawaj do swojego kręgu bezpieczeństwa osób, którym nie ufasz.';
			case 'referralTeam': return 'Polecane zespoły';
			case 'profile': return 'Informacje o koncie';
			case 'menu': return 'menu';
			case 'directly': return 'bezpośredni';
			case 'indirectly': return 'pośredni';
			case 'inviteContacts': return 'Zaproszenie Kontakt';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Twój zaproszony to '),
				nickname,
				const TextSpan(text: ' i bezpośrednio poleciłeś '),
				num1,
				const TextSpan(text: ' osób, z których '),
				num2,
				const TextSpan(text: ' jest obecnie online.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Pośrednio poleciłeś '),
				num1,
				const TextSpan(text: ' osób, z których '),
				num2,
				const TextSpan(text: ' jest obecnie online.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Zaproś znajomych, aby dołączyli do Delta i wspólnie poprawili konsensus społeczny. Za każde bezpośrednie polecenie stawka wydobycia jednej osoby zwiększa stawkę bazową o '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Zaproś znajomych do dołączenia do Delta i wspólnie poprawiajcie konsensus społeczny. Każda pośrednia rekomendacja jednej osoby zwiększy stawkę wydobycia o '),
				rate2,
				const TextSpan(text: ' stawki podstawowej.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Czy na pewno chcesz usunąć "${name}"?';
			case 'safetyCircleRoleQ': return 'Jaki jest cel pierścienia zabezpieczającego?';
			case 'safetyCircleRoleA': return 'Chroń swoje konto, zapewniając dodatkowe uwierzytelnianie w poufnych sytuacjach.';
			case 'howSecurityCirclesWorkQ': return 'Jak działają pierścienie zabezpieczające?';
			case 'howSecurityCirclesWorkA': return 'W przypadku, gdy wymagana jest weryfikacja Circle of Safety, program Delta Smart Contracts losowo wybierze członka listy znajomych Circle of Safety, aby pomóc w dostarczeniu kodu bezpieczeństwa w celu dokończenia weryfikacji tożsamości. Gdy poprosisz członka o kod bezpieczeństwa, może on potwierdzić, czy jesteś tobą, czy nie. Jednocześnie program wyświetli monit: "Odmów podania kodu bezpieczeństwa, jeśli to nie ty", aby chronić bezpieczeństwo konta. Dlatego zawsze powinieneś upewnić się, że członkowie twojego kręgu bezpieczeństwa to osoby, którym możesz zaufać.';
			case 'securityCircleBeUsedQ': return 'Kiedy będzie używany?';
			case 'securityCircleBeUsedA1': return '1) W przypadku utraty kontroli nad aplikacją Delta APP, zazwyczaj dochodzi do zgubienia lub kradzieży telefonu komórkowego.';
			case 'securityCircleBeUsedA2': return '2. w przypadku niektórych wrażliwych operacji, program Delta Smart Contract musi potwierdzić, że jesteś użytkownikiem.';
			case 'provideSafetyTip1': return 'Gdy Twój znajomy poprosi Cię o podanie kodu bezpieczeństwa, upewnij się, że jest to jego własny kod.';
			case 'provideSafetyTip2': return 'Zapewniasz bezpieczeństwo wyżej wymienionym znajomym, którzy ustawili Cię jako najbardziej zaufaną osobę w swoim kręgu bezpieczeństwa i potrzebują potwierdzenia bezpieczeństwa na wypadek, gdyby napotkali poufne operacje na swoim koncie.';
			case 'provideSafetyTip3': return 'Kliknij dwukrotnie awatar drugiej osoby, aby w razie potrzeby wyodrębnić kod zabezpieczający.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'Druga strona nie posiada obecnie kodu bezpieczeństwa, który należy wyodrębnić!';
			case 'existSecurityCodeTip': return 'Należy upewnić się, że znajomy lub członek rodziny, który prosi o podanie kodu zabezpieczającego, jest taki sam jak znajomy lub członek rodziny. W celu ochrony znajomego lub członka rodziny należy odmówić podania kodu zabezpieczającego, jeśli znajomy lub członek rodziny nie jest taki sam jak znajomy lub członek rodziny.';
			case 'avatarSettings': return 'Ustawienia awatara';
			case 'NFTAvatarPropertyRightsText': return 'Zastrzeżenie: Użycie danego NFT jako awatara służy wyłącznie osobistym preferencjom i nie ma nic wspólnego z posiadaniem praw własności intelektualnej do tego NFT.';
			case 'projectWebsite': return 'Strona internetowa projektu:';
			case 'whitepaper': return 'biała księga:';
			case 'indexID': return 'Indeks Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Indeks pomiędzy ${start} i ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Wprowadź identyfikator indeksu swojego ulubionego NFT, a program automatycznie załaduje go jako awatar.';
			case 'miningRate': return 'wskaźnik wydobycia';
			case 'miningDetails': return 'Szczegóły dotyczące wydobycia';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Całkowita stawka za wydobycie: '),
				rate,
				const TextSpan(text: ' δ/dzień'),
			]);
			case 'EndOfMiningSession': return 'Wydobycie cykliczne dobiegło końca:';
			case 'tapToMineDeltaCoin': return 'Kliknij, aby wydobywać monety Delta ↑';
			case 'clickToStartMining': return 'Kliknij, aby rozpocząć wydobycie!';
			case 'miningHasStoppedPromptDesc': return 'Wydobywanie zostało zatrzymane, co 24 godziny odbywa się cykl wydobywania, kliknij ikonę błyskawicy, aby rozpocząć nową rundę wydobywania. Wydobywanie Delta to mechanizm alokacji, który nie zużywa dodatkowej mocy arytmetycznej i ruchu sieciowego z urządzenia.';
			case 'aboutBaseRate': return 'O stopie bazowej?';
			case 'baseRateDescription': return 'Jak uzgodniono w białej księdze, zasada zmniejszania stawki bazowej dla Delta mining zostanie podzielona na dwie fazy.\nFaza 1: Stawka będzie wynosić 32δ/dzień, gdy liczba uczestników (rejestracji) wynosi 3000 lub mniej. Używając tej wartości jako podstawy wyjściowej, stawka podstawowa będzie zmniejszana o połowę za każdym razem, gdy liczba osób wzrośnie o współczynnik 10.\nFaza 2: Gdy liczba uczestników osiągnie 30 milionów lub więcej, stawka bazowa jest zmniejszana o połowę za każdym razem, gdy liczba uczestników wzrośnie o współczynnik 3. Aż do ostatecznego wykopu.';
			case 'baseRate': return 'stawka podstawowa (jak w ISDN)';
			case 'directReferralRewards': return 'Premia za bezpośrednie polecenie';
			case 'directReferralRewardDesc': return 'Za każde bezpośrednie polecenie stawka wydobycia zostanie zwiększona o dodatkową 1/3 stawki bazowej, gdy są one w trybie wydobycia.\n\n Ponadto status wydobycia poleconych osób będzie również wliczany do premii za bezpośrednie polecenie.';
			case 'indirectReferralRewards': return 'Pośrednie nagrody za polecenie';
			case 'indirectReferralRewardDesc': return 'Gdy pośredni polecony wydobywa, twoja stawka wydobycia jest zwiększana o dodatkową 1/10 stawki podstawowej.\n\n Każdy bezpośrednio polecony zespół, każda osoba, którą ponownie poleci, reprezentuje pośrednie polecenie.';
			case 'mine': return 'wydobywać (rudę lub inny surowiec z kopalni)';
			case 'thisMiningInformation': return 'Bieżące informacje o wydobyciu';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Udział w wydobywaniu: '),
				x,
				const TextSpan(text: ' razy'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Całkowity zysk tym razem: '),
				x,
				const TextSpan(text: ' monet delta'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Podstawowy zarobek: '),
				x,
				const TextSpan(text: ' monet'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Bezpośredni wkład drużyny: '),
				x,
				const TextSpan(text: ' monet'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Pośredni wkład drużyny: '),
				x,
				const TextSpan(text: ' monet'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Długość czasu między wykopaliskami: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Efektywny czas wydobycia: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} godzin';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Aby zapewnić bezpieczeństwo zasobów, członkowie kręgu bezpieczeństwa powinni przez cały czas utrzymywać 3-5 zaufanych osób.';
			case 'index': return 'indeksowanie';
			case 'amount': return 'suma pieniędzy';
			case 'balance': return 'salda';
			case 'timeStamp': return 'znacznik czasu';
			case 'summary': return 'streszczenia';
			case 'miningHasStopped': return 'Wydobycie zostało wstrzymane.';
			case 'miningHasStoppedDesc': return 'Twoje wydobycie jest obecnie zatrzymane, zacznij zarabiać już teraz.';
			case 'startMining': return 'Rozpoczęcie wydobycia';
			case 'changeMobileNumber': return 'Zmiana numeru telefonu komórkowego';
			case 'currentMobileNumber': return 'Aktualny numer telefonu komórkowego';
			case 'newMobileNumber': return 'Nowy numer telefonu komórkowego';
			case 'securityCodeFormatIs6digits': return 'Format kodu bezpieczeństwa składa się z 6 cyfr!';
			case 'startVrification': return 'Rozpoczęcie weryfikacji';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Ten numer telefonu komórkowego już istnieje, powiązany DID: ${dId}';
			case 'noDataYet': return 'Brak dostępnych danych';
			case 'previousMobileNumber': return 'Poprzedni numer telefonu komórkowego';
			case 'changeLog': return 'Rejestr zmian';
			case 'referralLinkToShare': return 'Zalecane linki do udostępnienia';
			case 'referrer': return 'polecający';
			case 'isoCountryCode': return 'Kod kraju ISO';
			case 'avatarLogo': return 'logo nagłówka';
			case 'creationTime': return 'Czas tworzenia';
			case 'lastUpdate': return 'Ostatnia aktualizacja';
			case 'numberOfSecurityCircleMembers': return 'Liczba członków kręgów bezpieczeństwa';
			case 'theLatestMining': return 'Ostatni wykop';
			case 'effectiveMiningDays': return 'Liczba dni efektywnego wydobycia';
			case 'modifyNickname': return 'Zmiana pseudonimu';
			case 'didNotChange': return 'Bez zmian!';
			case 'kycVerification': return 'Weryfikacja KYC';
			case 'faceID': return 'Face ID';
			case 'touchID': return 'Identyfikator odcisku palca';
			case 'biometricsAuthorizationTest': return 'Testowanie uwierzytelniania biometrycznego';
			case 'currentState': return 'aktualny stan';
			case 'biometricsAuthenticationLocalizedReason': return 'Użyj odblokowania urządzenia, aby potwierdzić swoją tożsamość.';
			case 'graph': return 'archiwum grafik (np. map, dokumentów lub rycin botanicznych)';
			case 'referralRelationshipGraph': return 'Mapowanie relacji polecających';
			case 'nativeContacts': return 'Kontakty lokalne';
			case 'registrationAndMiningTrends': return 'Rejestracja i trendy w górnictwie';
			case 'inMining': return 'górnictwo';
			case 'registrationVolume': return 'wielkość rejestracji';
			case 'unmined': return 'niewykorzystany';
			case 'mined': return 'wydobywany';
			case 'communityMining': return 'Górnictwo wspólnotowe';
			case 'consensusPromotionFund': return 'Fundusz Promocji Konsensusu';
			case 'ecologicalAwardFund': return 'Ekologiczny fundusz motywacyjny';
			case 'icpFuelCrowdfunding': return 'Crowdfunding ICP Fuel';
			case 'coreDeveloperRewards': return 'Nagrody dla głównych deweloperów';
			case 'totalAllocation': return 'Ogólna dystrybucja';
			case 'miningRatio': return 'Współczynnik wydobycia';
			case 'billion.30': return '30 miliardów';
			case 'billion.60': return '60 miliardów';
			case 'billion.180': return '180 mld euro.';
			case 'billion.300': return '300 miliardów';
			case 'watchAdsToSupportDevelopers': return 'Oglądaj reklamy, by wspierać deweloperów';
			case 'loadingAdcomponents': return 'Ładowanie komponentów reklamowych...';
			case 'timeIsNotUp': return 'Czas się nie skończył!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Nie udało się załadować, prawdopodobnie sieć zablokowana!';
			case 'pendingUSCTrecords': return 'Oczekujące zapisy USCT';
			case 'pendingUSCTrecordsDesc': return 'Oczekujące rekordy USCT zostaną potwierdzone na platformie reklamowej w ciągu 15-30 dni, a prawidłowe rekordy zostaną przeniesione na listę rekordów USCT, a odpowiednia kwota USCT zostanie dodana do salda konta.';
			case 'validity': return 'ważność';
			case 'advertiser': return 'reklamodawcy';
			case 'earned': return 'zarobiony';
			case 'withdraw': return 'wycofać';
			case 'validUSCTrecords': return 'Skuteczne zapisy USCT';
			case 'USCTmining': return 'USCT Mining';
			case 'aboutUSCTmining': return 'O górnictwie USCT?';
			case 'aboutUSCTminingItme1': return '1. USDT to popularny na całym świecie stablecoin dolara amerykańskiego, który można łatwo wymienić na krajowe waluty suwerenne na głównych giełdach kryptowalut na całym świecie.';
			case 'aboutUSCTminingItme2': return '2. USCT jest tymczasową miarą wpływów z wydobycia USCT, znaną jako kredyt USD, który ostatecznie zostanie zamieniony na USDT zgodnie z rzeczywistą kwotą rozliczenia i zasadami dystrybucji platformy reklamowej oraz odpowiednią proporcją.';
			case 'aboutUSCTminingItme3': return '3. USCT Mining to funkcja realizacji reklam drogowych w społeczności Delta. Wykorzystuje ona dużą bazę użytkowników społeczności Delta w celu zapewnienia wielu korzyści dla reklamodawców, deweloperów Delta i nieobecnych. Ma ona na celu zapewnienie pewnej kwoty efektywnego dochodu dla nieobecnych pracowników na wczesnym etapie, gdy ekosystem Delta jeszcze się nie ukształtował i nie prosperował; jednocześnie zapewnia również pewne wsparcie finansowe dla deweloperów, aby zapewnić, że będą oni mogli nadal świadczyć usługi rozwojowe przez długi okres czasu, a ostatecznie będą w stanie zrealizować wszystkie plany zawarte w białej księdze; a także zapewnia skuteczny kanał promocyjny dla reklamodawców produktów.';
			case 'aboutUSCTminingItme4': return '4) Zasady dystrybucji zostały zaprojektowane w taki sposób, że 40% całkowitych wpływów jest wykorzystywane jako prowizje za usługi techniczne dewelopera, a pozostałe 60% jest wykorzystywane jako nagrody za absencję w społeczności. Część nagrody za nieobecność w wielopoziomowym modelu dystrybucji podobnym do DTC, nagroda za nieobecność zostanie podzielona na trzy części zgodnie ze stosunkiem 6:3:1, za każdym razem, gdy jedna z nagród za nieobecność w USCT mining 6 części zostanie przydzielona do nieobecności w bieżących reklamach, 3 części przydzielone nadrzędnemu polecającemu, 1 część przydzielona polecającemu drugiego poziomu. Podobnie, możesz również otrzymać taką samą nagrodę dla polecającego za znajomych, których polecisz za pośrednictwem USCT mining. Zaletą tej wielopoziomowej dystrybucji jest to, że każdy może zarobić stosunkowo dużą ilość USDT, rozwijając zespół downline.';
			case 'aboutUSCTminingItme5': return '5. Okres rozliczeniowy wynosi 7 dni, tj. co 7 dni ważność jest sprawdzana na platformie reklamowej, a potwierdzona ważność wpływów i rzeczywista kwota zostaną zapisane na saldzie. Minimalna kwota dla każdej wypłaty wynosi 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Wiersze od ${x} do ${y}.';
			case 'wallet': return 'torebki';
			case 'multiChainWallet': return 'portfel wielołańcuchowy';
			case 'deposit': return 'depozyt (np. na rachunku bankowym)';
			case 'transfer': return 'przelew (pieniądze na konto bankowe)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} w adresie portfela';
			case 'transactions': return 'Rejestry transakcji';
			case 'network': return 'siatkówka';
			case 'walletAddress': return 'Adres portfela';
			case 'currentAddress': return 'aktualny adres';
			case 'depositAddress': return 'Adres doładowania';
			case 'receivingMoneyAddress': return 'adres odbiorcy płatności';
			case 'applyTempDepositAddress': return 'Adres do składania wniosków o tymczasowe doładowanie';
			case 'tempDepositAddressTip': return '1) Jest to wspólny adres depozytowy. Nie należy wpłacać kwoty po wygaśnięciu umowy najmu lub po rozwiązaniu umowy. W takim przypadku kwota zostanie utracona.';
			case 'tempDepositAddressTip2': return '2) Przed dokonaniem wpłaty należy upewnić się, że [nazwa łańcucha] i [nazwa monety] są dokładnie zgodne; w przypadku tokenów kontraktowych należy również upewnić się, że [standard kontraktu] i [adres kontraktu] są dokładnie zgodne.';
			case 'tempDepositAddressTip3': return '3. nie należy próbować wpłacać środków, które nie odpowiadają żadnemu z parametrów podanych w powyższych wskazówkach, w przeciwnym razie kwota zostanie utracona.';
			case 'tempDepositAddressTip4': return '4) Jeśli chcesz zdeponować inne rodzaje aktywów, przejdź do strony odpowiedniej waluty i opcji parametrów, aby złożyć wniosek o nowy adres.';
			case 'applyExtensionOfValidity': return 'Wniosek o przedłużenie okresu ważności';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Ten adres wygaśnie po '),
				diff,
				const TextSpan(text: ' i będzie '),
				tap('manually extend'),
				const TextSpan(text: ' ważny przez 12 godzin przed wygaśnięciem.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Można odnowić tylko z 12-godzinnym wyprzedzeniem';
			case 'theReceivingAddressValidForLongtime': return 'Ten adres jest ważny przez długi czas.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Ten adres zbiórki jest ważny przez długi czas i jest automatycznie zasilany w czasie rzeczywistym.';
			case 'confirmDeposited': return 'Potwierdzenie depozytów';
			case 'unbindThisDepositAddress': return 'Odłącz ten adres doładowania';
			case 'confirmDepositedTip': return 'Jeśli środki zostały przelane, kliknij powyższy przycisk, aby uruchomić rozliczenie do portfela po 10 minutach.';
			case 'unbindDepositAddressTip': return 'W celu zmniejszenia obciążenia inteligentnego kontraktu, prosimy o odblokowanie adresu doładowania, jeśli nie zamierzasz wpłacać więcej środków w okresie ważności.';
			case 'transferToAddress': return 'przejdź do adresu';
			case 'longPressToPaste': return 'Długie naciśnięcie, aby wkleić';
			case 'all': return 'pełny';
			case 'balanceX': return ({required Object x}) => 'Saldo ${x}';
			case 'transferOut': return 'wyłączyć się';
			case 'depositXcoins': return ({required Object x}) => 'Kredyt ${x}';
			case 'sender': return 'nadawca';
			case 'recipient': return 'odbiorca';
			case 'memo': return 'uwaga';
			case 'kind': return 'sposób (życia)';
			case 'transferAmountExceedsAvailableBalance': return 'Przelewy przekraczające dostępne saldo';
			case 'pleaseEnterValidAmount': return 'Wprowadź prawidłową kwotę';
			case 'networkFee': return 'Opłata za obsługę sieci';
			case 'fee': return 'opłata manipulacyjna';
			case 'validLengthXcharacters': return ({required Object x}) => 'Prawidłowa długość adresu ${x} znaków';
			case 'historys': return 'zapis historyczny';
			case 'dtcCreditdetail': return 'Szczegóły dotyczące punktów Delta';
			case 'usdCreditdetail': return 'Szczegóły dotyczące punktów USD';
			case 'dappSquare': return 'dApp Plaza';
			case 'amountRaised': return 'Zebrana kwota';
			case 'disbursedAmount': return 'Wyemitowana kwota';
			case 'participationTimes': return 'Liczba uczestników';
			case 'completionRate': return 'wskaźnik ukończenia';
			case 'exchangeRate': return 'kurs wymiany walut';
			case 'icpCrowdfunding': return 'Crowdfunding ICP';
			case 'crowdfunding': return 'crowdfunding';
			case 'trendsCurve': return 'krzywa trendu';
			case 'fullScreenView': return 'Widok pełnoekranowy';
			case 'walletBalance': return 'Saldo portfela:';
			case 'manageWallet': return 'Zarządzanie portfelem';
			case 'fundraiseAmount': return 'zbieranie funduszy';
			case 'exchangeRewardAmount': return 'Realizacja kwoty nagrody';
			case 'fundraise': return 'zbieranie funduszy';
			case 'rangeIntegersX': return ({required Object x}) => 'Zakres: liczba całkowita ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Pomyślnie weź udział w zbiórce pieniędzy i otrzymaj nagrodę ${amount}DTCT';
			case 'amountSummary': return 'Podsumowanie kwot';
			case 'changePreferred': return 'Zmiana preferencji';
			case 'changePreferredAddress': return 'Zmiana preferowanego adresu';
			case 'preferredAddressTip': return 'Środki zostaną automatycznie przelane na preferowany adres, gdy zostaną pobrane przy użyciu zarejestrowanego numeru telefonu komórkowego lub DID.';
			case 'newAddress': return 'Nowy adres';
			case 'newAddressTip': return 'Aby zapobiec nadużyciom, gdy istnieje więcej niż jeden adres portfela, za każdy nowo utworzony adres pobierana jest opłata transakcyjna.';
			case 'createNew': return 'nowo wybudowany';
			case 'chainNetworkName': return 'nazwa sieci łańcuchowej';
			case 'from': return 'pochodzić z (miejsca)';
			case 'to': return 'do (czasu)';
			case 'noAvailableDepositAmountDetected': return 'Nie wykryto dostępnej kwoty depozytu!';
			case 'crossChainReceiveMoneyMonitoring': return 'Kolekcja cross-chain jest ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Otrzymane ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Potwierdzenie w toku ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Uwagi (obowiązkowa lektura dla początkujących)';
			case 'whyUseSharedAddresses': return 'Dlaczego warto używać adresu współdzielonego?';
			case 'useSharedrAdvantage': return 'Zalety korzystania ze współdzielonych adresów podczas deponowania w łańcuchach są następujące:';
			case 'useSharedrAdvantage1': return '1) Zmniejszenie marnotrawstwa opłat transferowych i obniżenie kosztów użytkowania dla użytkowników. Ze względu na korzystanie z wyłącznego adresu, doprowadzi to do zbyt dużego rozproszenia środków, zazwyczaj w celu ułatwienia późniejszego transferu innych użytkowników przy wypłacie środków, gdy użytkownik doładowuje drugi transfer środków, należy je połączyć w jeden lub niewielką liczbę adresów zarządzania.';
			case 'useSharedrAdvantage2': return '2) W schemacie współdzielonym program musi utrzymywać tylko stosunkowo niewielką pulę adresów, które można szybko dopasować do transferów wychodzących i lekkiego nasłuchiwania kolekcji, co zmniejsza obciążenie zasobów obliczeniowych. W przeciwieństwie do tego, sytuacja byłaby odwrotna, gdyby używane były adresy wyłączne.';
			case 'tokenType': return 'Typ tokena';
			case 'contract': return 'umowny';
			case 'contractStandard': return 'standard umowy';
			case 'contractAddress': return 'adres umowy';
			case 'native': return 'pierwotniaki';
			case 'confirmUnbindingPleaseEnterYes': return 'Aby potwierdzić odłączenie, wpisz "tak".';
			case 'listAllWorkingTempReceivingAddresses': return 'Lista wszystkich działających adresów doładowania cross-chain';
			case 'setNote': return 'Konfigurowanie notatek';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Nie może być dłuższy niż ${x} bajtów';
			case 'transferFee': return 'opłata transferowa';
			case 'crossChainFee': return 'opłata cross-chain';
			case 'crossChainTransferOutError': return 'błąd transferu cross-link';
			case 'chainName': return 'nazwa łańcucha';
			case 'message': return 'wiadomości';
			case 'dontShowAgain': return 'nie jest już wyświetlany';
			case 'queuing': return 'kolejka';
			case 'optional': return 'opcjonalny';
			case 'publiclyVisible': return 'publicznie widoczne';
			case 'rates': return 'taryfa';
			case 'minimum': return 'minimum';
			case 'maximum': return 'górny limit';
			case 'minimumBlockConfirmations': return 'Minimalna liczba potwierdzeń bloków';
			case 'dsmsVerifyTerminal': return 'Terminal walidacyjny DSMS';
			case 'overall': return 'parasol';
			case 'my': return 'mój';
			case 'checkValidatorQualifications': return 'Sprawdzanie uprawnień uwierzytelniających';
			case 'getVerifierPermissions': return 'Uzyskaj uprawnienia autoryzatora';
			case 'qualification': return 'naturalne wyposażenie';
			case 'upperLimit': return 'limit';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Maksymalna liczba dozwolonych terminali dostępu';
			case 'numberOfExistingAccessTerminals': return 'Liczba terminali dostępowych na miejscu';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Przed złożeniem wniosku o uprawnienia uwierzytelniające należy przygotować bezczynny telefon komórkowy z systemem Android i dedykowany numer dostępowy oraz pobrać i zainstalować aplikację DSMS Access Terminal.';
			case 'downloadLink': return 'link do pobrania';
			case 'alreadyReadyFollowingTheAboveTips': return 'Jest gotowy zgodnie z powyższymi wskazówkami';
			case 'globalUniversal': return 'do użytku globalnego';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Obecnie nie ma wystarczającej liczby lokalnych uwierzytelniaczy, aby uczestniczyć w usłudze dostępu uwierzytelniania DSMS, wybierz usługę dostępu "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'jako numer tylko z dostępem';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Zaznacz pole "${tip}".';
			case 'inputLengthTooShort': return 'Zbyt krótka długość wejścia';
			case 'shortName': return 'akronimy';
			case 'pleaseEnterXname': return ({required Object name}) => 'Wprowadź ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Zgłoszenie jest w trakcie składania, prosimy czekać...';
			case 'applyForDSMSVerifierPermission': return 'Ubieganie się o uprawnienia walidatora DSMS';
			case 'confirmInformation': return 'Potwierdzenie informacji';
			case 'lastHeartbeat': return 'ostatnie uderzenie serca';
			case 'expirationTime': return 'należny czas';
			case 'country': return 'narody';
			case 'accessTerminals': return 'terminal dostępu';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Całkowita liczba terminali numerów dostępu DSMS';
			case 'textContent': return 'Zawartość tekstowa';
			case 'scanQRcodeToLogin': return 'Przesuń, aby się zalogować';
			case 'confirmLogin': return 'Potwierdź logowanie';
			case 'authorizeSubApplicationToLogin': return 'Autoryzuj tę aplikację podrzędną do logowania';
			case 'authorizationSuccessful': return 'Autoryzacja przebiegła pomyślnie!';
			case 'launchSMSprogram': return 'Uruchomienie programu SMS';
			case 'notApplied': return 'Brak aplikacji';
			case 'validityPeriod': return 'okres ważności';
			case 'renewal': return 'wniosek o odnowienie';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Zeskanuj kod, aby autoryzować logowanie do terminala';
			case 'rewards': return 'zachęty';
			case 'roles': return 'charakter';
			case 'developerCenter': return 'Centrum deweloperskie';
			case 'appName': return 'Nazwa aplikacji';
			case 'pleaseSelect': return 'wybierz';
			case 'category': return 'kategoria';
			case 'keywords': return 'hasło';
			case 'pleaseEnterAkeyword': return 'Wprowadź słowo kluczowe';
			case 'createApplication': return 'Tworzenie aplikacji';
			case 'appType': return 'Typ aplikacji';
			case 'numberOfCategoriesMustBetween1and3': return 'Liczba kategorii musi wynosić od 1 do 3';
			case 'appLogoSpecifications': return 'Format obrazu: png, rozmiar: do 100KB, rozdzielczość (piksele): 256*256';
			case 'localAlbum': return 'Lokalne albumy fotograficzne';
			case 'networkPath': return 'ścieżka sieciowa';
			case 'imageURLkAddress': return 'Adres URL obrazu';
			case 'urlAddressFormatIsIncorrect': return 'Nieprawidłowo sformatowany adres URL';
			case 'imageFormatOnlySupportsPng': return 'Obrazy są obsługiwane tylko w formacie "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'Długość musi zawierać się w przedziale znaków ${a}-${b}.';
			case 'introduction': return 'krótki';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'Rozmiar obrazu nie może być większy niż ${a}, obecnie ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'Rozdzielczość obrazu musi wynosić: ${p1}(piksele), obecnie ${p2}';
			case 'becomeDeveloper': return 'Zostań programistą';
			case 'developerInformation': return 'Informacje o deweloperze';
			case 'teamName': return 'Nazwa zespołu';
			case 'website': return 'węzeł';
			case 'other': return 'inne niż';
			case 'githubVerification': return 'Weryfikacja Github';
			case 'exampleUrl': return 'Przykładowy adres URL';
			case 'githubVerificationTip': return ({required Object did}) => 'Użyj swojego konta GitHub, aby utworzyć plik "delta.did" w swoim repozytorium z zawartością "${did}"; następnie wklej adres URL githubusercontent tego pliku w tym polu wejściowym w celu uwierzytelnienia.';
			case 'createApp': return 'Tworzenie aplikacji';
			case 'appManagement': return 'zarządzanie aplikacjami';
			case 'statusLogs': return 'Dziennik stanu';
			case 'bad': return 'nic dobrego';
			case 'normal': return 'zwykły';
			case 'good': return 'doskonały';
			case 'onceCreatedItCannotBeChanged': return 'Po utworzeniu nie można go zmienić!';
			case 'manageApplicationEntity': return 'Zarządzanie jednostkami aplikacji';
			case 'currentVersion': return 'aktualna wersja';
			case 'submitVersion': return 'Wersja przesłana';
			case 'packageOnlySupportZipCompressedFile': return 'Pakiet obsługuje tylko skompresowane pliki zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Plik "${name}" nie został znaleziony w pakiecie zip.';
			case 'fileList': return 'Lista dokumentów:';
			case 'programPackage': return 'Pakiet programistyczny:';
			case 'automaticallyExtractFromVersionFile': return 'Automatycznie wyodrębniane z plików ".version';
			case 'dappVersionFormatTip': return 'Format numeru wersji musi być dziesiętny z dokładnością do 2 cyfr, nieprzekraczający maksymalnie 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Numer wersji musi być większy niż bieżąca wersja "${v}';
			case 'versionNotes': return 'Nadruk:';
			case 'updateRelease': return 'nowa wersja';
			case 'loadAndRun': return 'Załaduj i uruchom';
			case 'notYetSubmittedProgramPackage': return 'Pakiet programowy nie został jeszcze przesłany!';
			case 'authorizeMinidAppLogin': return 'Autoryzacja logowania do mini-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Aby potwierdzić autoryzację, wpisz "tak".';
			case 'authorizeNow': return 'Natychmiastowa autoryzacja';
			case 'operation': return 'Działanie.';
			case 'statusChange': return 'Zmiana statusu';
			case 'changeTo': return 'Zmiana na:';
			case 'notes': return 'Uwagi.';
			case 'changesNotEffective': return 'Zmiana jest nieważna!';
			case 'released': return 'Opublikowano';
			case 'inPublicBeta': return 'otwarta beta';
			case 'developers': return 'Opracowany przez.';
			case 'reviewList': return 'Lista komentarzy.';
			case 'postReview': return 'Zostaw komentarz';
			case 'scoreNow': return 'Oceń teraz';
			case 'description': return 'Opis.';
			case 'noData': return '(^-^)\n Brak dostępnych danych';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Wersja została zaktualizowana z ${a} do ${b}.';
			case 'loadNewVersion': return 'Załaduj nową wersję';
			case 'name': return 'Imię i nazwisko.';
			case 'canisterId': return 'Tank Id.';
			case 'updateTime': return 'czas aktualizacji';
			case 'contractCanistersState': return 'Status zbiornika kontraktowego';
			case 'userDistribution': return 'dystrybucja użytkowników';
			case 'settings': return 'Ustawienie';
			case 'security': return 'Bezpieczeństwo';
			case 'invite': return 'zaproszenia';
			case 'more': return 'Więcej...';
			case 'receiveAddress': return 'Adres odbioru:';
			case 'hangingAmount': return 'wiszący';
			case 'hangingAmountTips': return 'Kwoty oczekujące to tymczasowe zapisy nagród wygenerowanych przez wydobycie przez podwładny zespół, po zakończeniu sesji wydobywczej kwoty te zostaną zebrane w Kwotach oczekujących.';
			case 'pendingAmount': return 'oczekujący';
			case 'pendingAmountTips': return 'Kwoty oczekujące to te, które nie zostały jeszcze potwierdzone w stosunku do reklamodawców, a te, które są prawidłowo dopasowane, zostaną przeniesione do prawidłowego rekordu USCT, a wszelkie nieprawidłowe części zostaną wykluczone.';
			case 'received': return 'otrzymany';
			case 'processing': return 'w toku';
			case 'replied': return 'respondent';
			case 'rejected': return 'odrzucenie';
			case 'unknown': return 'niezbadany';
			case 'insufficientBalance': return 'Niewystarczająca równowaga!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Saldo ${x} jest niewystarczające do pokrycia opłat sieciowych.';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Transakcja nie została jeszcze zakończona i nie może zostać przeniesiona w tym momencie.';
			case 'thisfunctionNotSupportExternalCalls': return 'Ta funkcja nie obsługuje wywoływania zewnętrznego';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Nie ma dopasowania adresu, który może być użyty do uiszczenia opłat międzyłańcuchowych, przełącz się na inną sieć łańcuchową, aby spróbować.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'Aktualne dopasowanie do maksymalnej kwoty, jaką można przelać w ramach pojedynczej transakcji, wynosi ${x}.';
			case 'memoMustNotBeMoreThan64bytes': return 'Uwagi nie mogą przekraczać 64 bajtów';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Niewystarczające saldo, kwota: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Nie można powiązać więcej niż 3 adresów.\nJeśli chcesz powiązać nowy adres płatności.\nNajpierw usuń powiązanie innego adresu';
			case 'parametersA_exception': return ({required Object x}) => 'Parametry: ${x}, wyjątek';
			case 'parameterException': return 'Wyjątek parametru!';
			case 'transferAmountMustBeLargerThan0': return 'Kwota przelewu musi być większa niż 0';
			case 'authorizationHasExpired': return 'Upoważnienie wygasło';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'Aplikacja nie została autoryzowana przez właściciela';
			case 'authenticationTokenIsInvalid': return 'Nieprawidłowy token uwierzytelniania';
			case 'verifyInfoIsInvalidOrExpired': return 'Nieprawidłowe lub wygasłe informacje walidacyjne';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Sprawdzić, czy liczba terminali dostępowych przekroczyła limit jeden na dziesięć tysięcy.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'Udział w wydobyciu musi trwać dłużej niż 3 dni.';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Liczba członków kręgu bezpieczeństwa nie może być mniejsza niż trzy.';
			case 'avatarIsNotSet': return 'Awatar nie został ustawiony';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Liczba bezpośrednich poleceń nie może być mniejsza niż 3.';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Limit czasowy jest niewystarczający i numer telefonu komórkowego można zmienić tylko raz w roku.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Ten numer telefonu komórkowego już istnieje i nie można go powielić.';
			case 'securityCodeIsIncorrect': return 'Nieprawidłowy kod bezpieczeństwa';
			case 'securityCodeMayHaveExpired': return 'Kod zabezpieczający mógł wygasnąć';
			case 'sessionIdIsInvalidOrExpired': return 'Nieprawidłowy lub wygasły identyfikator sesji';
			case 'sessionHasBeenAuthorized': return 'Sesja została zatwierdzona do realizacji!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Można odnowić tylko w ciągu ${x} dni przed wygaśnięciem okresu.';
			case 'notYetGrantedDeveloperPermissions': return 'Brak praw deweloperskich';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Pole ${x} nie może mieć wartości null';
			case 'emailFormatError': return 'Błąd formatu wiadomości e-mail';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Błąd formatowania "${x}';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Pole "${x}" musi mieć długość od ${y} do ${z} znaków.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Zakres wyboru "${x}" musi zawierać się w przedziale od ${y} do ${z}.';
			case 'unchanged_sameAsOldContent': return 'Bez zmian, ta sama zawartość co poprzednio!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' już istnieje!';
			case 'mobileNumberHasNotJoinedDelta': return 'Ten numer telefonu komórkowego nie został dodany do Delta!';
			case 'referrerIdCannotBeEmpty': return 'Identyfikator strony odsyłającej nie może być pusty!';
			case 'referrerIdDoesNotExist': return 'Identyfikator strony odsyłającej nie istnieje!';
			case 'didIsIncorrectOrInvalid': return 'DID jest nieprawidłowy lub nieważny!';
			case 'accessTokenIsIncorrectOrInvalid': return 'Token dostępu jest nieprawidłowy lub nieważny!';
			case 'minimumWithdrawalAmountIs1USD': return 'Minimum 1USD za pojedynczą wypłatę';
			case 'miningTimeIsNotYet': return 'Jeszcze nie czas na kopanie.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Już istnieje, nie dodawaj go ponownie!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Nie można użyć numeru rejestracyjnego jako numeru dostępu do uwierzytelniania';
			case 'canotAddYourSelf': return 'Nie można dodać siebie';
			case 'logOut': return 'Wylogowanie';
			case 'confirmLogout': return 'Potwierdź wylogowanie';
			case 'logOutTipsText': return 'Uwaga: zgodnie z białą księgą, każda weryfikacja logowania do konta zużyje pewną ilość monet DTC, które zostaną wypłacone weryfikatorowi jako zachęta, więc nie próbuj logować się i wylogowywać niepotrzebnie, kliknięcie poniższego przycisku spowoduje natychmiastowe wylogowanie.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Wpisz "tak", aby potwierdzić wylogowanie.';
			case 'tip': return 'zwrócić uwagę na coś';
			case 'cancel': return 'odwołania';
			case 'close': return 'zamknięcie';
			case 'selected': return 'wybrany';
			case 'edit': return 'kompilator';
			case 'submit': return 'przesłać (raport itp.)';
			case 'goBack': return 'regresja (w psychologii)';
			case 'copiedToClipboard': return 'Został on skopiowany do schowka.';
			case 'nickname': return 'zwrot grzecznościowy';
			case 'confirm': return 'uznanie';
			case 'cannotBeEmpty': return 'Nie może być pusta';
			case 'deleteSuccessful': return 'Usunięto pomyślnie!';
			case 'successfullyModified': return 'Modyfikacja zakończyła się sukcesem!';
			case 'executionSuccessful': return 'Wdrożenie zakończyło się sukcesem!';
			case 'preview': return 'zapowiedzi';
			case 'followSystem': return 'system monitorowania';
			case 'change': return 'wariacja';
			case 'replace': return 'zamienniki';
			case 'view': return 'sprawdź';
			case 'manage': return 'menedżerski';
			case 'modify': return 'modyfikacje';
			case 'replacedSuccessfully': return 'Wymiana zakończona sukcesem!';
			case 'authentication': return 'uwierzytelnianie';
			case 'reacquire': return 'pobieranie';
			case 'tryAgain': return 'Spróbuj ponownie.';
			case 'querying': return 'Prowadzone są dochodzenia ...';
			case 'writingToOnChain_pleaseWait': return 'Jest zapisywany do łańcucha, poczekaj ...';
			case 'versionCheck': return 'wykrywanie wersji';
			case 'alreadyLatestVersion': return 'Już najnowsza wersja!';
			case 'foundNewVersion': return 'Odkryj nową wersję:';
			case 'upgradeLink': return 'Link do aktualizacji:';
			case 'deviceDescription': return 'Opis wyposażenia.';
			case 'notification30SecondsBeforeMiningStops': return 'Wykonaj przypomnienie o powiadomieniu 30 sekund przed zatrzymaniem wydobycia!';
			case 'goMining': return 'Rozpocznij wydobywanie';
			case 'deltaMiningReminder': return 'Przypomnienie o wydobyciu Delta';
			case 'clickToMine_miningIsAboutToStop': return 'Kliknij tutaj, aby kopać, wydobycie wkrótce się zakończy!';
			case 'incorrect_input': return 'Nieprawidłowe dane wejściowe!';
			case 'are_you_sure_delete': return 'Czy na pewno chcesz usunąć?';
			case 'delete_account': return 'Usuń konto';
			case 'how_to_operate_it': return 'Widzisz jak to obsługiwać?';
			case 'deletion_warning_tip': return 'Jeśli usuniesz swoje konto, stracisz wszystkie monety Delta, a wszystkie zarobki od innych członków również zostaną utracone.';
			case 'launchWhatsAppProgram': return 'Uruchom program WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Numery dostępowe z tą ikoną obsługują również weryfikację wiadomości WhatsApp. Podczas wysyłania wiadomości międzynarodowych zaleca się korzystanie z WhatsApp w celu zwiększenia wskaźnika powodzenia i obniżenia kosztów.';
			case 'ihaveSentVerificationString': return 'Wysłałem ciąg weryfikacyjny';
			case 'totalOfPeople': return 'Łącznie ludzie: ';
			case 'numberOfPeopleMining': return 'Liczba osób kopiących';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Możesz użyć przeglądarki na innym urządzeniu, aby zeskanować kod QR i przekazać go do programu SMS';
			case 'toggle': return 'Przełącz';
			case 'DSMSverifier': return 'DSMS Weryfikator';
			case 'activate': return 'Aktywuj';
			case 'activated': return 'Aktywowany';
			case 'generateActivationCommand': return 'Generuj polecenie aktywacji';
			case 'activationCommand': return 'Polecenie aktywacji';
			case 'activationSentedTip': return 'Po wysłaniu SMS-a aktywacyjnego sprawdź status aktywacji na urządzeniu końcowym dostępu.';
			case 'biometricsNotEnabledTip': return 'Biometria (twarz lub odcisk palca) nie jest włączona na Twoim urządzeniu. Włącz ją, aby kontynuować';
			case 'error': return 'Błąd';
			case 'exceptionOccurredWhenCallingBiometric': return 'Wystąpił wyjątek podczas wywoływania funkcji biometrycznej (twarz lub odcisk palca)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: 'Zaznaczono '),
				checkedNum,
				const TextSpan(text: ' numerów dostępu, należy wybrać '),
				shouldNum,
				const TextSpan(text: '.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Czy tekst ${text} został wysłany na ${n} numery dostępowe powyżej?';
			case 'interface': return 'Interfejs:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Przekroczono limit czasu oczekiwania lub numer nadawcy jest niezgodny';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Numer telefonu komórkowego członka kręgu bezpieczeństwa, który podałeś, nie pasuje: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Zaloguj się w ciągu 10 minut po wylogowaniu, aby uniknąć weryfikacji dwuskładnikowej.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Należy wprowadzić co najmniej ${n} numerów telefonów komórkowych';
			case 'noAccessNumberInYourRegionYet': return 'W Twoim regionie nie ma jeszcze numeru dostępowego';
			case 'notEnoughAccessNumbersInYourRegion': return 'Za mało numerów dostępowych w Twoim regionie';
			case 'tipsForDeployDSMSterminal': return 'System automatycznie załadował dla Ciebie niektóre numery dostępowe z innych krajów. Aby zapewnić lepsze i tańsze usługi weryfikacyjne, zaleca się, abyś Ty lub osoba polecająca wdrożyła terminal DSMS lokalnie, aby zarobić na opłatach weryfikacyjnych.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Nikt nie może mi podać kodu bezpieczeństwa?';
			case 'useSupplementalMode': return 'Użyj trybu uzupełniającego';
			case 'returnToSecurityCodeMode': return 'Powrót do trybu kodu bezpieczeństwa';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Wprowadź powiązany numer telefonu komórkowego. Kod kraju można pominąć.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Numer telefonu komórkowego ${name} jest niepoprawny';
			case 'matchingVerificationStrategyIs': return 'Strategia weryfikacji dopasowania to:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Saldo jest większe niż 3 ICP, na razie nie ma potrzeby dolewania paliwa.';
			case 'escrowAccount': return 'Rachunek powierniczy';
			case 'fuelRelay': return 'Przekaźnik paliwa';
			case 'pourFuel': return 'Wlej paliwo';
			case 'fuelState': return 'Stan paliwa';
			case 'pouringFuelTips': return 'Wlewanie paliwa nie przynosi żadnych korzyści ani wad, jego celem jest wzbogacenie doświadczenia z systemem Delta';
			case 'sponsorDevelopersByWatchingAds': return 'Sponsoruj programistów, oglądając reklamy';
			case 'status': return 'Status';
			case 'date': return 'Data';
			default: return null;
		}
	}
}

extension on _StringsPt {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'fig. início';
			case 'switchLanguage': return 'Mudar de idioma';
			case 'languageSwitch': return 'Mudança de língua';
			case 'slogan': return 'Construir uma economia descentralizada no delta';
			case 'countryRegionCode': return 'Código do país/área';
			case 'countryRegionSelection': return 'Seleção de países e regiões';
			case 'nextStep': return 'o próximo passo';
			case 'yourPhoneNumber': return 'O seu número de telefone.';
			case 'pleaseSelectCountryAndRegion': return 'Selecione o seu país/região';
			case 'pleaseEnterPhoneNumber': return 'Introduza um número de telefone válido!';
			case 'referrerDid': return 'Referenciador DID';
			case 'pleaseEnterTheReferrersDid': return 'Introduza um ID de identidade descentralizado válido do referenciador';
			case 'thisDidIsInvalid': return 'Este DID é inválido.';
			case 'nicknameFormatTips': return 'A alcunha não deve estar vazia e não deve ter mais de 16 dígitos.';
			case 'additionalIinformation': return 'Informações adicionais';
			case 'invitationSubject': return 'Um convite à construção do consenso Delta';
			case 'invitationLetter': return ({required Object did}) => 'Olá, estou a participar no Delta Consensus Building!\n Delta é uma nova plataforma de moeda digital de código aberto que funciona no ICP e que lhe permite gerir e utilizar várias moedas digitais sem senhas, chaves privadas ou mnemónicas. Por favor, clique neste link https://delta.kim/auto/download para instalar a aplicação e agora está convidado a juntar-se à construção de consensos e a cunhar moedas também.\n Referenciador DID: ${did}';
			case 'dSMSverification': return 'Validação DSMS';
			case 'getAccessNumbers': return 'Obter alguns números de acesso';
			case 'getAccessNumberPromptMessage': return 'Clique no botão "Obter" abaixo para rodar um conjunto de números de acesso de verificação de SMS na fila de espera.';
			case 'optionalAccessNumbers': return 'Número de acesso opcional';
			case 'accessNumber': return 'número de acesso';
			case 'TELCO': return 'operador (de uma central eléctrica, de uma rede de transportes, etc.)';
			case 'score': return 'pontuação';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('pt'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Assinale '),
					nBuilder(n),
					const TextSpan(text: ' números de acesso e clique no botão "'),
					span('text'),
					const TextSpan(text: '" para avançar para o passo seguinte.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Assinale '),
					nBuilder(n),
					const TextSpan(text: ' números de acesso e clique no botão "'),
					span('text'),
					const TextSpan(text: '" para avançar para o passo seguinte.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta é uma experiência de moeda digital global, descentralizada e de fonte aberta e um ecossistema de aplicações de criptomoeda.';
			case 'deltaGoalsDesc': return 'O objetivo é permitir que as pessoas utilizem a Delta para co-construir novas moedas digitais que sejam universais, justas, seguras, rápidas e ecológicas. E fornecer vários cenários de aplicação efectiva para estas moedas digitais e criptomoedas anteriores.';
			case 'details': return 'informações';
			case 'get': return 'ganho';
			case 'select': return 'opção';
			case 'send': return 'envio';
			case 'complete': return 'cumprir';
			case 'selectedAccessNumberPrompt': return 'Quando selecionado, é apresentado o número de acesso completo e é gerada uma cadeia de autenticação.';
			case 'location': return 'colocação';
			case 'verificationString': return 'cadeia de validação';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Utilize o seu número de telefone '),
				num,
				const TextSpan(text: ' e envie '),
				label,
				const TextSpan(text: ' para '),
				accessNumber,
				const TextSpan(text: ' para concluir a verificação.'),
			]);
			case 'ihaveSentTheSMS': return 'Enviei uma mensagem de texto';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'A cadeia de validação é válida durante 6 minutos, tempo restante: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Demasiado rápido para esperar ${x} segundos para continuar!';
			case 'waitingForVerificationSMS': return 'Aguardando o SMS de verificação...';
			case 'partSuccsForVerificationSMS': return 'A verificação por SMS de um dos terminais de acesso foi aprovada!';
			case 'creatingAccessToken': return 'Token de acesso a ser criado...';
			case 'intoDelta': return 'Por dentro da Delta';
			case 'deltaAccountIsLoggedIn': return 'Sua conta Delta está conectada';
			case 'iHavLoggedOut': return 'Estou fora.';
			case 'startTwoFactorVerification': return 'Iniciar a dupla verificação';
			case 'securityCircleVerification': return 'Validação do Círculo de Segurança';
			case 'generateSecurityCode': return 'Gerar código de segurança';
			case 'generateSecurityCodeHintText': return 'O código de segurança gerado será enviado para um membro do seu círculo de segurança selecionado aleatoriamente.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Não definiu um círculo de segurança, a sua conta é muito insegura, introduza um espaço reservado de 6 dígitos e avance para o passo seguinte.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'O código de segurança foi gerado, contacte os seguintes familiares e amigos para solicitar a extração do código de segurança para passar a verificação. válido durante 30 minutos!';
			case 'itGetSecurityCodeTip': return 'Sugestão: pode obter o código de segurança fazendo duplo clique na alcunha da sua conta na página Delta App -> Menu -> Provide Security.';
			case 'securityCircleMemberList': return 'Lista de membros do círculo de segurança:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Por favor, selecione um parente ou amigo na lista de membros para gerar e fornecer um código de segurança para verificar sua verdadeira identidade. O objetivo é evitar que a conta seja controlada por outras pessoas quando o número do celular for perdido ou roubado.';
			case 'formatIsXdigits': return ({required Object num}) => 'Formato como ${num} dígitos';
			case 'signInSuccessfully': return 'Iniciar sessão com êxito!';
			case 'twoFAandLogin': return 'Dupla autenticação e início de sessão';
			case 'verificationSuccessful': return 'Verificar o sucesso!';
			case 'validationFailed': return 'A validação falhou!';
			case 'dappInfo': return 'Informações da aplicação';
			case 'securityCircle': return 'anel de segurança';
			case 'securityCode': return 'código de segurança';
			case 'provideSecurity': return 'garantir a segurança';
			case 'addManully': return 'Adicionar manualmente';
			case 'addFromContacts': return 'Adicionar a partir do livro de endereços';
			case 'addSecurityCircle': return 'Adicionar Círculo de Segurança';
			case 'inputType': return 'Tipo de entrada';
			case 'mobileNumber': return 'número de telemóvel';
			case 'did': return 'Endereço id';
			case 'pleaseEnterValidDID': return 'Introduza um ID de identidade descentralizada válido';
			case 'pleaseEnterValidWalletAddress': return 'Introduza um endereço de carteira válido';
			case 'appellation': return 'forma de endereço';
			case 'appellationHint': return 'Como é que lhe chamam, tipo "bebé"?';
			case 'addSecurityCircleTips': return 'Não adicione pessoas em quem não confia ao seu círculo de segurança.';
			case 'referralTeam': return 'Equipas recomendadas';
			case 'profile': return 'Informações sobre a conta';
			case 'menu': return 'menu';
			case 'directly': return 'direto';
			case 'indirectly': return 'indireta';
			case 'inviteContacts': return 'Convite Contacto';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'O seu convidado é '),
				nickname,
				const TextSpan(text: ' e referiu diretamente '),
				num1,
				const TextSpan(text: ' pessoas, das quais '),
				num2,
				const TextSpan(text: ' estão atualmente online.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Indicou indiretamente '),
				num1,
				const TextSpan(text: ' pessoas, das quais '),
				num2,
				const TextSpan(text: ' estão atualmente em linha.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Convide os seus amigos para se juntarem à Delta e melhorem em conjunto o consenso social. Por cada referência direta, a taxa de extração de uma pessoa aumenta a taxa base em '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Zaproś znajomych do dołączenia do Delta i wspólnie poprawiajcie konsensus społeczny. Każda pośrednia rekomendacja jednej osoby zwiększy stawkę wydobycia o '),
				rate2,
				const TextSpan(text: ' stawki podstawowej.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Tem a certeza de que pretende eliminar "${name}"?';
			case 'safetyCircleRoleQ': return 'Qual é o objetivo do anel de segurança?';
			case 'safetyCircleRoleA': return 'Proteja a sua conta fornecendo autenticação secundária em situações sensíveis.';
			case 'howSecurityCirclesWorkQ': return 'Como é que os anéis de segurança funcionam?';
			case 'howSecurityCirclesWorkA': return 'Na eventualidade de ser necessária uma verificação do Círculo de Segurança, o programa Delta Smart Contracts selecionará aleatoriamente um membro da lista de amigos do Círculo de Segurança para ajudar a fornecer-lhe um código de segurança para completar a verificação de identidade por si. Quando pedir o código de segurança ao membro, este pode confirmar se é ou não o utilizador. Simultaneamente, o programa irá solicitar: "Recuse-se a fornecer o código de segurança se não for você", de modo a proteger a segurança da sua conta. Por isso, deve certificar-se sempre de que os membros do seu círculo de segurança são pessoas em quem pode confiar.';
			case 'securityCircleBeUsedQ': return 'Quando é que vai ser utilizado?';
			case 'securityCircleBeUsedA1': return '1) Quando perde o controlo da sua Delta APP, é normalmente o caso de o seu telemóvel ter sido perdido ou roubado.';
			case 'securityCircleBeUsedA2': return '2) No caso de algumas operações sensíveis, o programa Delta Smart Contract precisa de confirmar que é o utilizador.';
			case 'provideSafetyTip1': return 'Quando o seu amigo lhe pedir o código de segurança, certifique-se de que confirma que é o seu próprio código.';
			case 'provideSafetyTip2': return 'Está a fornecer segurança aos amigos acima referidos, que o definiram como a pessoa de maior confiança no seu círculo de segurança e precisam que forneça uma confirmação de segurança para ele, caso se deparem com operações sensíveis na sua conta.';
			case 'provideSafetyTip3': return 'Faça duplo clique no avatar da outra pessoa para extrair o código de segurança quando necessário.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'A outra parte não tem atualmente um código de segurança que precise de ser extraído!';
			case 'existSecurityCodeTip': return 'Para proteção do seu amigo ou familiar, deve recusar-se a fornecer o código de segurança se este não for fornecido pelo próprio amigo ou familiar.';
			case 'avatarSettings': return 'Definições do avatar';
			case 'NFTAvatarPropertyRightsText': return 'Declaração de exoneração de responsabilidade: A utilização do NFT em questão como avatar é apenas uma questão de preferência pessoal e não tem nada a ver com a detenção dos direitos de propriedade intelectual desse NFT.';
			case 'projectWebsite': return 'Sítio Web do projeto:';
			case 'whitepaper': return 'papel branco:';
			case 'indexID': return 'Índice Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Índice entre ${start} e ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Introduza o ID do índice do seu NFT favorito e o programa carregá-lo-á automaticamente como avatar.';
			case 'miningRate': return 'taxa de extração';
			case 'miningDetails': return 'Detalhes da exploração mineira';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Taxa total de extração: '),
				rate,
				const TextSpan(text: ' δ/dia'),
			]);
			case 'EndOfMiningSession': return 'A extração de ciclos terminou:';
			case 'tapToMineDeltaCoin': return 'Clique para extrair moedas Delta ↑';
			case 'clickToStartMining': return 'Clique para começar a explorar!';
			case 'miningHasStoppedPromptDesc': return 'A exploração mineira parou, cada 24 horas é um ciclo de exploração mineira, clique no ícone do relâmpago para iniciar uma nova ronda de exploração mineira. A exploração mineira da Delta é um mecanismo de atribuição que não consome energia aritmética adicional nem tráfego de rede do seu dispositivo.';
			case 'aboutBaseRate': return 'Sobre a taxa de base?';
			case 'baseRateDescription': return 'Tal como acordado no Livro Branco, a regra de redução da taxa de base para a extração Delta será dividida em duas fases.\nFase 1: A taxa será de 32δ/dia quando o número de participantes (registos) for igual ou inferior a 3.000. Partindo desta base, a taxa de base é reduzida para metade sempre que o número de pessoas aumentar 10 vezes.\nFase 2: Quando o número de participantes atinge 30 milhões ou mais, a taxa de base é reduzida para metade sempre que o número de participantes aumenta por um fator de 3. Até que a escavação final interrompa a produção.';
			case 'baseRate': return 'taxa básica (como na RDIS)';
			case 'directReferralRewards': return 'Bónus de indicação direta';
			case 'directReferralRewardDesc': return 'Por cada referência direta, a sua taxa de exploração será aumentada em mais 1/3 da taxa base enquanto eles estiverem a explorar.\n\n Além disso, o estado de mineração das suas referências também contará para o seu bónus de referência direta.';
			case 'indirectReferralRewards': return 'Bónus de indicação indireta';
			case 'indirectReferralRewardDesc': return 'Quando uma referência indireta está a minerar, a sua taxa de mineração é aumentada em mais 1/10 da taxa base.\n\n Para a sua equipa de referência direta, cada pessoa que ela reencaminha representa uma referência indireta para si.';
			case 'mine': return 'extrair (minério ou outro recurso de uma mina)';
			case 'thisMiningInformation': return 'Informação mineira atual';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Participou na extração mineira: '),
				x,
				const TextSpan(text: ' vezes'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Ganho total desta vez: '),
				x,
				const TextSpan(text: ' Delta coins'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Ganhos base: '),
				x,
				const TextSpan(text: ' moedas'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contribuição direta da equipa: '),
				x,
				const TextSpan(text: ' moedas'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Contribuição indireta da equipa: '),
				x,
				const TextSpan(text: ' moedas'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Período de tempo entre escavações: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Horas efectivas de extração: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} horas';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Para a segurança dos bens, os membros do círculo de segurança devem manter sempre 3-5 pessoas de confiança.';
			case 'index': return 'indexação';
			case 'amount': return 'soma de dinheiro';
			case 'balance': return 'balanços';
			case 'timeStamp': return 'carimbo de data/hora';
			case 'summary': return 'resumos';
			case 'miningHasStopped': return 'A exploração mineira parou.';
			case 'miningHasStoppedDesc': return 'A sua exploração mineira está atualmente parada, comece a ganhar agora.';
			case 'startMining': return 'Iniciar a extração mineira';
			case 'changeMobileNumber': return 'Alteração do número de telemóvel';
			case 'currentMobileNumber': return 'Número de telemóvel atual';
			case 'newMobileNumber': return 'Novo número de telemóvel';
			case 'securityCodeFormatIs6digits': return 'O formato do código de segurança é de 6 dígitos!';
			case 'startVrification': return 'Iniciar verificação';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Este número de telemóvel já existe, DID associado: ${dId}';
			case 'noDataYet': return 'Não existem dados disponíveis';
			case 'previousMobileNumber': return 'Número de telemóvel anterior';
			case 'changeLog': return 'Registo das alterações';
			case 'referralLinkToShare': return 'Ligações recomendadas para partilhar';
			case 'referrer': return 'referenciador';
			case 'isoCountryCode': return 'Código ISO do país';
			case 'avatarLogo': return 'logótipo de cabeçalho';
			case 'creationTime': return 'Tempo de criação';
			case 'lastUpdate': return 'Última atualização';
			case 'numberOfSecurityCircleMembers': return 'Número de membros dos círculos de segurança';
			case 'theLatestMining': return 'Última escavação';
			case 'effectiveMiningDays': return 'Número de dias de extração efectiva';
			case 'modifyNickname': return 'Alterar alcunha';
			case 'didNotChange': return 'Não há alterações!';
			case 'kycVerification': return 'Verificação KYC';
			case 'faceID': return 'ID facial';
			case 'touchID': return 'Identificação por impressão digital';
			case 'biometricsAuthorizationTest': return 'Ensaios de autenticação biométrica';
			case 'currentState': return 'estado atual';
			case 'biometricsAuthenticationLocalizedReason': return 'Use o desbloqueio do seu dispositivo para verificar sua identidade.';
			case 'graph': return 'arquivo de gráficos (por exemplo, mapas, documentos ou figuras botânicas)';
			case 'referralRelationshipGraph': return 'Mapeamento da relação de referência';
			case 'nativeContacts': return 'Contactos locais';
			case 'registrationAndMiningTrends': return 'Registo e tendências mineiras';
			case 'inMining': return 'mineração';
			case 'registrationVolume': return 'volume de registo';
			case 'unmined': return 'inexplorado';
			case 'mined': return 'extraído';
			case 'communityMining': return 'Extração mineira comunitária';
			case 'consensusPromotionFund': return 'Fundo de Promoção do Consenso';
			case 'ecologicalAwardFund': return 'Fundo de Incentivo Ecológico';
			case 'icpFuelCrowdfunding': return 'Crowdfunding do ICP Fuel';
			case 'coreDeveloperRewards': return 'Recompensas para programadores principais';
			case 'totalAllocation': return 'Distribuição global';
			case 'miningRatio': return 'Rácio de exploração mineira';
			case 'billion.30': return '30 mil milhões';
			case 'billion.60': return '60 mil milhões';
			case 'billion.180': return '180 mil milhões de euros.';
			case 'billion.300': return '300 mil milhões de euros';
			case 'watchAdsToSupportDevelopers': return 'Ver anúncios para apoiar os programadores';
			case 'loadingAdcomponents': return 'Carregando componentes de anúncios...';
			case 'timeIsNotUp': return 'O tempo ainda não acabou!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Falha no carregamento, possivelmente a rede está bloqueada!';
			case 'pendingUSCTrecords': return 'Registos pendentes da USCT';
			case 'pendingUSCTrecordsDesc': return 'Os registos USCT pendentes serão confirmados na plataforma de publicidade no prazo de 15 a 30 dias e os registos válidos serão transferidos para a lista de registos USCT e o montante USCT adequado será adicionado ao saldo da conta.';
			case 'validity': return 'validade';
			case 'advertiser': return 'anunciantes';
			case 'earned': return 'conquistado';
			case 'withdraw': return 'levantar fundos';
			case 'validUSCTrecords': return 'Registos efectivos da USCT';
			case 'USCTmining': return 'Mineração USCT';
			case 'aboutUSCTmining': return 'Sobre as minas da USCT?';
			case 'aboutUSCTminingItme1': return '1. O USDT é uma stablecoin do dólar americano mundialmente popular que pode ser facilmente trocada por moedas soberanas nacionais nas principais bolsas de criptomoedas do mundo.';
			case 'aboutUSCTminingItme2': return '2. USCT é uma medida temporária do produto da mineração USCT, conhecido como crédito em USD, que será eventualmente convertido em USDT de acordo com o valor real da liquidação e as regras de distribuição da plataforma de publicidade e a proporção correspondente.';
			case 'aboutUSCTminingItme3': return '3) A USCT Mining é uma função de realização de anúncios de tráfego da comunidade Delta. Aproveita a grande base de utilizadores da comunidade Delta para proporcionar múltiplos benefícios aos anunciantes, aos criadores da Delta e aos ausentes. Foi concebida para proporcionar uma certa quantidade de rendimento efetivo aos trabalhadores ausentes na fase inicial, quando o ecossistema Delta ainda não se formou e prosperou; ao mesmo tempo, também proporciona um certo apoio financeiro aos programadores para garantir que podem continuar a prestar serviços de desenvolvimento durante um longo período de tempo e, em última análise, ser capazes de concretizar todos os planos do livro branco; e também proporciona um canal promocional eficaz para os anunciantes de produtos.';
			case 'aboutUSCTminingItme4': return '4) As regras de distribuição são concebidas de modo a que 40% das receitas totais sejam utilizadas como comissões de serviço técnico do promotor e os restantes 60% como prémios de absentismo comunitário. A parte da recompensa por absentismo do modelo de distribuição multinível semelhante ao DTC, a recompensa por absentismo será dividida em três partes, de acordo com o rácio de 6:3:1, de cada vez que uma das recompensas por absentismo da mineração USCT 6 partes atribuídas ao absentismo dos anúncios actuais, 3 partes atribuídas ao referenciador superior, 1 parte atribuída ao referenciador de segundo nível. Da mesma forma, também pode obter a mesma recompensa de referenciador para os amigos que referir através do USCT mining. A vantagem desta distribuição multinível é que qualquer pessoa pode ganhar uma quantidade relativamente grande de USDT ao desenvolver uma equipa de downline.';
			case 'aboutUSCTminingItme5': return '5) O período de liquidação é de 7 dias, ou seja, a cada 7 dias a validade é verificada com a plataforma de publicidade e a validade confirmada das receitas e o montante real serão registados no saldo. O montante mínimo para cada levantamento é de 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Linhas ${x} a ${y}.';
			case 'wallet': return 'bolsas';
			case 'multiChainWallet': return 'carteira multichain';
			case 'deposit': return 'depósito (por exemplo, numa conta bancária)';
			case 'transfer': return 'transferência (dinheiro para uma conta bancária)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} no endereço da carteira';
			case 'transactions': return 'Registos de transacções';
			case 'network': return 'reticulação';
			case 'walletAddress': return 'Endereço da carteira';
			case 'currentAddress': return 'endereço atual';
			case 'depositAddress': return 'Endereço de recarga';
			case 'receivingMoneyAddress': return 'endereço do beneficiário';
			case 'applyTempDepositAddress': return 'Endereço para solicitar uma recarga temporária';
			case 'tempDepositAddressTip': return '1) Este é um endereço de depósito partilhado. Não deposite o montante depois de o contrato de aluguer ter expirado ou depois de ter sido desvinculado. Se isso acontecer, o montante será perdido.';
			case 'tempDepositAddressTip2': return '2) Antes de efetuar um depósito, certifique-se de que o [nome da cadeia] e o [nome da moeda] correspondem exatamente; no caso de tokens de contrato, também precisa de se certificar de que o [padrão do contrato] e o [endereço do contrato] correspondem exatamente.';
			case 'tempDepositAddressTip3': return '3. não tente depositar fundos que não correspondam a nenhum dos parâmetros das dicas acima, caso contrário o montante será perdido.';
			case 'tempDepositAddressTip4': return '4) Se necessitar de depositar outros tipos de activos, mude para a página da moeda correspondente e para as opções de parâmetros para solicitar um novo endereço.';
			case 'applyExtensionOfValidity': return 'Pedido de prorrogação do prazo de validade';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Este endereço expirará após '),
				diff,
				const TextSpan(text: ' e será '),
				tap('manually extend'),
				const TextSpan(text: ' válido durante 12 horas antes de expirar.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Só pode ser renovado com 12 horas de antecedência';
			case 'theReceivingAddressValidForLongtime': return 'Este endereço é válido por um longo período de tempo.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Este endereço de recolha é válido por um longo período e é automaticamente creditado em tempo real.';
			case 'confirmDeposited': return 'Confirmação dos depósitos';
			case 'unbindThisDepositAddress': return 'Separar este endereço de recarga';
			case 'confirmDepositedTip': return 'Se os fundos tiverem sido transferidos, clique no botão acima para ativar a faturação para a sua carteira após 10 minutos.';
			case 'unbindDepositAddressTip': return 'Para reduzir os custos de funcionamento do contrato inteligente, desvincule o endereço de carregamento se não pretender depositar mais fundos durante o período de validade.';
			case 'transferToAddress': return 'ir para o endereço';
			case 'longPressToPaste': return 'Pressão longa para colar';
			case 'all': return 'completo';
			case 'balanceX': return ({required Object x}) => 'Saldo ${x}';
			case 'transferOut': return 'sair';
			case 'depositXcoins': return ({required Object x}) => 'Creditado ${x}';
			case 'sender': return 'remetente';
			case 'recipient': return 'destinatário';
			case 'memo': return 'nota';
			case 'kind': return 'modo (de vida)';
			case 'transferAmountExceedsAvailableBalance': return 'Transferências que excedem o saldo disponível';
			case 'pleaseEnterValidAmount': return 'Introduzir um montante válido';
			case 'networkFee': return 'Taxa de manuseamento da rede';
			case 'fee': return 'taxa de manuseamento';
			case 'validLengthXcharacters': return ({required Object x}) => 'Endereço válido com um comprimento de ${x} caracteres';
			case 'historys': return 'registo histórico';
			case 'dtcCreditdetail': return 'Detalhes de Delta Points';
			case 'usdCreditdetail': return 'Detalhes dos pontos em USD';
			case 'dappSquare': return 'dApp Square';
			case 'amountRaised': return 'Montante angariado';
			case 'disbursedAmount': return 'Montante emitido';
			case 'participationTimes': return 'Número de participantes';
			case 'completionRate': return 'taxa de conclusão';
			case 'exchangeRate': return 'taxa de câmbio';
			case 'icpCrowdfunding': return 'Crowdfunding ICP';
			case 'crowdfunding': return 'financiamento coletivo';
			case 'trendsCurve': return 'curva de tendência';
			case 'fullScreenView': return 'visualização em ecrã total';
			case 'walletBalance': return 'Saldo da carteira:';
			case 'manageWallet': return 'Gerir a carteira';
			case 'fundraiseAmount': return 'angariação de fundos';
			case 'exchangeRewardAmount': return 'Resgatar o montante do prémio';
			case 'fundraise': return 'Recolha de fundos';
			case 'rangeIntegersX': return ({required Object x}) => 'Intervalo: inteiro ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Participe com sucesso na angariação de fundos e receba uma recompensa de ${amount}DTCT';
			case 'amountSummary': return 'Resumo dos montantes';
			case 'changePreferred': return 'Mudança de preferência';
			case 'changePreferredAddress': return 'Alterar o endereço preferencial';
			case 'preferredAddressTip': return 'Os fundos serão automaticamente transferidos para o endereço preferido quando os fundos forem recolhidos utilizando um número de telemóvel registado ou um DID.';
			case 'newAddress': return 'Novo endereço';
			case 'newAddressTip': return 'Para evitar abusos, quando existe mais do que um endereço de carteira, é cobrada uma taxa de transação por cada novo endereço criado.';
			case 'createNew': return 'recém-construído';
			case 'chainNetworkName': return 'nome da rede em cadeia';
			case 'from': return 'vir de (um lugar)';
			case 'to': return 'até (um momento)';
			case 'noAvailableDepositAmountDetected': return 'Não foi detectado qualquer montante de depósito disponível!';
			case 'crossChainReceiveMoneyMonitoring': return 'A coleção de correntes cruzadas está à escuta ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Recebido ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Confirmação em curso ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Notas (leitura obrigatória para os principiantes)';
			case 'whyUseSharedAddresses': return 'Porquê utilizar um endereço partilhado?';
			case 'useSharedrAdvantage': return 'As vantagens da utilização de endereços partilhados ao depositar em cadeias são as seguintes';
			case 'useSharedrAdvantage1': return '1) Reduzir o desperdício de taxas de transferência e diminuir o custo de utilização para os utilizadores. A utilização de um endereço exclusivo conduzirá a uma dispersão excessiva dos fundos, geralmente a fim de facilitar a transferência subsequente de outros utilizadores na retirada de fundos, quando o utilizador recarrega a segunda transferência de fundos, que devem ser agrupados num ou num pequeno número de endereços de gestão.';
			case 'useSharedrAdvantage2': return '2) No esquema partilhado, o programa só precisa de manter um conjunto relativamente pequeno de endereços que podem ser rapidamente combinados com transferências de saída e escuta de recolha ligeira, o que reduz a sobrecarga de recursos computacionais. Em contrapartida, o contrário aconteceria se fossem utilizados endereços exclusivos.';
			case 'tokenType': return 'Tipo de código';
			case 'contract': return 'contratual';
			case 'contractStandard': return 'norma contratual';
			case 'contractAddress': return 'endereço do contrato';
			case 'native': return 'protozoários';
			case 'confirmUnbindingPleaseEnterYes': return 'Para confirmar a desvinculação, introduza "sim".';
			case 'listAllWorkingTempReceivingAddresses': return 'Lista de todos os endereços de recarga em cadeia activos';
			case 'setNote': return 'Configurar notas';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Não pode ser maior do que ${x} bytes';
			case 'transferFee': return 'taxa de transferência';
			case 'crossChainFee': return 'taxa de cadeia cruzada';
			case 'crossChainTransferOutError': return 'erro de transferência de ligações cruzadas';
			case 'chainName': return 'nome da cadeia';
			case 'message': return 'mensagens';
			case 'dontShowAgain': return 'já não é apresentado';
			case 'queuing': return 'fila';
			case 'optional': return 'facultativo';
			case 'publiclyVisible': return 'publicamente visível';
			case 'rates': return 'tarifa';
			case 'minimum': return 'mínimo';
			case 'maximum': return 'limite superior';
			case 'minimumBlockConfirmations': return 'Número mínimo de confirmações de bloqueio';
			case 'dsmsVerifyTerminal': return 'Terminal de validação DSMS';
			case 'overall': return 'guarda-chuva';
			case 'my': return 'meu';
			case 'checkValidatorQualifications': return 'Verificação das qualificações de privilégio do autenticador';
			case 'getVerifierPermissions': return 'Obter privilégios de autenticador';
			case 'qualification': return 'dotações naturais';
			case 'upperLimit': return 'limite';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Número máximo de terminais de acesso permitidos';
			case 'numberOfExistingAccessTerminals': return 'Número de terminais de acesso instalados';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Antes de solicitar privilégios de autenticador, é necessário preparar um telemóvel Android inativo e um número de acesso dedicado, bem como descarregar e instalar a aplicação DSMS Access Terminal.';
			case 'downloadLink': return 'ligação para descarregar';
			case 'alreadyReadyFollowingTheAboveTips': return 'Está pronto de acordo com as dicas acima';
			case 'globalUniversal': return 'para utilização global';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Atualmente, não existem autenticadores locais suficientes para participar no serviço de acesso de autenticação DSMS, selecione o serviço de acesso "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'como um número só de acesso';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Assinale a caixa "${tip}".';
			case 'inputLengthTooShort': return 'Comprimento de entrada demasiado curto';
			case 'shortName': return 'acrónimos';
			case 'pleaseEnterXname': return ({required Object name}) => 'Por favor, introduza ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'A candidatura está a ser submetida, por favor aguarde...';
			case 'applyForDSMSVerifierPermission': return 'Solicitar privilégios de validador DSMS';
			case 'confirmInformation': return 'Confirmação das informações';
			case 'lastHeartbeat': return 'batimento cardíaco final';
			case 'expirationTime': return 'tempo devido';
			case 'country': return 'nações';
			case 'accessTerminals': return 'terminal de acesso';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Número total de terminais com número de acesso DSMS';
			case 'textContent': return 'Conteúdo do texto';
			case 'scanQRcodeToLogin': return 'Deslizar para iniciar sessão';
			case 'confirmLogin': return 'Confirmar o início de sessão';
			case 'authorizeSubApplicationToLogin': return 'Autorizar esta sub-aplicação a iniciar sessão';
			case 'authorizationSuccessful': return 'A autorização foi bem sucedida!';
			case 'launchSMSprogram': return 'Lançamento do programa SMS';
			case 'notApplied': return 'Nenhum pedido';
			case 'validityPeriod': return 'período de validade';
			case 'renewal': return 'pedido de renovação';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Código de leitura para autorizar o início de sessão no terminal';
			case 'rewards': return 'incentivos';
			case 'roles': return 'carácter';
			case 'developerCenter': return 'Centro de desenvolvimento';
			case 'appName': return 'Nome da aplicação';
			case 'pleaseSelect': return 'selecionar';
			case 'category': return 'categoria';
			case 'keywords': return 'palavra-chave';
			case 'pleaseEnterAkeyword': return 'Introduzir uma palavra-chave';
			case 'createApplication': return 'Criar aplicações';
			case 'appType': return 'Tipo de aplicação';
			case 'numberOfCategoriesMustBetween1and3': return 'O número de categorias deve estar compreendido entre 1 e 3';
			case 'appLogoSpecifications': return 'Formato da imagem: png, tamanho: até 100KB, resolução (pixel): 256*256';
			case 'localAlbum': return 'Álbuns de fotografias locais';
			case 'networkPath': return 'caminho da rede';
			case 'imageURLkAddress': return 'URL da imagem';
			case 'urlAddressFormatIsIncorrect': return 'Endereço URL formatado incorretamente';
			case 'imageFormatOnlySupportsPng': return 'As imagens só são suportadas no formato "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'O comprimento deve situar-se entre ${a}-${b} caracteres.';
			case 'introduction': return 'breve';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'O tamanho da imagem não pode ser superior a ${a}, atualmente ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'A resolução da imagem tem de ser: ${p1}(pixels), atualmente ${p2}';
			case 'becomeDeveloper': return 'Tornar-se um programador';
			case 'developerInformation': return 'Informações do programador';
			case 'teamName': return 'Nome da equipa';
			case 'website': return 'nó';
			case 'other': return 'que não';
			case 'githubVerification': return 'Verificação do Github';
			case 'exampleUrl': return 'Exemplo de URL';
			case 'githubVerificationTip': return ({required Object did}) => 'Utilize a sua conta GitHub para criar um ficheiro \'delta.did\' no seu repositório com o conteúdo de \'${did}\'; em seguida, cole o endereço Url do conteúdo do githubusercontent desse ficheiro nesta caixa de entrada para autenticação.';
			case 'createApp': return 'Criar aplicações';
			case 'appManagement': return 'gestão de aplicações';
			case 'statusLogs': return 'Registo de estado';
			case 'bad': return 'não é bom';
			case 'normal': return 'habitual';
			case 'good': return 'um excelente';
			case 'onceCreatedItCannotBeChanged': return 'Uma vez criado, não pode ser alterado!';
			case 'manageApplicationEntity': return 'Gerir entidades de aplicação';
			case 'currentVersion': return 'versão atual';
			case 'submitVersion': return 'Versão apresentada';
			case 'packageOnlySupportZipCompressedFile': return 'O pacote suporta apenas ficheiros comprimidos zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'O ficheiro \'${name}\' não foi encontrado no pacote zip.';
			case 'fileList': return 'Lista de documentos:';
			case 'programPackage': return 'Pacote de programação:';
			case 'automaticallyExtractFromVersionFile': return 'Extraído automaticamente dos ficheiros ".version".';
			case 'dappVersionFormatTip': return 'O formato do número da versão deve ser um decimal com uma precisão de 2 dígitos, não excedendo um máximo de 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'O número da versão tem de ser superior à versão atual \'${v}\'';
			case 'versionNotes': return 'Impressão:';
			case 'updateRelease': return 'nova versão';
			case 'loadAndRun': return 'Carregar e executar';
			case 'notYetSubmittedProgramPackage': return 'O pacote de programas ainda não foi apresentado!';
			case 'authorizeMinidAppLogin': return 'Autorizar o início de sessão da mini-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Para confirmar a autorização, digite "sim".';
			case 'authorizeNow': return 'Autorização imediata';
			case 'operation': return 'Funcionamento.';
			case 'statusChange': return 'Mudança de estado';
			case 'changeTo': return 'Alterar para:';
			case 'notes': return 'Observações.';
			case 'changesNotEffective': return 'A alteração não é válida!';
			case 'released': return 'Publicado';
			case 'inPublicBeta': return 'versão beta aberta';
			case 'developers': return 'Desenvolvido por.';
			case 'reviewList': return 'Lista de comentários.';
			case 'postReview': return 'Deixar um comentário';
			case 'scoreNow': return 'Avaliar agora';
			case 'description': return 'Descrição.';
			case 'noData': return '(^-^)\n Não existem dados disponíveis';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'A versão foi actualizada de ${a} para ${b}.';
			case 'loadNewVersion': return 'Carregar nova versão';
			case 'name': return 'Nome.';
			case 'canisterId': return 'Tanque Id.';
			case 'updateTime': return 'tempo de atualização';
			case 'contractCanistersState': return 'Estado do tanque do contrato';
			case 'userDistribution': return 'distribuição de utilizadores';
			case 'settings': return 'Definição';
			case 'security': return 'Segurança';
			case 'invite': return 'convites';
			case 'more': return 'Mais...';
			case 'receiveAddress': return 'Endereço de receção:';
			case 'hangingAmount': return 'pendurado';
			case 'hangingAmountTips': return 'Os montantes pendentes são registos temporários de recompensas geradas pela exploração mineira pela sua equipa subordinada. Assim que tiver feito uma sessão de exploração mineira, estes montantes serão recolhidos nos montantes pendentes.';
			case 'pendingAmount': return 'pendente';
			case 'pendingAmountTips': return 'Os montantes pendentes são os que ainda não foram confirmados em relação aos anunciantes, e os que tiverem correspondências válidas serão transferidos para registos USCT válidos, sendo excluídas as partes inválidas, caso existam.';
			case 'received': return 'recebido';
			case 'processing': return 'em curso';
			case 'replied': return 'inquirido';
			case 'rejected': return 'rejeição';
			case 'unknown': return 'desconhecido';
			case 'insufficientBalance': return 'Equilíbrio insuficiente!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'O saldo de ${x} é insuficiente para cobrir as taxas da rede de ligação cruzada';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Uma transação ainda não foi concluída e não pode ser transferida neste momento';
			case 'thisfunctionNotSupportExternalCalls': return 'Esta função não pode ser chamada externamente';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Não há correspondência para um endereço que possa ser usado para pagar taxas entre cadeias, por favor mude para outra rede de cadeias para tentar.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'A correspondência atual com o montante máximo que pode ser transferido numa única transação é de ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'As observações não devem exceder 64 bytes';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Saldo insuficiente, montante: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Não é possível associar mais de 3 endereços.\nSe precisar de associar um novo endereço de pagamento.\nPrimeiro, desvincule outro endereço';
			case 'parametersA_exception': return ({required Object x}) => 'Parâmetros: ${x}, exceção';
			case 'parameterException': return 'Exceção de parâmetro!';
			case 'transferAmountMustBeLargerThan0': return 'O montante da transferência deve ser superior a 0';
			case 'authorizationHasExpired': return 'A autorização expirou';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'A aplicação não foi autorizada pelo proprietário';
			case 'authenticationTokenIsInvalid': return 'Token de autenticação inválido';
			case 'verifyInfoIsInvalidOrExpired': return 'Informações de validação inválidas ou expiradas';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Verificar se o número de terminais de acesso ultrapassou o limite de um em dez mil';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'A participação na atividade mineira deve ser superior a 3 dias';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'O número de membros do círculo de segurança não pode ser inferior a três';
			case 'avatarIsNotSet': return 'Avatar não definido';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'O número de referências diretas não pode ser inferior a 3';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'O limite de tempo é insuficiente e só pode alterar o seu número de telemóvel uma vez por ano.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Este número de telemóvel já existe e não pode ser duplicado';
			case 'securityCodeIsIncorrect': return 'Código de segurança incorreto';
			case 'securityCodeMayHaveExpired': return 'O código de segurança pode ter expirado';
			case 'sessionIdIsInvalidOrExpired': return 'ID de sessão inválido ou expirado';
			case 'sessionHasBeenAuthorized': return 'A sessão foi autorizada a ser concluída!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Só pode ser renovado no prazo de ${x} dias antes do termo do prazo';
			case 'notYetGrantedDeveloperPermissions': return 'Ainda não há direitos de autor';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'O campo ${x} não pode ser nulo';
			case 'emailFormatError': return 'Erro de formato de correio eletrónico';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Erro de formatação \'${x}';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'O campo "${x}" tem de ter entre ${y} e ${z} caracteres.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'O intervalo de seleção \'${x}\' tem de estar compreendido entre ${y} e ${z}.';
			case 'unchanged_sameAsOldContent': return 'Inalterado, o mesmo conteúdo do anterior!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' já existe!';
			case 'mobileNumberHasNotJoinedDelta': return 'Este número de telemóvel não foi adicionado à Delta!';
			case 'referrerIdCannotBeEmpty': return 'O ID do referenciador não pode estar vazio!';
			case 'referrerIdDoesNotExist': return 'A ID do referenciador não existe!';
			case 'didIsIncorrectOrInvalid': return 'A DID está incorrecta ou é inválida!';
			case 'accessTokenIsIncorrectOrInvalid': return 'O accessToken é incorreto ou inválido!';
			case 'minimumWithdrawalAmountIs1USD': return 'Mínimo de 1USD para uma única retirada';
			case 'miningTimeIsNotYet': return 'Ainda não é altura de minerar.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Já existe, por favor não o adicione novamente!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Não é possível utilizar o número de registo como número de acesso de autenticação';
			case 'canotAddYourSelf': return 'Não é possível adicionar você mesmo';
			case 'logOut': return 'Terminar sessão';
			case 'confirmLogout': return 'Confirmar a saída do sistema';
			case 'logOutTipsText': return 'Nota: De acordo com o whitepaper, cada verificação de login da sua conta consumirá uma certa quantidade das suas moedas DTC a serem pagas ao verificador como incentivo, por isso não tente entrar e sair desnecessariamente, clicando no botão abaixo irá sair imediatamente.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Introduza "sim" para confirmar a saída do sistema.';
			case 'tip': return 'chamar a atenção para algo';
			case 'cancel': return 'cancelamentos';
			case 'close': return 'coagulação';
			case 'selected': return 'selecionado';
			case 'edit': return 'compilador';
			case 'submit': return 'apresentar (um relatório, etc.)';
			case 'goBack': return 'regressão (em psicologia)';
			case 'copiedToClipboard': return 'Foi copiado para a área de transferência.';
			case 'nickname': return 'termo carinhoso';
			case 'confirm': return 'reconhecer';
			case 'cannotBeEmpty': return 'Não pode estar vazio';
			case 'deleteSuccessful': return 'Eliminado com êxito!';
			case 'successfullyModified': return 'A modificação foi bem sucedida!';
			case 'executionSuccessful': return 'A implementação foi bem sucedida!';
			case 'preview': return 'antevisões';
			case 'followSystem': return 'sistema de acompanhamento';
			case 'change': return 'variação';
			case 'replace': return 'mudança (de endereço, etc.)';
			case 'view': return 'verificar';
			case 'manage': return 'de gestão';
			case 'modify': return 'modificações';
			case 'replacedSuccessfully': return 'Substituição bem sucedida!';
			case 'authentication': return 'autenticação';
			case 'reacquire': return 'recuperar';
			case 'tryAgain': return 'Tenta de novo.';
			case 'querying': return 'Estão a ser feitos inquéritos ...';
			case 'writingToOnChain_pleaseWait': return 'Está a ser escrito na cadeia, por favor aguarde ...';
			case 'versionCheck': return 'deteção de versões';
			case 'alreadyLatestVersion': return 'Já é a última versão!';
			case 'foundNewVersion': return 'Descubra a nova versão:';
			case 'upgradeLink': return 'Ligação de atualização:';
			case 'deviceDescription': return 'Descrição do equipamento.';
			case 'notification30SecondsBeforeMiningStops': return 'Execute o lembrete de notificação 30 segundos antes da mineração parar!';
			case 'goMining': return 'Ir minerar';
			case 'deltaMiningReminder': return 'Lembrete de Mineração Delta';
			case 'clickToMine_miningIsAboutToStop': return 'Clique aqui para minerar, a mineração irá parar em breve!';
			case 'incorrect_input': return 'Entrada incorreta!';
			case 'are_you_sure_delete': return 'Tem certeza de que deseja excluir?';
			case 'delete_account': return 'Excluir conta';
			case 'how_to_operate_it': return 'Viu como operá-lo?';
			case 'deletion_warning_tip': return 'Se você excluir sua conta, perderá todas as suas moedas Delta e todos os ganhos de outros membros também serão perdidos.';
			case 'launchWhatsAppProgram': return 'Iniciar programa WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Números de acesso com este ícone também suportam verificação de mensagens do WhatsApp. Ao enviar mensagens internacionais, é recomendado usar o WhatsApp para aumentar a taxa de sucesso e reduzir custos.';
			case 'ihaveSentVerificationString': return 'Enviei uma string de verificação';
			case 'totalOfPeople': return 'Total de pessoas: ';
			case 'numberOfPeopleMining': return 'Número de pessoas minerando';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Você pode usar um navegador em outro dispositivo para escanear o QR-code e passá-lo para o programa SMS';
			case 'toggle': return 'Alternar';
			case 'DSMSverifier': return 'DSMS Verificador';
			case 'activate': return 'Ativar';
			case 'activated': return 'Ativado';
			case 'generateActivationCommand': return 'Gerar comando de ativação';
			case 'activationCommand': return 'Comando de ativação';
			case 'activationSentedTip': return 'Após o envio do SMS de ativação, verifique o status da ativação no dispositivo terminal de acesso.';
			case 'biometricsNotEnabledTip': return 'A biometria (face ou impressão digital) não está habilitada no seu dispositivo. Habilite-a para continuar.';
			case 'error': return 'Erro';
			case 'exceptionOccurredWhenCallingBiometric': return 'Ocorreu uma exceção ao chamar a função biométrica (face ou impressão digital)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' números de acesso são verificados, '),
				shouldNum,
				const TextSpan(text: ' deve ser selecionado.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text} foi enviado para os ${n} números de acesso acima?';
			case 'interface': return 'Interface:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Tempo limite de espera ou incompatibilidade de número de remetente';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'O número de celular do membro do círculo de segurança que você preencheu não corresponde a: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Faça login em até 10 minutos após fazer logout para evitar a verificação de dois fatores.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Pelo menos ${n} números de telefone celular devem ser preenchidos';
			case 'noAccessNumberInYourRegionYet': return 'Ainda não há número de acesso em sua região';
			case 'notEnoughAccessNumbersInYourRegion': return 'Não há números de acesso suficientes em sua região';
			case 'tipsForDeployDSMSterminal': return 'O sistema carregou automaticamente alguns números de acesso de outros países para você. Para fornecer serviços de verificação melhores e de menor custo, é recomendável que você ou sua pessoa de referência implantem o terminal DSMS localmente para ganhar taxas de verificação.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Ninguém pode me fornecer o código de segurança?';
			case 'useSupplementalMode': return 'Usar modo suplementar';
			case 'returnToSecurityCodeMode': return 'Retornar ao modo de código de segurança';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Por favor, insira o número de celular associado. O código do país pode ser omitido.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'O número de celular de ${name} está incorreto';
			case 'matchingVerificationStrategyIs': return 'A estratégia de verificação de correspondência é:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'O saldo é maior que 3 ICP, não há necessidade de despejar combustível por enquanto.';
			case 'escrowAccount': return 'Conta de custódia';
			case 'fuelRelay': return 'Relé de combustível';
			case 'pourFuel': return 'Despeje combustível';
			case 'fuelState': return 'Estado do combustível';
			case 'pouringFuelTips': return 'Despejar combustível não traz nenhuma vantagem ou desvantagem, seu objetivo é enriquecer a experiência do sistema Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Patrocine desenvolvedores assistindo a anúncios';
			case 'status': return 'Estado';
			case 'date': return 'Data';
			default: return null;
		}
	}
}

extension on _StringsRu {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'рис. начало';
			case 'switchLanguage': return 'Переключение языка';
			case 'languageSwitch': return 'Переключение языка';
			case 'slogan': return 'Построение децентрализованной экономики в дельте';
			case 'countryRegionCode': return 'Код страны/региона';
			case 'countryRegionSelection': return 'Выбор стран и регионов';
			case 'nextStep': return 'следующий шаг';
			case 'yourPhoneNumber': return 'Ваш номер телефона.';
			case 'pleaseSelectCountryAndRegion': return 'Пожалуйста, выберите вашу страну/регион';
			case 'pleaseEnterPhoneNumber': return 'Пожалуйста, введите действительный номер телефона!';
			case 'referrerDid': return 'Идентификатор реферера';
			case 'pleaseEnterTheReferrersDid': return 'Пожалуйста, введите действительный децентрализованный идентификатор реферера';
			case 'thisDidIsInvalid': return 'Этот DID недействителен.';
			case 'nicknameFormatTips': return 'Псевдоним не должен быть пустым и не должен превышать 16 цифр в длину.';
			case 'additionalIinformation': return 'Дополнительная информация';
			case 'invitationSubject': return 'Приглашение к достижению консенсуса в Дельте';
			case 'invitationLetter': return ({required Object did}) => 'Здравствуйте, я участвую в построении консенсуса Delta! \n Delta — это новая платформа цифровых валют с открытым исходным кодом, работающая на ICP. Она может управлять различными цифровыми валютами и использовать их без паролей, закрытых ключей или мнемоники. Пожалуйста, нажмите на эту ссылку https://delta.kim/auto/download, чтобы установить приложение, и теперь вы приглашены принять участие в достижении консенсуса и чеканке монет. \n ИДЕНТИФИКАТОР рекомендателя: ${did}';
			case 'dSMSverification': return 'Валидация DSMS';
			case 'getAccessNumbers': return 'Получите несколько номеров доступа';
			case 'getAccessNumberPromptMessage': return 'Нажмите кнопку "Получить" ниже, чтобы включить в очередь набор номеров доступа для SMS-верификации.';
			case 'optionalAccessNumbers': return 'Дополнительный номер доступа';
			case 'accessNumber': return 'номер доступа';
			case 'TELCO': return 'оператор (электростанции, транспортной сети и т.д.)';
			case 'score': return 'оценка';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('ru'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Пожалуйста, отметьте '),
					nBuilder(n),
					const TextSpan(text: ' номеров доступа и нажмите кнопку "'),
					span('text'),
					const TextSpan(text: '", чтобы перейти к следующему шагу.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Отметьте '),
					nBuilder(n),
					const TextSpan(text: ' номеров доступа и нажмите кнопку "'),
					span('text'),
					const TextSpan(text: '", чтобы перейти к следующему шагу.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta - это децентрализованная глобальная цифровая валюта с открытым исходным кодом и экосистема криптовалютных приложений.';
			case 'deltaGoalsDesc': return 'Цель - сделать так, чтобы люди могли использовать Delta для совместного создания новых цифровых валют, которые будут универсальными, справедливыми, безопасными, быстрыми и экологичными. А также предоставить различные эффективные сценарии применения этих цифровых валют и предыдущих криптовалют.';
			case 'details': return 'подробная информация';
			case 'get': return 'усиление';
			case 'select': return 'опция';
			case 'send': return 'отправка';
			case 'complete': return 'выполнить';
			case 'selectedAccessNumberPrompt': return 'При выборе отображается полный номер доступа и генерируется строка аутентификации.';
			case 'location': return 'размещение';
			case 'verificationString': return 'строка проверки';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Пожалуйста, используйте ваш номер телефона '),
				num,
				const TextSpan(text: ' и отправьте '),
				label,
				const TextSpan(text: ' на '),
				accessNumber,
				const TextSpan(text: ' для завершения проверки.'),
			]);
			case 'ihaveSentTheSMS': return 'Я отправил текстовое сообщение';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Строка проверки действительна в течение 6 минут, оставшееся время: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Слишком быстро, чтобы ждать ${x} секунд для продолжения!';
			case 'waitingForVerificationSMS': return 'Жду SMS с подтверждением...';
			case 'partSuccsForVerificationSMS': return 'SMS-верификация одного из терминалов доступа пройдена!';
			case 'creatingAccessToken': return 'Создается токен доступа...';
			case 'intoDelta': return 'Внутри Дельты';
			case 'deltaAccountIsLoggedIn': return 'Ваш аккаунт Delta вошел в систему';
			case 'iHavLoggedOut': return 'Я ухожу.';
			case 'startTwoFactorVerification': return 'Начало двойной верификации';
			case 'securityCircleVerification': return 'Валидация круга безопасности';
			case 'generateSecurityCode': return 'Сгенерировать код безопасности';
			case 'generateSecurityCodeHintText': return 'Сгенерированный код безопасности будет отправлен случайно выбранному члену вашего круга безопасности.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Вы не установили круг безопасности, ваша учетная запись очень небезопасна, пожалуйста, введите любую 6-значную цифру и перейдите к следующему шагу.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Код безопасности был сгенерирован, пожалуйста, свяжитесь со следующими родственниками и друзьями, чтобы запросить его для извлечения кода безопасности для прохождения проверки. действует в течение 30 минут!';
			case 'itGetSecurityCodeTip': return 'Совет: Вы можете получить код безопасности, дважды щелкнув по нику вашей учетной записи на странице Delta App -> Menu -> Provide Security.';
			case 'securityCircleMemberList': return 'Список участников круга безопасности:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Пожалуйста, выберите родственника или друга в списке участников, чтобы он сгенерировал и предоставил вам код безопасности для подтверждения вашей истинной личности. Цель состоит в том, чтобы предотвратить контроль учетной записи другими лицами в случае потери или кражи номера мобильного телефона.';
			case 'formatIsXdigits': return ({required Object num}) => 'Формат в виде цифр ${num}';
			case 'signInSuccessfully': return 'Вход в систему успешно выполнен!';
			case 'twoFAandLogin': return 'Двойная аутентификация и вход в систему';
			case 'verificationSuccessful': return 'Проверьте успех!';
			case 'validationFailed': return 'Валидация не прошла!';
			case 'dappInfo': return 'Информация о DApp';
			case 'securityCircle': return 'защитное кольцо';
			case 'securityCode': return 'код безопасности';
			case 'provideSecurity': return 'обеспечение безопасности';
			case 'addManully': return 'Добавить вручную';
			case 'addFromContacts': return 'Добавить из адресной книги';
			case 'addSecurityCircle': return 'Добавить Круг безопасности';
			case 'inputType': return 'Тип входа';
			case 'mobileNumber': return 'номер мобильного телефона';
			case 'did': return 'Идентификатор адреса';
			case 'pleaseEnterValidDID': return 'Пожалуйста, введите действительный идентификатор децентрализованной личности';
			case 'pleaseEnterValidWalletAddress': return 'Пожалуйста, введите действительный адрес кошелька';
			case 'appellation': return 'форма адреса';
			case 'appellationHint': return 'Как вы его называете, например, "малыш"?';
			case 'addSecurityCircleTips': return 'Пожалуйста, не добавляйте в свой круг безопасности людей, которым вы не доверяете.';
			case 'referralTeam': return 'Рекомендуемые команды';
			case 'profile': return 'Информация о счете';
			case 'menu': return 'меню';
			case 'directly': return 'прямой';
			case 'indirectly': return 'непрямой';
			case 'inviteContacts': return 'Приглашение Контакт';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Ваш приглашенный - '),
				nickname,
				const TextSpan(text: ', и вы напрямую привлекли '),
				num1,
				const TextSpan(text: ' человек, из которых '),
				num2,
				const TextSpan(text: ' в настоящее время находятся в сети.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Вы косвенно привлекли '),
				num1,
				const TextSpan(text: ' человек, из которых '),
				num2,
				const TextSpan(text: ' в настоящее время находятся в сети.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Приглашайте своих друзей присоединиться к Delta и улучшайте социальное согласие вместе. За каждого прямого реферала ставка добычи одного человека увеличивает базовую ставку на '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Приглашайте друзей присоединиться к Delta и вместе улучшайте социальный консенсус. Каждая косвенная рекомендация одного человека увеличит скорость майнинга на '),
				rate2,
				const TextSpan(text: ' от базовой ставки.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Вы уверены, что хотите удалить "${name}"?';
			case 'safetyCircleRoleQ': return 'Каково назначение предохранительного кольца?';
			case 'safetyCircleRoleA': return 'Защитите свою учетную запись, обеспечив вторичную аутентификацию в конфиденциальных ситуациях.';
			case 'howSecurityCirclesWorkQ': return 'Как работают предохранительные кольца?';
			case 'howSecurityCirclesWorkA': return 'В случае необходимости проверки личности в Круге безопасности программа Delta Smart Contracts случайным образом выберет участника из списка приятелей Круга безопасности, который поможет вам получить код безопасности для завершения проверки личности за вас. Когда вы попросите участника ввести код безопасности, он сможет подтвердить, являетесь ли вы им или нет. В то же время программа выдаст сообщение: "Откажитесь предоставить код безопасности, если это не вы", чтобы защитить безопасность вашего аккаунта. Поэтому вы всегда должны быть уверены, что члены вашего круга безопасности - это люди, которым вы можете доверять.';
			case 'securityCircleBeUsedQ': return 'Когда он будет использоваться?';
			case 'securityCircleBeUsedA1': return '1. Когда вы теряете контроль над своим Delta APP, обычно речь идет о потере или краже мобильного телефона.';
			case 'securityCircleBeUsedA2': return '2. в случае некоторых конфиденциальных операций программе Delta Smart Contract необходимо подтвердить, что это именно вы.';
			case 'provideSafetyTip1': return 'Когда ваш приятель попросит вас ввести код безопасности, обязательно подтвердите, что это его собственный код.';
			case 'provideSafetyTip2': return 'Вы обеспечиваете безопасность вышеупомянутых друзей, которые назначили вас самым доверенным лицом в своем кругу безопасности и нуждаются в вашем подтверждении безопасности на случай, если они столкнутся с конфиденциальными операциями на своем счете.';
			case 'provideSafetyTip3': return 'При необходимости дважды щелкните на аватаре другого человека, чтобы извлечь код безопасности.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'У другой стороны в данный момент нет кода безопасности, который необходимо извлечь!';
			case 'existSecurityCodeTip': return 'Убедитесь, что друг или член семьи, который просит вас ввести код безопасности, является тем же самым другом или членом семьи. Для защиты вашего друга или члена семьи вы должны отказать в предоставлении кода безопасности, если друг или член семьи не является тем же самым другом или членом семьи.';
			case 'avatarSettings': return 'Настройки аватара';
			case 'NFTAvatarPropertyRightsText': return 'Отказ от ответственности: Использование данного НФТ в качестве аватара является исключительно личным предпочтением и не имеет никакого отношения к владению правами на интеллектуальную собственность этого НФТ.';
			case 'projectWebsite': return 'Веб-сайт проекта:';
			case 'whitepaper': return 'белая бумага:';
			case 'indexID': return 'Index Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Индекс между ${start} и ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Введите индексный идентификатор вашего любимого NFT, и программа автоматически загрузит его в качестве аватара.';
			case 'miningRate': return 'скорость добычи';
			case 'miningDetails': return 'Подробности добычи';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Общая стоимость добычи: '),
				rate,
				const TextSpan(text: ' δ/день'),
			]);
			case 'EndOfMiningSession': return 'Цикл добычи закончился:';
			case 'tapToMineDeltaCoin': return 'Нажмите, чтобы добыть монеты Дельты ↑';
			case 'clickToStartMining': return 'Нажмите, чтобы начать добычу!';
			case 'miningHasStoppedPromptDesc': return 'Майнинг остановлен, каждые 24 часа проходит цикл майнинга, нажмите на значок молнии, чтобы начать новый раунд майнинга.Майнинг Delta - это механизм распределения, который не потребляет дополнительную арифметическую мощность и сетевой трафик вашего устройства.';
			case 'aboutBaseRate': return 'О базовой ставке?';
			case 'baseRateDescription': return 'Как было оговорено в техническом описании, правило снижения базовой ставки для дельта-майнинга будет разделено на две фазы.\nФаза 1: ставка будет равна 32δ/день, когда количество участников (регистраций) составляет 3 000 или меньше. Используя это значение в качестве начальной базы, базовая ставка будет уменьшаться вдвое каждый раз, когда количество людей увеличивается в 10 раз.\nФаза 2: когда число участников достигает 30 миллионов или более, базовая ставка уменьшается вдвое каждый раз, когда число участников увеличивается в 3 раза. До тех пор, пока не прекратится производство финального раскопа.';
			case 'baseRate': return 'базовый тариф (как в ISDN)';
			case 'directReferralRewards': return 'Бонус за прямое привлечение рефералов';
			case 'directReferralRewardDesc': return 'За каждого прямого реферала ваша ставка добычи будет увеличена еще на 1/3 от базовой ставки, пока они добывают.\n\n Кроме того, статус добычи ваших рефералов также будет засчитываться в ваш бонус за прямое привлечение.';
			case 'indirectReferralRewards': return 'Косвенные реферальные вознаграждения';
			case 'indirectReferralRewardDesc': return 'Когда косвенный реферал занимается добычей, ваша скорость добычи увеличивается еще на 1/10 от базовой скорости.\n\n Если вы работаете с командой прямых рефералов, каждый человек, которого они переадресуют, представляет собой косвенного реферала для вас.';
			case 'mine': return 'добывать (руду или другой ресурс из шахты)';
			case 'thisMiningInformation': return 'Текущая информация о добыче';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Участвовал в добыче: '),
				x,
				const TextSpan(text: ' раз'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Общий выигрыш на этот раз: '),
				x,
				const TextSpan(text: ' монет Дельта'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Базовый заработок: '),
				x,
				const TextSpan(text: ' монет'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Прямой вклад команды: '),
				x,
				const TextSpan(text: ' монет'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Косвенный вклад команды: '),
				x,
				const TextSpan(text: ' монет'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Длительность перерыва между раскопками: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Эффективные часы добычи: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} часов';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Для обеспечения безопасности имущества члены кружка безопасности должны постоянно поддерживать 3-5 доверенных лиц.';
			case 'index': return 'индексирование';
			case 'amount': return 'сумма денег';
			case 'balance': return 'балансы';
			case 'timeStamp': return 'метка времени';
			case 'summary': return 'рефераты';
			case 'miningHasStopped': return 'Добыча полезных ископаемых прекращена.';
			case 'miningHasStoppedDesc': return 'В настоящее время добыча остановлена, и вы начнете зарабатывать немедленно.';
			case 'startMining': return 'Начать добычу';
			case 'changeMobileNumber': return 'Изменение номера мобильного телефона';
			case 'currentMobileNumber': return 'Текущий номер мобильного телефона';
			case 'newMobileNumber': return 'Новый номер мобильного телефона';
			case 'securityCodeFormatIs6digits': return 'Формат кода безопасности - 6 цифр!';
			case 'startVrification': return 'Начало проверки';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Этот мобильный номер уже существует, связанный с ним DID: ${dId}';
			case 'noDataYet': return 'Нет данных';
			case 'previousMobileNumber': return 'Предыдущий номер мобильного телефона';
			case 'changeLog': return 'Запись изменений';
			case 'referralLinkToShare': return 'Рекомендуемые ссылки для обмена';
			case 'referrer': return 'реферер';
			case 'isoCountryCode': return 'Код страны ISO';
			case 'avatarLogo': return 'логотип заголовка';
			case 'creationTime': return 'Время создания';
			case 'lastUpdate': return 'Последнее обновление';
			case 'numberOfSecurityCircleMembers': return 'Количество членов кружков безопасности';
			case 'theLatestMining': return 'Последняя раскопка';
			case 'effectiveMiningDays': return 'Количество дней эффективной добычи';
			case 'modifyNickname': return 'Изменить прозвище';
			case 'didNotChange': return 'Никаких изменений!';
			case 'kycVerification': return 'Верификация KYC';
			case 'faceID': return 'Face ID';
			case 'touchID': return 'Идентификатор отпечатков пальцев';
			case 'biometricsAuthorizationTest': return 'Тестирование биометрической аутентификации';
			case 'currentState': return 'текущее состояние';
			case 'biometricsAuthenticationLocalizedReason': return 'Используйте разблокировку устройства для подтверждения своей личности.';
			case 'graph': return 'архив графики (например, карты, документы или ботанические рисунки)';
			case 'referralRelationshipGraph': return 'Составление карты реферальных отношений';
			case 'nativeContacts': return 'Местные контакты';
			case 'registrationAndMiningTrends': return 'Тенденции в области регистрации и добычи полезных ископаемых';
			case 'inMining': return 'добыча';
			case 'registrationVolume': return 'объем регистрации';
			case 'unmined': return 'неиспользованные';
			case 'mined': return 'добыча';
			case 'communityMining': return 'Добыча полезных ископаемых';
			case 'consensusPromotionFund': return 'Фонд содействия достижению консенсуса';
			case 'ecologicalAwardFund': return 'Фонд экологического стимулирования';
			case 'icpFuelCrowdfunding': return 'Краудфандинг ICP Fuel';
			case 'coreDeveloperRewards': return 'Вознаграждения для разработчиков';
			case 'totalAllocation': return 'Общее распределение';
			case 'miningRatio': return 'Коэффициент добычи';
			case 'billion.30': return '30 миллиардов';
			case 'billion.60': return '60 миллиардов';
			case 'billion.180': return '180 миллиардов.';
			case 'billion.300': return '300 миллиардов';
			case 'watchAdsToSupportDevelopers': return 'Смотрите рекламу, чтобы поддержать разработчиков';
			case 'loadingAdcomponents': return 'Загрузка компонентов рекламы...';
			case 'timeIsNotUp': return 'Время еще не вышло!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Не удалось загрузить, возможно, сеть заблокирована!';
			case 'pendingUSCTrecords': return 'Записи по USCT';
			case 'pendingUSCTrecordsDesc': return 'Записи, ожидающие подтверждения USCT, будут подтверждены на рекламной платформе в течение 15-30 дней, и действительные записи будут перенесены в список записей USCT, а соответствующая сумма USCT будет добавлена к балансу счета.';
			case 'validity': return 'срок действия';
			case 'advertiser': return 'рекламодатели';
			case 'earned': return 'заработал';
			case 'withdraw': return 'отзывать';
			case 'validUSCTrecords': return 'Эффективные записи USCT';
			case 'USCTmining': return 'USCT Mining';
			case 'aboutUSCTmining': return 'О добыче USCT?';
			case 'aboutUSCTminingItme1': return '1. USDT - это популярный во всем мире стейблкоин доллара США, который можно легко обменять на национальные суверенные валюты на крупнейших криптовалютных биржах по всему миру.';
			case 'aboutUSCTminingItme2': return '2. USCT - это временная мера доходов от майнинга USCT, известная как кредит USD, который в конечном итоге будет конвертирован в USDT в соответствии с фактической суммой расчетов и правилами распределения рекламной платформы и соответствующей пропорцией.';
			case 'aboutUSCTminingItme3': return '3. USCT Mining - это функция реализации трафиковой рекламы в сообществе Delta. Он использует преимущества большой базы пользователей сообщества Delta для получения многочисленных выгод для рекламодателей, разработчиков Delta и заочников. Она призвана обеспечить определенный эффективный доход для заочников на ранней стадии, когда экосистема Delta еще не сформировалась и не процветает; в то же время она обеспечивает определенную финансовую поддержку разработчикам, чтобы они могли продолжать предоставлять услуги по разработке в течение длительного периода времени и в конечном итоге смогли реализовать все планы, изложенные в документе; а также обеспечивает эффективный канал продвижения для рекламодателей продукта.';
			case 'aboutUSCTminingItme4': return '4. правила распределения разработаны таким образом, что 40 процентов от общей выручки используется в качестве комиссионных за техническое обслуживание разработчиков, а оставшиеся 60 процентов - в качестве вознаграждения за заочное участие. Вознаграждение за отсутствие на рабочем месте часть многоуровневой модели распределения, аналогичной DTC, вознаграждение за отсутствие на рабочем месте будет разделено на три части в соответствии с соотношением 6:3:1, каждый раз, когда один из заочного вознаграждения USCT добычи 6 частей выделяется на заочное текущей рекламы, 3 части выделяется на вышестоящего реферала, 1 часть выделяется на второй уровень реферала. Аналогично, вы можете получить такое же вознаграждение за друзей, которых вы привлекли через USCT mining. Преимущество такого многоуровневого распределения заключается в том, что любой человек может заработать относительно большое количество USDT, развивая команду рефералов.';
			case 'aboutUSCTminingItme5': return '5. расчетный период составляет 7 дней, т.е. каждые 7 дней действительность проверяется рекламной платформой, и подтвержденная действительность поступлений и фактическая сумма будут занесены на баланс. Минимальная сумма для каждого вывода составляет 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Строки с ${x} по ${y}.';
			case 'wallet': return 'кошельки';
			case 'multiChainWallet': return 'многоцепочечный кошелёк';
			case 'deposit': return 'депозит (например, на банковский счет)';
			case 'transfer': return 'перевод (деньги на банковский счет)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} в адресе кошелька';
			case 'transactions': return 'Записи о сделках';
			case 'network': return 'ретикуляция';
			case 'walletAddress': return 'Адрес кошелька';
			case 'currentAddress': return 'текущий адрес';
			case 'depositAddress': return 'Адрес пополнения';
			case 'receivingMoneyAddress': return 'адрес получателя платежа';
			case 'applyTempDepositAddress': return 'Адрес для подачи запроса на временное пополнение счета';
			case 'tempDepositAddressTip': return '1. Это общий депозитный адрес. Пожалуйста, не вносите сумму после истечения срока аренды или после того, как вас отвязали. Если это произойдет, сумма будет потеряна.';
			case 'tempDepositAddressTip2': return '2. перед внесением депозита убедитесь, что [Название цепи] и [Название монеты] полностью совпадают; в случае контрактных токенов вам также необходимо убедиться, что [Стандарт контракта] и [Адрес контракта] полностью совпадают.';
			case 'tempDepositAddressTip3': return '3. не пытайтесь внести средства, которые не соответствуют ни одному из параметров, указанных в советах выше, иначе сумма будет потеряна.';
			case 'tempDepositAddressTip4': return '4. Если вам необходимо пополнить счет другими видами активов, перейдите на страницу соответствующей валюты и параметры для подачи заявки на новый адрес.';
			case 'applyExtensionOfValidity': return 'Заявление на продление срока действия';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Срок действия этого адреса истекает через '),
				diff,
				const TextSpan(text: ' и будет '),
				tap('manually extend'),
				const TextSpan(text: ' действителен в течение 12 часов до истечения срока действия.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Продление возможно только за 12 часов';
			case 'theReceivingAddressValidForLongtime': return 'Этот адрес действителен в течение длительного времени.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Этот адрес сбора действителен в течение длительного времени и автоматически зачисляется в режиме реального времени.';
			case 'confirmDeposited': return 'Подтверждение вкладов';
			case 'unbindThisDepositAddress': return 'Разблокируйте этот адрес пополнения счета';
			case 'confirmDepositedTip': return 'Если средства были переведены, нажмите на кнопку выше, чтобы через 10 минут на ваш кошелек был выставлен счет.';
			case 'unbindDepositAddressTip': return 'Чтобы снизить нагрузку на смарт-контракт, пожалуйста, отвяжите адрес пополнения, если вы больше не будете вносить средства в течение срока действия.';
			case 'transferToAddress': return 'перейти по адресу';
			case 'longPressToPaste': return 'Длительное нажатие для вставки';
			case 'all': return 'полный';
			case 'balanceX': return ({required Object x}) => 'Баланс ${x}';
			case 'transferOut': return 'превращаться';
			case 'depositXcoins': return ({required Object x}) => 'Начислено ${x}';
			case 'sender': return 'отправитель';
			case 'recipient': return 'получатель';
			case 'memo': return 'примечание';
			case 'kind': return 'образ (жизни)';
			case 'transferAmountExceedsAvailableBalance': return 'Переводы сверх имеющегося остатка';
			case 'pleaseEnterValidAmount': return 'Пожалуйста, введите действительную сумму';
			case 'networkFee': return 'Комиссия за обработку данных в сети';
			case 'fee': return 'комиссия за обработку';
			case 'validLengthXcharacters': return ({required Object x}) => 'Допустимая длина адреса ${x} символов';
			case 'historys': return 'историческая справка';
			case 'dtcCreditdetail': return 'Детали Delta Points';
			case 'usdCreditdetail': return 'USD Баллы Подробнее';
			case 'dappSquare': return 'dApp Plaza';
			case 'amountRaised': return 'Сумма сбора';
			case 'disbursedAmount': return 'Выпущенная сумма';
			case 'participationTimes': return 'Количество участников';
			case 'completionRate': return 'процент выполнения';
			case 'exchangeRate': return 'курс обмена валюты';
			case 'icpCrowdfunding': return 'Краудфандинг ICP';
			case 'crowdfunding': return 'краудфандинг';
			case 'trendsCurve': return 'кривая тренда';
			case 'fullScreenView': return 'полноэкранный просмотр';
			case 'walletBalance': return 'Баланс кошелька:';
			case 'manageWallet': return 'Управление кошельком';
			case 'fundraiseAmount': return 'сбор средств';
			case 'exchangeRewardAmount': return 'Использование суммы вознаграждения';
			case 'fundraise': return 'сбор средств';
			case 'rangeIntegersX': return ({required Object x}) => 'Диапазон: целое число ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Успешно участвуйте в сборе средств и получайте вознаграждение ${amount}DTCT';
			case 'amountSummary': return 'Сводные данные о суммах';
			case 'changePreferred': return 'Изменение предпочтений';
			case 'changePreferredAddress': return 'Изменить предпочитаемый адрес';
			case 'preferredAddressTip': return 'Средства будут автоматически переведены на предпочитаемый адрес при получении средств с помощью зарегистрированного мобильного номера или DID.';
			case 'newAddress': return 'Новый адрес';
			case 'newAddressTip': return 'Для предотвращения злоупотреблений, когда существует более одного адреса кошелька, за каждый новый созданный адрес взимается комиссия за транзакцию.';
			case 'createNew': return 'недавно построенный';
			case 'chainNetworkName': return 'имя сети';
			case 'from': return 'происходить из (места)';
			case 'to': return 'до (времени)';
			case 'noAvailableDepositAmountDetected': return 'Не обнаружено доступной суммы депозита!';
			case 'crossChainReceiveMoneyMonitoring': return 'Коллекция с перекрестными цепочками слушает ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Получено ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Подтверждение в процессе ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Примечания (обязательно к прочтению для новичков)';
			case 'whyUseSharedAddresses': return 'Зачем использовать общий адрес?';
			case 'useSharedrAdvantage': return 'Преимущества использования общих адресов при депонировании по цепочкам заключаются в следующем:';
			case 'useSharedrAdvantage1': return '1. уменьшите трату комиссии за перевод средств и снижайте стоимость использования для пользователей. Из-за использования эксклюзивного адреса это приведет к слишком большому распылению средств, как правило, для того, чтобы облегчить последующую передачу другим пользователям при выводе средств, когда пользователь пополняет счет, второй перевод средств должен быть объединен в один или небольшое количество адресов управления.';
			case 'useSharedrAdvantage2': return '2. в схеме с общим доступом программе необходимо поддерживать лишь относительно небольшой пул адресов, которые могут быть быстро сопоставлены с исходящими передачами и прослушиванием легкого сбора, что снижает затраты вычислительных ресурсов. В случае использования эксклюзивных адресов все было бы наоборот.';
			case 'tokenType': return 'Тип токена';
			case 'contract': return 'подрядчик';
			case 'contractStandard': return 'стандарт договора';
			case 'contractAddress': return 'адрес договора';
			case 'native': return 'простейшие';
			case 'confirmUnbindingPleaseEnterYes': return 'Чтобы подтвердить отмену привязки, введите "да".';
			case 'listAllWorkingTempReceivingAddresses': return 'Перечислите все рабочие адреса кросс-цепочек перезарядки';
			case 'setNote': return 'Настройка заметок';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Не может быть длиннее ${x} байт';
			case 'transferFee': return 'комиссия за перевод';
			case 'crossChainFee': return 'межцепочечная комиссия';
			case 'crossChainTransferOutError': return 'ошибка при передаче сшивки';
			case 'chainName': return 'название цепи';
			case 'message': return 'сообщения';
			case 'dontShowAgain': return 'больше не отображается';
			case 'queuing': return 'очередь';
			case 'optional': return 'опция';
			case 'publiclyVisible': return 'публично видимый';
			case 'rates': return 'тариф';
			case 'minimum': return 'минимум';
			case 'maximum': return 'верхний предел';
			case 'minimumBlockConfirmations': return 'Минимальное количество подтверждений блока';
			case 'dsmsVerifyTerminal': return 'Терминал проверки DSMS';
			case 'overall': return 'зонт';
			case 'my': return 'мой';
			case 'checkValidatorQualifications': return 'Проверка квалификации привилегий аутентификатора';
			case 'getVerifierPermissions': return 'Получение привилегий аутентификатора';
			case 'qualification': return 'природные данные';
			case 'upperLimit': return 'ограничение';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Максимальное количество разрешенных терминалов доступа';
			case 'numberOfExistingAccessTerminals': return 'Количество установленных терминалов доступа';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Прежде чем подавать заявку на получение привилегий аутентификатора, необходимо подготовить незанятый мобильный телефон с операционной системой Android и выделенным номером доступа, а также скачать и установить приложение DSMS Access Terminal.';
			case 'downloadLink': return 'ссылка для скачивания';
			case 'alreadyReadyFollowingTheAboveTips': return 'Он готов в соответствии с приведенными выше советами.';
			case 'globalUniversal': return 'для глобального использования';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'В настоящее время недостаточно локальных аутентификаторов для участия в службе доступа к аутентификации DSMS, пожалуйста, выберите службу доступа "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'как номер только для доступа';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Поставьте галочку в поле "${tip}".';
			case 'inputLengthTooShort': return 'Слишком короткая длина входного сигнала';
			case 'shortName': return 'аббревиатуры';
			case 'pleaseEnterXname': return ({required Object name}) => 'Пожалуйста, введите ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Заявка подана, пожалуйста, подождите...';
			case 'applyForDSMSVerifierPermission': return 'Подать заявку на получение привилегий валидатора DSMS';
			case 'confirmInformation': return 'Подтверждение информации';
			case 'lastHeartbeat': return 'последний удар сердца';
			case 'expirationTime': return 'срок';
			case 'country': return 'нации';
			case 'accessTerminals': return 'терминал доступа';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Общее количество терминалов с номером доступа DSMS';
			case 'textContent': return 'Содержание текста';
			case 'scanQRcodeToLogin': return 'Проведите пальцем по экрану, чтобы войти в систему';
			case 'confirmLogin': return 'Подтвердите вход';
			case 'authorizeSubApplicationToLogin': return 'Разрешите этому подприложению войти в систему';
			case 'authorizationSuccessful': return 'Авторизация прошла успешно!';
			case 'launchSMSprogram': return 'Запуск программы SMS';
			case 'notApplied': return 'Нет приложения';
			case 'validityPeriod': return 'срок действия';
			case 'renewal': return 'заявление на продление';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Сканирование кода для авторизации входа в терминал';
			case 'rewards': return 'стимулы';
			case 'roles': return 'персонаж';
			case 'developerCenter': return 'Центр разработчиков';
			case 'appName': return 'Имя приложения';
			case 'pleaseSelect': return 'пожалуйста, выберите';
			case 'category': return 'категория';
			case 'keywords': return 'по слову';
			case 'pleaseEnterAkeyword': return 'Пожалуйста, введите ключевое слово';
			case 'createApplication': return 'Создание приложений';
			case 'appType': return 'Тип приложения';
			case 'numberOfCategoriesMustBetween1and3': return 'Количество категорий должно быть от 1 до 3';
			case 'appLogoSpecifications': return 'Формат изображения: png, размер: не более 100 КБ, разрешение (пикселей): 256*256';
			case 'localAlbum': return 'Местные фотоальбомы';
			case 'networkPath': return 'сетевой путь';
			case 'imageURLkAddress': return 'URL-адрес изображения';
			case 'urlAddressFormatIsIncorrect': return 'Неправильно отформатированный адрес URL';
			case 'imageFormatOnlySupportsPng': return 'Изображения поддерживаются только в формате "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'Длина должна быть в пределах ${a}-${b} символов.';
			case 'introduction': return 'краткое содержание';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'Размер изображения не может быть больше ${a}, сейчас ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'Разрешение изображения должно быть: ${p1}(пикселей), в настоящее время ${p2}';
			case 'becomeDeveloper': return 'Станьте разработчиком';
			case 'developerInformation': return 'Информация о разработчике';
			case 'teamName': return 'Название команды';
			case 'website': return 'узел';
			case 'other': return 'кроме';
			case 'githubVerification': return 'Верификация на Github';
			case 'exampleUrl': return 'Пример Url';
			case 'githubVerificationTip': return ({required Object did}) => 'Пожалуйста, используйте свой аккаунт GitHub для создания файла \'delta.did\' в вашем репозитории с содержимым \'${did}\'; затем вставьте Url-адрес этого файла в поле ввода для аутентификации.';
			case 'createApp': return 'Создание приложений';
			case 'appManagement': return 'управление приложениями';
			case 'statusLogs': return 'Журнал состояния';
			case 'bad': return 'нехорошо';
			case 'normal': return 'обычно';
			case 'good': return 'превосходный';
			case 'onceCreatedItCannotBeChanged': return 'Созданный однажды, он не может быть изменен!';
			case 'manageApplicationEntity': return 'Управление сущностями приложения';
			case 'currentVersion': return 'текущая версия';
			case 'submitVersion': return 'Представленная версия';
			case 'packageOnlySupportZipCompressedFile': return 'Пакет поддерживает только файлы, сжатые в формате zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Файл \'${name}\' не найден в zip-пакете.';
			case 'fileList': return 'Список документов:';
			case 'programPackage': return 'Пакет программирования:';
			case 'automaticallyExtractFromVersionFile': return 'Автоматическое извлечение из файлов \'.version\'';
			case 'dappVersionFormatTip': return 'Формат номера версии должен быть десятичным с точностью до 2 цифр, не превышающей 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Номер версии должен быть больше, чем текущая версия \'${v}\'.';
			case 'versionNotes': return 'Оттиск:';
			case 'updateRelease': return 'новая версия';
			case 'loadAndRun': return 'Загрузите и запустите';
			case 'notYetSubmittedProgramPackage': return 'Пакет программ еще не представлен!';
			case 'authorizeMinidAppLogin': return 'Авторизуйте вход в мини-приложение';
			case 'confirmAuthorizationPleaseEnterYes': return 'Чтобы подтвердить авторизацию, введите "да".';
			case 'authorizeNow': return 'Немедленное разрешение';
			case 'operation': return 'Операция.';
			case 'statusChange': return 'Изменение статуса';
			case 'changeTo': return 'Изменить на:';
			case 'notes': return 'Примечания.';
			case 'changesNotEffective': return 'Изменение недействительно!';
			case 'released': return 'Опубликовано';
			case 'inPublicBeta': return 'открытая бета-версия';
			case 'developers': return 'Разработано.';
			case 'reviewList': return 'Список комментариев.';
			case 'postReview': return 'Оставить комментарий';
			case 'scoreNow': return 'Оценить сейчас';
			case 'description': return 'Описание.';
			case 'noData': return '(^-^)\n Нет данных';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Версия была обновлена с ${a} до ${b}.';
			case 'loadNewVersion': return 'Загрузить новую версию';
			case 'name': return 'Имя.';
			case 'canisterId': return 'Tank Id.';
			case 'updateTime': return 'время обновления';
			case 'contractCanistersState': return 'Статус контрактного резервуара';
			case 'userDistribution': return 'распределение пользователей';
			case 'settings': return 'Настройка';
			case 'security': return 'Безопасность';
			case 'invite': return 'приглашения';
			case 'more': return 'Подробнее...';
			case 'receiveAddress': return 'Адрес получения:';
			case 'hangingAmount': return 'висит';
			case 'hangingAmountTips': return 'Отложенные суммы - это временные записи о вознаграждениях, полученных за добычу полезных ископаемых вашей командой, как только вы проведете сеанс добычи, эти суммы будут собраны в Отложенных суммах.';
			case 'pendingAmount': return 'ожидание';
			case 'pendingAmountTips': return 'Незавершенные суммы - это суммы, которые еще не подтверждены рекламодателями, а те, которые соответствуют действительности, будут перенесены в действительную запись USCT, а недействительная часть будет исключена.';
			case 'received': return 'получено';
			case 'processing': return 'в процессе';
			case 'replied': return 'респондент';
			case 'rejected': return 'отказ';
			case 'unknown': return 'Неизведанное';
			case 'insufficientBalance': return 'Недостаточный баланс!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Баланс ${x} недостаточен для оплаты услуг перекрестной сети';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Транзакция еще не завершена и не может быть передана в данный момент';
			case 'thisfunctionNotSupportExternalCalls': return 'Эта функция не поддерживает вызов извне';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Не найден адрес, который можно использовать для оплаты межцепочечной комиссии, пожалуйста, переключитесь на другую сеть, чтобы попробовать.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'Текущее соответствие максимальной суммы, которая может быть переведена за одну транзакцию, составляет ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Заметки не должны превышать 64 байт';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Баланс недостаточен, и его сумма составляет: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Вы не можете привязать более 3 адресов.\nЕсли вам нужно привязать новый платежный адрес.\nПожалуйста, сначала отвяжите другой адрес';
			case 'parametersA_exception': return ({required Object x}) => 'Параметры: ${x}, исключение';
			case 'parameterException': return 'Исключение параметра!';
			case 'transferAmountMustBeLargerThan0': return 'Сумма перевода должна быть больше 0';
			case 'authorizationHasExpired': return 'Срок действия разрешения истек';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'Приложение не было авторизовано владельцем';
			case 'authenticationTokenIsInvalid': return 'Неверный маркер аутентификации';
			case 'verifyInfoIsInvalidOrExpired': return 'Недействительная или просроченная информация о проверке';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Убедитесь, что количество терминалов доступа превысило предел один на десять тысяч.';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'Участие в добыче должно быть более 3 дней';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Число членов круга безопасности не может быть меньше трех';
			case 'avatarIsNotSet': return 'Аватар не установлен';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Количество прямых рефералов не может быть меньше 3';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Временной лимит недостаточен, и вы можете менять номер мобильного телефона только один раз в год.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Этот номер мобильного телефона уже существует и не может быть продублирован';
			case 'securityCodeIsIncorrect': return 'Неверный код безопасности';
			case 'securityCodeMayHaveExpired': return 'Возможно, истек срок действия кода безопасности';
			case 'sessionIdIsInvalidOrExpired': return 'Неверный или истекший идентификатор сеанса';
			case 'sessionHasBeenAuthorized': return 'Сессия была разрешена к завершению!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Продление возможно только в течение ${x} дней до истечения срока действия';
			case 'notYetGrantedDeveloperPermissions': return 'Права разработчика пока отсутствуют';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Поле ${x} не может быть нулевым';
			case 'emailFormatError': return 'Ошибка формата электронной почты';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Ошибка форматирования \'${x}\'';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Поле "${x}" должно быть длиной от ${y} до ${z} символов.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Диапазон выбора \'${x}\' должен находиться между ${y} и ${z}.';
			case 'unchanged_sameAsOldContent': return 'Без изменений, то же содержание, что и раньше!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' уже существует!';
			case 'mobileNumberHasNotJoinedDelta': return 'Этот номер мобильного телефона не был добавлен в Delta!';
			case 'referrerIdCannotBeEmpty': return 'Идентификатор реферера не может быть пустым!';
			case 'referrerIdDoesNotExist': return 'Идентификатор реферера не существует!';
			case 'didIsIncorrectOrInvalid': return 'DID неверен или недействителен!';
			case 'accessTokenIsIncorrectOrInvalid': return 'Токен доступа неверен или недействителен!';
			case 'minimumWithdrawalAmountIs1USD': return 'Минимум 1USD для одного вывода средств';
			case 'miningTimeIsNotYet': return 'Время для добычи еще не пришло.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Уже существует, пожалуйста, не добавляйте его снова!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Невозможно использовать регистрационный номер в качестве номера доступа для аутентификации';
			case 'canotAddYourSelf': return 'Не удалось добавить себя';
			case 'logOut': return 'Выйти из системы';
			case 'confirmLogout': return 'Подтвердите выход из системы';
			case 'logOutTipsText': return 'Пожалуйста, обратите внимание: в соответствии с информацией в whitepaper, при каждой верификации вашего аккаунта будет расходоваться определенное количество ваших монет DTC, которые будут выплачены верификатору в качестве поощрения, поэтому не пытайтесь входить и выходить без необходимости, нажатие на кнопку ниже приведет к немедленному выходу из системы.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Пожалуйста, введите "да", чтобы подтвердить выход из системы.';
			case 'tip': return 'привлекать внимание к чему-л.';
			case 'cancel': return 'отмены';
			case 'close': return 'свертывание';
			case 'selected': return 'выбранные';
			case 'edit': return 'компилятор';
			case 'submit': return 'представить (отчет и т.д.)';
			case 'goBack': return 'регрессия (в психологии)';
			case 'copiedToClipboard': return 'Он был скопирован в буфер обмена.';
			case 'nickname': return 'ласкательное выражение';
			case 'confirm': return 'узнайте';
			case 'cannotBeEmpty': return 'Не может быть пустым';
			case 'deleteSuccessful': return 'Удалено успешно!';
			case 'successfullyModified': return 'Модификация прошла успешно!';
			case 'executionSuccessful': return 'Реализация прошла успешно!';
			case 'preview': return 'превью';
			case 'followSystem': return 'система контроля';
			case 'change': return 'вариация';
			case 'replace': return 'замены';
			case 'view': return 'проверять';
			case 'manage': return 'менеджмент';
			case 'modify': return 'модификации';
			case 'replacedSuccessfully': return 'Замена прошла успешно!';
			case 'authentication': return 'аутентификация';
			case 'reacquire': return 'получить';
			case 'tryAgain': return 'Попробуйте еще раз.';
			case 'querying': return 'В настоящее время ведутся поиски ...';
			case 'writingToOnChain_pleaseWait': return 'Он записывается в цепочку, пожалуйста, подождите ...';
			case 'versionCheck': return 'определение версии';
			case 'alreadyLatestVersion': return 'Уже последняя версия!';
			case 'foundNewVersion': return 'Откройте для себя новую версию:';
			case 'upgradeLink': return 'Ссылка на обновление:';
			case 'deviceDescription': return 'Описание оборудования.';
			case 'notification30SecondsBeforeMiningStops': return 'Выполните напоминание об уведомлении за 30 секунд до остановки майнинга!';
			case 'goMining': return 'Займитесь майнингом';
			case 'deltaMiningReminder': return 'Напоминание о дельта-майнинге';
			case 'clickToMine_miningIsAboutToStop': return 'Нажмите здесь, чтобы начать майнинг, майнинг скоро прекратится!';
			case 'incorrect_input': return 'Неверный ввод!';
			case 'are_you_sure_delete': return 'Вы уверены, что хотите удалить?';
			case 'delete_account': return 'Удалить аккаунт';
			case 'how_to_operate_it': return 'Посмотрите, как им управлять?';
			case 'deletion_warning_tip': return 'Если вы удалите свою учетную запись, вы потеряете все свои монеты Delta, а также все доходы других участников.';
			case 'launchWhatsAppProgram': return 'Запустить программу WhatsApp';
			case 'sms': return 'СМС';
			case 'whatsApp_verification_tips': return 'Номера доступа с этим значком также поддерживают проверку сообщений WhatsApp. При отправке международных сообщений рекомендуется использовать WhatsApp, чтобы повысить вероятность успеха и сократить расходы.';
			case 'ihaveSentVerificationString': return 'Я отправил строку проверки';
			case 'totalOfPeople': return 'Всего людей: ';
			case 'numberOfPeopleMining': return 'Количество людей, занятых майнингом';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Вы можете использовать браузер на другом устройстве, чтобы отсканировать QR-код и передать его в программу SMS';
			case 'toggle': return 'Переключить';
			case 'DSMSverifier': return 'DSMS Verifier';
			case 'activate': return 'Активировать';
			case 'activated': return 'Активирован';
			case 'generateActivationCommand': return 'Сгенерировать команду активации';
			case 'activationCommand': return 'Команда активации';
			case 'activationSentedTip': return 'После отправки SMS-сообщения об активации проверьте статус активации на терминальном устройстве доступа.';
			case 'biometricsNotEnabledTip': return 'Биометрия (лицо или отпечатки пальцев) не включена на вашем устройстве. Включите ее, чтобы продолжить.';
			case 'error': return 'Ошибка';
			case 'exceptionOccurredWhenCallingBiometric': return 'Произошло исключение при вызове биометрической функции (лицо или отпечаток пальца)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: 'Проверено '),
				checkedNum,
				const TextSpan(text: ' номеров доступа, следует выбрать '),
				shouldNum,
				const TextSpan(text: '.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Был ли отправлен ${text} на указанные выше номера доступа ${n}?';
			case 'interface': return 'Интерфейс:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Время ожидания истекло или номер отправителя не совпадает';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Номер мобильного телефона участника круга безопасности, который вы указали, не совпадает: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Войдите в систему в течение 10 минут после выхода, чтобы избежать двухфакторной проверки.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Необходимо указать не менее ${n} номеров мобильных телефонов';
			case 'noAccessNumberInYourRegionYet': return 'В вашем регионе пока нет номера доступа';
			case 'notEnoughAccessNumbersInYourRegion': return 'Недостаточно номеров доступа в вашем регионе';
			case 'tipsForDeployDSMSterminal': return 'Система автоматически загрузила для вас некоторые номера доступа из других стран. Чтобы предоставить более качественные и недорогие услуги проверки, вам или вашему рефералу рекомендуется развернуть терминал DSMS локально, чтобы получать плату за проверку.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Никто не может предоставить мне код безопасности?';
			case 'useSupplementalMode': return 'Использовать дополнительный режим';
			case 'returnToSecurityCodeMode': return 'Вернуться в режим кода безопасности';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Пожалуйста, введите их связанный номер мобильного телефона. Код страны можно опустить.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Неверный номер мобильного телефона ${name}';
			case 'matchingVerificationStrategyIs': return 'Стратегия проверки соответствия:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Баланс больше 3 ICP, пока нет необходимости заливать топливо.';
			case 'escrowAccount': return 'Счет условного депонирования';
			case 'fuelRelay': return 'Топливное реле';
			case 'pourFuel': return 'Залить топливо';
			case 'fuelState': return 'Состояние топлива';
			case 'pouringFuelTips': return 'Заливка топлива не приносит вам никаких преимуществ или недостатков, ее цель — обогатить опыт использования системы Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Спонсируйте разработчиков, просматривая рекламу';
			case 'status': return 'Статус';
			case 'date': return 'Дата';
			default: return null;
		}
	}
}

extension on _StringsTh {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'หน้าแรก';
			case 'switchLanguage': return 'เปลี่ยนภาษา';
			case 'languageSwitch': return 'สวิตช์ภาษา';
			case 'slogan': return 'สร้างวงจรเศรษฐกิจแบบกระจายอำนาจในพื้นที่สามเหลี่ยมปากแม่น้ำ';
			case 'countryRegionCode': return 'รหัสประเทศ';
			case 'countryRegionSelection': return 'การเลือกประเทศและภูมิภาค';
			case 'nextStep': return 'ขั้นตอนต่อไป';
			case 'yourPhoneNumber': return 'หมายเลขโทรศัพท์ของคุณ';
			case 'pleaseSelectCountryAndRegion': return 'โปรดเลือกประเทศ/ภูมิภาคของคุณ';
			case 'pleaseEnterPhoneNumber': return 'กรุณากรอกหมายเลขโทรศัพท์ที่ถูกต้อง!';
			case 'referrerDid': return 'ผู้แนะนำ DID';
			case 'pleaseEnterTheReferrersDid': return 'โปรดป้อนรหัสประจำตัวแบบกระจายอำนาจของผู้แนะนำที่ถูกต้อง';
			case 'thisDidIsInvalid': return 'DID นี้ไม่ถูกต้อง';
			case 'nicknameFormatTips': return 'ชื่อเล่นไม่สามารถเว้นว่างได้ และต้องมีความยาวไม่เกิน 16 ตัวอักษร';
			case 'additionalIinformation': return 'ข้อมูลเพิ่มเติม';
			case 'invitationSubject': return 'ขอเชิญร่วมสร้างฉันทามติเดลต้า';
			case 'invitationLetter': return ({required Object did}) => 'สวัสดี ฉันเข้าร่วมในการสร้างฉันทามติของเดลต้า! \n Delta เป็นแพลตฟอร์มสกุลเงินดิจิทัลแบบโอเพ่นซอร์สใหม่ที่ทำงานบน ICP สามารถจัดการและใช้สกุลเงินดิจิทัลต่างๆ ได้โดยไม่ต้องใช้รหัสผ่าน คีย์ส่วนตัว หรือตัวช่วยจำ โปรดคลิกลิงก์นี้ https://delta.kim/auto/download เพื่อติดตั้งแอปพลิเคชัน และตอนนี้คุณได้รับเชิญให้เข้าร่วมในการสร้างฉันทามติและการทำเหรียญกษาปณ์ \n ผู้แนะนำ DID: ${did}';
			case 'dSMSverification': return 'การตรวจสอบ DSMS';
			case 'getAccessNumbers': return 'รับหมายเลขการเข้าถึงบางส่วน';
			case 'getAccessNumberPromptMessage': return 'คลิกปุ่ม "รับ" ด้านล่างเพื่อเลือกกลุ่มหมายเลขเข้าถึงการยืนยันทาง SMS ในคิว';
			case 'optionalAccessNumbers': return 'หมายเลขการเข้าถึงเพิ่มเติม';
			case 'accessNumber': return 'หมายเลขการเข้าถึง';
			case 'TELCO': return 'ผู้ดำเนินการ';
			case 'score': return 'คะแนน';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('th'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'โปรดตรวจสอบหมายเลขเข้าถึง '),
					nBuilder(n),
					const TextSpan(text: ' แล้วคลิกปุ่ม "'),
					span('text'),
					const TextSpan(text: '" เพื่อไปยังขั้นตอนต่อไป'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'โปรดตรวจสอบหมายเลขเข้าใช้งาน '),
					nBuilder(n),
					const TextSpan(text: ' แล้วคลิกปุ่ม "'),
					span('text'),
					const TextSpan(text: '" เพื่อไปยังขั้นตอนต่อไป '),
				]),
			);
			case 'whatIsDeltaDesc': return 'เดลต้าเป็นโครงการทดลองสกุลเงินดิจิทัลระดับโลกที่มีการกระจายอำนาจแบบโอเพ่นซอร์สและห่วงโซ่ระบบนิเวศแอปพลิเคชันสกุลเงิน';
			case 'deltaGoalsDesc': return 'เป้าหมายคือการอนุญาตให้ผู้คนใช้เดลต้าเพื่อร่วมกันสร้างสกุลเงินดิจิทัลใหม่ที่เป็นสากล ยุติธรรม ปลอดภัย รวดเร็ว และเป็นมิตรต่อสิ่งแวดล้อม และจัดเตรียมสถานการณ์การใช้งานที่มีประสิทธิภาพต่างๆ สำหรับสกุลเงินดิจิทัลเหล่านี้และสกุลเงินดิจิทัลก่อนหน้านี้';
			case 'details': return 'รายละเอียด';
			case 'get': return 'รับ';
			case 'select': return 'เลือก';
			case 'send': return 'ส่ง';
			case 'complete': return 'เสร็จ';
			case 'selectedAccessNumberPrompt': return 'เมื่อเลือก หมายเลขเข้าใช้งานแบบเต็มจะแสดงขึ้น และสร้างสตริงการยืนยัน';
			case 'location': return 'ที่ตั้ง';
			case 'verificationString': return 'สตริงการตรวจสอบ';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'โปรดใช้หมายเลขโทรศัพท์ของคุณ '),
				num,
				const TextSpan(text: ' และส่ง '),
				label,
				const TextSpan(text: ' ไปที่ '),
				accessNumber,
				const TextSpan(text: ' เพื่อดำเนินการยืนยันให้เสร็จสิ้น'),
			]);
			case 'ihaveSentTheSMS': return 'ฉันได้ส่งข้อความแล้ว';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'สตริงการตรวจสอบถูกต้องภายใน 6 นาที เวลาที่เหลืออยู่: '),
				time,
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'เร็วเกินไป รอ ${x} วินาทีก่อนดำเนินการต่อ!';
			case 'waitingForVerificationSMS': return 'กำลังรอ SMS ยืนยัน...';
			case 'partSuccsForVerificationSMS': return 'ผ่านการยืนยันทาง SMS ของหนึ่งในเทอร์มินัลการเข้าถึงแล้ว!';
			case 'creatingAccessToken': return 'กำลังสร้างโทเค็นเพื่อการเข้าถึง...';
			case 'intoDelta': return 'เข้าสู่เดลต้า';
			case 'deltaAccountIsLoggedIn': return 'บัญชีเดลต้าของคุณเข้าสู่ระบบแล้ว';
			case 'iHavLoggedOut': return 'ฉันออกจากระบบแล้ว';
			case 'startTwoFactorVerification': return 'เริ่มการยืนยันแบบสองขั้นตอน';
			case 'securityCircleVerification': return 'การตรวจสอบวงกลมความปลอดภัย';
			case 'generateSecurityCode': return 'สร้างรหัสความปลอดภัย';
			case 'generateSecurityCodeHintText': return 'รหัสความปลอดภัยที่สร้างขึ้นจะถูกส่งไปยังสมาชิกที่ได้รับการสุ่มเลือกในแวดวงความปลอดภัยของคุณ';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'คุณยังไม่ได้ตั้งค่าวงกลมความปลอดภัย บัญชีของคุณไม่ปลอดภัยอย่างยิ่ง โปรดป้อนตัวยึดตำแหน่ง 6 หลักและไปที่ขั้นตอนถัดไป';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'สร้างรหัสความปลอดภัยแล้ว โปรดติดต่อญาติและเพื่อนต่อไปนี้เพื่อขอให้ดึงรหัสความปลอดภัยเพื่อให้คุณผ่านการตรวจสอบ ใช้งานได้ภายใน 30 นาที!';
			case 'itGetSecurityCodeTip': return 'เคล็ดลับ: ค้นหาชื่อเล่นบัญชีของคุณในหน้า Delta App->Menu->Provide Security และดับเบิลคลิกเพื่อรับรหัสความปลอดภัย';
			case 'securityCircleMemberList': return 'รายชื่อสมาชิกแวดวงความปลอดภัย:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'โปรดเลือกญาติหรือเพื่อนในรายชื่อสมาชิกเพื่อสร้างและมอบรหัสความปลอดภัยเพื่อยืนยันตัวตนที่แท้จริงของคุณ จุดประสงค์คือเพื่อป้องกันไม่ให้ผู้อื่นควบคุมบัญชีเมื่อหมายเลขโทรศัพท์มือถือสูญหายหรือถูกขโมย';
			case 'formatIsXdigits': return ({required Object num}) => 'รูปแบบคือ ${num} หลัก';
			case 'signInSuccessfully': return 'เข้าสู่ระบบสำเร็จ!';
			case 'twoFAandLogin': return 'การยืนยันสองขั้นตอนและการเข้าสู่ระบบ';
			case 'verificationSuccessful': return 'การยืนยันสำเร็จ!';
			case 'validationFailed': return 'การยืนยันล้มเหลว!';
			case 'dappInfo': return 'ข้อมูลดีแอป';
			case 'securityCircle': return 'วงกลมความปลอดภัย';
			case 'securityCode': return 'รหัสความปลอดภัย';
			case 'provideSecurity': return 'ให้ความปลอดภัย';
			case 'addManully': return 'เพิ่มด้วยตนเอง';
			case 'addFromContacts': return 'เพิ่มจากสมุดที่อยู่';
			case 'addSecurityCircle': return 'เพิ่มวงกลมความปลอดภัย';
			case 'inputType': return 'ประเภทอินพุต';
			case 'mobileNumber': return 'หมายเลขโทรศัพท์';
			case 'did': return 'รหัสที่อยู่';
			case 'pleaseEnterValidDID': return 'โปรดป้อนรหัสประจำตัวแบบกระจายอำนาจที่ถูกต้อง';
			case 'pleaseEnterValidWalletAddress': return 'กรุณากรอกที่อยู่กระเป๋าเงินที่ถูกต้อง';
			case 'appellation': return 'ชื่อ';
			case 'appellationHint': return 'เรียกว่าอะไรนะ ที่รัก';
			case 'addSecurityCircleTips': return 'โปรดอย่าเพิ่มบุคคลที่คุณไม่ไว้วางใจในแวดวงความปลอดภัยของคุณ';
			case 'referralTeam': return 'ทีมงานแนะนำ';
			case 'profile': return 'ข้อมูลบัญชี';
			case 'menu': return 'เมนู';
			case 'directly': return 'โดยตรง';
			case 'indirectly': return 'ทางอ้อม';
			case 'inviteContacts': return 'เชิญผู้ติดต่อ';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'ผู้เชิญของคุณคือ '),
				nickname,
				const TextSpan(text: ' และคุณได้แนะนำ '),
				num1,
				const TextSpan(text: ' คนโดยตรง ซึ่ง '),
				num2,
				const TextSpan(text: ' กำลังออนไลน์อยู่'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'คุณได้แนะนำ '),
				num1,
				const TextSpan(text: ' คนทางอ้อม โดยที่ '),
				num2,
				const TextSpan(text: ' กำลังออนไลน์อยู่'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'เชิญเพื่อนให้เข้าร่วมเดลต้าและปรับปรุงฉันทามติทางสังคมด้วยกัน คำแนะนำโดยตรงของแต่ละคนจะเพิ่มอัตราการขุดขึ้น '),
				rate1,
				const TextSpan(text: ' ของอัตราฐาน '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'เชิญเพื่อนให้เข้าร่วมเดลต้าและปรับปรุงฉันทามติทางสังคมร่วมกัน ข้อเสนอแนะทางอ้อมของบุคคลหนึ่งคนจะเพิ่มอัตราการขุดขึ้นอีก '),
				rate2,
				const TextSpan(text: ' ของอัตราฐาน'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'คุณแน่ใจหรือไม่ว่าต้องการลบ "${name}"?';
			case 'safetyCircleRoleQ': return 'วงจรความปลอดภัยมีหน้าที่อะไร?';
			case 'safetyCircleRoleA': return 'ให้การรับรองความถูกต้องด้วยสองปัจจัยในสถานการณ์ที่ละเอียดอ่อนเพื่อปกป้องความปลอดภัยของบัญชีของคุณ';
			case 'howSecurityCirclesWorkQ': return 'วงจรความปลอดภัยทำงานอย่างไร?';
			case 'howSecurityCirclesWorkA': return 'เมื่อจำเป็นต้องมีแวดวงความปลอดภัยในการตรวจสอบ โปรแกรมเดลต้าสมาร์ทคอนแทรคจะสุ่มเลือกสมาชิกจากรายชื่อเพื่อนในแวดวงความปลอดภัย เพื่อช่วยคุณในการระบุรหัสความปลอดภัยเพื่อทำการตรวจสอบความปลอดภัยของข้อมูลประจำตัวให้เสร็จสมบูรณ์ เมื่อคุณขอรหัสความปลอดภัยจากสมาชิกก็สามารถยืนยันได้ว่าเป็นคุณ ในเวลาเดียวกัน โปรแกรมจะแจ้ง: "ปฏิเสธที่จะให้รหัสความปลอดภัยหากไม่ใช่คุณ" เพื่อปกป้องความปลอดภัยของบัญชีของคุณ ดังนั้นคุณควรตรวจสอบให้แน่ใจเสมอว่าสมาชิกในแวดวงความปลอดภัยของคุณคือคนที่คุณไว้วางใจได้';
			case 'securityCircleBeUsedQ': return 'เมื่อไหร่จะได้ใช้?';
			case 'securityCircleBeUsedA1': return '1. เมื่อ Delta APP ของคุณสูญเสียการควบคุม มักเป็นเพราะโทรศัพท์สูญหายหรือถูกขโมย';
			case 'securityCircleBeUsedA2': return '2. ในกรณีที่มีการดำเนินการที่มีความละเอียดอ่อน โปรแกรมสัญญาอัจฉริยะของเดลต้าจำเป็นต้องยืนยันว่าเป็นคุณ';
			case 'provideSafetyTip1': return 'เมื่อเพื่อนของคุณขอรหัสความปลอดภัยจากคุณ อย่าลืมยืนยันว่าเป็นเขาหรือเธอ';
			case 'provideSafetyTip2': return 'คุณกำลังให้การป้องกันด้านความปลอดภัยสำหรับเพื่อนข้างต้น พวกเขาได้กำหนดคุณให้เป็นบุคคลที่น่าเชื่อถือที่สุดในแวดวงความปลอดภัย และต้องการให้คุณยืนยันความปลอดภัยสำหรับพวกเขาเมื่อบัญชีของพวกเขาพบกับการดำเนินการที่ละเอียดอ่อน';
			case 'provideSafetyTip3': return 'คลิกสองครั้งที่อวตารของอีกฝ่ายเพื่อแยกรหัสความปลอดภัยเมื่อจำเป็น';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'ขณะนี้อีกฝ่ายไม่มีรหัสความปลอดภัยที่ต้องเรียกคืน!';
			case 'existSecurityCodeTip': return 'โปรดตรวจสอบให้แน่ใจว่าญาติหรือเพื่อนที่ขอรหัสรักษาความปลอดภัยจากคุณนั้นเป็นญาติหรือเพื่อน เพื่อปกป้องความปลอดภัยของญาติหรือเพื่อนของคุณ คุณควรปฏิเสธที่จะให้รหัสดังกล่าวหากไม่ใช่ญาติหรือเพื่อน';
			case 'avatarSettings': return 'การตั้งค่าอวตาร';
			case 'NFTAvatarPropertyRightsText': return 'คำชี้แจง: การใช้ NFT ที่เกี่ยวข้องเป็นอวตารนั้นมีไว้เพื่อความชอบส่วนบุคคลเท่านั้น และไม่เกี่ยวข้องกับการเป็นเจ้าของสิทธิ์ในทรัพย์สินทางปัญญาของ NFT';
			case 'projectWebsite': return 'เว็บไซต์โครงการ:';
			case 'whitepaper': return 'กระดาษขาว:';
			case 'indexID': return 'รหัสดัชนี';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'ช่วงดัชนีอยู่ระหว่าง ${start} และ ${end}';
			case 'inputToLoadNFTAvatarTip': return 'ป้อนรหัสดัชนีของ NFT ที่คุณชื่นชอบ จากนั้นโปรแกรมจะโหลดเป็นรูปประจำตัวของคุณโดยอัตโนมัติ';
			case 'miningRate': return 'อัตราการขุด';
			case 'miningDetails': return 'รายละเอียดการทำเหมืองแร่';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'อัตราการขุดทั้งหมด: '),
				rate,
				const TextSpan(text: ' δ/วัน'),
			]);
			case 'EndOfMiningSession': return 'การขุดรอบสิ้นสุด:';
			case 'tapToMineDeltaCoin': return 'คลิกเพื่อขุดเหรียญเดลต้า↑';
			case 'clickToStartMining': return 'คลิกเพื่อเริ่มการขุด!';
			case 'miningHasStoppedPromptDesc': return 'การขุดหยุดลง ทุก ๆ 24 ชั่วโมงจะเป็นรอบการขุด คลิกที่ไอคอนสายฟ้าเพื่อเริ่มการขุดรอบใหม่ การขุดของเดลต้าเป็นกลไกการกระจายที่ไม่ต้องใช้พลังการประมวลผลเพิ่มเติมและการรับส่งข้อมูลเครือข่ายจากอุปกรณ์ของคุณ';
			case 'aboutBaseRate': return 'แล้วอัตราพื้นฐานล่ะ?';
			case 'baseRateDescription': return 'ตามเอกสารไวท์เปเปอร์ กฎการลดอัตราพื้นฐานของการขุดเดลต้าจะแบ่งออกเป็นสองขั้นตอน \nระยะที่ 1: เมื่อจำนวนผู้เข้าร่วม (การลงทะเบียน) คือ 3000 หรือน้อยกว่า อัตราจะเป็น 32δ/วัน การใช้สิ่งนี้เป็นพื้นฐานเริ่มต้น ทุกครั้งที่จำนวนคนเพิ่มขึ้น 10 เท่า อัตราพื้นฐานจะลดลงครึ่งหนึ่ง \nระยะที่ 2: เมื่อจำนวนผู้เข้าร่วมถึง 30 ล้านคนขึ้นไป อัตราพื้นฐานจะลดลงครึ่งหนึ่งทุกครั้งที่จำนวนผู้เข้าร่วมเพิ่มขึ้นสามครั้ง หยุดการผลิตจนกว่าการขุดค้นขั้นสุดท้ายจะแล้วเสร็จ';
			case 'baseRate': return 'อัตราฐาน';
			case 'directReferralRewards': return 'รางวัลการอ้างอิงโดยตรง';
			case 'directReferralRewardDesc': return 'สำหรับทุกคนที่คุณแนะนำโดยตรง เมื่อพวกเขาอยู่ในสถานะการขุด อัตราการขุดของคุณจะเพิ่มขึ้นอีก 1/3 ของอัตราพื้นฐาน\n\n นอกจากนี้ สถานะการขุดของผู้อ้างอิงของคุณจะถูกคำนวณเป็นรางวัลผู้อ้างอิงโดยตรงของคุณด้วย';
			case 'indirectReferralRewards': return 'รางวัลการอ้างอิงทางอ้อม';
			case 'indirectReferralRewardDesc': return 'เมื่อผู้อ้างอิงทางอ้อมอยู่ในสถานะการขุด อัตราการขุดของคุณจะเพิ่มขึ้นอีก 1/10 ของอัตราฐาน\n\n ทีมแนะนำโดยตรงของคุณ แต่ละคนที่พวกเขาแนะนำเป็นตัวแทนของคำแนะนำทางอ้อมสำหรับคุณ';
			case 'mine': return 'การทำเหมืองแร่';
			case 'thisMiningInformation': return 'ข้อมูลการทำเหมืองแร่นี้';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'เข้าร่วมการขุด: '),
				x,
				const TextSpan(text: ' ครั้ง'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'รายได้รวมในครั้งนี้: '),
				x,
				const TextSpan(text: ' เหรียญเดลต้า'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'รายได้พื้นฐาน: '),
				x,
				const TextSpan(text: ' เหรียญ'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'การสนับสนุนทีมโดยตรง: '),
				x,
				const TextSpan(text: ' เหรียญ'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'ผลงานของทีมโดยอ้อม: '),
				x,
				const TextSpan(text: ' เหรียญ'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'ช่วงเวลาตั้งแต่การขุดครั้งล่าสุด: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'เวลาขุดที่มีประสิทธิภาพ: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} ชั่วโมง';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'เพื่อความปลอดภัยของทรัพย์สิน สมาชิกกลุ่มรักษาความปลอดภัยควรรักษาบุคคลที่น่าเชื่อถือไว้ 3-5 คนตลอดเวลา';
			case 'index': return 'ดัชนี';
			case 'amount': return 'จำนวน';
			case 'balance': return 'สมดุล';
			case 'timeStamp': return 'การประทับเวลา';
			case 'summary': return 'สรุป';
			case 'miningHasStopped': return 'การขุดได้หยุดลงแล้ว';
			case 'miningHasStoppedDesc': return 'การขุดของคุณหยุดลงแล้ว เริ่มรับรายได้ทันที';
			case 'startMining': return 'เริ่มการขุด';
			case 'changeMobileNumber': return 'เปลี่ยนเบอร์มือถือ';
			case 'currentMobileNumber': return 'เบอร์มือถือปัจจุบัน';
			case 'newMobileNumber': return 'หมายเลขโทรศัพท์มือถือใหม่';
			case 'securityCodeFormatIs6digits': return 'รูปแบบรหัสความปลอดภัยคือ 6 หลัก!';
			case 'startVrification': return 'เริ่มการยืนยัน';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'หมายเลขโทรศัพท์มือถือนี้มีอยู่แล้ว DID ที่เกี่ยวข้อง: ${dId}';
			case 'noDataYet': return 'ยังไม่มีข้อมูล';
			case 'previousMobileNumber': return 'เบอร์มือถือเดิม';
			case 'changeLog': return 'ประวัติการเปลี่ยนแปลง';
			case 'referralLinkToShare': return 'แนะนำการแชร์ลิงก์';
			case 'referrer': return 'ผู้แนะนำ';
			case 'isoCountryCode': return 'รหัสประเทศไอเอสโอ';
			case 'avatarLogo': return 'โลโก้อวตาร';
			case 'creationTime': return 'เวลาสร้าง';
			case 'lastUpdate': return 'อัปเดตล่าสุด';
			case 'numberOfSecurityCircleMembers': return 'จำนวนสมาชิกวงความปลอดภัย';
			case 'theLatestMining': return 'การขุดล่าสุด';
			case 'effectiveMiningDays': return 'จำนวนวันของการขุดที่มีประสิทธิภาพ';
			case 'modifyNickname': return 'ปรับเปลี่ยนชื่อเล่น';
			case 'didNotChange': return 'ไม่มีอะไรเปลี่ยนแปลง!';
			case 'kycVerification': return 'การตรวจสอบ KYC';
			case 'faceID': return 'รหัสใบหน้า';
			case 'touchID': return 'รหัสลายนิ้วมือ';
			case 'biometricsAuthorizationTest': return 'การทดสอบการรับรองความถูกต้องทางชีวภาพ';
			case 'currentState': return 'สถานะปัจจุบัน';
			case 'biometricsAuthenticationLocalizedReason': return 'ใช้การปลดล็อคอุปกรณ์ของคุณเพื่อยืนยันตัวตนของคุณ';
			case 'graph': return 'แอตลาส';
			case 'referralRelationshipGraph': return 'กราฟความสัมพันธ์ผู้อ้างอิง';
			case 'nativeContacts': return 'การติดต่อในท้องถิ่น';
			case 'registrationAndMiningTrends': return 'แนวโน้มการจดทะเบียนและการขุด';
			case 'inMining': return 'การทำเหมืองแร่';
			case 'registrationVolume': return 'จำนวนการลงทะเบียน';
			case 'unmined': return 'ไม่ได้ขุด';
			case 'mined': return 'ขุด';
			case 'communityMining': return 'การขุดชุมชน';
			case 'consensusPromotionFund': return 'กองทุนส่งเสริมฉันทามติ';
			case 'ecologicalAwardFund': return 'กองทุนรางวัลนิเวศวิทยา';
			case 'icpFuelCrowdfunding': return 'การระดมทุนของ ICP Fuel';
			case 'coreDeveloperRewards': return 'รางวัลนักพัฒนาหลัก';
			case 'totalAllocation': return 'การจัดสรรทั้งหมด';
			case 'miningRatio': return 'อัตราส่วนการขุด';
			case 'billion.30': return '30 พันล้าน';
			case 'billion.60': return '60 พันล้าน';
			case 'billion.180': return '180 พันล้าน';
			case 'billion.300': return '300 พันล้าน';
			case 'watchAdsToSupportDevelopers': return 'ดูโฆษณาเพื่อสนับสนุนนักพัฒนา';
			case 'loadingAdcomponents': return 'กำลังโหลดส่วนประกอบโฆษณา...';
			case 'timeIsNotUp': return 'ยังไม่ถึงเวลา!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'การโหลดล้มเหลว เครือข่ายอาจถูกบล็อก!';
			case 'pendingUSCTrecords': return 'บันทึก USCT ที่รอดำเนินการ';
			case 'pendingUSCTrecordsDesc': return 'บันทึก USCT ที่รอดำเนินการจะถูกเปรียบเทียบกับแพลตฟอร์มโฆษณาภายใน 15-30 วันเพื่อการยืนยัน บันทึกที่ถูกต้องจะถูกโอนไปยังรายการบันทึก USCT และจำนวนเงิน USCT ที่เกี่ยวข้องจะถูกเพิ่มลงในยอดคงเหลือในบัญชี';
			case 'validity': return 'ประสิทธิผล';
			case 'advertiser': return 'ผู้ลงโฆษณา';
			case 'earned': return 'ได้รับ';
			case 'withdraw': return 'ถอนเงินสด';
			case 'validUSCTrecords': return 'บันทึก USCT ที่ถูกต้อง';
			case 'USCTmining': return 'การขุด USCT';
			case 'aboutUSCTmining': return 'เกี่ยวกับการขุด USCT?';
			case 'aboutUSCTminingItme1': return '1. USDT เป็นสกุลเงินดอลลาร์สหรัฐที่ได้รับความนิยมทั่วโลก ซึ่งสามารถแปลงเป็นสกุลเงินอธิปไตยของประเทศต่างๆ ได้อย่างง่ายดายบนการแลกเปลี่ยนสกุลเงินดิจิทัลกระแสหลักทั่วโลก';
			case 'aboutUSCTminingItme2': return '2. USCT เป็นมูลค่าการวัดชั่วคราวของรายได้จากการขุด USCT ชื่อเต็มคือเครดิต USD ซึ่งสามารถแปลงเป็น USDT ตามจำนวนเงินชำระจริงและกฎการแจกจ่ายของแพลตฟอร์มโฆษณาและตามสัดส่วนที่สอดคล้องกัน';
			case 'aboutUSCTminingItme3': return '3. การขุด USCT เป็นฟังก์ชันการสร้างรายได้จากการโฆษณาปริมาณการเข้าชมของชุมชนเดลต้า ใช้ประโยชน์จากฐานผู้ใช้ขนาดใหญ่ของชุมชนเดลต้าเพื่อมอบสิทธิประโยชน์มากมายให้กับผู้ลงโฆษณา นักพัฒนาของเดลต้า และผู้รับเหมา วัตถุประสงค์ในการออกแบบคือการสร้างรายได้ที่มีประสิทธิภาพจำนวนหนึ่งสำหรับผู้ที่ขาดงานในระยะแรกเมื่อระบบนิเวศของเดลต้ายังไม่ก่อตัวและเจริญรุ่งเรือง ในเวลาเดียวกัน ยังให้การสนับสนุนทางการเงินแก่นักพัฒนาเพื่อให้แน่ใจว่านักพัฒนาจะสามารถจัดหาได้ต่อไป บริการพัฒนาในระยะยาวและในที่สุดก็สามารถบรรลุแผนทั้งหมดในสมุดปกขาว นอกจากนี้ยังเป็นช่องทางส่งเสริมการขายที่มีประสิทธิภาพสำหรับผู้ลงโฆษณาผลิตภัณฑ์';
			case 'aboutUSCTminingItme4': return '4. กฎการแจกจ่ายได้รับการออกแบบเพื่อให้ 40% ของรายได้ทั้งหมดถูกใช้เป็นค่าคอมมิชชั่นบริการด้านเทคนิคของนักพัฒนา และส่วนที่เหลืออีก 60% ใช้เป็นรางวัลการขาดงานของชุมชน รางวัลการขาดงานใช้รูปแบบการกระจายหลายระดับคล้ายกับ DTC รางวัลการขาดงานเหล่านี้แบ่งออกเป็น 3 ส่วนตามอัตราส่วน 6:3:1 60% ของรางวัลการขาดงานของการขุด USCT หนึ่งครั้งในแต่ละครั้งจะถูกจัดสรรให้กับ ผู้ที่ขาดงานซึ่งกำลังดูโฆษณาอยู่ จะมีการจัดสรร 3 คะแนนให้กับผู้แนะนำที่เหนือกว่า และ 1 องค์ประกอบจะถูกจัดสรรให้กับผู้แนะนำระดับที่สอง ในทำนองเดียวกัน หากเพื่อนที่คุณแนะนำฉันผ่าน USCT คุณจะได้รับรางวัลผู้อ้างอิงเช่นเดียวกัน ข้อดีของการกระจายหลายระดับคือใครๆ ก็สามารถได้รับรายได้ USDT จำนวนมากโดยการพัฒนาทีมออฟไลน์';
			case 'aboutUSCTminingItme5': return '5. รอบการชำระเงินคือ 7 วัน นั่นคือมีการตรวจสอบความถูกต้องกับแพลตฟอร์มโฆษณาทุกๆ 7 วัน และรายได้และจำนวนเงินจริงที่ยืนยันว่าถูกต้องจะถูกบันทึกไว้ในยอดคงเหลือ จำนวนเงินขั้นต่ำสำหรับการถอนแต่ละครั้งคือ 10 USDT';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'บรรทัด ${x} ถึง ${y}';
			case 'wallet': return 'กระเป๋าสตางค์';
			case 'multiChainWallet': return 'กระเป๋าสตางค์หลายสายโซ่';
			case 'deposit': return 'เงินฝาก';
			case 'transfer': return 'โอนย้าย';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} ในที่อยู่กระเป๋าเงิน';
			case 'transactions': return 'ประวัติการทำธุรกรรม';
			case 'network': return 'เครือข่าย';
			case 'walletAddress': return 'ที่อยู่กระเป๋าเงิน';
			case 'currentAddress': return 'ที่อยู่ปัจจุบัน';
			case 'depositAddress': return 'ที่อยู่เติมเงิน';
			case 'receivingMoneyAddress': return 'ที่อยู่การชำระเงิน';
			case 'applyTempDepositAddress': return 'สมัครขอที่อยู่เติมเงินชั่วคราว';
			case 'tempDepositAddressTip': return '1. นี่คือที่อยู่การฝากเงินที่ใช้ร่วมกัน กรุณาอย่าวางเงินมัดจำหลังจากสัญญาเช่าหมดอายุหรือไม่ถูกผูกมัด หากเกิดเหตุการณ์นี้ จำนวนเงินจะหายไป';
			case 'tempDepositAddressTip2': return '2. ก่อนทำการฝากเงิน โปรดตรวจสอบให้แน่ใจว่า [ชื่อลูกโซ่] และ [ชื่อสกุลเงิน] ตรงกันอย่างสมบูรณ์ หากเป็นโทเค็นสัญญา คุณต้องยืนยันด้วยว่า [มาตรฐานสัญญา] และ [ที่อยู่สัญญา] ตรงกันอย่างสมบูรณ์';
			case 'tempDepositAddressTip3': return '3. โปรดอย่าพยายามฝากเงินที่ไม่ตรงกับพารามิเตอร์ใดๆ ในเคล็ดลับข้างต้น มิฉะนั้นจำนวนเงินจะหายไป';
			case 'tempDepositAddressTip4': return '4. หากคุณต้องการฝากสินทรัพย์ประเภทอื่น โปรดสลับไปที่หน้าสกุลเงินและตัวเลือกพารามิเตอร์ที่เกี่ยวข้องเพื่อสมัครที่อยู่ใหม่';
			case 'applyExtensionOfValidity': return 'สมัครเพื่อขยายระยะเวลาการใช้งาน';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap }) => TextSpan(children: [
				const TextSpan(text: 'ที่อยู่จะหมดอายุหลังจาก '),
				diff,
				const TextSpan(text: ' และคุณสามารถ '),
				tap ('ขยายด้วยตนเอง'),
				const TextSpan(text: ' ระยะเวลาที่ใช้ได้ภายใน 12 ชั่วโมงก่อนหมดอายุ'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'สามารถต่ออายุได้ล่วงหน้า 12 ชั่วโมงเท่านั้น';
			case 'theReceivingAddressValidForLongtime': return 'ที่อยู่การชำระเงินนี้ใช้ได้เป็นเวลานาน';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'ที่อยู่การชำระเงินนี้ใช้ได้เป็นเวลานานและจะเข้าบัญชีโดยอัตโนมัติแบบเรียลไทม์';
			case 'confirmDeposited': return 'ยืนยันการฝากเงิน';
			case 'unbindThisDepositAddress': return 'ยกเลิกการเชื่อมโยงที่อยู่การเติมเงิน';
			case 'confirmDepositedTip': return 'หากโอนเงินแล้ว โปรดคลิกปุ่มด้านบนเพื่อเรียกบัญชีไปยังกระเป๋าเงินหลังจากผ่านไป 10 นาที';
			case 'unbindDepositAddressTip': return 'เพื่อลดต้นทุนการดำเนินการของสัญญาอัจฉริยะ หากไม่มีเงินเพิ่มภายในระยะเวลาที่มีผล โปรดยกเลิกการเชื่อมโยงที่อยู่เติมเงิน';
			case 'transferToAddress': return 'ไปที่ที่อยู่';
			case 'longPressToPaste': return 'กดค้างเพื่อวาง';
			case 'all': return 'ทั้งหมด';
			case 'balanceX': return ({required Object x}) => 'ยอดคงเหลือ ${x}';
			case 'transferOut': return 'โอนออก';
			case 'depositXcoins': return ({required Object x}) => 'ฝากเงิน ${x}';
			case 'sender': return 'ผู้ส่ง';
			case 'recipient': return 'ผู้รับ';
			case 'memo': return 'หมายเหตุ';
			case 'kind': return 'ทาง';
			case 'transferAmountExceedsAvailableBalance': return 'จำนวนเงินโอนเกินยอดคงเหลือที่มีอยู่';
			case 'pleaseEnterValidAmount': return 'กรุณากรอกจำนวนเงินที่ถูกต้อง';
			case 'networkFee': return 'ค่าธรรมเนียมการจัดการเครือข่าย';
			case 'fee': return 'ค่าธรรมเนียมการจัดการ';
			case 'validLengthXcharacters': return ({required Object x}) => 'ความยาวที่มีประสิทธิภาพของที่อยู่คือ ${x} ตัวอักษร';
			case 'historys': return 'ประวัติศาสตร์';
			case 'dtcCreditdetail': return 'รายละเอียดเดลต้าพอยท์';
			case 'usdCreditdetail': return 'รายละเอียดคะแนน USD';
			case 'dappSquare': return 'ดีแอพสแควร์';
			case 'amountRaised': return 'จำนวนเงินที่เพิ่มขึ้น';
			case 'disbursedAmount': return 'จำนวนเงินที่เบิกจ่าย';
			case 'participationTimes': return 'จำนวนผู้เข้าร่วม';
			case 'completionRate': return 'อัตราความสำเร็จ';
			case 'exchangeRate': return 'อัตราแลกเปลี่ยน';
			case 'icpCrowdfunding': return 'การระดมทุนของ ICP';
			case 'crowdfunding': return 'การระดมทุน';
			case 'trendsCurve': return 'เส้นโค้งแนวโน้ม';
			case 'fullScreenView': return 'มุมมองแบบเต็มหน้าจอ';
			case 'walletBalance': return 'ยอดคงเหลือในกระเป๋าสตางค์:';
			case 'manageWallet': return 'จัดการกระเป๋าสตางค์';
			case 'fundraiseAmount': return 'จำนวนเงินทุนที่ระดมทุนได้';
			case 'exchangeRewardAmount': return 'จำนวนรางวัลการแลกเปลี่ยน';
			case 'fundraise': return 'ระดมทุน';
			case 'rangeIntegersX': return ({required Object x}) => 'พิสัย: จำนวนเต็ม ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'เข้าร่วมการระดมทุนได้สำเร็จและได้รับรางวัล ${amount}DTCT';
			case 'amountSummary': return 'สรุปจำนวนเงิน';
			case 'changePreferred': return 'เปลี่ยนการตั้งค่า';
			case 'changePreferredAddress': return 'เปลี่ยนที่อยู่ที่ต้องการ';
			case 'preferredAddressTip': return 'เมื่อรับเงินโดยใช้หมายเลขโทรศัพท์มือถือที่ลงทะเบียนหรือ DID เงินจะถูกโอนไปยังที่อยู่ที่ต้องการโดยอัตโนมัติ';
			case 'newAddress': return 'ที่อยู่ใหม่';
			case 'newAddressTip': return 'เพื่อป้องกันการละเมิด เมื่อมีที่อยู่กระเป๋าเงินมากกว่าหนึ่งที่อยู่ จะมีการคิดค่าธรรมเนียมการทำธุรกรรมสำหรับที่อยู่ใหม่แต่ละแห่งที่สร้างขึ้น';
			case 'createNew': return 'ใหม่';
			case 'chainNetworkName': return 'ชื่อเครือข่ายลูกโซ่';
			case 'from': return 'จาก';
			case 'to': return 'มาถึง';
			case 'noAvailableDepositAmountDetected': return 'ไม่พบจำนวนเงินฝากที่ใช้ได้!';
			case 'crossChainReceiveMoneyMonitoring': return 'กำลังตรวจสอบการชำระเงินข้ามเครือข่าย...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'ได้รับแล้ว('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'กำลังยืนยัน('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'ข้อควรทราบ (มือใหม่ควรอ่าน)';
			case 'whyUseSharedAddresses': return 'เหตุใดจึงใช้ที่อยู่ที่ใช้ร่วมกัน';
			case 'useSharedrAdvantage': return 'เมื่อทำการฝากเงินข้ามเครือข่าย ข้อดีของการใช้ที่อยู่ที่ใช้ร่วมกันมีดังนี้:';
			case 'useSharedrAdvantage1': return '1. ลดการสิ้นเปลืองค่าธรรมเนียมการโอนและลดต้นทุนผู้ใช้ เพราะหากใช้ที่อยู่เฉพาะ เงินจะกระจายเกินไป โดยทั่วไป เพื่ออำนวยความสะดวกให้ผู้ใช้รายอื่นโอนออกในภายหลังเมื่อถอนเงินสด เมื่อผู้ใช้เติมเงิน พวกเขาจำเป็นต้องรวบรวมการโอนเงินรองไปยังหนึ่งหรือจำนวนเล็กน้อย ที่อยู่สำหรับการจัดการ';
			case 'useSharedrAdvantage2': return '2. ในโซลูชันการแชร์ โปรแกรมจำเป็นต้องรักษาพูลที่อยู่ที่ค่อนข้างเล็ก ซึ่งสามารถจับคู่เงินทุนที่ออกได้อย่างรวดเร็ว และดำเนินการตรวจสอบการรวบรวมที่ไม่ซับซ้อน ซึ่งสามารถลดค่าใช้จ่ายทรัพยากรการประมวลผล ตรงกันข้ามกับที่อยู่พิเศษ สถานการณ์กลับตรงกันข้าม';
			case 'tokenType': return 'ประเภทโทเค็น';
			case 'contract': return 'สัญญา';
			case 'contractStandard': return 'มาตรฐานสัญญา';
			case 'contractAddress': return 'ที่อยู่สัญญา';
			case 'native': return 'พื้นเมือง';
			case 'confirmUnbindingPleaseEnterYes': return 'เพื่อยืนยันการยกเลิกการเชื่อมโยง โปรดป้อน "ใช่"';
			case 'listAllWorkingTempReceivingAddresses': return 'แสดงรายการที่อยู่การเติมเงินข้ามสายงานที่ทำงานทั้งหมด';
			case 'setNote': return 'ตั้งบันทึก';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'ความยาวต้องไม่เกิน ${x} ไบต์';
			case 'transferFee': return 'ค่าธรรมเนียมการโอน';
			case 'crossChainFee': return 'ค่าธรรมเนียมข้ามสายโซ่';
			case 'crossChainTransferOutError': return 'ข้อผิดพลาดในการถ่ายโอนข้ามสายโซ่';
			case 'chainName': return 'ชื่อลูกโซ่';
			case 'message': return 'ข้อมูล';
			case 'dontShowAgain': return 'อย่าแสดงอีก';
			case 'queuing': return 'อยู่ในคิว';
			case 'optional': return 'ไม่จำเป็น';
			case 'publiclyVisible': return 'เปิดเผยต่อสาธารณะ';
			case 'rates': return 'ประเมิน';
			case 'minimum': return 'ขั้นต่ำ';
			case 'maximum': return 'สูงสุด';
			case 'minimumBlockConfirmations': return 'จำนวนการยืนยันบล็อกขั้นต่ำ';
			case 'dsmsVerifyTerminal': return 'เทอร์มินัลการตรวจสอบ DSMS';
			case 'overall': return 'โดยรวม';
			case 'my': return 'ของฉัน';
			case 'checkValidatorQualifications': return 'ตรวจสอบสิทธิ์การอนุญาตของผู้ตรวจสอบ';
			case 'getVerifierPermissions': return 'รับสิทธิ์ผู้รับรอง';
			case 'qualification': return 'คุณสมบัติ';
			case 'upperLimit': return 'ขีด จำกัด บน';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'ขีดจำกัดสูงสุดของจำนวนเทอร์มินัลที่อนุญาตให้เข้าถึง';
			case 'numberOfExistingAccessTerminals': return 'จำนวนเทอร์มินัลการเข้าถึงที่มีอยู่';
			case 'applyingForDSMSVerifierPermissionsTips': return 'ก่อนที่จะสมัครขอสิทธิ์ผู้ตรวจสอบ คุณจะต้องเตรียมโทรศัพท์ Android ที่ไม่ได้ใช้งานและหมายเลขการเข้าถึงเฉพาะ รวมถึงดาวน์โหลดและติดตั้งแอปพลิเคชันเทอร์มินัลการเข้าถึง DSMS';
			case 'downloadLink': return 'ลิงค์ดาวน์โหลด';
			case 'alreadyReadyFollowingTheAboveTips': return 'พร้อมตามคำแนะนำข้างต้น';
			case 'globalUniversal': return 'สากล';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'ขณะนี้มีผู้ตรวจสอบในพื้นที่ไม่เพียงพอที่จะเข้าร่วมในบริการการเข้าถึงการตรวจสอบ DSMS โปรดเลือก "'),
				gu,
				const TextSpan(text: '" เพื่อเข้าถึงบริการ'),
			]);
			case 'asDedicatedNumberForAccess': return 'เป็นหมายเลขเข้าใช้งานเฉพาะ';
			case 'pleaseCheckTip': return ({required Object tip}) => 'โปรดตรวจสอบ "${tip}"';
			case 'inputLengthTooShort': return 'ความยาวอินพุตสั้นเกินไป';
			case 'shortName': return 'ตัวย่อ';
			case 'pleaseEnterXname': return ({required Object name}) => 'กรุณากรอก ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'กำลังส่งใบสมัคร กรุณารอสักครู่...';
			case 'applyForDSMSVerifierPermission': return 'สมัครเพื่อขออนุญาต DSMS Verifier';
			case 'confirmInformation': return 'ยืนยันข้อมูล';
			case 'lastHeartbeat': return 'การเต้นของหัวใจครั้งสุดท้าย';
			case 'expirationTime': return 'เวลาหมดอายุ';
			case 'country': return 'ชาติ';
			case 'accessTerminals': return 'เทอร์มินัลการเข้าถึง';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'จำนวนเทอร์มินัลหมายเลขการเข้าถึง DSMS ทั้งหมด';
			case 'textContent': return 'เนื้อหาข้อความ';
			case 'scanQRcodeToLogin': return 'สแกนรหัสเพื่อเข้าสู่ระบบ';
			case 'confirmLogin': return 'ยืนยันการเข้าสู่ระบบ';
			case 'authorizeSubApplicationToLogin': return 'อนุญาตแอปพลิเคชันย่อยเพื่อเข้าสู่ระบบ';
			case 'authorizationSuccessful': return 'การอนุญาตสำเร็จ!';
			case 'launchSMSprogram': return 'เริ่มโปรแกรม SMS';
			case 'notApplied': return 'ไม่มีการสมัคร';
			case 'validityPeriod': return 'ระยะเวลามีผล';
			case 'renewal': return 'ต่ออายุ';
			case 'scanCodeToAuthorizeTerminalLogin': return 'สแกนรหัสเพื่ออนุญาตการเข้าสู่ระบบเทอร์มินัล';
			case 'rewards': return 'รางวัล';
			case 'roles': return 'บทบาท';
			case 'developerCenter': return 'ศูนย์นักพัฒนา';
			case 'appName': return 'ชื่อแอปพลิเคชัน';
			case 'pleaseSelect': return 'กรุณาเลือก';
			case 'category': return 'หมวดหมู่';
			case 'keywords': return 'คำหลัก';
			case 'pleaseEnterAkeyword': return 'กรุณากรอกคำสำคัญ';
			case 'createApplication': return 'สร้างแอปพลิเคชัน';
			case 'appType': return 'ประเภทการสมัคร';
			case 'numberOfCategoriesMustBetween1and3': return 'จำนวนหมวดหมู่ต้องอยู่ระหว่าง 1 ถึง 3';
			case 'appLogoSpecifications': return 'รูปแบบภาพ: PNG ขนาด: ภายใน 100KB ความละเอียด (พิกเซล): 256*256';
			case 'localAlbum': return 'อัลบั้มภาพท้องถิ่น';
			case 'networkPath': return 'เส้นทางเครือข่าย';
			case 'imageURLkAddress': return 'ที่อยู่ URL ของรูปภาพ';
			case 'urlAddressFormatIsIncorrect': return 'รูปแบบที่อยู่ URL ไม่ถูกต้อง';
			case 'imageFormatOnlySupportsPng': return 'รูปภาพรองรับเฉพาะรูปแบบ "png" เท่านั้น';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'ความยาวต้องอยู่ระหว่าง ${a}-${b} อักขระ';
			case 'introduction': return 'การแนะนำ';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'ขนาดรูปภาพต้องไม่ใหญ่กว่า ${a} ขณะนี้มีขนาด ${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'ความละเอียดของภาพต้องเป็น: ${p1} (พิกเซล) ปัจจุบันคือ ${p2}';
			case 'becomeDeveloper': return 'มาเป็นนักพัฒนา';
			case 'developerInformation': return 'ข้อมูลผู้พัฒนา';
			case 'teamName': return 'ชื่อทีม';
			case 'website': return 'เว็บไซต์';
			case 'other': return 'อื่น';
			case 'githubVerification': return 'การตรวจสอบ Github';
			case 'exampleUrl': return 'ตัวอย่างUrl';
			case 'githubVerificationTip': return ({required Object did}) => 'โปรดใช้บัญชี GitHub ของคุณเพื่อสร้างไฟล์ \'delta.did\' ในพื้นที่เก็บข้อมูลที่มีเนื้อหาเป็น \'${did}\' จากนั้นวางที่อยู่ URL เนื้อหา githubuser ของไฟล์ลงในช่องป้อนข้อมูลนี้เพื่อตรวจสอบสิทธิ์';
			case 'createApp': return 'สร้างแอป';
			case 'appManagement': return 'การจัดการแอปพลิเคชัน';
			case 'statusLogs': return 'บันทึกสถานะ';
			case 'bad': return 'ไม่ดี';
			case 'normal': return 'โดยทั่วไป';
			case 'good': return 'ดีมาก';
			case 'onceCreatedItCannotBeChanged': return 'เมื่อสร้างแล้วจะไม่สามารถเปลี่ยนแปลงได้!';
			case 'manageApplicationEntity': return 'จัดการเอนทิตีแอปพลิเคชัน';
			case 'currentVersion': return 'รุ่นปัจจุบัน';
			case 'submitVersion': return 'กระทำเวอร์ชัน';
			case 'packageOnlySupportZipCompressedFile': return 'แพ็คเกจรองรับเฉพาะไฟล์บีบอัด zip เท่านั้น';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'ไม่พบไฟล์ \'${name}\' ในแพ็คเกจ zip';
			case 'fileList': return 'รายการไฟล์:';
			case 'programPackage': return 'บรรจุุภัณฑ์:';
			case 'automaticallyExtractFromVersionFile': return 'แยกจากไฟล์ \'.version\' โดยอัตโนมัติ';
			case 'dappVersionFormatTip': return 'รูปแบบหมายเลขเวอร์ชันต้องเป็นทศนิยมและต้องรักษาความแม่นยำไว้ที่ 2 หลัก และค่าสูงสุดต้องไม่เกิน 99.99';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'หมายเลขเวอร์ชันต้องมากกว่าเวอร์ชันปัจจุบัน \'${v}\'';
			case 'versionNotes': return 'หมายเหตุเวอร์ชัน:';
			case 'updateRelease': return 'เวอร์ชันอัปเดต';
			case 'loadAndRun': return 'โหลดและเรียกใช้';
			case 'notYetSubmittedProgramPackage': return 'ยังไม่ได้ส่งแพ็คเกจ!';
			case 'authorizeMinidAppLogin': return 'อนุญาตการเข้าสู่ระบบ mini-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'เพื่อยืนยันการอนุญาต โปรดป้อน "ใช่"';
			case 'authorizeNow': return 'อนุญาตตอนนี้';
			case 'operation': return 'ดำเนินงาน:';
			case 'statusChange': return 'การเปลี่ยนแปลงสถานะ';
			case 'changeTo': return 'เปลี่ยนเป็น:';
			case 'notes': return 'หมายเหตุ:';
			case 'changesNotEffective': return 'การเปลี่ยนแปลงไม่ถูกต้อง!';
			case 'released': return 'ที่ตีพิมพ์';
			case 'inPublicBeta': return 'ในรุ่นเบต้าสาธารณะ';
			case 'developers': return 'ผู้พัฒนา:';
			case 'reviewList': return 'รายการความคิดเห็น:';
			case 'postReview': return 'แสดงความคิดเห็น';
			case 'scoreNow': return 'ให้คะแนนตอนนี้';
			case 'description': return 'อธิบาย:';
			case 'noData': return '-\n ไม่มีข้อมูล';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'เวอร์ชันอัปเดตจาก ${a} เป็น ${b}';
			case 'loadNewVersion': return 'โหลดเวอร์ชันใหม่';
			case 'name': return 'ชื่อ:';
			case 'canisterId': return 'รหัสถังคอนเทนเนอร์:';
			case 'updateTime': return 'เวลาอัปเดต';
			case 'contractCanistersState': return 'สถานะหม้อสัญญา';
			case 'userDistribution': return 'การกระจายผู้ใช้';
			case 'settings': return 'ตั้งค่า';
			case 'security': return 'ความปลอดภัย';
			case 'invite': return 'เชิญ';
			case 'more': return 'มากกว่า…';
			case 'receiveAddress': return 'ที่อยู่ที่รับ:';
			case 'hangingAmount': return 'แขวนอยู่';
			case 'hangingAmountTips': return 'จำนวนเงินที่รอดำเนินการคือบันทึกชั่วคราวของรางวัลที่สร้างโดยทีมรองของคุณ เมื่อคุณทำการขุด จำนวนเงินเหล่านี้จะถูกรวบรวมเป็นจำนวนเงินที่รอดำเนินการ';
			case 'pendingAmount': return 'รอดำเนินการ';
			case 'pendingAmountTips': return 'จำนวนเงินที่รอดำเนินการหมายถึงจำนวนเงินที่ยังไม่ได้รับการยืนยันและเปรียบเทียบกับผู้ลงโฆษณา จำนวนเงินที่ถูกต้องสำหรับการเปรียบเทียบจะถูกโอนไปยังบันทึก USCT ที่ถูกต้อง หากมีส่วนที่ไม่ถูกต้องจะถูกยกเว้น';
			case 'received': return 'ได้รับ';
			case 'processing': return 'กำลังประมวลผล';
			case 'replied': return 'ตอบแล้ว';
			case 'rejected': return 'ปฏิเสธ';
			case 'unknown': return 'ไม่ทราบ';
			case 'insufficientBalance': return 'ยอดคงเหลือไม่เพียงพอ!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'ยอดคงเหลือของ ${x} ไม่เพียงพอที่จะชำระค่าธรรมเนียมเครือข่ายแบบ cross-chain';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'มีรายการที่ทำไม่เสร็จและไม่สามารถโอนได้ในขณะนี้';
			case 'thisfunctionNotSupportExternalCalls': return 'ฟังก์ชั่นนี้ไม่รองรับการโทรภายนอก';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'ไม่มีที่อยู่ที่ตรงกันซึ่งสามารถใช้เพื่อชำระค่าธรรมเนียมข้ามเครือข่ายได้ โปรดเปลี่ยนไปใช้เครือข่ายลูกโซ่อื่นแล้วลอง';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'จำนวนเงินโอนสูงสุดที่ตรงกับธุรกรรมเดียวในปัจจุบันคือ ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'ความคิดเห็นต้องมีขนาดไม่เกิน 64 ไบต์';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'ยอดคงเหลือไม่เพียงพอ จำนวนเงินคือ: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'จำนวนที่อยู่การชำระเงินที่ผูกไว้ต้องไม่เกิน 3\nหากคุณต้องการผูกที่อยู่การชำระเงินใหม่\nโปรดยกเลิกการเชื่อมโยงที่อยู่การชำระเงินอื่นก่อน';
			case 'parametersA_exception': return ({required Object x}) => 'พารามิเตอร์: ${x} ข้อยกเว้น';
			case 'parameterException': return 'ข้อยกเว้นพารามิเตอร์!';
			case 'transferAmountMustBeLargerThan0': return 'จำนวนเงินโอนต้องมากกว่า 0';
			case 'authorizationHasExpired': return 'การอนุญาตหมดอายุแล้ว';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'แอปไม่ได้รับอนุญาตจากเจ้าของ';
			case 'authenticationTokenIsInvalid': return 'โทเค็นการตรวจสอบสิทธิ์ไม่ถูกต้อง';
			case 'verifyInfoIsInvalidOrExpired': return 'ข้อมูลการยืนยันไม่ถูกต้องหรือหมดอายุ';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'ตรวจสอบว่าจำนวนเทอร์มินัลการเข้าถึงเกินขีดจำกัด 1 ใน 10,000';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'เวลาในการเข้าร่วมการขุดจะต้องมากกว่า 3 วัน';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'จำนวนสมาชิกของวงความปลอดภัยต้องไม่ต่ำกว่า 3 คน';
			case 'avatarIsNotSet': return 'ไม่ได้ตั้งค่าอวาตาร์';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'จำนวนผู้อ้างอิงโดยตรงต้องไม่น้อยกว่า 3 คน';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'ระยะเวลาไม่เพียงพอและคุณสามารถเปลี่ยนหมายเลขโทรศัพท์มือถือได้ปีละครั้งเท่านั้น';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'หมายเลขโทรศัพท์มือถือมีอยู่แล้วและไม่สามารถทำซ้ำได้';
			case 'securityCodeIsIncorrect': return 'รหัสความปลอดภัยไม่ถูกต้อง';
			case 'securityCodeMayHaveExpired': return 'รหัสความปลอดภัยอาจหมดอายุแล้ว';
			case 'sessionIdIsInvalidOrExpired': return 'รหัสเซสชันไม่ถูกต้องหรือหมดอายุแล้ว';
			case 'sessionHasBeenAuthorized': return 'เซสชั่นนี้ได้รับอนุญาตแล้ว!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'สามารถต่ออายุได้ภายใน ${x} วันก่อนหมดอายุ';
			case 'notYetGrantedDeveloperPermissions': return 'ยังไม่ได้รับสิทธิ์ของนักพัฒนา';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'ฟิลด์ ${x} ไม่สามารถเว้นว่างได้';
			case 'emailFormatError': return 'ข้อผิดพลาดรูปแบบอีเมล';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'ข้อผิดพลาดรูปแบบ \'${x}\'';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'ฟิลด์ \'${x}\' ต้องมีความยาวระหว่าง ${y} ถึง ${z} อักขระ';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'ช่วงการเลือก \'${x}\' ต้องอยู่ระหว่าง ${y} ถึง ${z}';
			case 'unchanged_sameAsOldContent': return 'ไม่เปลี่ยนแปลงเหมือนเนื้อหาเก่า!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' มีอยู่แล้ว!';
			case 'mobileNumberHasNotJoinedDelta': return 'ยังไม่ได้เพิ่มหมายเลขโทรศัพท์มือถือนี้ใน Delta!';
			case 'referrerIdCannotBeEmpty': return 'ID ผู้อ้างอิงไม่สามารถเว้นว่างได้!';
			case 'referrerIdDoesNotExist': return 'ไม่มีรหัสผู้อ้างอิง!';
			case 'didIsIncorrectOrInvalid': return 'DID ไม่ถูกต้องหรือไม่ถูกต้อง!';
			case 'accessTokenIsIncorrectOrInvalid': return 'accessToken ไม่ถูกต้องหรือไม่ถูกต้อง!';
			case 'minimumWithdrawalAmountIs1USD': return 'จำนวนถอนขั้นต่ำในครั้งเดียวคือ 1USD';
			case 'miningTimeIsNotYet': return 'เวลาขุดยังไม่มา';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'มีอยู่แล้ว กรุณาอย่าเพิ่มอีก!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'หมายเลขลงทะเบียนไม่สามารถใช้เป็นหมายเลขการเข้าถึงการยืนยันได้';
			case 'canotAddYourSelf': return 'ไม่สามารถเพิ่มตัวคุณเองได้';
			case 'logOut': return 'ออกจากระบบ';
			case 'confirmLogout': return 'ยืนยันการออกจากระบบ';
			case 'logOutTipsText': return 'คำเตือนที่เป็นมิตร: ตามข้อกำหนดที่เกี่ยวข้องของเอกสารไวท์เปเปอร์ การยืนยันการเข้าสู่ระบบแต่ละครั้งของบัญชีจะใช้เหรียญ DTC จำนวนหนึ่งเพื่อจ่ายให้กับผู้ตรวจสอบเพื่อเป็นแรงจูงใจ โปรดอย่าพยายามเข้าสู่ระบบและออกจากระบบเว้นแต่จำเป็น ปุ่มต่อไปนี้จะออกจากระบบทันที';
			case 'ConfirmLogoutPleaseEnterYes': return 'กรุณากรอก "ใช่" เพื่อยืนยันการออกจากระบบ';
			case 'tip': return 'คำใบ้';
			case 'cancel': return 'ยกเลิก';
			case 'close': return 'ปิด';
			case 'selected': return 'เลือกแล้ว';
			case 'edit': return 'แก้ไข';
			case 'submit': return 'ส่ง';
			case 'goBack': return 'ย้อนกลับ';
			case 'copiedToClipboard': return 'คัดลอกไปยังคลิปบอร์ดแล้ว';
			case 'nickname': return 'ชื่อนิค';
			case 'confirm': return 'ยืนยัน';
			case 'cannotBeEmpty': return 'ไม่สามารถเว้นว่างได้';
			case 'deleteSuccessful': return 'ลบสำเร็จ!';
			case 'successfullyModified': return 'การปรับเปลี่ยนสำเร็จ!';
			case 'executionSuccessful': return 'ดำเนินการสำเร็จ!';
			case 'preview': return 'ดูตัวอย่าง';
			case 'followSystem': return 'ทำตามระบบ';
			case 'change': return 'เปลี่ยน';
			case 'replace': return 'แทนที่';
			case 'view': return 'ตรวจสอบ';
			case 'manage': return 'จัดการ';
			case 'modify': return 'ปรับปรุงใหม่';
			case 'replacedSuccessfully': return 'เปลี่ยนสำเร็จ!';
			case 'authentication': return 'การรับรองความถูกต้อง';
			case 'reacquire': return 'ได้รับอีกครั้ง';
			case 'tryAgain': return 'ลองอีกครั้ง';
			case 'querying': return 'กำลังสอบถาม...';
			case 'writingToOnChain_pleaseWait': return 'เขียนถึงลูกโซ่ กรุณารอสักครู่...';
			case 'versionCheck': return 'การตรวจหาเวอร์ชัน';
			case 'alreadyLatestVersion': return 'เวอร์ชั่นใหม่ล่าสุดแล้ว!';
			case 'foundNewVersion': return 'พบเวอร์ชันใหม่:';
			case 'upgradeLink': return 'ลิงค์อัพเกรด:';
			case 'deviceDescription': return 'คำอธิบายอุปกรณ์:';
			case 'notification30SecondsBeforeMiningStops': return 'ดำเนินการแจ้งเตือน 30 วินาทีก่อนที่การขุดจะหยุด!';
			case 'goMining': return 'ไปขุด';
			case 'deltaMiningReminder': return 'การแจ้งเตือนการขุดเดลต้า ';
			case 'clickToMine_miningIsAboutToStop': return 'คลิกที่นี่เพื่อขุด การขุดจะหยุดเร็วๆ นี้!';
			case 'incorrect_input': return 'อินพุตไม่ถูกต้อง!';
			case 'are_you_sure_delete': return 'คุณแน่ใจหรือไม่ว่าจะลบ?';
			case 'delete_account': return 'ลบบัญชี';
			case 'how_to_operate_it': return 'ดูวิธีการใช้งานสิ?';
			case 'deletion_warning_tip': return 'หากคุณลบบัญชีของคุณ คุณจะสูญเสียเหรียญ Delta ทั้งหมด และรายได้จากสมาชิกคนอื่น ๆ ก็จะสูญหายไปด้วยเช่นกัน';
			case 'launchWhatsAppProgram': return 'เปิดโปรแกรม WhatsApp';
			case 'sms': return 'ข้อความสั้นๆ';
			case 'whatsApp_verification_tips': return 'หมายเลขการเข้าถึงที่มีไอคอนนี้ยังรองรับการยืนยันข้อความ WhatsApp เมื่อส่งข้อความระหว่างประเทศ ขอแนะนำให้ใช้ WhatsApp เพื่อเพิ่มอัตราความสำเร็จและลดต้นทุน';
			case 'ihaveSentVerificationString': return 'ฉันได้ส่งสตริงการยืนยันแล้ว';
			case 'totalOfPeople': return 'จำนวนคนทั้งหมด: ';
			case 'numberOfPeopleMining': return 'จำนวนคนที่ขุดเหมือง';
			case 'useBrowserScanQRcodeToSMSprogram': return 'คุณสามารถใช้เบราว์เซอร์บนอุปกรณ์อื่นเพื่อสแกน QR-code และส่งไปยังโปรแกรม SMS';
			case 'toggle': return 'สลับ';
			case 'DSMSverifier': return 'ตัวตรวจสอบ DSMS';
			case 'activate': return 'เปิดใช้งาน';
			case 'activated': return 'เปิดใช้งานแล้ว';
			case 'generateActivationCommand': return 'สร้างคำสั่งการเปิดใช้งาน';
			case 'activationCommand': return 'คำสั่งเปิดใช้งาน';
			case 'activationSentedTip': return 'หลังจากส่ง SMS การเปิดใช้งานแล้ว โปรดตรวจสอบสถานะการเปิดใช้งานบนอุปกรณ์ปลายทางการเข้าถึง';
			case 'biometricsNotEnabledTip': return 'ข้อมูลไบโอเมตริก (ใบหน้าหรือลายนิ้วมือ) ไม่ได้รับการเปิดใช้งานบนอุปกรณ์ของคุณ โปรดเปิดใช้งานเพื่อดำเนินการต่อ';
			case 'error': return 'ข้อผิดพลาด';
			case 'exceptionOccurredWhenCallingBiometric': return 'เกิดข้อยกเว้นเมื่อเรียกใช้ฟังก์ชันไบโอเมตริกซ์ (ใบหน้าหรือลายนิ้วมือ)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: 'หมายเลขการเข้าถึง '),
				checkedNum,
				const TextSpan(text: ' ถูกเลือกแล้ว ควรเลือก '),
				shouldNum,
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text} ถูกส่งไปยังหมายเลขการเข้าถึง ${n} ด้านบนแล้วหรือยัง';
			case 'interface': return 'อินเทอร์เฟซ:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'กำลังรอเวลาหมดหรือหมายเลขผู้ส่งไม่ตรงกัน';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'หมายเลขโทรศัพท์มือถือของสมาชิกวงกลมความปลอดภัยที่คุณกรอกไม่ตรงกัน: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'เข้าสู่ระบบภายใน 10 นาทีหลังจากออกจากระบบเพื่อหลีกเลี่ยงการยืนยันสองปัจจัย';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'ต้องกรอกหมายเลขโทรศัพท์มือถืออย่างน้อย ${n} หมายเลข';
			case 'noAccessNumberInYourRegionYet': return 'ยังไม่มีหมายเลขเข้าถึงในภูมิภาคของคุณ';
			case 'notEnoughAccessNumbersInYourRegion': return 'หมายเลขการเข้าถึงไม่เพียงพอในภูมิภาคของคุณ';
			case 'tipsForDeployDSMSterminal': return 'ระบบจะโหลดหมายเลขการเข้าถึงจากประเทศอื่นให้คุณโดยอัตโนมัติ เพื่อให้บริการตรวจสอบที่ดีขึ้นและมีต้นทุนต่ำลง ขอแนะนำให้คุณหรือผู้ที่คุณแนะนำติดตั้งเครื่อง DSMS ในพื้นที่เพื่อรับค่าธรรมเนียมการตรวจสอบ';
			case 'noOneCanProvideMeTheSecurityCode': return 'ไม่มีใครสามารถให้รหัสความปลอดภัยแก่ฉันได้ใช่ไหม';
			case 'useSupplementalMode': return 'ใช้โหมดเสริม';
			case 'returnToSecurityCodeMode': return 'กลับสู่โหมดรหัสความปลอดภัย';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'กรุณาป้อนหมายเลขโทรศัพท์มือถือที่เกี่ยวข้องของพวกเขา สามารถละเว้นรหัสประเทศได้';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'หมายเลขมือถือของ ${name} ไม่ถูกต้อง';
			case 'matchingVerificationStrategyIs': return 'กลยุทธ์การตรวจสอบการจับคู่คือ:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'สมดุลมากกว่า 3 ICP ไม่จำเป็นต้องเติมเชื้อเพลิงในตอนนี้';
			case 'escrowAccount': return 'บัญชีเอสโครว์';
			case 'fuelRelay': return 'รีเลย์เชื้อเพลิง';
			case 'pourFuel': return 'เทเชื้อเพลิง';
			case 'fuelState': return 'สถานะเชื้อเพลิง';
			case 'pouringFuelTips': return 'การเติมเชื้อเพลิงไม่ได้ทำให้คุณได้รับข้อดีหรือข้อเสียใดๆ แต่มีจุดประสงค์เพื่อเสริมประสบการณ์ระบบเดลต้า';
			case 'sponsorDevelopersByWatchingAds': return 'สนับสนุนนักพัฒนาโดยการดูโฆษณา';
			case 'status': return 'สถานะ';
			case 'date': return 'วันที่';
			default: return null;
		}
	}
}

extension on _StringsUk {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'рис. початок';
			case 'switchLanguage': return 'Переключити мову';
			case 'languageSwitch': return 'Перемикання мови';
			case 'slogan': return 'Побудова децентралізованої економіки в дельті';
			case 'countryRegionCode': return 'Код країни/області';
			case 'countryRegionSelection': return 'Вибір країн та регіонів';
			case 'nextStep': return 'наступний крок';
			case 'yourPhoneNumber': return 'Ваш номер телефону.';
			case 'pleaseSelectCountryAndRegion': return 'Будь ласка, оберіть вашу країну/регіон';
			case 'pleaseEnterPhoneNumber': return 'Будь ласка, введіть дійсний номер телефону!';
			case 'referrerDid': return 'Реферал зробив';
			case 'pleaseEnterTheReferrersDid': return 'Будь ласка, введіть дійсний децентралізований ідентифікатор реферала';
			case 'thisDidIsInvalid': return 'Цей DID є недійсним.';
			case 'nicknameFormatTips': return 'Нікнейм не повинен бути порожнім і не повинен перевищувати 16 цифр у довжину.';
			case 'additionalIinformation': return 'Додаткова інформація';
			case 'invitationSubject': return 'Запрошення до Дельта Консенсусу';
			case 'invitationLetter': return ({required Object did}) => 'Привіт, я беру участь у досягненні консенсусу Delta! \n Delta — це нова цифрова валютна платформа з відкритим кодом, яка працює на ICP. Вона може керувати різними цифровими валютами без паролів, закритих ключів або мнемоніки. Будь ласка, клацніть це посилання https://delta.kim/auto/download, щоб установити програму, і тепер вас запросять взяти участь у формуванні консенсусу та карбуванні монет. \n Рекомендатор DID: ${did}';
			case 'dSMSverification': return 'Валідація DSMS';
			case 'getAccessNumbers': return 'Отримайте кілька номерів доступу';
			case 'getAccessNumberPromptMessage': return 'Натисніть кнопку "Отримати" нижче, щоб змінити набір номерів доступу для SMS-верифікації в черзі.';
			case 'optionalAccessNumbers': return 'Додатковий номер доступу';
			case 'accessNumber': return 'номер доступу';
			case 'TELCO': return 'оператор (електростанції, транспортної мережі тощо)';
			case 'score': return 'оцінка';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('uk'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Будь ласка, позначте '),
					nBuilder(n),
					const TextSpan(text: ' номерів доступу і натисніть кнопку "'),
					span('text'),
					const TextSpan(text: '", щоб перейти до наступного кроку.'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Будь ласка, відзначте '),
					nBuilder(n),
					const TextSpan(text: ' номерів доступу і натисніть кнопку "'),
					span('text'),
					const TextSpan(text: '", щоб перейти до наступного кроку.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta - це глобальний експеримент з децентралізованою цифровою валютою з відкритим вихідним кодом та екосистема криптовалютних додатків.';
			case 'deltaGoalsDesc': return 'Мета полягає в тому, щоб люди могли використовувати Delta для спільного створення нових цифрових валют, які будуть універсальними, справедливими, безпечними, швидкими та екологічними. А також забезпечити різні ефективні сценарії застосування цих цифрових валют і попередніх криптовалют.';
			case 'details': return 'деталі';
			case 'get': return 'виграш';
			case 'select': return 'варіант';
			case 'send': return 'надсилання';
			case 'complete': return 'виконати';
			case 'selectedAccessNumberPrompt': return 'Після вибору відображається повний номер доступу та генерується рядок автентифікації.';
			case 'location': return 'розміщення';
			case 'verificationString': return 'рядок перевірки';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Будь ласка, використовуйте свій номер телефону '),
				num,
				const TextSpan(text: ' і надішліть '),
				label,
				const TextSpan(text: ' на '),
				accessNumber,
				const TextSpan(text: ', щоб завершити верифікацію.'),
			]);
			case 'ihaveSentTheSMS': return 'Я надіслав текстове повідомлення';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Валідаційний рядок дійсний протягом 6 хвилин, час, що залишився: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Занадто швидко, щоб чекати ${x} секунд для продовження!';
			case 'waitingForVerificationSMS': return 'Очікуємо на перевірочне SMS...';
			case 'partSuccsForVerificationSMS': return 'Один з терміналів доступу пройшов SMS-верифікацію!';
			case 'creatingAccessToken': return 'Створюється токен доступу...';
			case 'intoDelta': return 'Всередині Дельти';
			case 'deltaAccountIsLoggedIn': return 'Ваш обліковий запис Delta увійшов';
			case 'iHavLoggedOut': return 'Я пас.';
			case 'startTwoFactorVerification': return 'Початок подвійної перевірки';
			case 'securityCircleVerification': return 'Коло валідації безпеки';
			case 'generateSecurityCode': return 'Згенеруйте код безпеки';
			case 'generateSecurityCodeHintText': return 'Згенерований код безпеки буде надіслано випадково обраному члену вашого кола безпеки.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Ви не встановили коло безпеки, ваш обліковий запис дуже небезпечний, будь ласка, введіть будь-яку 6-значну цифру і перейдіть до наступного кроку.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Код безпеки згенеровано, будь ласка, зв\'яжіться з наступними родичами та друзями і попросіть їх витягти код безпеки, щоб ви могли пройти верифікацію. дійсний протягом 30 хвилин!';
			case 'itGetSecurityCodeTip': return 'Порада: Ви можете отримати код безпеки, двічі натиснувши на псевдонім вашого облікового запису на сторінці Delta App -> Меню -> Забезпечити безпеку.';
			case 'securityCircleMemberList': return 'Список учасників кола безпеки:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Будь ласка, виберіть родича або друга зі списку учасників, щоб створити та надати вам код безпеки для підтвердження вашої справжньої особи. Мета полягає в тому, щоб запобігти контролю над обліковим записом з боку інших, якщо номер мобільного телефону втрачено або вкрадено.';
			case 'formatIsXdigits': return ({required Object num}) => 'Формат як ${num} цифр';
			case 'signInSuccessfully': return 'Успішний вхід!';
			case 'twoFAandLogin': return 'Подвійна автентифікація та вхід';
			case 'verificationSuccessful': return 'Перевірте успіх!';
			case 'validationFailed': return 'Валідація не пройшла!';
			case 'dappInfo': return 'Інформація про DApp';
			case 'securityCircle': return 'охоронне кільце';
			case 'securityCode': return 'код безпеки';
			case 'provideSecurity': return 'забезпечення безпеки';
			case 'addManully': return 'Додати вручну';
			case 'addFromContacts': return 'Додати з адресної книги';
			case 'addSecurityCircle': return 'Додати Коло безпеки';
			case 'inputType': return 'Тип входу';
			case 'mobileNumber': return 'номер мобільного телефону';
			case 'did': return 'Ідентифікатор адреси';
			case 'pleaseEnterValidDID': return 'Будь ласка, введіть дійсний децентралізований ідентифікатор';
			case 'pleaseEnterValidWalletAddress': return 'Будь ласка, введіть дійсну адресу гаманця';
			case 'appellation': return 'форма звернення';
			case 'appellationHint': return 'Як ви це називаєте, наприклад, "малюк"?';
			case 'addSecurityCircleTips': return 'Будь ласка, не додавайте людей, яким ви не довіряєте, до свого кола безпеки.';
			case 'referralTeam': return 'Рекомендовані команди';
			case 'profile': return 'Інформація про обліковий запис';
			case 'menu': return 'меню';
			case 'directly': return 'прямий';
			case 'indirectly': return 'непрямий';
			case 'inviteContacts': return 'Запрошення Контакт';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Ваш запрошений - '),
				nickname,
				const TextSpan(text: ', і ви безпосередньо запросили '),
				num1,
				const TextSpan(text: ' людей, з яких '),
				num2,
				const TextSpan(text: ' зараз онлайн.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Ви опосередковано направили '),
				num1,
				const TextSpan(text: ' людей, з яких '),
				num2,
				const TextSpan(text: ' зараз онлайн.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Запрошуйте друзів приєднатися до Delta і покращуйте суспільний консенсус разом. За кожного прямого реферала ставка видобутку однієї людини збільшує базову ставку на '),
				rate1,
				const TextSpan(text: '. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Запрошуйте друзів приєднатися до Delta, і разом ви зможете збільшити суспільний консенсус, а за кожного непрямого реферала ваша ставка майнінгу буде збільшена на '),
				rate2,
				const TextSpan(text: ' від базової ставки.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Ви впевнені, що хочете видалити "${name}"?';
			case 'safetyCircleRoleQ': return 'Для чого призначене запобіжне кільце?';
			case 'safetyCircleRoleA': return 'Захистіть свій обліковий запис, забезпечивши вторинну автентифікацію в критичних ситуаціях.';
			case 'howSecurityCirclesWorkQ': return 'Як працюють запобіжні кільця?';
			case 'howSecurityCirclesWorkA': return 'У випадку, якщо необхідна верифікація Circle of Safety, програма Delta Smart Contracts випадковим чином вибере учасника зі списку друзів Circle of Safety, який надасть вам код безпеки, щоб завершити перевірку вашої особи. Коли ви запитаєте у учасника код безпеки, він зможе підтвердити, чи ви - це ви, чи ні. У той же час програма запропонує: "Відмовтеся надати код безпеки, якщо це не ви", щоб захистити безпеку вашого облікового запису. Тому ви завжди повинні переконатися, що члени вашого кола безпеки - це люди, яким ви можете довіряти.';
			case 'securityCircleBeUsedQ': return 'Коли це буде використано?';
			case 'securityCircleBeUsedA1': return '1. коли ви втрачаєте контроль над вашим Delta APP, зазвичай це відбувається через те, що ваш мобільний телефон загублений або вкрадений.';
			case 'securityCircleBeUsedA2': return '2. у випадку деяких чутливих операцій програма Delta Smart Contract потребує підтвердження того, що це саме ви.';
			case 'provideSafetyTip1': return 'Коли ваш приятель запитує у вас код безпеки, переконайтеся, що це його власний код.';
			case 'provideSafetyTip2': return 'Ви забезпечуєте безпеку вищезазначеним друзям, які визначили вас як найбільш довірену особу в своєму колі безпеки і потребують від вас підтвердження безпеки на випадок, якщо вони зіткнуться з чутливими операціями на своєму акаунті.';
			case 'provideSafetyTip3': return 'Двічі клацніть на аватарку іншої людини, щоб отримати код безпеки, коли це необхідно.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'Інша сторона наразі не має коду безпеки, який потрібно отримати!';
			case 'existSecurityCodeTip': return 'Будь ласка, переконайтеся, що друг або член сім\'ї, який запитує у вас код безпеки, - це той самий друг або член сім\'ї. Щоб захистити вашого друга або члена сім\'ї, вам слід відмовитися надавати код безпеки, якщо друг або член сім\'ї не є тим самим другом або членом сім\'ї, який запитує у вас код безпеки.';
			case 'avatarSettings': return 'Налаштування аватара';
			case 'NFTAvatarPropertyRightsText': return 'Відмова від відповідальності: Використання NFT в якості аватара є виключно особистим уподобанням і не має нічого спільного з володінням правами інтелектуальної власності на цей NFT.';
			case 'projectWebsite': return 'Сайт проекту:';
			case 'whitepaper': return 'білий папір:';
			case 'indexID': return 'Індекс Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Індекс між ${start} та ${end}.';
			case 'inputToLoadNFTAvatarTip': return 'Введіть індексний ідентифікатор вашого улюбленого NFT, і програма автоматично завантажить його як аватарку для вас.';
			case 'miningRate': return 'швидкість видобутку';
			case 'miningDetails': return 'Деталі видобутку';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Загальна швидкість видобутку: '),
				rate,
				const TextSpan(text: ' δ/день'),
			]);
			case 'EndOfMiningSession': return 'Циклічний майнінг закінчився:';
			case 'tapToMineDeltaCoin': return 'Натисніть, щоб видобути монети Delta ↑.';
			case 'clickToStartMining': return 'Натисніть, щоб почати майнінг!';
			case 'miningHasStoppedPromptDesc': return 'Майнінг зупинився, кожні 24 години відбувається цикл майнінгу, натисніть на іконку блискавки, щоб почати новий раунд майнінгу.Майнінг Delta - це механізм розподілу, який не споживає додаткової арифметичної потужності і мережевого трафіку з вашого пристрою.';
			case 'aboutBaseRate': return 'Щодо базової ставки?';
			case 'baseRateDescription': return 'Як було узгоджено в документі, правило зниження базової ставки для майнінгу Delta буде розділено на два етапи.\nЕтап 1: Ставка становитиме 32δ/день, коли кількість учасників (реєстрацій) становитиме 3 000 або менше. Використовуючи це як стартову базу, базова ставка зменшується вдвічі кожного разу, коли кількість людей збільшується в 10 разів.\nЕтап 2: Коли кількість учасників досягає 30 мільйонів або більше, базова ставка зменшується вдвічі щоразу, коли кількість учасників збільшується в 3 рази. Аж до остаточної зупинки видобутку.';
			case 'baseRate': return 'Βασικό επιτόκιο';
			case 'directReferralRewards': return 'Бонус за пряме залучення клієнтів';
			case 'directReferralRewardDesc': return 'За кожного прямого реферала ваша ставка видобутку буде збільшена на 1/3 від базової ставки, поки вони видобувають.\n\n Крім того, статус видобутку ваших рефералів також буде зараховуватися до вашого бонусу за прямих рефералів.';
			case 'indirectReferralRewards': return 'Непрямий реферальний бонус';
			case 'indirectReferralRewardDesc': return 'Коли непрямий реферал майнить, ваша ставка майнінгу збільшується на додаткову 1/10 частину від базової ставки.\n\n Ваша команда прямих рефералів, кожна людина, яку вони перенаправляють, є для вас непрямим рефералом.';
			case 'mine': return 'видобуток (руда або інший ресурс з шахти)';
			case 'thisMiningInformation': return 'Поточна інформація про видобуток корисних копалин';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Брав участь у майнінгу: '),
				x,
				const TextSpan(text: ' разів'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Загальний виграш цього разу: '),
				x,
				const TextSpan(text: ' монет Delta'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Базовий заробіток: '),
				x,
				const TextSpan(text: ' монет'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Прямий внесок команди: '),
				x,
				const TextSpan(text: ' монет'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Непрямий внесок команди: '),
				x,
				const TextSpan(text: ' монет'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Час між викопуваннями: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Ефективні години майнінгу: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} годин';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Для забезпечення безпеки активів члени кола безпеки повинні мати 3-5 довірених осіб, яким вони постійно довіряють.';
			case 'index': return 'індексація';
			case 'amount': return 'сума грошей';
			case 'balance': return 'залишки';
			case 'timeStamp': return 'мітка часу';
			case 'summary': return 'тези доповідей';
			case 'miningHasStopped': return 'Видобуток припинився.';
			case 'miningHasStoppedDesc': return 'Ваш видобуток наразі зупинено, почніть заробляти зараз.';
			case 'startMining': return 'Почніть майнінг';
			case 'changeMobileNumber': return 'Зміна номера мобільного телефону';
			case 'currentMobileNumber': return 'Поточний номер мобільного телефону';
			case 'newMobileNumber': return 'Новий номер мобільного телефону';
			case 'securityCodeFormatIs6digits': return 'Формат коду безпеки - 6 цифр!';
			case 'startVrification': return 'Почніть перевірку';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Цей мобільний номер вже існує, асоційований DID: ${dId}.';
			case 'noDataYet': return 'Дані відсутні';
			case 'previousMobileNumber': return 'Попередній номер мобільного телефону';
			case 'changeLog': return 'Запис змін';
			case 'referralLinkToShare': return 'Рекомендовані посилання для поширення';
			case 'referrer': return 'реферал';
			case 'isoCountryCode': return 'Код країни ISO';
			case 'avatarLogo': return 'логотип заголовка';
			case 'creationTime': return 'Час створення';
			case 'lastUpdate': return 'Останнє оновлення';
			case 'numberOfSecurityCircleMembers': return 'Кількість членів кіл безпеки';
			case 'theLatestMining': return 'Остання розкопка.';
			case 'effectiveMiningDays': return 'Кількість днів ефективного майнінгу';
			case 'modifyNickname': return 'Змінити нікнейм';
			case 'didNotChange': return 'Без змін!';
			case 'kycVerification': return 'Верифікація KYC';
			case 'faceID': return 'Ідентифікація обличчя';
			case 'touchID': return 'Ідентифікація за відбитками пальців';
			case 'biometricsAuthorizationTest': return 'Тестування біометричної автентифікації';
			case 'currentState': return 'поточний стан';
			case 'biometricsAuthenticationLocalizedReason': return 'Використовуйте розблокування свого пристрою, щоб підтвердити свою особу.';
			case 'graph': return 'архів графіки (наприклад, карти, документи або ботанічні фігури)';
			case 'referralRelationshipGraph': return 'Мапування зв\'язків між рефералами';
			case 'nativeContacts': return 'Місцеві контакти';
			case 'registrationAndMiningTrends': return 'Тенденції реєстрації та майнінгу';
			case 'inMining': return 'видобуток корисних копалин';
			case 'registrationVolume': return 'обсяг реєстрації';
			case 'unmined': return 'невикористаний';
			case 'mined': return 'видобуто';
			case 'communityMining': return 'Спільний видобуток корисних копалин';
			case 'consensusPromotionFund': return 'Фонд сприяння консенсусу';
			case 'ecologicalAwardFund': return 'Фонд екологічного стимулювання';
			case 'icpFuelCrowdfunding': return 'Паливний краудфандинг ICP';
			case 'coreDeveloperRewards': return 'Винагороди для основних розробників';
			case 'totalAllocation': return 'Загальний розподіл';
			case 'miningRatio': return 'Коефіцієнт видобутку';
			case 'billion.30': return '30 мільярдів';
			case 'billion.60': return '60 мільярдів';
			case 'billion.180': return '180 мільярдів.';
			case 'billion.300': return '300 мільярдів';
			case 'watchAdsToSupportDevelopers': return 'Дивіться рекламу на підтримку розробників';
			case 'loadingAdcomponents': return 'Завантаження рекламних компонентів...';
			case 'timeIsNotUp': return 'Час не закінчився!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Не вдалося завантажити, можливо, мережа заблокована!';
			case 'pendingUSCTrecords': return 'Записи USCT, що очікують на розгляд';
			case 'pendingUSCTrecordsDesc': return 'Очікувані записи USCT будуть підтверджені на рекламній платформі протягом 15-30 днів, а дійсні записи будуть перенесені до списку записів USCT, і відповідна сума USCT буде додана до балансу рахунку.';
			case 'validity': return 'дійсність';
			case 'advertiser': return 'рекламодавці';
			case 'earned': return 'зароблені';
			case 'withdraw': return 'вилучити';
			case 'validUSCTrecords': return 'Ефективні записи USCT';
			case 'USCTmining': return 'USCT Mining';
			case 'aboutUSCTmining': return 'Про майнінг USCT?';
			case 'aboutUSCTminingItme1': return '1. USDT - це популярний у всьому світі стейблкоїн в доларах США, який можна легко обміняти на національні суверенні валюти на основних криптовалютних біржах світу.';
			case 'aboutUSCTminingItme2': return '2. USCT - це тимчасова міра надходжень від видобутку USCT, відома як доларовий кредит, який з часом буде конвертований в USDT відповідно до фактичної суми розрахунків і правил розподілу рекламної платформи та відповідної пропорції.';
			case 'aboutUSCTminingItme3': return '3. USCT Mining - це функція реалізації реклами трафіку у спільноті Delta. Вона використовує переваги великої бази користувачів спільноти Delta, щоб забезпечити численні переваги для рекламодавців, розробників Delta та абсентеїстів. Вона призначена для забезпечення певного ефективного доходу для працівників, які працюють за сумісництвом, на ранній стадії, коли екосистема Delta ще не сформувалася і не процвітає; в той же час, вона також надає певну фінансову підтримку розробникам, щоб вони могли продовжувати надавати послуги з розробки протягом тривалого періоду часу і, в кінцевому рахунку, мати можливість реалізувати всі плани, викладені в технічному завданні; і вона також забезпечує ефективний канал просування для рекламодавців продуктів.';
			case 'aboutUSCTminingItme4': return '4. правила розподілу розроблені таким чином, що 40 відсотків від загальної суми надходжень використовуються як комісійні за технічну підтримку розробників, а решта 60 відсотків - як винагорода за відсутність у спільноті. Винагорода за абсентеїзм є частиною багаторівневої моделі розподілу, подібної до DTC, винагорода за абсентеїзм буде розділена на три частини відповідно до співвідношення 6:3:1, кожного разу, коли одна з винагород за абсентеїзм USCT видобуває 6 частин, що виділяються за абсентеїзм поточного оголошення, 3 частини виділяються вищому рефералу, 1 частина виділяється рефералу другого рівня. Аналогічно, ви також можете отримати таку ж винагороду за реферала за друзів, яких ви привели за допомогою майнінгу USCT. Перевага такої багаторівневої системи розподілу полягає в тому, що будь-хто може заробити відносно велику кількість USDT, розвиваючи команду рефералів.';
			case 'aboutUSCTminingItme5': return '5. розрахунковий цикл становить 7 днів, тобто кожні 7 днів відбувається перевірка валідності з рекламною платформою, і підтверджена валідність надходжень і фактична сума буде записана на баланс. Мінімальна сума для кожного виведення коштів становить 10USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Рядки від ${x} до ${y}.';
			case 'wallet': return 'гаманці';
			case 'multiChainWallet': return 'багатоланцюговий гаманець';
			case 'deposit': return 'депозит (наприклад, на банківському рахунку)';
			case 'transfer': return 'переказ (гроші на банківський рахунок)';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} в адресі гаманця';
			case 'transactions': return 'Записи транзакцій';
			case 'network': return 'ретикуляція';
			case 'walletAddress': return 'Адреса гаманця';
			case 'currentAddress': return 'поточна адреса';
			case 'depositAddress': return 'Адреса поповнення рахунку';
			case 'receivingMoneyAddress': return 'адреса одержувача платежу';
			case 'applyTempDepositAddress': return 'Адреса для запиту на тимчасове поповнення рахунку';
			case 'tempDepositAddressTip': return '1. це спільна депозитна адреса. Будь ласка, не вносьте суму після закінчення терміну оренди або після того, як ви звільнилися. Якщо це станеться, сума буде втрачена.';
			case 'tempDepositAddressTip2': return '2. перед внесенням депозиту, будь ласка, переконайтеся, що [Chain Name] і [Coin Name] точно збігаються; у випадку контрактних токенів, вам також потрібно переконатися, що [Contract Standard] і [Contract Address] точно збігаються.';
			case 'tempDepositAddressTip3': return '3. будь ласка, не намагайтеся внести кошти, які не відповідають жодному з параметрів у наведених вище підказках, інакше сума буде втрачена.';
			case 'tempDepositAddressTip4': return '4. якщо вам потрібно внести інші види активів, перейдіть на сторінку відповідної валюти та параметрів, щоб подати заявку на нову адресу.';
			case 'applyExtensionOfValidity': return 'Заява на продовження терміну дії';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: 'Термін дії цієї адреси закінчується після '),
				diff,
				const TextSpan(text: ' і буде '),
				tap('вручну продовжити'),
				const TextSpan(text: ' дійсною протягом 12 годин до закінчення терміну дії.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Можна поновити лише за 12 годин до початку';
			case 'theReceivingAddressValidForLongtime': return 'Ця адреса дійсна протягом тривалого часу.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Ця адреса для збору коштів є дійсною протягом тривалого часу і автоматично зараховується в режимі реального часу.';
			case 'confirmDeposited': return 'Підтвердження депозитів';
			case 'unbindThisDepositAddress': return 'Розбийте цю адресу поповнення на частини';
			case 'confirmDepositedTip': return 'Якщо кошти були переведені, натисніть кнопку вище, щоб запустити виставлення рахунку на ваш гаманець через 10 хвилин.';
			case 'unbindDepositAddressTip': return 'Щоб зменшити накладні витрати смарт-контракту, будь ласка, відв\'яжіть адресу поповнення, якщо ви більше не будете поповнювати рахунок протягом терміну дії контракту.';
			case 'transferToAddress': return 'перейти на адресу';
			case 'longPressToPaste': return 'Тривале натискання для вставки';
			case 'all': return 'повний';
			case 'balanceX': return ({required Object x}) => 'Баланс ${x}';
			case 'transferOut': return 'Виявляється.';
			case 'depositXcoins': return ({required Object x}) => 'Зараховано ${x}';
			case 'sender': return 'відправник';
			case 'recipient': return 'одержувач';
			case 'memo': return 'примітка';
			case 'kind': return 'спосіб (життя)';
			case 'transferAmountExceedsAvailableBalance': return 'Перекази понад доступний залишок';
			case 'pleaseEnterValidAmount': return 'Будь ласка, введіть правильну суму';
			case 'networkFee': return 'Плата за обслуговування в мережі';
			case 'fee': return 'плата за обробку';
			case 'validLengthXcharacters': return ({required Object x}) => 'Адреса допустимої довжини ${x} символів';
			case 'historys': return 'історична довідка';
			case 'dtcCreditdetail': return 'Інформація про дельта-бали';
			case 'usdCreditdetail': return 'Інформація про бали в доларах США';
			case 'dappSquare': return 'dApp Plaza';
			case 'amountRaised': return 'Зібрано коштів';
			case 'disbursedAmount': return 'Сума видачі';
			case 'participationTimes': return 'Кількість учасників';
			case 'completionRate': return 'відсоток завершення';
			case 'exchangeRate': return 'курс обміну валют';
			case 'icpCrowdfunding': return 'Краудфандинг ICP';
			case 'crowdfunding': return 'краудфандинг';
			case 'trendsCurve': return 'крива тренду';
			case 'fullScreenView': return 'повноекранний перегляд';
			case 'walletBalance': return 'Баланс гаманця:';
			case 'manageWallet': return 'Керування гаманцем';
			case 'fundraiseAmount': return 'фандрейзинг';
			case 'exchangeRewardAmount': return 'Виведення суми винагороди';
			case 'fundraise': return 'фандрейзинг';
			case 'rangeIntegersX': return ({required Object x}) => 'Діапазон: ціле число ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Успішно взяв участь у зборі коштів і отримав винагороду ${amount}DTCT';
			case 'amountSummary': return 'Підсумкові суми';
			case 'changePreferred': return 'Зміна вподобань';
			case 'changePreferredAddress': return 'Змінити бажану адресу';
			case 'preferredAddressTip': return 'Кошти будуть автоматично перераховані на вказану адресу, коли кошти будуть зібрані за допомогою зареєстрованого мобільного номера або DID.';
			case 'newAddress': return 'Нова адреса';
			case 'newAddressTip': return 'Щоб запобігти зловживанням, коли створюється більше однієї адреси гаманця, за кожну нову адресу стягується комісія за транзакцію.';
			case 'createNew': return 'новозбудований';
			case 'chainNetworkName': return 'назва мережі ланцюга';
			case 'from': return 'походити з (місця)';
			case 'to': return 'до (часу)';
			case 'noAvailableDepositAmountDetected': return 'Доступної суми вкладу не виявлено!';
			case 'crossChainReceiveMoneyMonitoring': return 'Крос-ланцюгова колекція слухає ...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Отримано ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Підтвердження в процесі ('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Примітки (обов\'язкові для прочитання новачкам)';
			case 'whyUseSharedAddresses': return 'Навіщо використовувати загальну адресу?';
			case 'useSharedrAdvantage': return 'Переваги використання спільних адрес під час поповнення рахунків через мережу полягають у наступному:';
			case 'useSharedrAdvantage1': return '1. зменшити втрати комісій за перекази та знизити вартість використання для користувачів. Через використання ексклюзивної адреси, це призведе до занадто великого розпорошення коштів, як правило, для того, щоб полегшити подальший переказ іншим користувачам при знятті коштів, коли користувач поповнює рахунок другим переказом, кошти потрібно об\'єднати в одну або невелику кількість адрес управління.';
			case 'useSharedrAdvantage2': return '2. у спільній схемі програмі потрібно підтримувати лише відносно невеликий пул адрес, які можна швидко зіставити з вихідними передачами та прослуховуванням збору світла, що зменшує накладні витрати обчислювальних ресурсів. На противагу цьому, у випадку використання ексклюзивних адрес все було б навпаки.';
			case 'tokenType': return 'Тип токену';
			case 'contract': return 'підрядник';
			case 'contractStandard': return 'стандарт контракту';
			case 'contractAddress': return 'адреса контракту';
			case 'native': return 'найпростіші';
			case 'confirmUnbindingPleaseEnterYes': return 'Щоб підтвердити відв\'язування, будь ласка, введіть "так".';
			case 'listAllWorkingTempReceivingAddresses': return 'Перерахуйте всі робочі адреси поповнення міжмережевого зв\'язку';
			case 'setNote': return 'Налаштування нотаток';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Не може бути довшим за ${x} байт';
			case 'transferFee': return 'комісія за переказ';
			case 'crossChainFee': return 'крос-ланцюгова комісія';
			case 'crossChainTransferOutError': return 'помилка перенесення зшивання';
			case 'chainName': return 'назва ланцюжка';
			case 'message': return 'повідомлення';
			case 'dontShowAgain': return 'більше не відображається';
			case 'queuing': return 'черга';
			case 'optional': return 'необов\'язковий';
			case 'publiclyVisible': return 'публічно видимими';
			case 'rates': return 'тариф';
			case 'minimum': return 'мінімум';
			case 'maximum': return 'верхня межа';
			case 'minimumBlockConfirmations': return 'Мінімальна кількість підтверджень блокування';
			case 'dsmsVerifyTerminal': return 'Термінал валідації DSMS';
			case 'overall': return 'парасолька';
			case 'my': return 'мій';
			case 'checkValidatorQualifications': return 'Перевірка кваліфікації привілеїв автентифікатора';
			case 'getVerifierPermissions': return 'Отримати привілеї автентифікатора';
			case 'qualification': return 'природні обдарування';
			case 'upperLimit': return 'ліміт';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Максимальна кількість дозволених терміналів доступу';
			case 'numberOfExistingAccessTerminals': return 'Кількість встановлених терміналів доступу';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Перед тим, як подати заявку на отримання прав автентифікатора, вам потрібно підготувати непрацюючий мобільний телефон Android і виділений номер доступу, а також завантажити та встановити додаток DSMS Access Terminal.';
			case 'downloadLink': return 'посилання для завантаження';
			case 'alreadyReadyFollowingTheAboveTips': return 'Все готово, як викладено вище';
			case 'globalUniversal': return 'для глобального використання';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Наразі недостатньо локальних автентифікаторів для участі у сервісі доступу до автентифікації DSMS, будь ласка, оберіть сервіс доступу "'),
				gu,
				const TextSpan(text: '".'),
			]);
			case 'asDedicatedNumberForAccess': return 'як номер лише для доступу';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Будь ласка, поставте галочку у полі "${tip}".';
			case 'inputLengthTooShort': return 'Занадто коротка довжина вхідних даних';
			case 'shortName': return 'абревіатури';
			case 'pleaseEnterXname': return ({required Object name}) => 'Будь ласка, введіть ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Заявка подається, будь ласка, зачекайте...';
			case 'applyForDSMSVerifierPermission': return 'Подати заявку на отримання привілеїв валідатора DSMS';
			case 'confirmInformation': return 'Підтвердження інформації';
			case 'lastHeartbeat': return 'останній удар серця';
			case 'expirationTime': return 'час, що залишився';
			case 'country': return 'нації';
			case 'accessTerminals': return 'термінал доступу';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Загальна кількість терміналів з номерами доступу до DSMS';
			case 'textContent': return 'Текстовий вміст';
			case 'scanQRcodeToLogin': return 'Проведіть пальцем, щоб увійти';
			case 'confirmLogin': return 'Підтвердити логін';
			case 'authorizeSubApplicationToLogin': return 'Дозвольте цій субпрограмі увійти в систему';
			case 'authorizationSuccessful': return 'Авторизація пройшла успішно!';
			case 'launchSMSprogram': return 'Запуск SMS-програми';
			case 'notApplied': return 'Немає заявки';
			case 'validityPeriod': return 'термін дії';
			case 'renewal': return 'заявка на поновлення';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Відскануйте код для авторизації входу в термінал';
			case 'rewards': return 'заохочення';
			case 'roles': return 'характер';
			case 'developerCenter': return 'Центр для розробників';
			case 'appName': return 'Назва заявки';
			case 'pleaseSelect': return 'будь ласка, оберіть';
			case 'category': return 'категорія';
			case 'keywords': return 'слово';
			case 'pleaseEnterAkeyword': return 'Будь ласка, введіть ключове слово';
			case 'createApplication': return 'Створення додатків';
			case 'appType': return 'Тип програми';
			case 'numberOfCategoriesMustBetween1and3': return 'Кількість категорій має бути від 1 до 3';
			case 'appLogoSpecifications': return 'Формат зображення: png, розмір: в межах 100 КБ, роздільна здатність (пікселів): 256*256';
			case 'localAlbum': return 'Місцеві фотоальбоми';
			case 'networkPath': return 'мережевий шлях';
			case 'imageURLkAddress': return 'URL-адреса зображення';
			case 'urlAddressFormatIsIncorrect': return 'Неправильно відформатована URL-адреса';
			case 'imageFormatOnlySupportsPng': return 'Зображення підтримуються лише у форматі "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'Довжина повинна бути в межах ${a}-${b} символів.';
			case 'introduction': return 'коротка інформація';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'Розмір зображення не може бути більшим за ${a}, наразі ${b}.';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'Роздільна здатність зображення має бути: ${p1}(пікселів), наразі ${p2}';
			case 'becomeDeveloper': return 'Стати розробником';
			case 'developerInformation': return 'Інформація про розробника';
			case 'teamName': return 'Назва команди';
			case 'website': return 'вузол';
			case 'other': return 'окрім';
			case 'githubVerification': return 'Верифікація на Github';
			case 'exampleUrl': return 'Приклад URL-адреси';
			case 'githubVerificationTip': return ({required Object did}) => 'Будь ласка, скористайтеся своїм акаунтом GitHub, щоб створити файл \'delta.did\' у вашому сховищі з вмістом \'${did}\'; потім вставте URL-адресу githubusercontent цього файлу в це поле введення для автентифікації.';
			case 'createApp': return 'Створення додатків';
			case 'appManagement': return 'управління додатками';
			case 'statusLogs': return 'Журнал стану';
			case 'bad': return 'Нічого доброго.';
			case 'normal': return 'звичайний';
			case 'good': return 'відмінний.';
			case 'onceCreatedItCannotBeChanged': return 'Одного разу створений, він не може бути змінений!';
			case 'manageApplicationEntity': return 'Керування об\'єктами програми';
			case 'currentVersion': return 'поточна версія';
			case 'submitVersion': return 'Подана версія';
			case 'packageOnlySupportZipCompressedFile': return 'Пакунок підтримує лише zip-архіви';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Файл \'${name}\' не знайдено у zip-архіві.';
			case 'fileList': return 'Список документів:';
			case 'programPackage': return 'Програмний пакет:';
			case 'automaticallyExtractFromVersionFile': return 'Автоматично витягується з файлів \'.version';
			case 'dappVersionFormatTip': return 'Формат номера версії повинен бути десятковим з точністю до 2 цифр, що не перевищує максимум 99.99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Номер версії має бути більшим за поточну версію \'${v}\'';
			case 'versionNotes': return 'Відбиток:';
			case 'updateRelease': return 'нова версія';
			case 'loadAndRun': return 'Завантажуйте та працюйте';
			case 'notYetSubmittedProgramPackage': return 'Програмний пакет ще не подано!';
			case 'authorizeMinidAppLogin': return 'Авторизація входу в міні-додаток';
			case 'confirmAuthorizationPleaseEnterYes': return 'Для підтвердження авторизації, будь ласка, введіть "так".';
			case 'authorizeNow': return 'Негайний дозвіл';
			case 'operation': return 'Операція.';
			case 'statusChange': return 'Зміна статусу';
			case 'changeTo': return 'Переключись на:';
			case 'notes': return 'Зауваження.';
			case 'changesNotEffective': return 'Зміна не дійсна!';
			case 'released': return 'Опубліковано';
			case 'inPublicBeta': return 'відкрита бета-версія';
			case 'developers': return 'Розроблено';
			case 'reviewList': return 'Список коментарів.';
			case 'postReview': return 'Залишити коментар';
			case 'scoreNow': return 'Оцініть зараз';
			case 'description': return 'Опис.';
			case 'noData': return '(^-^)\n Немає даних';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Версію оновлено з ${a} на ${b}.';
			case 'loadNewVersion': return 'Завантажити нову версію';
			case 'name': return 'Ім\'я.';
			case 'canisterId': return 'Ідентифікатор танка.';
			case 'updateTime': return 'час оновлення';
			case 'contractCanistersState': return 'Статус контрактного танка';
			case 'userDistribution': return 'розподіл користувачів';
			case 'settings': return 'Налаштування';
			case 'security': return 'Безпека';
			case 'invite': return 'запрошення';
			case 'more': return 'Більше...';
			case 'receiveAddress': return 'Отримайте адресу:';
			case 'hangingAmount': return 'висить';
			case 'hangingAmountTips': return 'Очікувані суми - це тимчасові записи винагород, отриманих від майнінгу вашою підлеглою командою, щойно ви завершите сеанс майнінгу, ці суми будуть зібрані в Очікуваних сумах.';
			case 'pendingAmount': return 'в очікуванні';
			case 'pendingAmountTips': return 'Неоплачені суми - це ті, які ще не підтверджені рекламодавцям, а ті, що підтверджені, будуть перенесені до дійсного запису USCT, а будь-яка недійсна частина буде виключена.';
			case 'received': return 'отримано';
			case 'processing': return 'у процесі';
			case 'replied': return 'респондент';
			case 'rejected': return 'відмова';
			case 'unknown': return 'незвідані';
			case 'insufficientBalance': return 'Недостатній баланс!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Баланс ${x} недостатній для покриття мережевих зборів за перехресне зшивання';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Транзакція ще не завершена і не може бути переказана в даний момент';
			case 'thisfunctionNotSupportExternalCalls': return 'Ця функція не підтримує зовнішній виклик';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Не знайдено адреси, за якою можна сплатити міжмережеву комісію, будь ласка, перейдіть до іншої мережі, щоб спробувати.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'Поточний збіг з максимальною сумою, яку можна переказати за одну транзакцію, становить ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Примітки не повинні перевищувати 64 байти';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'На рахунку недостатньо коштів і сума складає: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Ви не можете прив\'язати більше 3 адрес.\nЯкщо вам потрібно прив\'язати нову платіжну адресу.\nБудь ласка, спочатку відв\'яжіть іншу адресу';
			case 'parametersA_exception': return ({required Object x}) => 'Параметри: ${x}, виключення';
			case 'parameterException': return 'Виняток параметра!';
			case 'transferAmountMustBeLargerThan0': return 'Сума переказу повинна бути більшою за 0';
			case 'authorizationHasExpired': return 'Термін дії дозволу закінчився';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'Додаток не був авторизований власником';
			case 'authenticationTokenIsInvalid': return 'Недійсний маркер автентифікації';
			case 'verifyInfoIsInvalidOrExpired': return 'Невірна або прострочена інформація для підтвердження';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Переконайтеся, що кількість терміналів доступу перевищила ліміт один на десять тисяч';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'Участь у майнінгу повинна тривати більше 3 днів';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Кількість членів кола безпеки не може бути менше трьох';
			case 'avatarIsNotSet': return 'Аватар не встановлено';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Кількість прямих рефералів не може бути менше 3';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Часовий ліміт недостатній, і ви можете змінити номер мобільного телефону лише один раз на рік.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Цей номер мобільного телефону вже існує і не може бути продубльований';
			case 'securityCodeIsIncorrect': return 'Неправильний код безпеки';
			case 'securityCodeMayHaveExpired': return 'Можливо, термін дії коду безпеки закінчився';
			case 'sessionIdIsInvalidOrExpired': return 'Недійсний або прострочений ідентифікатор сеансу';
			case 'sessionHasBeenAuthorized': return 'Сесію було оголошено завершеною!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Можна продовжити лише за ${x} днів до закінчення терміну дії';
			case 'notYetGrantedDeveloperPermissions': return 'Поки що немає прав розробника';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Поле ${x} не може бути нульовим';
			case 'emailFormatError': return 'Помилка формату електронної пошти';
			case 'theXformatIsIncorrect': return ({required Object x}) => '\'${x}\' помилка форматування';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Поле "${x}" повинно мати довжину від ${y} до ${z} символів.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Діапазон вибору \'${x}\' має бути між ${y} та ${z}.';
			case 'unchanged_sameAsOldContent': return 'Без змін, той самий вміст, що й раніше!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' вже існує!';
			case 'mobileNumberHasNotJoinedDelta': return 'Цей мобільний номер ще не додано до Дельти!';
			case 'referrerIdCannotBeEmpty': return 'Ідентифікатор реферала не може бути порожнім!';
			case 'referrerIdDoesNotExist': return 'Ідентифікатор реферала не існує!';
			case 'didIsIncorrectOrInvalid': return 'DID неправильний або недійсний!';
			case 'accessTokenIsIncorrectOrInvalid': return 'Токен доступу неправильний або недійсний!';
			case 'minimumWithdrawalAmountIs1USD': return 'Мінімум 1USD для одноразового зняття коштів';
			case 'miningTimeIsNotYet': return 'Ще не час мінувати.';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Вже існує, будь ласка, не додавайте його знову!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Неможливо використовувати реєстраційний номер як номер доступу для автентифікації';
			case 'canotAddYourSelf': return 'Неможливо додати себе';
			case 'logOut': return 'Вийдіть з системи';
			case 'confirmLogout': return 'Підтвердити вихід';
			case 'logOutTipsText': return 'Будь ласка, зверніть увагу: згідно з документом, кожна перевірка входу в обліковий запис буде витрачати певну кількість ваших монет DTC, які будуть виплачені верифікатору в якості заохочення, тому не намагайтеся входити і виходити без необхідності, натиснувши на кнопку нижче, ви негайно вийдете з облікового запису.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Будь ласка, введіть "так", щоб підтвердити вихід.';
			case 'tip': return 'привертати увагу до чого-л.';
			case 'cancel': return 'скасування';
			case 'close': return 'згусток';
			case 'selected': return 'вибрано';
			case 'edit': return 'компілятор';
			case 'submit': return 'подати (звіт тощо)';
			case 'goBack': return 'регресія (у психології)';
			case 'copiedToClipboard': return 'Його було скопійовано до буфера обміну.';
			case 'nickname': return 'термін прихильності';
			case 'confirm': return 'розпізнати';
			case 'cannotBeEmpty': return 'Не може бути порожнім';
			case 'deleteSuccessful': return 'Видалено успішно!';
			case 'successfullyModified': return 'Модифікація пройшла успішно!';
			case 'executionSuccessful': return 'Реалізація пройшла успішно!';
			case 'preview': return 'попередні перегляди';
			case 'followSystem': return 'система подальших дій';
			case 'change': return 'варіація';
			case 'replace': return 'зміна (адреси тощо)';
			case 'view': return 'перевірте.';
			case 'manage': return 'управлінський';
			case 'modify': return 'модифікації';
			case 'replacedSuccessfully': return 'Заміна пройшла успішно!';
			case 'authentication': return 'аутентифікація';
			case 'reacquire': return 'отримати';
			case 'tryAgain': return 'Спробуй ще раз.';
			case 'querying': return 'Робляться запити ...';
			case 'writingToOnChain_pleaseWait': return 'Він записується в ланцюжок, будь ласка, зачекайте ...';
			case 'versionCheck': return 'визначення версії';
			case 'alreadyLatestVersion': return 'Вже остання версія!';
			case 'foundNewVersion': return 'Відкрийте для себе нову версію:';
			case 'upgradeLink': return 'Оновіть посилання:';
			case 'deviceDescription': return 'Опис обладнання.';
			case 'notification30SecondsBeforeMiningStops': return 'Виконайте нагадування про сповіщення за 30 секунд до припинення видобутку!';
			case 'goMining': return 'Почати майнінг';
			case 'deltaMiningReminder': return 'Нагадування про дельта-майнінг';
			case 'clickToMine_miningIsAboutToStop': return 'Натисніть тут, щоб майніти, майнінг скоро припиниться!';
			case 'incorrect_input': return 'Неправильний вхід!';
			case 'are_you_sure_delete': return 'Ви впевнені, що видалите?';
			case 'delete_account': return 'Видалити обліковий запис';
			case 'how_to_operate_it': return 'Дивіться, як ним керувати?';
			case 'deletion_warning_tip': return 'Якщо ви видалите свій обліковий запис, ви втратите всі монети Delta і всі прибутки від інших учасників також буде втрачено.';
			case 'launchWhatsAppProgram': return 'Запустити програму WhatsApp';
			case 'sms': return 'SMS';
			case 'whatsApp_verification_tips': return 'Номери доступу з цією піктограмою також підтримують перевірку повідомлень WhatsApp. Під час надсилання міжнародних повідомлень рекомендується використовувати WhatsApp, щоб підвищити рівень успіху та зменшити витрати.';
			case 'ihaveSentVerificationString': return 'Я надіслав рядок підтвердження';
			case 'totalOfPeople': return 'Усього осіб: ';
			case 'numberOfPeopleMining': return 'Кількість людей, що займаються майнінгом';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Ви можете використовувати браузер на іншому пристрої, щоб відсканувати QR-код і передати його програмі SMS';
			case 'toggle': return 'Переключити';
			case 'DSMSverifier': return 'Перевірка DSMS';
			case 'activate': return 'Активувати';
			case 'activated': return 'Активовано';
			case 'generateActivationCommand': return 'Створити команду активації';
			case 'activationCommand': return 'Команда активації';
			case 'activationSentedTip': return 'Після надсилання SMS-повідомлення про активацію перевірте статус активації на терміналі доступу.';
			case 'biometricsNotEnabledTip': return 'Біометрія (обличчя або відбиток пальця) не ввімкнена на вашому пристрої. Увімкніть її, щоб продовжити.';
			case 'error': return 'Помилка';
			case 'exceptionOccurredWhenCallingBiometric': return 'Виняток стався під час виклику біометричної функції (обличчя або відбиток пальця)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' номерів доступу перевірено, потрібно вибрати '),
				shouldNum,
				const TextSpan(text: '.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => 'Чи було надіслано ${text} на вказані вище номери доступу ${n}?';
			case 'interface': return 'Інтерфейс:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Час очікування або невідповідність номера відправника';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Мобільний номер учасника кола безпеки, який ви заповнили, не збігається: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Увійдіть протягом 10 хвилин після виходу, щоб уникнути двофакторної перевірки.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Потрібно вказати щонайменше ${n} номерів мобільних телефонів';
			case 'noAccessNumberInYourRegionYet': return 'У вашому регіоні ще немає номера доступу';
			case 'notEnoughAccessNumbersInYourRegion': return 'Недостатньо номерів доступу у вашому регіоні';
			case 'tipsForDeployDSMSterminal': return 'Система автоматично завантажила для вас деякі номери доступу з інших країн. Щоб надати кращі та дешевші послуги верифікації, рекомендується, щоб ви або ваша реферальна особа розгорнули термінал DSMS локально, щоб отримати комісію за верифікацію.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Ніхто не може надати мені код безпеки?';
			case 'useSupplementalMode': return 'Використовувати додатковий режим';
			case 'returnToSecurityCodeMode': return 'Повернутися до режиму коду безпеки';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Будь ласка, введіть відповідний номер мобільного телефону. Код країни можна опустити.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Номер мобільного телефону ${name} неправильний';
			case 'matchingVerificationStrategyIs': return 'Відповідна стратегія перевірки:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Баланс більше 3 ICP, наразі не потрібно заливати паливо';
			case 'escrowAccount': return 'Депонований рахунок';
			case 'fuelRelay': return 'Реле палива';
			case 'pourFuel': return 'Залити паливо';
			case 'fuelState': return 'Стан палива';
			case 'pouringFuelTips': return 'Заливка палива не принесе вам жодних переваг чи недоліків, її мета – збагатити досвід роботи з системою Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Спонсоруйте розробників, переглядаючи рекламу';
			case 'status': return 'статус';
			case 'date': return 'дата';
			default: return null;
		}
	}
}

extension on _StringsVi {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return 'trang đầu';
			case 'switchLanguage': return 'chuyển đổi ngôn ngữ';
			case 'languageSwitch': return 'chuyển đổi ngôn ngữ';
			case 'slogan': return 'Xây dựng vòng tròn kinh tế phi tập trung ở đồng bằng';
			case 'countryRegionCode': return 'Mã quốc gia';
			case 'countryRegionSelection': return 'Lựa chọn quốc gia và khu vực';
			case 'nextStep': return 'Bước tiếp theo';
			case 'yourPhoneNumber': return 'số điện thoại của bạn';
			case 'pleaseSelectCountryAndRegion': return 'Vui lòng chọn quốc gia/khu vực của bạn';
			case 'pleaseEnterPhoneNumber': return 'Vui lòng nhập số điện thoại hợp lệ!';
			case 'referrerDid': return 'Người giới thiệu ĐÃ LÀM';
			case 'pleaseEnterTheReferrersDid': return 'Vui lòng nhập id nhận dạng phi tập trung của người giới thiệu hợp lệ';
			case 'thisDidIsInvalid': return 'DID này không hợp lệ';
			case 'nicknameFormatTips': return 'biệt danh không được để trống và không được dài quá 16 ký tự';
			case 'additionalIinformation': return 'Thông tin bổ sung';
			case 'invitationSubject': return 'Mời bạn tham gia xây dựng sự đồng thuận của Delta';
			case 'invitationLetter': return ({required Object did}) => 'Xin chào, tôi đang tham gia xây dựng sự đồng thuận của Delta! \n Delta là một nền tảng tiền kỹ thuật số mới nguồn mở chạy trên ICP. Nó có thể quản lý và sử dụng nhiều loại tiền kỹ thuật số khác nhau mà không cần mật khẩu, khóa riêng tư hoặc thuật nhớ. Vui lòng nhấp vào liên kết này https://delta.kim/auto/download để cài đặt ứng dụng và bây giờ bạn được mời tham gia xây dựng sự đồng thuận và đúc tiền. \n ID người giới thiệu: ${did}';
			case 'dSMSverification': return 'Xác minh DSMS';
			case 'getAccessNumbers': return 'Nhận một số số truy cập';
			case 'getAccessNumberPromptMessage': return 'Nhấp vào nút "Nhận" bên dưới để chọn nhóm số truy cập xác minh SMS trong hàng đợi.';
			case 'optionalAccessNumbers': return 'Số truy cập tùy chọn';
			case 'accessNumber': return 'số truy cập';
			case 'TELCO': return 'Toán tử';
			case 'score': return 'Điểm';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('vi'),
				one: () => TextSpan(children: [
					const TextSpan(text: 'Vui lòng kiểm tra '),
					nBuilder(n),
					const TextSpan(text: ' số truy cập và nhấp vào nút "'),
					span('text'),
					const TextSpan(text: '" để chuyển sang bước tiếp theo'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: 'Vui lòng kiểm tra '),
					nBuilder(n),
					const TextSpan(text: ' số truy cập và nhấp vào nút "'),
					span('text'),
					const TextSpan(text: '" để chuyển sang bước tiếp theo.'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta là một dự án thử nghiệm tiền kỹ thuật số toàn cầu phi tập trung nguồn mở và chuỗi sinh thái ứng dụng tiền tệ.';
			case 'deltaGoalsDesc': return 'Mục tiêu là cho phép mọi người sử dụng Delta để cùng nhau xây dựng một loại tiền kỹ thuật số mới phổ biến, công bằng, an toàn, nhanh chóng và xanh. Và cung cấp các kịch bản ứng dụng hiệu quả khác nhau cho các loại tiền kỹ thuật số này và các loại tiền điện tử trước đó.';
			case 'details': return 'Chi tiết';
			case 'get': return 'Lấy';
			case 'select': return 'chọn';
			case 'send': return 'gửi';
			case 'complete': return 'Hoàn thành';
			case 'selectedAccessNumberPrompt': return 'Khi được chọn, số truy cập đầy đủ sẽ được hiển thị và chuỗi xác minh sẽ được tạo.';
			case 'location': return 'Vị trí';
			case 'verificationString': return 'Chuỗi xác thực';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: 'Vui lòng sử dụng số điện thoại '),
				num,
				const TextSpan(text: ' của bạn và gửi '),
				label,
				const TextSpan(text: ' đến '),
				accessNumber,
				const TextSpan(text: ' để hoàn tất xác minh.'),
			]);
			case 'ihaveSentTheSMS': return 'Tôi đã gửi một tin nhắn văn bản';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: 'Chuỗi xác minh có hiệu lực trong vòng 6 phút, thời gian còn lại: '),
				time,
				const TextSpan(text: '.'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => 'Quá nhanh, hãy đợi ${x} giây trước khi tiếp tục!';
			case 'waitingForVerificationSMS': return 'Đang chờ SMS xác minh...';
			case 'partSuccsForVerificationSMS': return 'Việc xác minh SMS của một trong các thiết bị đầu cuối truy cập đã thành công!';
			case 'creatingAccessToken': return 'Đang tạo mã thông báo truy cập...';
			case 'intoDelta': return 'Vào vùng đồng bằng';
			case 'deltaAccountIsLoggedIn': return 'Tài khoản Delta của bạn đã được đăng nhập';
			case 'iHavLoggedOut': return 'Tôi đã đăng xuất';
			case 'startTwoFactorVerification': return 'Bắt đầu xác minh hai bước';
			case 'securityCircleVerification': return 'Xác minh vòng kết nối bảo mật';
			case 'generateSecurityCode': return 'Tạo mã bảo mật';
			case 'generateSecurityCodeHintText': return 'Mã bảo mật được tạo sẽ được gửi đến thành viên được chọn ngẫu nhiên trong vòng kết nối bảo mật của bạn.';
			case 'notSetSecurityCircleEnterPlaceholderTip': return 'Bạn chưa thiết lập vòng tròn bảo mật. Tài khoản của bạn rất không an toàn. Vui lòng nhập bất kỳ phần giữ chỗ 6 chữ số nào và chuyển sang bước tiếp theo.';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return 'Mã bảo mật đã được tạo. Vui lòng liên hệ với người thân, bạn bè sau để yêu cầu họ trích xuất mã bảo mật để bạn vượt qua xác minh. Có hiệu lực trong vòng 30 phút!';
			case 'itGetSecurityCodeTip': return 'Mẹo: Tìm biệt hiệu tài khoản của bạn trong Ứng dụng Delta->Menu->Cung cấp trang Bảo mật và nhấp đúp vào tên đó để lấy mã bảo mật.';
			case 'securityCircleMemberList': return 'Danh sách thành viên vòng kết nối bảo mật:';
			case 'selectA_friendToProvideSecurityCodeTip': return 'Vui lòng chọn người thân hoặc bạn bè trong danh sách thành viên để tạo và cung cấp cho bạn mã bảo mật nhằm xác minh danh tính thực sự của bạn. Mục đích là để tránh bị người khác kiểm soát tài khoản khi số điện thoại di động bị mất hoặc bị đánh cắp.';
			case 'formatIsXdigits': return ({required Object num}) => 'Định dạng là ${num} chữ số';
			case 'signInSuccessfully': return 'Đăng nhập thành công!';
			case 'twoFAandLogin': return 'Xác minh hai bước và đăng nhập';
			case 'verificationSuccessful': return 'Xác minh thành công!';
			case 'validationFailed': return 'Xác minh không thành công!';
			case 'dappInfo': return 'Thông tin DApp';
			case 'securityCircle': return 'vòng tròn an toàn';
			case 'securityCode': return 'mã bảo mật';
			case 'provideSecurity': return 'cung cấp an ninh';
			case 'addManully': return 'Thêm thủ công';
			case 'addFromContacts': return 'Thêm từ sổ địa chỉ';
			case 'addSecurityCircle': return 'Thêm vòng tròn an toàn';
			case 'inputType': return 'kiểu đầu vào';
			case 'mobileNumber': return 'số điện thoại';
			case 'did': return 'mã địa chỉ';
			case 'pleaseEnterValidDID': return 'Vui lòng nhập id nhận dạng phi tập trung hợp lệ';
			case 'pleaseEnterValidWalletAddress': return 'Vui lòng nhập địa chỉ ví hợp lệ';
			case 'appellation': return 'tiêu đề';
			case 'appellationHint': return 'Bạn gọi nó là gì, như "em bé"';
			case 'addSecurityCircleTips': return 'Vui lòng không thêm những người bạn không tin tưởng vào vòng tròn an toàn của mình.';
			case 'referralTeam': return 'Đội được đề xuất';
			case 'profile': return 'Thông tin tài khoản';
			case 'menu': return 'thực đơn';
			case 'directly': return 'trực tiếp';
			case 'indirectly': return 'gián tiếp';
			case 'inviteContacts': return 'Mời liên hệ';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Người mời của bạn là '),
				nickname,
				const TextSpan(text: ' và bạn đã trực tiếp giới thiệu '),
				num1,
				const TextSpan(text: ' người, trong đó '),
				num2,
				const TextSpan(text: ' hiện đang trực tuyến.'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: 'Bạn đã gián tiếp giới thiệu '),
				num1,
				const TextSpan(text: ' người, trong đó '),
				num2,
				const TextSpan(text: ' hiện đang trực tuyến.'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: 'Mời bạn bè tham gia Delta và cùng nhau nâng cao sự đồng thuận trong xã hội. Mỗi đề xuất trực tiếp của một người sẽ làm tăng tỷ lệ khai thác lên '),
				rate1,
				const TextSpan(text: ' so với tỷ lệ cơ bản. '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: 'Mời bạn bè tham gia Delta và cùng nhau cải thiện sự đồng thuận trong xã hội. Mỗi đề xuất gián tiếp của một người sẽ tăng tỷ lệ khai thác thêm '),
				rate2,
				const TextSpan(text: ' so với tỷ lệ cơ bản.'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => 'Bạn có chắc chắn muốn xóa "${name}" không?';
			case 'safetyCircleRoleQ': return 'Chức năng của vòng tròn an toàn là gì?';
			case 'safetyCircleRoleA': return 'Cung cấp xác thực hai yếu tố trong các tình huống nhạy cảm để bảo vệ an ninh tài khoản của bạn.';
			case 'howSecurityCirclesWorkQ': return 'Vòng tròn an toàn hoạt động như thế nào?';
			case 'howSecurityCirclesWorkA': return 'Khi cần có vòng tròn bảo mật để xác minh, chương trình hợp đồng thông minh Delta sẽ chọn ngẫu nhiên một thành viên từ danh sách bạn bè của vòng tròn bảo mật để giúp bạn cung cấp mã bảo mật để hoàn tất xác minh bảo mật danh tính cho bạn. Khi bạn yêu cầu thành viên nhập mã bảo mật, thành viên đó có thể xác nhận rằng đó chính là bạn. Đồng thời chương trình sẽ nhắc: “Từ chối cung cấp mã bảo mật nếu không phải bạn” để bảo vệ tính bảo mật cho tài khoản của bạn. Vì vậy, bạn phải luôn đảm bảo rằng các thành viên trong vòng an toàn của bạn là những người bạn có thể tin tưởng.';
			case 'securityCircleBeUsedQ': return 'Khi nào nó sẽ được sử dụng?';
			case 'securityCircleBeUsedA1': return '1. Khi Delta APP của bạn mất quyền kiểm soát, nguyên nhân thường là do điện thoại bị mất hoặc bị đánh cắp.';
			case 'securityCircleBeUsedA2': return '2. Trong trường hợp xảy ra một số hoạt động nhạy cảm, chương trình hợp đồng thông minh Delta cần xác nhận rằng đó là bạn.';
			case 'provideSafetyTip1': return 'Khi bạn của bạn hỏi bạn mã bảo mật của họ, hãy nhớ xác nhận rằng đó chính là họ.';
			case 'provideSafetyTip2': return 'Bạn đang cung cấp sự bảo vệ an ninh cho những người bạn trên. Họ đã đặt bạn là người đáng tin cậy nhất trong vòng bảo mật và yêu cầu bạn cung cấp xác nhận bảo mật cho họ khi tài khoản của họ gặp phải các hoạt động nhạy cảm.';
			case 'provideSafetyTip3': return 'Bấm đúp vào hình đại diện của bên kia để trích xuất mã bảo mật khi cần.';
			case 'doesNotSecurityCodeNeedsRetrieved': return 'Bên kia hiện tại không có mã bảo mật cần lấy lại!';
			case 'existSecurityCodeTip': return 'Hãy chắc chắn xác nhận rằng người thân hoặc bạn bè yêu cầu mã bảo mật từ bạn là người thân hoặc bạn bè của bạn. Để bảo vệ sự an toàn của người thân hoặc bạn bè của bạn, bạn nên từ chối cung cấp mã đó nếu đó không phải là người thân hoặc bạn bè.';
			case 'avatarSettings': return 'Cài đặt hình đại diện';
			case 'NFTAvatarPropertyRightsText': return 'Tuyên bố: Việc sử dụng NFT có liên quan làm hình đại diện chỉ nhằm mục đích sở thích cá nhân và không liên quan gì đến việc sở hữu quyền sở hữu trí tuệ của NFT.';
			case 'projectWebsite': return 'Trang web dự án:';
			case 'whitepaper': return 'giấy trắng:';
			case 'indexID': return 'Id chỉ mục';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => 'Phạm vi chỉ mục nằm trong khoảng từ ${start} đến ${end}';
			case 'inputToLoadNFTAvatarTip': return 'Nhập ID chỉ mục của NFT yêu thích của bạn và chương trình sẽ tự động tải nó làm hình đại diện cho bạn.';
			case 'miningRate': return 'Tỷ lệ khai thác';
			case 'miningDetails': return 'Chi tiết khai thác';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: 'Tổng tốc độ khai thác: '),
				rate,
				const TextSpan(text: ' δ/ngày'),
			]);
			case 'EndOfMiningSession': return 'Khai thác cuối chu kỳ:';
			case 'tapToMineDeltaCoin': return 'Nhấp để khai thác Delta Coin ↑';
			case 'clickToStartMining': return 'Nhấp để bắt đầu khai thác!';
			case 'miningHasStoppedPromptDesc': return 'Quá trình khai thác đã dừng lại. Cứ sau 24 giờ là một chu kỳ khai thác. Nhấp vào biểu tượng tia sét để bắt đầu một vòng khai thác mới. Hoạt động khai thác của Delta là một cơ chế phân phối không tiêu tốn thêm sức mạnh tính toán và lưu lượng mạng từ thiết bị của bạn.';
			case 'aboutBaseRate': return 'Còn lãi suất cơ bản thì sao?';
			case 'baseRateDescription': return 'Theo sách trắng, quy tắc giảm lãi suất cơ bản của khai thác Delta sẽ được chia thành hai giai đoạn. \nĐợt 1: Khi số lượng người tham gia (đăng ký) từ 3000 trở xuống thì lãi suất là 32δ/ngày. Sử dụng điều này làm mức cơ bản ban đầu, mỗi khi số lượng người tăng lên 10 lần, tỷ lệ cơ bản sẽ giảm đi một nửa. \nGiai đoạn 2: Khi số lượng người tham gia đạt từ 30 triệu trở lên, tỷ lệ cơ bản giảm một nửa mỗi khi số lượng người tham gia tăng gấp 3 lần. Việc sản xuất bị dừng lại cho đến khi cuộc khai quật cuối cùng hoàn thành.';
			case 'baseRate': return 'lãi suất cơ bản';
			case 'directReferralRewards': return 'Phần thưởng giới thiệu trực tiếp';
			case 'directReferralRewardDesc': return 'Đối với mỗi người mà bạn trực tiếp giới thiệu, khi họ ở trạng thái khai thác, tốc độ khai thác của bạn sẽ tăng thêm 1/3 tốc độ cơ bản.\n\n Ngoài ra, trạng thái khai thác của người giới thiệu cũng sẽ được tính vào phần thưởng giới thiệu trực tiếp của bạn.';
			case 'indirectReferralRewards': return 'Phần thưởng giới thiệu gián tiếp';
			case 'indirectReferralRewardDesc': return 'Khi người giới thiệu gián tiếp ở trạng thái khai thác, tỷ lệ khai thác của bạn sẽ tăng thêm 1/10 so với tỷ lệ cơ bản.\n\n Nhóm giới thiệu trực tiếp của bạn, mỗi người họ giới thiệu đại diện cho một giới thiệu gián tiếp cho bạn.';
			case 'mine': return 'Khai thác mỏ';
			case 'thisMiningInformation': return 'Thông tin khai thác này';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Đã tham gia khai thác: '),
				x,
				const TextSpan(text: ' lần'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Tổng thu nhập lần này: '),
				x,
				const TextSpan(text: ' Đồng tiền Delta'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Thu nhập cơ bản: '),
				x,
				const TextSpan(text: ' xu'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Đóng góp trực tiếp của nhóm: '),
				x,
				const TextSpan(text: ' xu'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Đóng góp gián tiếp của nhóm: '),
				x,
				const TextSpan(text: ' xu'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Khoảng thời gian kể từ lần khai thác cuối cùng: '),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: 'Thời gian khai thác hiệu quả: '),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x} giờ';
			case 'keep3_5peopleInTheSafetyCircleTip': return 'Để bảo mật tài sản, các thành viên vòng tròn bảo mật nên luôn giữ 3-5 người đáng tin cậy.';
			case 'index': return 'chỉ mục';
			case 'amount': return 'Số lượng';
			case 'balance': return 'cân bằng';
			case 'timeStamp': return 'Dấu thời gian';
			case 'summary': return 'bản tóm tắt';
			case 'miningHasStopped': return 'Khai thác đã dừng lại.';
			case 'miningHasStoppedDesc': return 'Việc khai thác của bạn hiện đã bị dừng, hãy bắt đầu kiếm thu nhập ngay lập tức.';
			case 'startMining': return 'Bắt đầu khai thác';
			case 'changeMobileNumber': return 'Thay đổi số điện thoại di động';
			case 'currentMobileNumber': return 'Số điện thoại di động hiện tại';
			case 'newMobileNumber': return 'số điện thoại di động mới';
			case 'securityCodeFormatIs6digits': return 'Định dạng mã bảo mật là 6 chữ số!';
			case 'startVrification': return 'Bắt đầu xác minh';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => 'Số điện thoại di động này đã tồn tại, được liên kết DID: ${dId}';
			case 'noDataYet': return 'Chưa có dữ liệu';
			case 'previousMobileNumber': return 'Số điện thoại di động trước đó';
			case 'changeLog': return 'Lịch sử thay đổi';
			case 'referralLinkToShare': return 'Chia sẻ liên kết được đề xuất';
			case 'referrer': return 'người giới thiệu';
			case 'isoCountryCode': return 'Mã quốc gia ISO';
			case 'avatarLogo': return 'Biểu tượng hình đại diện';
			case 'creationTime': return 'thời gian sáng tạo';
			case 'lastUpdate': return 'cập nhật lần cuối';
			case 'numberOfSecurityCircleMembers': return 'Số lượng thành viên vòng tròn an toàn';
			case 'theLatestMining': return 'Khai thác mới nhất';
			case 'effectiveMiningDays': return 'Số ngày khai thác hiệu quả';
			case 'modifyNickname': return 'Sửa đổi biệt hiệu';
			case 'didNotChange': return 'Không có gì thay đổi!';
			case 'kycVerification': return 'Xác minh KYC';
			case 'faceID': return 'ID khuôn mặt';
			case 'touchID': return 'ID vân tay';
			case 'biometricsAuthorizationTest': return 'Kiểm tra xác thực sinh trắc học';
			case 'currentState': return 'Tình trạng hiện tại';
			case 'biometricsAuthenticationLocalizedReason': return 'Sử dụng chức năng mở khóa của thiết bị để xác minh danh tính của bạn.';
			case 'graph': return 'tập bản đồ';
			case 'referralRelationshipGraph': return 'Biểu đồ mối quan hệ giới thiệu';
			case 'nativeContacts': return 'liên hệ địa phương';
			case 'registrationAndMiningTrends': return 'Xu hướng đăng ký và khai thác';
			case 'inMining': return 'Khai thác mỏ';
			case 'registrationVolume': return 'Số lượng đăng ký';
			case 'unmined': return 'chưa được khai thác';
			case 'mined': return 'được khai thác';
			case 'communityMining': return 'khai thác cộng đồng';
			case 'consensusPromotionFund': return 'Quỹ xúc tiến đồng thuận';
			case 'ecologicalAwardFund': return 'Quỹ giải thưởng sinh thái';
			case 'icpFuelCrowdfunding': return 'Huy động vốn từ cộng đồng nhiên liệu ICP';
			case 'coreDeveloperRewards': return 'Phần thưởng dành cho nhà phát triển cốt lõi';
			case 'totalAllocation': return 'Tổng phân bổ';
			case 'miningRatio': return 'Tỷ lệ khai thác';
			case 'billion.30': return '30 tỷ';
			case 'billion.60': return '60 tỷ';
			case 'billion.180': return '180 tỷ';
			case 'billion.300': return '300 tỷ';
			case 'watchAdsToSupportDevelopers': return 'Xem quảng cáo để hỗ trợ nhà phát triển';
			case 'loadingAdcomponents': return 'Đang tải các thành phần quảng cáo...';
			case 'timeIsNotUp': return 'Thời cơ vẫn chưa đến!';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return 'Tải không thành công, mạng có thể bị chặn!';
			case 'pendingUSCTrecords': return 'Hồ sơ USCT đang chờ xử lý';
			case 'pendingUSCTrecordsDesc': return 'Các hồ sơ USCT đang chờ xử lý sẽ được so sánh với nền tảng quảng cáo trong vòng 15-30 ngày để xác nhận. Các hồ sơ hợp lệ sẽ được chuyển vào danh sách hồ sơ USCT và số tiền USCT tương ứng sẽ được cộng vào số dư tài khoản.';
			case 'validity': return 'hiệu quả';
			case 'advertiser': return 'Nhà quảng cáo';
			case 'earned': return 'kiếm được';
			case 'withdraw': return 'Rút tiền mặt';
			case 'validUSCTrecords': return 'Hồ sơ USCT hợp lệ';
			case 'USCTmining': return 'Khai thác USCT';
			case 'aboutUSCTmining': return 'Giới thiệu về khai thác USCT?';
			case 'aboutUSCTminingItme1': return '1. USDT là loại tiền tệ ổn định bằng đô la Mỹ phổ biến trên toàn cầu, có thể dễ dàng chuyển đổi thành tiền tệ có chủ quyền của nhiều quốc gia khác nhau trên các sàn giao dịch tiền điện tử chính thống trên toàn thế giới.';
			case 'aboutUSCTminingItme2': return '2. USCT là giá trị đo tạm thời của thu nhập khai thác USCT, tên đầy đủ là tín dụng USD, có thể chuyển đổi thành USDT theo số tiền thanh toán thực tế và quy tắc phân phối của nền tảng quảng cáo và theo tỷ lệ tương ứng.';
			case 'aboutUSCTminingItme3': return '3. Khai thác USCT là chức năng kiếm tiền từ quảng cáo lưu lượng truy cập của cộng đồng Delta. Tận dụng cơ sở người dùng lớn của cộng đồng Delta để mang lại nhiều lợi ích cho nhà quảng cáo, nhà phát triển và nhà thầu Delta. Mục đích thiết kế của nó là cung cấp một lượng thu nhập hiệu quả nhất định cho những người vắng mặt trong giai đoạn đầu khi hệ sinh thái Delta chưa hình thành và thịnh vượng, đồng thời, nó cũng cung cấp cho các nhà phát triển một số hỗ trợ tài chính nhất định để đảm bảo rằng các nhà phát triển có thể tiếp tục cung cấp; dịch vụ phát triển lâu dài và cuối cùng có thể Hiện thực hóa tất cả các kế hoạch trong sách trắng; đồng thời cung cấp một kênh quảng bá hiệu quả cho các nhà quảng cáo sản phẩm.';
			case 'aboutUSCTminingItme4': return '4. Quy tắc phân phối được thiết kế sao cho 40% tổng doanh thu được sử dụng làm hoa hồng dịch vụ kỹ thuật của nhà phát triển và 60% còn lại được sử dụng làm phần thưởng cho sự vắng mặt của cộng đồng. Phần thưởng vắng mặt áp dụng mô hình phân phối đa cấp tương tự như DTC. Phần thưởng vắng mặt này được chia thành 3 phần theo tỷ lệ 6:3:1. vắng mặt đang xem quảng cáo, 3 điểm được phân bổ cho người giới thiệu cấp trên và 1 điểm cho người giới thiệu cấp hai. Theo cách tương tự, nếu bạn bè mà bạn giới thiệu tôi thông qua USCT, bạn cũng có thể nhận được phần thưởng tương tự cho người giới thiệu. Ưu điểm của việc phân phối đa cấp như vậy là bất kỳ ai cũng có thể nhận được số tiền thu nhập USDT tương đối lớn bằng cách phát triển một nhóm ngoại tuyến.';
			case 'aboutUSCTminingItme5': return '5. Chu kỳ thanh toán là 7 ngày, nghĩa là tính hợp lệ được kiểm tra với nền tảng quảng cáo 7 ngày một lần, doanh thu và số tiền thực tế được xác nhận là hợp lệ sẽ được ghi vào số dư. Số tiền tối thiểu cho mỗi lần rút là 10 USDT.';
			case 'linesXtoY': return ({required Object x, required Object y}) => 'Các dòng ${x} tới ${y}';
			case 'wallet': return 'cái ví';
			case 'multiChainWallet': return 'Ví nhiều chuỗi';
			case 'deposit': return 'Tiền gửi';
			case 'transfer': return 'chuyển khoản';
			case 'xcoinInWallet': return ({required Object coinCode}) => '${coinCode} trong địa chỉ ví';
			case 'transactions': return 'lịch sử giao dịch';
			case 'network': return 'mạng';
			case 'walletAddress': return 'địa chỉ ví';
			case 'currentAddress': return 'địa chỉ hiện tại';
			case 'depositAddress': return 'Địa chỉ nạp tiền';
			case 'receivingMoneyAddress': return 'Địa chỉ thanh toán';
			case 'applyTempDepositAddress': return 'Đăng ký địa chỉ nạp tiền tạm thời';
			case 'tempDepositAddressTip': return '1. Đây là địa chỉ gửi tiền chung. Vui lòng không đặt cọc số tiền sau khi hợp đồng thuê hết hạn hoặc không bị ràng buộc. Nếu điều này xảy ra, số tiền sẽ bị mất.';
			case 'tempDepositAddressTip2': return '2. Trước khi gửi tiền, vui lòng đảm bảo rằng [tên chuỗi] và [tên tiền tệ] hoàn toàn khớp nhau; nếu đó là mã thông báo hợp đồng, bạn cũng cần xác nhận rằng [tiêu chuẩn hợp đồng] và [địa chỉ hợp đồng] hoàn toàn khớp nhau.';
			case 'tempDepositAddressTip3': return '3. Vui lòng không cố gắng gửi số tiền không khớp với bất kỳ thông số nào trong các mẹo trên, nếu không số tiền sẽ bị mất.';
			case 'tempDepositAddressTip4': return '4. Nếu bạn cần gửi các loại tài sản khác, vui lòng chuyển sang trang tiền tệ tương ứng và các tùy chọn tham số để đăng ký địa chỉ mới.';
			case 'applyExtensionOfValidity': return 'Xin gia hạn thời hạn hiệu lực';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap }) => TextSpan(children: [
				const TextSpan(text: 'Địa chỉ sẽ hết hạn sau '),
				diff,
				const TextSpan(text: ' và bạn có thể '),
				tap ('gia hạn thủ công'),
				const TextSpan(text: ' thời hạn hiệu lực trong vòng 12 giờ trước khi hết hạn.'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return 'Chỉ có thể gia hạn trước 12 giờ';
			case 'theReceivingAddressValidForLongtime': return 'Địa chỉ thanh toán này có giá trị trong một thời gian dài.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return 'Địa chỉ thanh toán này có hiệu lực trong thời gian dài và sẽ được ghi có tự động theo thời gian thực.';
			case 'confirmDeposited': return 'Xác nhận đã gửi tiền';
			case 'unbindThisDepositAddress': return 'Hủy liên kết địa chỉ nạp tiền';
			case 'confirmDepositedTip': return 'Nếu tiền đã được chuyển, vui lòng nhấp vào nút trên để kích hoạt tài khoản vào ví sau 10 phút.';
			case 'unbindDepositAddressTip': return 'Để giảm chi phí hoạt động của hợp đồng thông minh, nếu không có thêm tiền nào được gửi trong thời hạn hiệu lực, vui lòng hủy liên kết địa chỉ nạp tiền.';
			case 'transferToAddress': return 'Đi đến địa chỉ';
			case 'longPressToPaste': return 'Nhấn và giữ để dán';
			case 'all': return 'tất cả';
			case 'balanceX': return ({required Object x}) => 'Số dư ${x}';
			case 'transferOut': return 'chuyển ra ngoài';
			case 'depositXcoins': return ({required Object x}) => 'Gửi ${x}';
			case 'sender': return 'người gửi';
			case 'recipient': return 'người nhận';
			case 'memo': return 'Nhận xét';
			case 'kind': return 'Đường';
			case 'transferAmountExceedsAvailableBalance': return 'Số tiền chuyển vượt quá số dư khả dụng';
			case 'pleaseEnterValidAmount': return 'Vui lòng nhập số tiền hợp lệ';
			case 'networkFee': return 'Phí xử lý mạng';
			case 'fee': return 'phí xử lý';
			case 'validLengthXcharacters': return ({required Object x}) => 'Độ dài hiệu dụng của địa chỉ là ${x} ký tự';
			case 'historys': return 'Lịch sử';
			case 'dtcCreditdetail': return 'Chi tiết điểm Delta';
			case 'usdCreditdetail': return 'Chi tiết điểm USD';
			case 'dappSquare': return 'Quảng trường dApp';
			case 'amountRaised': return 'Số tiền huy động';
			case 'disbursedAmount': return 'Số tiền giải ngân';
			case 'participationTimes': return 'Số lượng người tham gia';
			case 'completionRate': return 'tỷ lệ hoàn thành';
			case 'exchangeRate': return 'tỷ giá hối đoái';
			case 'icpCrowdfunding': return 'Gây quỹ cộng đồng ICP';
			case 'crowdfunding': return 'Huy động vốn từ cộng đồng';
			case 'trendsCurve': return 'đường cong xu hướng';
			case 'fullScreenView': return 'xem toàn màn hình';
			case 'walletBalance': return 'Số dư trên ví:';
			case 'manageWallet': return 'Quản lý ví';
			case 'fundraiseAmount': return 'Số vốn huy động được';
			case 'exchangeRewardAmount': return 'Đổi số tiền thưởng';
			case 'fundraise': return 'gây quỹ';
			case 'rangeIntegersX': return ({required Object x}) => 'Phạm vi: Số nguyên ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => 'Đã tham gia gây quỹ thành công và nhận được phần thưởng ${amount}DTCT';
			case 'amountSummary': return 'Tóm tắt số tiền';
			case 'changePreferred': return 'Thay đổi tùy chọn';
			case 'changePreferredAddress': return 'Thay đổi địa chỉ ưa thích';
			case 'preferredAddressTip': return 'Khi nhận tiền bằng số điện thoại di động đã đăng ký hoặc DID, tiền sẽ tự động được chuyển đến địa chỉ ưa thích.';
			case 'newAddress': return 'Địa chỉ mới';
			case 'newAddressTip': return 'Để tránh lạm dụng, khi có nhiều hơn một địa chỉ ví, mỗi địa chỉ mới được tạo sẽ bị tính phí giao dịch.';
			case 'createNew': return 'Mới';
			case 'chainNetworkName': return 'Tên mạng chuỗi';
			case 'from': return 'từ';
			case 'to': return 'đến';
			case 'noAvailableDepositAmountDetected': return 'Không phát hiện thấy số tiền gửi có sẵn nào!';
			case 'crossChainReceiveMoneyMonitoring': return 'Thanh toán xuyên chuỗi đang được theo dõi...';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Đã nhận('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: 'Đang xác nhận('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return 'Những điều cần lưu ý (phải đọc cho người mới)';
			case 'whyUseSharedAddresses': return 'Tại sao nên sử dụng địa chỉ dùng chung?';
			case 'useSharedrAdvantage': return 'Khi thực hiện gửi tiền xuyên chuỗi, lợi ích của việc sử dụng địa chỉ dùng chung như sau:';
			case 'useSharedrAdvantage1': return '1. Giảm lãng phí phí ​​chuyển khoản và giảm chi phí người dùng. Bởi vì nếu sử dụng một địa chỉ độc quyền, số tiền sẽ bị phân tán quá mức. Nói chung, để tạo điều kiện cho những người dùng khác chuyển ra sau khi rút tiền mặt, khi người dùng nạp tiền, họ cần thu số tiền chuyển thứ cấp thành một hoặc một số ít. địa chỉ để quản lý.';
			case 'useSharedrAdvantage2': return '2. Trong giải pháp chia sẻ, chương trình chỉ cần duy trì một nhóm địa chỉ tương đối nhỏ, có thể nhanh chóng khớp với số tiền gửi đi và thực hiện giám sát bộ sưu tập nhẹ, có thể giảm chi phí tài nguyên máy tính. Ngược lại, với các địa chỉ độc quyền, tình hình hoàn toàn ngược lại.';
			case 'tokenType': return 'Loại mã thông báo';
			case 'contract': return 'hợp đồng';
			case 'contractStandard': return 'tiêu chuẩn hợp đồng';
			case 'contractAddress': return 'Địa chỉ hợp đồng';
			case 'native': return 'Tự nhiên';
			case 'confirmUnbindingPleaseEnterYes': return 'Để xác nhận hủy ràng buộc, vui lòng nhập "có"';
			case 'listAllWorkingTempReceivingAddresses': return 'Liệt kê tất cả các địa chỉ nạp tiền xuyên chuỗi đang hoạt động';
			case 'setNote': return 'Đặt ghi chú';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => 'Độ dài không thể vượt quá ${x} byte';
			case 'transferFee': return 'phí chuyển nhượng';
			case 'crossChainFee': return 'Phí xuyên chuỗi';
			case 'crossChainTransferOutError': return 'Lỗi chuyển chuỗi chéo';
			case 'chainName': return 'Tên chuỗi';
			case 'message': return 'thông tin';
			case 'dontShowAgain': return 'Không hiển thị lại';
			case 'queuing': return 'trong hàng đợi';
			case 'optional': return 'Không bắt buộc';
			case 'publiclyVisible': return 'hiển thị công khai';
			case 'rates': return 'Tỷ lệ';
			case 'minimum': return 'tối thiểu';
			case 'maximum': return 'tối đa';
			case 'minimumBlockConfirmations': return 'Số lượng xác nhận khối tối thiểu';
			case 'dsmsVerifyTerminal': return 'Thiết bị đầu cuối xác minh DSMS';
			case 'overall': return 'tổng thể';
			case 'my': return 'của tôi';
			case 'checkValidatorQualifications': return 'Kiểm tra tính đủ điều kiện của quyền xác thực';
			case 'getVerifierPermissions': return 'Nhận quyền của người chứng nhận';
			case 'qualification': return 'Trình độ chuyên môn';
			case 'upperLimit': return 'giới hạn trên';
			case 'maximumNumberOfTerminalsAllowedToAccess': return 'Giới hạn trên của số lượng thiết bị đầu cuối được phép truy cập';
			case 'numberOfExistingAccessTerminals': return 'Số lượng thiết bị đầu cuối truy cập hiện có';
			case 'applyingForDSMSVerifierPermissionsTips': return 'Trước khi đăng ký quyền xác minh, bạn cần chuẩn bị một điện thoại Android nhàn rỗi và số truy cập chuyên dụng, đồng thời tải xuống và cài đặt ứng dụng đầu cuối truy cập DSMS.';
			case 'downloadLink': return 'Liên kết tải xuống';
			case 'alreadyReadyFollowingTheAboveTips': return 'Sẵn sàng theo những lời khuyên trên';
			case 'globalUniversal': return 'Phổ quát';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: 'Hiện không có đủ người xác minh địa phương để tham gia dịch vụ truy cập xác minh DSMS. Vui lòng chọn "'),
				gu,
				const TextSpan(text: '" để truy cập dịch vụ.'),
			]);
			case 'asDedicatedNumberForAccess': return 'Là số truy cập chuyên dụng';
			case 'pleaseCheckTip': return ({required Object tip}) => 'Vui lòng kiểm tra "${tip}"';
			case 'inputLengthTooShort': return 'Độ dài đầu vào quá ngắn';
			case 'shortName': return 'viết tắt';
			case 'pleaseEnterXname': return ({required Object name}) => 'Vui lòng nhập ${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return 'Đang gửi đơn đăng ký, vui lòng đợi...';
			case 'applyForDSMSVerifierPermission': return 'Xin giấy phép xác minh DSMS';
			case 'confirmInformation': return 'Xác nhận thông tin';
			case 'lastHeartbeat': return 'nhịp tim cuối cùng';
			case 'expirationTime': return 'Thời gian hết hạn';
			case 'country': return 'Quốc gia';
			case 'accessTerminals': return 'truy cập thiết bị đầu cuối';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'Tổng số thiết bị đầu cuối số truy cập DSMS';
			case 'textContent': return 'nội dung văn bản';
			case 'scanQRcodeToLogin': return 'Quét mã để đăng nhập';
			case 'confirmLogin': return 'Xác nhận đăng nhập';
			case 'authorizeSubApplicationToLogin': return 'Cho phép ứng dụng phụ đăng nhập';
			case 'authorizationSuccessful': return 'Ủy quyền thành công!';
			case 'launchSMSprogram': return 'Bắt đầu chương trình SMS';
			case 'notApplied': return 'Không có ứng dụng';
			case 'validityPeriod': return 'Thời hạn hiệu lực';
			case 'renewal': return 'Gia hạn';
			case 'scanCodeToAuthorizeTerminalLogin': return 'Quét mã để cho phép đăng nhập thiết bị đầu cuối';
			case 'rewards': return 'phần thưởng';
			case 'roles': return 'Vai trò';
			case 'developerCenter': return 'Trung tâm nhà phát triển';
			case 'appName': return 'Tên ứng dụng';
			case 'pleaseSelect': return 'Vui lòng chọn';
			case 'category': return 'Loại';
			case 'keywords': return 'từ khóa';
			case 'pleaseEnterAkeyword': return 'Vui lòng nhập từ khóa';
			case 'createApplication': return 'Tạo ứng dụng';
			case 'appType': return 'Loại ứng dụng';
			case 'numberOfCategoriesMustBetween1and3': return 'Số lượng danh mục phải nằm trong khoảng từ 1 đến 3';
			case 'appLogoSpecifications': return 'Định dạng ảnh: png, kích thước: trong vòng 100KB, độ phân giải (pixel): 256*256';
			case 'localAlbum': return 'Album ảnh địa phương';
			case 'networkPath': return 'đường dẫn mạng';
			case 'imageURLkAddress': return 'Địa chỉ URL hình ảnh';
			case 'urlAddressFormatIsIncorrect': return 'Định dạng địa chỉ URL không chính xác';
			case 'imageFormatOnlySupportsPng': return 'Hình ảnh chỉ hỗ trợ định dạng "png".';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => 'Độ dài phải nằm trong khoảng ${a}-${b} ký tự';
			case 'introduction': return 'Giới thiệu';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => 'Kích thước hình ảnh không được lớn hơn ${a}, hiện tại là ${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => 'Độ phân giải của hình ảnh phải là: ${p1} (pixel), hiện tại là ${p2}';
			case 'becomeDeveloper': return 'Trở thành nhà phát triển';
			case 'developerInformation': return 'Thông tin nhà phát triển';
			case 'teamName': return 'Tên đội';
			case 'website': return 'trang web';
			case 'other': return 'khác';
			case 'githubVerification': return 'Xác minh Github';
			case 'exampleUrl': return 'Ví dụUrl';
			case 'githubVerificationTip': return ({required Object did}) => 'Vui lòng sử dụng tài khoản GitHub của bạn để tạo tệp \'delta.did\' trong kho lưu trữ với nội dung \'${did}\', sau đó dán địa chỉ URL githubusercontent của tệp vào hộp nhập này để xác thực.';
			case 'createApp': return 'Tạo ứng dụng';
			case 'appManagement': return 'Quản lý ứng dụng';
			case 'statusLogs': return 'nhật ký trạng thái';
			case 'bad': return 'không tốt';
			case 'normal': return 'nói chung là';
			case 'good': return 'rất tốt';
			case 'onceCreatedItCannotBeChanged': return 'Một khi đã tạo thì không thể thay đổi được!';
			case 'manageApplicationEntity': return 'Quản lý thực thể ứng dụng';
			case 'currentVersion': return 'Phiên bản hiện tại';
			case 'submitVersion': return 'phiên bản cam kết';
			case 'packageOnlySupportZipCompressedFile': return 'Gói chỉ hỗ trợ file nén zip';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'Không tìm thấy tệp \'${name}\' trong gói zip';
			case 'fileList': return 'Danh sách tập tin:';
			case 'programPackage': return 'Bưu kiện:';
			case 'automaticallyExtractFromVersionFile': return 'Tự động trích xuất từ ​​tệp \'.version\'';
			case 'dappVersionFormatTip': return 'Định dạng số phiên bản phải là số thập phân và độ chính xác phải được duy trì ở 2 chữ số và giá trị tối đa không được vượt quá 99,99.';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => 'Số phiên bản phải lớn hơn phiên bản hiện tại \'${v}\'';
			case 'versionNotes': return 'Ghi chú phiên bản:';
			case 'updateRelease': return 'Phiên bản cập nhật';
			case 'loadAndRun': return 'Tải và chạy';
			case 'notYetSubmittedProgramPackage': return 'Gói hàng vẫn chưa được gửi!';
			case 'authorizeMinidAppLogin': return 'Cho phép đăng nhập mini-dApp';
			case 'confirmAuthorizationPleaseEnterYes': return 'Để xác nhận ủy quyền, vui lòng nhập "có"';
			case 'authorizeNow': return 'Ủy quyền ngay bây giờ';
			case 'operation': return 'vận hành:';
			case 'statusChange': return 'thay đổi trạng thái';
			case 'changeTo': return 'Thay đổi thành:';
			case 'notes': return 'Nhận xét:';
			case 'changesNotEffective': return 'Thay đổi không hợp lệ!';
			case 'released': return 'Đã xuất bản';
			case 'inPublicBeta': return 'Ở phiên bản beta công khai';
			case 'developers': return 'Nhà phát triển:';
			case 'reviewList': return 'Danh sách bình luận:';
			case 'postReview': return 'Để lại một bình luận';
			case 'scoreNow': return 'Đánh giá ngay bây giờ';
			case 'description': return 'mô tả:';
			case 'noData': return '(^-^)\n Không có dữ liệu';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => 'Phiên bản được cập nhật từ ${a} lên ${b}';
			case 'loadNewVersion': return 'Tải phiên bản mới';
			case 'name': return 'tên:';
			case 'canisterId': return 'ID bể chứa:';
			case 'updateTime': return 'Thời gian cập nhật';
			case 'contractCanistersState': return 'trạng thái nồi hợp đồng';
			case 'userDistribution': return 'Phân phối người dùng';
			case 'settings': return 'cài đặt';
			case 'security': return 'Sự an toàn';
			case 'invite': return 'mời';
			case 'more': return 'Hơn…';
			case 'receiveAddress': return 'Địa chỉ nhận:';
			case 'hangingAmount': return 'hanging';
			case 'hangingAmountTips': return 'Số tiền đang chờ xử lý là bản ghi tạm thời về phần thưởng do nhóm cấp dưới của bạn tạo ra. Sau khi bạn thực hiện khai thác, số tiền này sẽ được thu vào số tiền đang chờ xử lý.';
			case 'pendingAmount': return 'pending';
			case 'pendingAmountTips': return 'Số tiền đang chờ xử lý là số tiền chưa được xác nhận và so sánh với nhà quảng cáo. Số tiền hợp lệ để so sánh sẽ được chuyển sang bản ghi USCT hợp lệ. Nếu có phần nào không hợp lệ sẽ bị loại trừ.';
			case 'received': return 'Đã nhận';
			case 'processing': return 'Xử lý';
			case 'replied': return 'Đã trả lời';
			case 'rejected': return 'từ chối';
			case 'unknown': return 'không rõ';
			case 'insufficientBalance': return 'Không đủ cân bằng!';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => 'Số dư ${x} không đủ để trả phí mạng chuỗi chéo';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return 'Có một giao dịch chưa được hoàn thành và không thể chuyển giao vào lúc này.';
			case 'thisfunctionNotSupportExternalCalls': return 'Chức năng này không hỗ trợ các cuộc gọi bên ngoài';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return 'Không có địa chỉ phù hợp nào có thể được sử dụng để thanh toán phí chuỗi chéo. Vui lòng chuyển sang mạng chuỗi khác và thử.';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => 'Số tiền chuyển tối đa hiện được khớp với một giao dịch là ${x}';
			case 'memoMustNotBeMoreThan64bytes': return 'Bình luận không được vượt quá 64 byte';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => 'Số dư không đủ, số tiền là: ${x}';
			case 'boundRreceivingAddressesExceed3Tip': return 'Số lượng địa chỉ thanh toán bị ràng buộc không thể vượt quá 3.\nNếu bạn cần liên kết một địa chỉ thanh toán mới,\nTrước tiên hãy hủy liên kết một địa chỉ thanh toán khác';
			case 'parametersA_exception': return ({required Object x}) => 'Tham số: ${x}, ngoại lệ';
			case 'parameterException': return 'Ngoại lệ tham số!';
			case 'transferAmountMustBeLargerThan0': return 'Số tiền chuyển phải lớn hơn 0';
			case 'authorizationHasExpired': return 'Ủy quyền đã hết hạn';
			case 'theAppHasNotBeenAuthorizedByOwner': return 'Ứng dụng chưa được chủ sở hữu ủy quyền';
			case 'authenticationTokenIsInvalid': return 'Mã thông báo xác thực không hợp lệ';
			case 'verifyInfoIsInvalidOrExpired': return 'Thông tin xác minh không hợp lệ hoặc đã hết hạn';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return 'Xác minh rằng số lượng thiết bị đầu cuối truy cập đã vượt quá giới hạn một trên 10.000';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return 'Thời gian tham gia khai thác phải trên 3 ngày';
			case 'numberOfSafetyCircleCannotBeLessThan3': return 'Số lượng thành viên trong vòng an toàn không được ít hơn 3 người';
			case 'avatarIsNotSet': return 'Hình đại diện chưa được đặt';
			case 'numberOfDirectReferralsCannotBeLessThan3': return 'Số người giới thiệu trực tiếp không được ít hơn 3 người';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return 'Thời hạn không đủ và bạn chỉ có thể thay đổi số điện thoại di động của mình mỗi năm một lần.';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return 'Số điện thoại di động đã tồn tại và không thể lặp lại';
			case 'securityCodeIsIncorrect': return 'Mã bảo mật không chính xác';
			case 'securityCodeMayHaveExpired': return 'Mã bảo mật có thể đã hết hạn';
			case 'sessionIdIsInvalidOrExpired': return 'Id phiên không hợp lệ hoặc đã hết hạn';
			case 'sessionHasBeenAuthorized': return 'Phiên đã được cấp phép!';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => 'Chỉ có thể được gia hạn trong vòng ${x} ngày trước khi hết hạn';
			case 'notYetGrantedDeveloperPermissions': return 'Chưa nhận được quyền của nhà phát triển';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => 'Trường ${x} không được để trống';
			case 'emailFormatError': return 'Lỗi định dạng email';
			case 'theXformatIsIncorrect': return ({required Object x}) => 'Lỗi định dạng \'${x}\'';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => 'Trường \'${x}\' phải dài từ ${y} đến ${z} ký tự.';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => 'Phạm vi lựa chọn ‘${x}’ phải nằm trong khoảng từ ${y} đến ${z}';
			case 'unchanged_sameAsOldContent': return 'Không thay đổi, giống như nội dung cũ!';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' đã tồn tại!';
			case 'mobileNumberHasNotJoinedDelta': return 'Số điện thoại di động này chưa được thêm vào Delta!';
			case 'referrerIdCannotBeEmpty': return 'ID người giới thiệu không được để trống!';
			case 'referrerIdDoesNotExist': return 'ID người giới thiệu không tồn tại!';
			case 'didIsIncorrectOrInvalid': return 'DID không chính xác hoặc không hợp lệ!';
			case 'accessTokenIsIncorrectOrInvalid': return 'accessToken không chính xác hoặc không hợp lệ!';
			case 'minimumWithdrawalAmountIs1USD': return 'Số tiền rút tối thiểu một lần là 1USD';
			case 'miningTimeIsNotYet': return 'Thời điểm khai thác vẫn chưa đến';
			case 'alreadyExists_pleaseDoNotRepeatedly': return 'Đã tồn tại rồi, vui lòng không thêm lại!';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return 'Số đăng ký không thể được sử dụng làm số truy cập xác minh';
			case 'canotAddYourSelf': return 'Không thể thêm chính bạn';
			case 'logOut': return 'Đăng xuất';
			case 'confirmLogout': return 'Xác nhận đăng xuất';
			case 'logOutTipsText': return 'Lời nhắc thân thiện: Theo các quy định có liên quan của sách trắng, mỗi lần xác minh đăng nhập tài khoản sẽ tiêu tốn một lượng tiền DTC nhất định để trả cho người xác minh như một động lực. Vui lòng không cố gắng đăng nhập và đăng xuất trừ khi cần thiết. nút sau sẽ Đăng xuất ngay bây giờ.';
			case 'ConfirmLogoutPleaseEnterYes': return 'Vui lòng nhập "có" để xác nhận đăng xuất.';
			case 'tip': return 'gợi ý';
			case 'cancel': return 'Hủy bỏ';
			case 'close': return 'đóng cửa';
			case 'selected': return 'đã chọn';
			case 'edit': return 'biên tập';
			case 'submit': return 'nộp';
			case 'goBack': return 'quay lại';
			case 'copiedToClipboard': return 'Đã sao chép vào bảng nhớ tạm.';
			case 'nickname': return 'biệt danh';
			case 'confirm': return 'xác nhận';
			case 'cannotBeEmpty': return 'không thể trống';
			case 'deleteSuccessful': return 'Xóa thành công!';
			case 'successfullyModified': return 'Sửa đổi thành công!';
			case 'executionSuccessful': return 'Thực hiện thành công!';
			case 'preview': return 'Xem trước';
			case 'followSystem': return 'Theo dõi hệ thống';
			case 'change': return 'Thay đổi';
			case 'replace': return 'thay thế';
			case 'view': return 'Kiểm tra';
			case 'manage': return 'quản lý';
			case 'modify': return 'Ôn lại';
			case 'replacedSuccessfully': return 'Thay thế thành công!';
			case 'authentication': return 'Xác thực';
			case 'reacquire': return 'đáp lại';
			case 'tryAgain': return 'thử lại';
			case 'querying': return 'Đang truy vấn…';
			case 'writingToOnChain_pleaseWait': return 'Đang ghi vào chuỗi, vui lòng đợi...';
			case 'versionCheck': return 'Phát hiện phiên bản';
			case 'alreadyLatestVersion': return 'Đã là phiên bản mới nhất!';
			case 'foundNewVersion': return 'Phiên bản mới được tìm thấy:';
			case 'upgradeLink': return 'Liên kết nâng cấp:';
			case 'deviceDescription': return 'Mô tả thiết bị:';
			case 'notification30SecondsBeforeMiningStops': return 'Thực hiện nhắc nhở thông báo 30 giây trước khi dừng khai thác!';
			case 'goMining': return 'Đi khai thác';
			case 'deltaMiningReminder': return 'Nhắc nhở khai thác Delta';
			case 'clickToMine_miningIsAboutToStop': return 'Nhấp vào đây để khai thác, hoạt động khai thác sẽ sớm dừng!';
			case 'incorrect_input': return 'Đầu vào không đúng!';
			case 'are_you_sure_delete': return 'Bạn có chắc chắn muốn xóa không?';
			case 'delete_account': return 'Xóa tài khoản';
			case 'how_to_operate_it': return 'Bạn có biết cách vận hành nó không?';
			case 'deletion_warning_tip': return 'Nếu bạn xóa tài khoản, bạn sẽ mất toàn bộ số Delta và toàn bộ số tiền kiếm được từ các thành viên khác cũng sẽ bị mất.';
			case 'launchWhatsAppProgram': return 'Khởi chạy chương trình WhatsApp';
			case 'sms': return 'Tin nhắn';
			case 'whatsApp_verification_tips': return 'Số điện thoại truy cập có biểu tượng này cũng hỗ trợ xác minh tin nhắn WhatsApp. Khi gửi tin nhắn quốc tế, bạn nên sử dụng WhatsApp để tăng tỷ lệ thành công và giảm chi phí.';
			case 'ihaveSentVerificationString': return 'Tôi đã gửi một chuỗi xác minh';
			case 'totalOfPeople': return 'Tổng số người: ';
			case 'numberOfPeopleMining': return 'Số người khai thác';
			case 'useBrowserScanQRcodeToSMSprogram': return 'Bạn có thể sử dụng trình duyệt trên thiết bị khác để quét mã QR và chuyển đến chương trình SMS';
			case 'toggle': return 'Toggle';
			case 'DSMSverifier': return 'Trình xác minh DSMS';
			case 'activate': return 'Kích hoạt';
			case 'activated': return 'Đã kích hoạt';
			case 'generateActivationCommand': return 'Tạo lệnh kích hoạt';
			case 'activationCommand': return 'Lệnh kích hoạt';
			case 'activationSentedTip': return 'Sau khi tin nhắn SMS kích hoạt được gửi đi, vui lòng kiểm tra trạng thái kích hoạt trên thiết bị đầu cuối truy cập.';
			case 'biometricsNotEnabledTip': return 'Thiết bị của bạn chưa bật tính năng sinh trắc học (khuôn mặt hoặc dấu vân tay). Vui lòng bật để tiếp tục.';
			case 'error': return 'Lỗi';
			case 'exceptionOccurredWhenCallingBiometric': return 'Đã xảy ra ngoại lệ khi gọi hàm sinh trắc học (khuôn mặt hoặc dấu vân tay)!';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				checkedNum,
				const TextSpan(text: ' số truy cập được kiểm tra, '),
				shouldNum,
				const TextSpan(text: ' nên được chọn.'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text} đã được gửi đến ${n} số truy cập ở trên chưa?';
			case 'interface': return 'Giao diện:';
			case 'waitingTimeoutOrSenderNumberMismatch': return 'Hết thời gian chờ hoặc số người gửi không khớp';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => 'Số điện thoại di động của thành viên vòng tròn bảo mật mà bạn đã điền không khớp: ${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return 'Đăng nhập trong vòng 10 phút sau khi đăng xuất để tránh xác minh hai yếu tố.';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => 'Phải điền ít nhất ${n} số điện thoại di động';
			case 'noAccessNumberInYourRegionYet': return 'Vẫn chưa có số truy cập nào trong khu vực của bạn';
			case 'notEnoughAccessNumbersInYourRegion': return 'Không đủ số lượng truy cập trong khu vực của bạn';
			case 'tipsForDeployDSMSterminal': return 'Hệ thống đã tự động tải một số số truy cập từ các quốc gia khác cho bạn. Để cung cấp dịch vụ xác minh tốt hơn và chi phí thấp hơn, chúng tôi khuyên bạn hoặc người giới thiệu của bạn nên triển khai thiết bị đầu cuối DSMS tại địa phương để kiếm phí xác minh.';
			case 'noOneCanProvideMeTheSecurityCode': return 'Không ai có thể cung cấp cho tôi mã bảo mật?';
			case 'useSupplementalMode': return 'Sử dụng chế độ bổ sung';
			case 'returnToSecurityCodeMode': return 'Quay lại chế độ mã bảo mật';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return 'Vui lòng nhập số điện thoại di động liên kết của họ. Mã quốc gia có thể được bỏ qua.';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => 'Số điện thoại di động của ${name} không đúng';
			case 'matchingVerificationStrategyIs': return 'Chiến lược xác minh phù hợp là:';
			case 'balanceGreater3ICP_noNeedPourFuel': return 'Số dư lớn hơn 3 ICP, hiện tại không cần phải đổ nhiên liệu.';
			case 'escrowAccount': return 'Tài khoản ký quỹ';
			case 'fuelRelay': return 'Rơ le nhiên liệu';
			case 'pourFuel': return 'Đổ nhiên liệu';
			case 'fuelState': return 'Trạng thái nhiên liệu';
			case 'pouringFuelTips': return 'Việc đổ nhiên liệu không mang lại cho bạn bất kỳ lợi thế hay bất lợi nào, mục đích của nó là làm phong phú thêm trải nghiệm hệ thống Delta.';
			case 'sponsorDevelopersByWatchingAds': return 'Tài trợ cho các nhà phát triển bằng cách xem quảng cáo';
			case 'status': return 'Trạng thái';
			case 'date': return 'Ngày';
			default: return null;
		}
	}
}

extension on _StringsZhCn {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return '首页';
			case 'switchLanguage': return '切换语言';
			case 'languageSwitch': return '语言切换';
			case 'slogan': return '在delta构建去中心化经济圈';
			case 'countryRegionCode': return '国家/地区代码';
			case 'countryRegionSelection': return '国家与地区选取';
			case 'nextStep': return '下一步';
			case 'yourPhoneNumber': return '你的电话号码';
			case 'pleaseSelectCountryAndRegion': return '请选你择所在国家/地区';
			case 'pleaseEnterPhoneNumber': return '请输入有效的电话号码！';
			case 'referrerDid': return '推荐人DID';
			case 'pleaseEnterTheReferrersDid': return '请输入有效的推荐人的去中心化身份id';
			case 'thisDidIsInvalid': return '这个DID无效';
			case 'nicknameFormatTips': return 'nickname不能为空,并且长度不能超过16位';
			case 'additionalIinformation': return '补充信息';
			case 'invitationSubject': return '邀请您参加Delta共识建设';
			case 'invitationLetter': return ({required Object did}) => '您好，我正在参与Delta共识建设！\n Delta是运行在ICP上的开源新型数字货币平台，无需密码，无需私钥，无需助记词，就能管理和使用各种数字货币。请点击此链接 https://delta.kim/auto/download 安装应用程序，现在邀请您也来一起参加共识建设和铸造货币。\n 推荐人DID: ${did}';
			case 'dSMSverification': return 'DSMS验证';
			case 'getAccessNumbers': return '获取一些接入号码';
			case 'getAccessNumberPromptMessage': return '点击下面的“获取”按钮在队列中轮选一组短信验证接入号码';
			case 'optionalAccessNumbers': return '可选的接入号';
			case 'accessNumber': return '接入号';
			case 'TELCO': return '运营商';
			case 'score': return '得分';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('zh'),
				one: () => TextSpan(children: [
					const TextSpan(text: '请勾选 '),
					nBuilder(n),
					const TextSpan(text: ' 个接入号码后点击"'),
					span('text'),
					const TextSpan(text: '"按钮进入下一步'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: '请勾选 '),
					nBuilder(n),
					const TextSpan(text: ' 个接入号码后点击"'),
					span('text'),
					const TextSpan(text: '"按钮进入下一步'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta是一个开源的去中心化全球性数字货币实验项目, 以及货币应用生态链。';
			case 'deltaGoalsDesc': return '目标是让人们可以利用Delta共同构建通用、公平、安全、快速、绿色的新型数字货币。并为这些数字货币和以往的加密货币提供各种有效的应用场景。';
			case 'details': return '详情';
			case 'get': return '获取';
			case 'select': return '选择';
			case 'send': return '发送';
			case 'complete': return '完成';
			case 'selectedAccessNumberPrompt': return '选定后，显示完整的接入号码，并生成验证字符串。';
			case 'location': return '位置';
			case 'verificationString': return '验证字符串';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: '请使用你的电话号码'),
				num,
				const TextSpan(text: '， 发送'),
				label,
				const TextSpan(text: '到'),
				accessNumber,
				const TextSpan(text: '，来完成验证。'),
			]);
			case 'ihaveSentTheSMS': return '我已发送短信';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: '验证字符串6分钟内有效， 剩余时间: '),
				time,
				const TextSpan(text: '。'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => '太快了，等待${x}秒后继续！';
			case 'waitingForVerificationSMS': return '正在等待验证短信…';
			case 'partSuccsForVerificationSMS': return '其中一台接入终端短信验证已通过！';
			case 'creatingAccessToken': return '正在创建访问令牌…';
			case 'intoDelta': return '走进Delta';
			case 'deltaAccountIsLoggedIn': return '您的Delta账户处于登录状态';
			case 'iHavLoggedOut': return '我已退出';
			case 'startTwoFactorVerification': return '开始双重验证';
			case 'securityCircleVerification': return '安全圈验证';
			case 'generateSecurityCode': return '生成安全码';
			case 'generateSecurityCodeHintText': return '生成的安全码将会发送到一位随机选取的您的安全圈成员。';
			case 'notSetSecurityCircleEnterPlaceholderTip': return '您还没有设置安全圈，您的账户很不安全，请输入任意6位数字占位，并进入下一步。';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return '安全码已产生，请联系以下亲友，请求它为您提取安全码来通过验证。30分钟内有效！';
			case 'itGetSecurityCodeTip': return '提示：它在Delta App ->菜单->提供安全 的页面中找到您的账户昵称后双击即可取得安全码。';
			case 'securityCircleMemberList': return '安全圈成员列表：';
			case 'selectA_friendToProvideSecurityCodeTip': return '请在成员列表中选取一位亲友，生成并为您提供安全码验证真实身份。其目的是为了防止手机号码丢掉或被盗时账户被他人控制。';
			case 'formatIsXdigits': return ({required Object num}) => '格式为${num}位数字';
			case 'signInSuccessfully': return '登录成功！';
			case 'twoFAandLogin': return '双重验证并登录';
			case 'verificationSuccessful': return '验证成功！';
			case 'validationFailed': return '验证失败！';
			case 'dappInfo': return 'DApp信息';
			case 'securityCircle': return '安全圈';
			case 'securityCode': return '安全码';
			case 'provideSecurity': return '提供安全';
			case 'addManully': return '手动添加';
			case 'addFromContacts': return '从通讯录添加';
			case 'addSecurityCircle': return '添加安全圈';
			case 'inputType': return '输入类型';
			case 'mobileNumber': return '手机号码';
			case 'did': return '地址id';
			case 'pleaseEnterValidDID': return '请输入一个有效的去中心化身份id';
			case 'pleaseEnterValidWalletAddress': return '请输入一个有效的钱包地址';
			case 'appellation': return '称谓';
			case 'appellationHint': return '你怎么称呼它，比如“宝贝”';
			case 'addSecurityCircleTips': return '请不要将不信任的人添加到安全圈。';
			case 'referralTeam': return '推荐团队';
			case 'profile': return '账户资料';
			case 'menu': return '菜单';
			case 'directly': return '直接的';
			case 'indirectly': return '间接的';
			case 'inviteContacts': return '邀请联系人';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: '你的邀请人是'),
				nickname,
				const TextSpan(text: '，你已直接推荐'),
				num1,
				const TextSpan(text: '人，其中当前在线'),
				num2,
				const TextSpan(text: '人。'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: '你已间接推荐'),
				num1,
				const TextSpan(text: '人，其中当前在线'),
				num2,
				const TextSpan(text: '人。'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: '邀请好友加入Delta，一起提高社会共识。每直接推荐一人挖矿速率提升基础速率的'),
				rate1,
				const TextSpan(text: '。 '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: '邀请好友加入Delta，一起提高社会共识, 每间接推荐一人挖矿速率提升基础速率的'),
				rate2,
				const TextSpan(text: '。'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => '你确定删除“${name}”吗？';
			case 'safetyCircleRoleQ': return '安全圈的作用什么?';
			case 'safetyCircleRoleA': return '在敏感情况下提供二次身份验证，来保护你的账户安全。';
			case 'howSecurityCirclesWorkQ': return '安全圈的工作原理？';
			case 'howSecurityCirclesWorkA': return '当需要安全圈进行验证的情况下，Delta智能合约程序将随机在安全圈好友列表中选取一位成员，来帮助你提供一个安全码为你完成身份安全验证。当你向该成员询问安全码的时候，它就可以确认你是否是你本人。同时程序会提示:"如果不是你本人的情况下拒绝提供安全码"，从而来保护你的账户安全。所以你应该随时确认安全圈成员是你可以信任的人。';
			case 'securityCircleBeUsedQ': return '什么时候会用到？';
			case 'securityCircleBeUsedA1': return '1. 当你的Delta APP失去控制的时候，一般情况是手机丢失或被盗。';
			case 'securityCircleBeUsedA2': return '2. 当一些敏感操作的情况下，Delta智能合约程序需要确认是你是你本人。';
			case 'provideSafetyTip1': return '当您的好友向您询问它的安全码时，请您务必确认它是它本人。';
			case 'provideSafetyTip2': return '您正在为以上好友提供安全保护，它们将您在安全圈中设置为了最信任的人，需要您在它的账户遇到敏感操作的情况下为它提供安全确认。';
			case 'provideSafetyTip3': return '在需要的时候双击对方头像可提取安全码。';
			case 'doesNotSecurityCodeNeedsRetrieved': return '对方目前没有需要提取的安全码!';
			case 'existSecurityCodeTip': return '请您务必确认向您索取安全码的亲友是它本人，为了保护亲友安全，在非亲友本人的情况下您应该拒绝提供。';
			case 'avatarSettings': return '头像设置';
			case 'NFTAvatarPropertyRightsText': return '声明：使用相关NFT作为头像仅为个人喜好，与拥有该NFT的知识产权无关。';
			case 'projectWebsite': return '项目网站: ';
			case 'whitepaper': return '白皮书: ';
			case 'indexID': return '索引Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => '索引范围在${start} 到 ${end}之间';
			case 'inputToLoadNFTAvatarTip': return '输入您喜欢NFT的索引id，程序将自动帮您加载为头像。';
			case 'miningRate': return '挖矿速率';
			case 'miningDetails': return '挖矿详情';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: '合计挖矿速率: '),
				rate,
				const TextSpan(text: ' δ/天'),
			]);
			case 'EndOfMiningSession': return '周期挖矿结束：';
			case 'tapToMineDeltaCoin': return '点击挖掘Delta币 ↑';
			case 'clickToStartMining': return '点击开始挖矿！';
			case 'miningHasStoppedPromptDesc': return '挖矿已停止，每24小时为一个挖矿周期，点击闪电图标开始新一轮挖矿。Delta的挖矿是一种分配机制，不会消耗您设备的额外算力与网络流量。';
			case 'aboutBaseRate': return '关于基础速率？';
			case 'baseRateDescription': return '根据白皮书约定，Delta挖矿的基础速率递减规则将分为两个阶段。 \n第1阶段：当参与（注册）人数为 3000 或更少时，该速率为 32δ/天。以此作为起步基准，每当人数增加10倍时，基本速率减半。 \n第2阶段：当参与人数达到3000万及以上，每当人数增加3倍时，基本速率减半。直到最后挖完停产。';
			case 'baseRate': return '基础速率';
			case 'directReferralRewards': return '直接推荐奖励';
			case 'directReferralRewardDesc': return '每直接推荐1人，当其处于挖矿状态时，您的挖矿速率将额外提升基础速率的1/3。\n\n 另外，您的推荐人的挖矿状态，也将计算到您的直接推荐奖励中。';
			case 'indirectReferralRewards': return '间接推荐奖励';
			case 'indirectReferralRewardDesc': return '当一个间接推荐人处于挖矿状态时，您的挖矿速率将额外提升基础速率的1/10。\n\n 您的直接推荐团队，它们再推荐的每一个人都代表为您的间接推荐。';
			case 'mine': return '开采';
			case 'thisMiningInformation': return '本次采矿信息';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '已参与挖矿：'),
				x,
				const TextSpan(text: '次'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '本次总收益：'),
				x,
				const TextSpan(text: ' Delta币'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '基础收益：'),
				x,
				const TextSpan(text: ' 个币'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '直接团队贡献：'),
				x,
				const TextSpan(text: '个币'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '间接团队贡献：'),
				x,
				const TextSpan(text: '个币'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '与上次挖矿间隔时长：'),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '有效挖矿时长：'),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x}小时';
			case 'keep3_5peopleInTheSafetyCircleTip': return '为了资产安全，安全圈成员应该随时保持3-5个可信任的人。';
			case 'index': return '索引';
			case 'amount': return '金额';
			case 'balance': return '余额';
			case 'timeStamp': return '时间戳';
			case 'summary': return '摘要';
			case 'miningHasStopped': return '挖矿已停止。';
			case 'miningHasStoppedDesc': return '目前您的挖矿已停止，马上开始赚取收益。';
			case 'startMining': return '开始挖矿';
			case 'changeMobileNumber': return '更换手机号码';
			case 'currentMobileNumber': return '当前手机号码';
			case 'newMobileNumber': return '新的手机号码';
			case 'securityCodeFormatIs6digits': return '安全码格式为6位数字！';
			case 'startVrification': return '开始验证';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => '这个手机号码已存在，关联DID： ${dId}';
			case 'noDataYet': return '暂无数据';
			case 'previousMobileNumber': return '以前的手机号码';
			case 'changeLog': return '变更记录';
			case 'referralLinkToShare': return '推荐链接分享';
			case 'referrer': return '推荐人';
			case 'isoCountryCode': return 'ISO国家代码';
			case 'avatarLogo': return '头像标识';
			case 'creationTime': return '创建时间';
			case 'lastUpdate': return '最后一次更新';
			case 'numberOfSecurityCircleMembers': return '安全圈成员数量';
			case 'theLatestMining': return '最近一次挖矿';
			case 'effectiveMiningDays': return '有效挖矿的天数';
			case 'modifyNickname': return '修改昵称';
			case 'didNotChange': return '没有改变!';
			case 'kycVerification': return 'KYC验证';
			case 'faceID': return '人脸ID';
			case 'touchID': return '指纹ID';
			case 'biometricsAuthorizationTest': return '生物特征认证测试';
			case 'currentState': return '当前状态';
			case 'biometricsAuthenticationLocalizedReason': return '使用设备的解锁功能来验证身份。';
			case 'graph': return '图谱';
			case 'referralRelationshipGraph': return '引荐关系图谱';
			case 'nativeContacts': return '本机联系人';
			case 'registrationAndMiningTrends': return '注册与挖矿趋势';
			case 'inMining': return '挖矿中';
			case 'registrationVolume': return '注册量';
			case 'unmined': return '未开采';
			case 'mined': return '已开采';
			case 'communityMining': return '社区采矿';
			case 'consensusPromotionFund': return '共识促进基金';
			case 'ecologicalAwardFund': return '生态奖励基金';
			case 'icpFuelCrowdfunding': return 'ICP燃料众筹';
			case 'coreDeveloperRewards': return '核心开发者奖励';
			case 'totalAllocation': return '总量分配';
			case 'miningRatio': return '开采比例';
			case 'billion.60': return '600亿';
			case 'billion.30': return '300亿';
			case 'billion.180': return '1800亿';
			case 'billion.300': return '3000亿';
			case 'watchAdsToSupportDevelopers': return '看广告支持开发者';
			case 'loadingAdcomponents': return '正在加载广告组件…';
			case 'timeIsNotUp': return '时间未到！';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return '加载失败, 可能网络受阻！';
			case 'pendingUSCTrecords': return '待定的USCT记录';
			case 'pendingUSCTrecordsDesc': return '待定的USCT记录将在15-30天内与广告平台进行比对确认，有效的记录将转移到USCT记录列表，并添加相应的USCT金额到账户余额。';
			case 'validity': return '有效性';
			case 'advertiser': return '广告商';
			case 'earned': return '已赚取';
			case 'withdraw': return '提现';
			case 'validUSCTrecords': return '有效的USCT记录';
			case 'USCTmining': return 'USCT 挖矿';
			case 'aboutUSCTmining': return '关于USCT挖矿？';
			case 'aboutUSCTminingItme1': return '1. USDT 是一种全球流行的美元稳定币，可在全球主流加密货币交易所轻松的兑换成各国主权货币。';
			case 'aboutUSCTminingItme2': return '2. USCT 是USCT挖矿的收益的临时性计量值，全称USD credit， 最终根据广告平台实际结算额度和分配规则，并按相应比例可转换为USDT。';
			case 'aboutUSCTminingItme3': return '3. USCT挖矿 是Delta社区的一种流量广告变现功能。利用Delta社区庞大的用户群体，为广告商、Delta开发者和旷工提供多方受益。其设计目的是为在Delta生态还没有形成和繁荣的早期阶段，为旷工提供一定的有效收入；同时，也为开发者提供一定的经费支持，确保开发者能够持续长期的提供开发服务，最终能够实现白皮书的所有规划；也为产品广告商提供一种有效的推广渠道。';
			case 'aboutUSCTminingItme4': return '4. 分配规则设计为总收益的40%作为开发者技术服务佣金，其余的60%作为社区旷工奖励。旷工奖励部分采用与DTC类似的多级分配模型，将这些旷工奖励再按6:3:1的比例分为3份，每次一的USCT挖矿的旷工奖励的6成分配给当前看广告的旷工，3成分配给上级推荐人，1成分配给二级推荐人。同理，你推荐的好友通过USCT挖矿您也可以得到同样的推荐者奖励。这样多层次分配的好处在于任何人都可以通过发展下线团队来获得相对大量的USDT收益。';
			case 'aboutUSCTminingItme5': return '5. 结算周期为7天，即每7天与广告平台核对一次有效性,确认有效的收益和实际金额将记录到余额中。每次提现的最低额度为10USDT。';
			case 'linesXtoY': return ({required Object x, required Object y}) => '第${x}到${y}行';
			case 'wallet': return '钱包';
			case 'multiChainWallet': return '多链钱包';
			case 'deposit': return '存入';
			case 'transfer': return '转账';
			case 'xcoinInWallet': return ({required Object coinCode}) => '钱包地址中的${coinCode}';
			case 'transactions': return '交易记录';
			case 'network': return '网络';
			case 'walletAddress': return '钱包地址';
			case 'currentAddress': return '当前地址';
			case 'depositAddress': return '充值地址';
			case 'receivingMoneyAddress': return '收款地址';
			case 'applyTempDepositAddress': return '申请临时充值地址';
			case 'tempDepositAddressTip': return '1.这是一个共享的存款地址。请不要在租约到期或解除绑定后存入金额。如果发生这种情况，该金额将会丢失。';
			case 'tempDepositAddressTip2': return '2.在存款前请务必确认[链名称]与[币种名称]完全匹配; 如果是合约代币还需要确认[合约标准]与[合约地址]完全匹配。';
			case 'tempDepositAddressTip3': return '3.请不要试图存入与以上提示中任何参数不匹配的资金，否者该金额将会丢失。';
			case 'tempDepositAddressTip4': return '4.如需要存入其它类型的资产，请切换到对应的币种页面和参数选项申请一个新的地址。';
			case 'applyExtensionOfValidity': return '申请延长有效期';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: '该地址将在'),
				diff,
				const TextSpan(text: '后过期，过期前12小时内可'),
				tap('手动延长'),
				const TextSpan(text: '有效期。'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return '只能提前12小时内续订';
			case 'theReceivingAddressValidForLongtime': return '该收款地址长期有效.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return '该收款地址长期有效，并实时自动入账。';
			case 'confirmDeposited': return '确认已存入';
			case 'unbindThisDepositAddress': return '解绑该充值地址';
			case 'confirmDepositedTip': return '如果已转入资金，请在10分钟后点击以上按钮触发计账到钱包。';
			case 'unbindDepositAddressTip': return '为了减少智能合约的运行开销，如果在有效期内不会再存入资金的情况下，请解绑充值地址。';
			case 'transferToAddress': return '转至地址';
			case 'longPressToPaste': return '长按粘贴';
			case 'all': return '全部';
			case 'balanceX': return ({required Object x}) => '余额 ${x}';
			case 'transferOut': return '转 出';
			case 'depositXcoins': return ({required Object x}) => '入账 ${x}';
			case 'sender': return '发送者';
			case 'recipient': return '接收者';
			case 'memo': return '备注';
			case 'kind': return '方式';
			case 'transferAmountExceedsAvailableBalance': return '转账金额超过可用余额';
			case 'pleaseEnterValidAmount': return '请输入有效金额';
			case 'networkFee': return '网络手续费';
			case 'fee': return '手续费';
			case 'validLengthXcharacters': return ({required Object x}) => '地址有效长度${x}字符';
			case 'historys': return '历史记录';
			case 'dtcCreditdetail': return 'Delta 积分详情';
			case 'usdCreditdetail': return 'USD 积分详情';
			case 'dappSquare': return 'dApp 广场';
			case 'amountRaised': return '募集金额';
			case 'disbursedAmount': return '发放金额';
			case 'participationTimes': return '参与人次';
			case 'completionRate': return '完成率';
			case 'exchangeRate': return '兑换率';
			case 'icpCrowdfunding': return 'ICP 众筹';
			case 'crowdfunding': return '众筹';
			case 'trendsCurve': return '趋势曲线';
			case 'fullScreenView': return '全屏视图';
			case 'walletBalance': return '钱包余额：';
			case 'manageWallet': return '管理钱包';
			case 'fundraiseAmount': return '募资金额';
			case 'exchangeRewardAmount': return '换取奖励金额';
			case 'fundraise': return '筹集资金';
			case 'rangeIntegersX': return ({required Object x}) => '范围：整数 ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => '成功参与募资并获得奖励${amount}DTCT';
			case 'amountSummary': return '金额汇总';
			case 'changePreferred': return '更改首选';
			case 'changePreferredAddress': return '更改首选地址';
			case 'preferredAddressTip': return '当使用注册的移动号码或DID收款时，资金将自动转入首选地址。';
			case 'newAddress': return '新建地址';
			case 'newAddressTip': return '为了防止被滥用，当钱包地址超过一个时，每创建一个新地址将产生一笔交易手续费。';
			case 'createNew': return '新建';
			case 'chainNetworkName': return '链网络名称';
			case 'from': return '来自';
			case 'to': return '到';
			case 'noAvailableDepositAmountDetected': return '未检测到可用的存入金额！';
			case 'crossChainReceiveMoneyMonitoring': return '跨链收款正在监听中 …';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '已收到('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '确认中('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return '注意事项(新手必读)';
			case 'whyUseSharedAddresses': return '为什么采用共享地址？';
			case 'useSharedrAdvantage': return '在跨链存款时，采用共享地址的优势如下：';
			case 'useSharedrAdvantage1': return '1. 减少转账手续费浪费，降低用户使用成本。因为如果采用独享地址，会导致资金过于分散，一般为了方便之后其他用户在提现时转出， 当用户充值后需要将资金二次转账归集到一个或少量地址管理。';
			case 'useSharedrAdvantage2': return '2. 在共享方案中，程序只需要维护一个相对较小的地址池，可以快速匹配转出资金和轻量的收款监听，这样可以减少计算资源开销。相比之下，如果采用独享地址，情况会恰好相反。';
			case 'tokenType': return '代币类型';
			case 'contract': return '合约';
			case 'contractStandard': return '合约标准';
			case 'contractAddress': return '合约地址';
			case 'native': return '原生';
			case 'confirmUnbindingPleaseEnterYes': return '确认解除绑定，请输入"yes"';
			case 'listAllWorkingTempReceivingAddresses': return '列出所有正在工作的跨链充值地址';
			case 'setNote': return '设置备注';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => '长度不能超过 ${x} 字节';
			case 'transferFee': return '转账费';
			case 'crossChainFee': return '跨链费';
			case 'crossChainTransferOutError': return '跨链转出错误';
			case 'chainName': return '链名称';
			case 'message': return '消息';
			case 'dontShowAgain': return '不再显示';
			case 'queuing': return '队列中';
			case 'optional': return '可选的';
			case 'publiclyVisible': return '公开可见';
			case 'rates': return '费率';
			case 'minimum': return '最低限度';
			case 'maximum': return '最多限度';
			case 'minimumBlockConfirmations': return '最小区块确认数';
			case 'dsmsVerifyTerminal': return 'DSMS验证者终端';
			case 'overall': return '总体';
			case 'my': return '我的';
			case 'checkValidatorQualifications': return '检查验证者权限资格';
			case 'getVerifierPermissions': return '获取验证者权限';
			case 'qualification': return '资质';
			case 'upperLimit': return '上限';
			case 'maximumNumberOfTerminalsAllowedToAccess': return '允许接入终端数量上限';
			case 'numberOfExistingAccessTerminals': return '已有接入终端数量';
			case 'applyingForDSMSVerifierPermissionsTips': return '申请验证者权限前，需要准备一台闲置的安卓手机和一个专用的接入号码，并下载安装DSMS接入终端应用程序。';
			case 'downloadLink': return '下载链接';
			case 'alreadyReadyFollowingTheAboveTips': return '已按照以上提示准备就绪';
			case 'globalUniversal': return '全球通用';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: '当前本地没有足够的验证者参与DSMS验证接入服务，请选择"'),
				gu,
				const TextSpan(text: '"接入服务。'),
			]);
			case 'asDedicatedNumberForAccess': return '作为接入专用号';
			case 'pleaseCheckTip': return ({required Object tip}) => '请勾选“${tip}”';
			case 'inputLengthTooShort': return '输入长度太短';
			case 'shortName': return '简称';
			case 'pleaseEnterXname': return ({required Object name}) => '请输入${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return '正在提交申请，请稍候...';
			case 'applyForDSMSVerifierPermission': return '申请DSMS验证者权限';
			case 'confirmInformation': return '确认资料';
			case 'lastHeartbeat': return '最后心跳';
			case 'expirationTime': return '到期时间';
			case 'country': return '国家';
			case 'accessTerminals': return '接入终端';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'DSMS接入号码终端总量';
			case 'textContent': return '文本内容';
			case 'scanQRcodeToLogin': return '扫码登录';
			case 'confirmLogin': return '确认登录';
			case 'authorizeSubApplicationToLogin': return '授权该子应用登录';
			case 'authorizationSuccessful': return '授权成功！';
			case 'launchSMSprogram': return '启动短信程序';
			case 'notApplied': return '没有申请';
			case 'validityPeriod': return '有效期';
			case 'renewal': return '续期';
			case 'scanCodeToAuthorizeTerminalLogin': return '扫码授权终端登录';
			case 'rewards': return '奖励';
			case 'roles': return '角色';
			case 'developerCenter': return '开发者中心';
			case 'appName': return '应用名称';
			case 'pleaseSelect': return '请选择';
			case 'category': return '类目';
			case 'keywords': return '关键词';
			case 'pleaseEnterAkeyword': return '请输入一个关键词';
			case 'createApplication': return '创建应用程序';
			case 'appType': return '应用类型';
			case 'numberOfCategoriesMustBetween1and3': return '类目数量必须在1到3个之间';
			case 'appLogoSpecifications': return '图片格式：png，大小：100KB以内，分辨率(像素)：256*256';
			case 'localAlbum': return '本地相册';
			case 'networkPath': return '网络路径';
			case 'imageURLkAddress': return '图片URL地址';
			case 'urlAddressFormatIsIncorrect': return 'URL地址格式不正确';
			case 'imageFormatOnlySupportsPng': return '图片只支持“png”格式.';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => '长度必须介于${a}-${b}个字符之间';
			case 'introduction': return '简介';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => '图片大小不能大于${a}，目前为${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => '图片分辨率必须为：${p1}(像素)，当前为${p2}';
			case 'becomeDeveloper': return '成为开发者';
			case 'developerInformation': return '开发者信息';
			case 'teamName': return '团队名称';
			case 'website': return '网站';
			case 'other': return '其它';
			case 'githubVerification': return 'Github验证';
			case 'exampleUrl': return '示例Url';
			case 'githubVerificationTip': return ({required Object did}) => '请使用您的GitHub账户在仓库中创建一个\'delta.did\'文件,文件内容为\'${did}\'；然后，将该文件的githubusercontent Url地址粘贴到这个输入框用于身份验证。';
			case 'createApp': return '创建应用';
			case 'appManagement': return '应用管理';
			case 'statusLogs': return '状态日志';
			case 'bad': return '不好';
			case 'normal': return '一般';
			case 'good': return '很好';
			case 'onceCreatedItCannotBeChanged': return '一旦创建,不可更改！';
			case 'manageApplicationEntity': return '管理应用实体';
			case 'currentVersion': return '当前版本';
			case 'submitVersion': return '提交版本';
			case 'packageOnlySupportZipCompressedFile': return '程序包仅支持zip压缩文件';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'zip程序包中未找到\'${name}\'文件';
			case 'fileList': return '文件列表：';
			case 'programPackage': return '程序包：';
			case 'automaticallyExtractFromVersionFile': return '自动从 \'.version\' 文件中提取';
			case 'dappVersionFormatTip': return '版本号格式必须为小数且精度保持2位，最大不能超过99.99';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => '版本号必须大于当前版本\'${v}\'';
			case 'versionNotes': return '版本说明：';
			case 'updateRelease': return '更新版本';
			case 'loadAndRun': return '加载并运行';
			case 'notYetSubmittedProgramPackage': return '还未提交程序包！';
			case 'authorizeMinidAppLogin': return '授权 mini-dApp 登录';
			case 'confirmAuthorizationPleaseEnterYes': return '确认授权, 请输入“yes”';
			case 'authorizeNow': return '立即授权';
			case 'operation': return '操作: ';
			case 'statusChange': return '状态变更';
			case 'changeTo': return '改变到：';
			case 'notes': return '备注: ';
			case 'changesNotEffective': return '更改无效 !';
			case 'released': return '已发布';
			case 'inPublicBeta': return '公测中';
			case 'developers': return '开发者: ';
			case 'reviewList': return '评论列表: ';
			case 'postReview': return '发表评论';
			case 'scoreNow': return '立即评分';
			case 'description': return '描述: ';
			case 'noData': return '(^-^) \n 无数据';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => '版本已从 ${a} 更新至 ${b}';
			case 'loadNewVersion': return '加载新版本';
			case 'name': return '名称: ';
			case 'canisterId': return '容器罐Id: ';
			case 'updateTime': return '更新时间';
			case 'contractCanistersState': return '合约罐状态';
			case 'userDistribution': return '用户分布';
			case 'settings': return '设 置';
			case 'security': return '安 全';
			case 'invite': return '邀请';
			case 'more': return '更多…';
			case 'receiveAddress': return '接收地址：';
			case 'hangingAmount': return '挂起金额';
			case 'hangingAmountTips': return '挂起金额是由您的下级团队挖矿而产生奖励的临时记录，一旦您进行一次挖矿这些金额将被收集到待定金额中';
			case 'pendingAmount': return '待定金额';
			case 'pendingAmountTips': return '待定金额是指还未与广告商进行确认比对的金额，比对有效的金额将被转移到有效USCT记录中，如有无效的部分将被排除';
			case 'received': return '已收到';
			case 'processing': return '处理中';
			case 'replied': return '已应答';
			case 'rejected': return '拒绝';
			case 'unknown': return '未知';
			case 'insufficientBalance': return '余额不足！';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => '${x}余额不足以支付跨链网络费';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return '有一笔交易尚未完成，暂不能转账';
			case 'thisfunctionNotSupportExternalCalls': return '该函数不支持被外部调用';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return '没有匹配到可用于支付跨链手续费的地址，请切换到其它链网络尝试。';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => '当前匹配到单笔最大可转账金额为${x}';
			case 'memoMustNotBeMoreThan64bytes': return '备注不得超过 64 字节';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => '余额不足，金额为：${x}';
			case 'boundRreceivingAddressesExceed3Tip': return '已绑定收款地址不能超出3个，\n如需绑定新的收款地址，\n请先解绑另外一个收款地址';
			case 'parametersA_exception': return ({required Object x}) => '参数：${x}，异常';
			case 'transferAmountMustBeLargerThan0': return '转账金额必须大于0';
			case 'authorizationHasExpired': return '授权已过期';
			case 'theAppHasNotBeenAuthorizedByOwner': return '该应用尚未获得所有者授权';
			case 'authenticationTokenIsInvalid': return '身份验证令牌无效';
			case 'verifyInfoIsInvalidOrExpired': return '验证信息无效或过期';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return '验证接入终端数量已经超过万分之一的限制';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return '参与挖矿的时间必须大于3天';
			case 'numberOfSafetyCircleCannotBeLessThan3': return '安全圈成员人数不能少于3人';
			case 'avatarIsNotSet': return '头像未设置';
			case 'numberOfDirectReferralsCannotBeLessThan3': return '直接推荐人数不能小于3人';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return '时限不足，一年内只能换一次手机号码。';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return '该手机号码已存在，不能重复';
			case 'securityCodeIsIncorrect': return '安全码不正确';
			case 'securityCodeMayHaveExpired': return '安全码可能已过期';
			case 'sessionIdIsInvalidOrExpired': return '会话id无效或过期';
			case 'sessionHasBeenAuthorized': return '该会话已授权完成！';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => '只能期满前${x}天内续期';
			case 'notYetGrantedDeveloperPermissions': return '还未获得开发者权限';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => '字段${x}不能为空';
			case 'emailFormatError': return 'email格式错误';
			case 'theXformatIsIncorrect': return ({required Object x}) => '\'${x}\'格式错误';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => '字段“${x}”的长度必须在 ${y} 到 ${z} 个字符之间。';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => '‘${x}’选择范围必须介于 ${y} 至 ${z}个之间';
			case 'unchanged_sameAsOldContent': return '未改变，与旧的内容相同！';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' 已存在！';
			case 'mobileNumberHasNotJoinedDelta': return '这个手机号码还未加入Delta!';
			case 'referrerIdCannotBeEmpty': return '推荐人ID不能为空！';
			case 'referrerIdDoesNotExist': return '推荐人 ID 不存在！';
			case 'didIsIncorrectOrInvalid': return 'DID 不正确或无效！';
			case 'accessTokenIsIncorrectOrInvalid': return 'accessToken 不正确或无效！';
			case 'minimumWithdrawalAmountIs1USD': return '一次提现金额最少1USD';
			case 'miningTimeIsNotYet': return '挖矿时间尚未到';
			case 'alreadyExists_pleaseDoNotRepeatedly': return '已存在，请不要重复添加！';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return '不能使用注册号码作为验证接入号';
			case 'canotAddYourSelf': return '不能添加你自己';
			case 'logOut': return '退出登录';
			case 'confirmLogout': return '确认退出登录';
			case 'logOutTipsText': return '友情提示：按照白皮书的相关约定，账户的每次登录验证将会消耗你一定量的DTC币支付给验证者作为激励，请勿在非必要的情况下尝试登录和登出，点击以下按钮将会立即退出登录。';
			case 'ConfirmLogoutPleaseEnterYes': return '确认退出登录请输入"yes"';
			case 'tip': return '提示';
			case 'cancel': return '取消';
			case 'close': return '关闭';
			case 'selected': return '已选定';
			case 'edit': return '编辑';
			case 'submit': return '提交';
			case 'goBack': return '回退';
			case 'copiedToClipboard': return '已拷贝到剪切板。';
			case 'nickname': return '昵称';
			case 'confirm': return '确认';
			case 'cannotBeEmpty': return '不能为空';
			case 'deleteSuccessful': return '删除成功！';
			case 'successfullyModified': return '修改成功！';
			case 'executionSuccessful': return '执行成功！';
			case 'parameterException': return '参数异常！';
			case 'preview': return '预览';
			case 'followSystem': return '跟随系统';
			case 'change': return '更改';
			case 'replace': return '更换';
			case 'view': return '查看';
			case 'manage': return '管理';
			case 'modify': return '修改';
			case 'replacedSuccessfully': return '更换成功!';
			case 'authentication': return '鉴权';
			case 'reacquire': return '重新获取';
			case 'tryAgain': return '再试一次';
			case 'querying': return '正在查询 …';
			case 'writingToOnChain_pleaseWait': return '正在写入链上，请稍候 …';
			case 'versionCheck': return '版本检测';
			case 'alreadyLatestVersion': return '已是最新版本！';
			case 'foundNewVersion': return '发现新版本：';
			case 'upgradeLink': return '升级链接: ';
			case 'deviceDescription': return '设备描述: ';
			case 'notification30SecondsBeforeMiningStops': return '在挖矿停止前30秒执行通知提醒！';
			case 'goMining': return '去挖矿';
			case 'deltaMiningReminder': return 'Delta挖矿提示';
			case 'clickToMine_miningIsAboutToStop': return '点击这里去挖矿，挖矿即将停止 ！';
			case 'incorrect_input': return '输入不正确！';
			case 'are_you_sure_delete': return '确认删除吗？';
			case 'delete_account': return '删除账户';
			case 'how_to_operate_it': return '查看如何操作?';
			case 'deletion_warning_tip': return '如果删除账户，您将失去所有的Delta硬币，其他所有成员给您带来的收益也将丢失。';
			case 'launchWhatsAppProgram': return '启动WhatsApp程序';
			case 'sms': return '短信';
			case 'whatsApp_verification_tips': return '包含这个图标的接入号码表示同时支持WhatsApp消息验证。在发送跨国信息时，建议使用WhatsApp，来提高成功率并降低费用。';
			case 'ihaveSentVerificationString': return '我已发送验证串';
			case 'totalOfPeople': return '总人数: ';
			case 'numberOfPeopleMining': return '挖矿人次';
			case 'useBrowserScanQRcodeToSMSprogram': return '您可在另外一台设备使用浏览器扫描二维码并将其传递到短信程序';
			case 'toggle': return '切换';
			case 'DSMSverifier': return 'DSMS验证者';
			case 'activate': return '激活';
			case 'activated': return '已激活';
			case 'generateActivationCommand': return '生成激活指令';
			case 'activationCommand': return '激活指令';
			case 'activationSentedTip': return '激活短信发送完成后请到接入终端设备查看激活状态。';
			case 'biometricsNotEnabledTip': return '您的设备尚未启用生物识别（人脸或指纹），请启用后继续。';
			case 'error': return '错误';
			case 'exceptionOccurredWhenCallingBiometric': return '调用生物识别（人脸或指纹）功能出现异常！';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: '已勾选'),
				checkedNum,
				const TextSpan(text: '个接入号码，应该选择'),
				shouldNum,
				const TextSpan(text: '个。'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text}已发送到以上的${n}个接入号吗？';
			case 'interface': return '接口：';
			case 'waitingTimeoutOrSenderNumberMismatch': return '等待超时或发件人号码不匹配';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => '您补填的安全圈成员手机号码不匹配:${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return '退出后10分钟内登录，可避免双重验证。';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => '必须填写至少${n}个手机号码';
			case 'noAccessNumberInYourRegionYet': return '你所在的区域暂时还没有接入号码';
			case 'notEnoughAccessNumbersInYourRegion': return '你所在的区域接入号码不充足';
			case 'tipsForDeployDSMSterminal': return '系统已经自动为您加载了一些其它国家的接入号码，为了提供更好更低成本的验证服务，建议您或联系您的推荐人在本地部署DSMS终端，赚取验证费。';
			case 'noOneCanProvideMeTheSecurityCode': return '没有一个人可以给我提供安全码？';
			case 'useSupplementalMode': return '使用补充模式';
			case 'returnToSecurityCodeMode': return '返回安全码模式';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return '请输入它们的关联手机号码，可省略国家代码。';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => '${name}的移动号码不正确';
			case 'matchingVerificationStrategyIs': return '匹配到的验证策略为：';
			case 'balanceGreater3ICP_noNeedPourFuel': return '余额大于3 ICP暂时无需倒入燃料。';
			case 'escrowAccount': return '托管账户';
			case 'fuelRelay': return '燃料中继';
			case 'pourFuel': return '倒入燃料';
			case 'fuelState': return '燃料状态';
			case 'pouringFuelTips': return '倒入燃料不会给您带来任何的好处或坏处，其目的为了丰富Delta系统体验。';
			case 'sponsorDevelopersByWatchingAds': return '通过观看广告赞助开发者';
			case 'status': return '状态';
			case 'date': return '日期';
			default: return null;
		}
	}
}

extension on _StringsZhTw {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'home': return '首頁';
			case 'switchLanguage': return '切換語言';
			case 'languageSwitch': return '語言切換';
			case 'slogan': return '在delta構建去中心化經濟圈';
			case 'countryRegionCode': return '國家/地區程式碼';
			case 'countryRegionSelection': return '國家與地區選取';
			case 'nextStep': return '下一步';
			case 'yourPhoneNumber': return '你的電話號碼';
			case 'pleaseSelectCountryAndRegion': return '請選你擇所在國家/地區';
			case 'pleaseEnterPhoneNumber': return '請輸入有效的電話號碼！';
			case 'referrerDid': return '推薦人DID';
			case 'pleaseEnterTheReferrersDid': return '請輸入有效的推薦人的去中心化身份id';
			case 'thisDidIsInvalid': return '這個DID無效';
			case 'nicknameFormatTips': return 'nickname不能為空,並且長度不能超過16位';
			case 'additionalIinformation': return '補充資訊';
			case 'invitationSubject': return '邀請您參加Delta共識建設';
			case 'invitationLetter': return ({required Object did}) => '您好，我正在參與Delta共識建設！\n Delta是執行在ICP上的開源新型數字貨幣平臺，無需密碼，無需私鑰，無需助記詞，就能管理和使用各種數字貨幣。請點選此連結 https://delta.kim/auto/download 安裝應用程式，現在邀請您也來一起參加共識建設和鑄造貨幣。\n 推薦人DID: ${did}';
			case 'dSMSverification': return 'DSMS驗證';
			case 'getAccessNumbers': return '獲取一些接入號碼';
			case 'getAccessNumberPromptMessage': return '點選下面的“獲取”按鈕在佇列中輪選一組簡訊驗證接入號碼';
			case 'optionalAccessNumbers': return '可選的接入號';
			case 'accessNumber': return '接入號';
			case 'TELCO': return '運營商';
			case 'score': return '得分';
			case 'checkAccessNumberTip': return ({required num n, required InlineSpan Function(num) nBuilder, required InlineSpanBuilder span}) => RichPluralResolvers.bridge(
				n: n,
				resolver: _root.$meta.cardinalResolver ?? PluralResolvers.cardinal('zh'),
				one: () => TextSpan(children: [
					const TextSpan(text: '請勾選 '),
					nBuilder(n),
					const TextSpan(text: ' 個接入號碼後點選"'),
					span('text'),
					const TextSpan(text: '"按鈕進入下一步'),
				]),
				other: () => TextSpan(children: [
					const TextSpan(text: '請勾選 '),
					nBuilder(n),
					const TextSpan(text: ' 個接入號碼後點選"'),
					span('text'),
					const TextSpan(text: '"按鈕進入下一步'),
				]),
			);
			case 'whatIsDeltaDesc': return 'Delta是一個開源的去中心化全球性數字貨幣實驗專案, 以及貨幣應用生態鏈。';
			case 'deltaGoalsDesc': return '目標是讓人們可以利用Delta共同構建通用、公平、安全、快速、綠色的新型數字貨幣。併為這些數字貨幣和以往的加密貨幣提供各種有效的應用場景。';
			case 'details': return '詳情';
			case 'get': return '獲取';
			case 'select': return '選擇';
			case 'send': return '傳送';
			case 'complete': return '完成';
			case 'selectedAccessNumberPrompt': return '選定後，顯示完整的接入號碼，並生成驗證字串。';
			case 'location': return '位置';
			case 'verificationString': return '驗證字串';
			case 'sendVerificationStringDesc': return ({required InlineSpan num, required InlineSpan label, required InlineSpan accessNumber}) => TextSpan(children: [
				const TextSpan(text: '請使用你的電話號碼'),
				num,
				const TextSpan(text: '， 傳送'),
				label,
				const TextSpan(text: '到'),
				accessNumber,
				const TextSpan(text: '，來完成驗證。'),
			]);
			case 'ihaveSentTheSMS': return '我已傳送簡訊';
			case 'validWithin6minutes': return ({required InlineSpan time}) => TextSpan(children: [
				const TextSpan(text: '驗證字串6分鐘內有效， 剩餘時間: '),
				time,
				const TextSpan(text: '。'),
			]);
			case 'tooFast_waitXsecondsContinuing': return ({required Object x}) => '太快了，等待${x}秒後繼續！';
			case 'waitingForVerificationSMS': return '正在等待驗證簡訊…';
			case 'partSuccsForVerificationSMS': return '其中一臺接入終端簡訊驗證已透過！';
			case 'creatingAccessToken': return '正在建立訪問令牌…';
			case 'intoDelta': return '走進Delta';
			case 'deltaAccountIsLoggedIn': return '您的Delta帳號處於登入狀態';
			case 'iHavLoggedOut': return '我已退出';
			case 'startTwoFactorVerification': return '開始雙重驗證';
			case 'securityCircleVerification': return '安全圈驗證';
			case 'generateSecurityCode': return '生成安全碼';
			case 'generateSecurityCodeHintText': return '生成的安全碼將會傳送到一位隨機選取的您的安全圈成員。';
			case 'notSetSecurityCircleEnterPlaceholderTip': return '您還沒有設定安全圈，您的賬戶很不安全，請輸入任意6位數字佔位，並進入下一步。';
			case 'securityCodeHasBeenGenerated_ContactFriendsTip': return '安全碼已產生，請聯絡以下親友，請求它為您提取安全碼來透過驗證。30分鐘內有效！';
			case 'itGetSecurityCodeTip': return '提示：它在Delta App ->選單->提供安全 的頁面中找到您的賬戶暱稱後雙擊即可取得安全碼。';
			case 'securityCircleMemberList': return '安全圈成員清單：';
			case 'selectA_friendToProvideSecurityCodeTip': return '請在成員清單中選取一位親友，產生並為您提供安全碼驗證真實身分。其目的是為了防止手機號碼丟掉或被盜時帳號被他人控制。';
			case 'formatIsXdigits': return ({required Object num}) => '格式為${num}位數字';
			case 'signInSuccessfully': return '登入成功！';
			case 'twoFAandLogin': return '雙重驗證並登入';
			case 'verificationSuccessful': return '驗證成功！';
			case 'validationFailed': return '驗證失敗！';
			case 'dappInfo': return 'DApp資訊';
			case 'securityCircle': return '安全圈';
			case 'securityCode': return '安全碼';
			case 'provideSecurity': return '提供安全';
			case 'addManully': return '手動新增';
			case 'addFromContacts': return '從通訊錄新增';
			case 'addSecurityCircle': return '新增安全圈';
			case 'inputType': return '輸入型別';
			case 'mobileNumber': return '手機號碼';
			case 'did': return '地址id';
			case 'pleaseEnterValidDID': return '請輸入一個有效的去中心化身份id';
			case 'pleaseEnterValidWalletAddress': return '請輸入一個有效的錢包地址';
			case 'appellation': return '稱謂';
			case 'appellationHint': return '你怎麼稱呼它，比如“寶貝”';
			case 'addSecurityCircleTips': return '請不要將不信任的人新增到安全圈。';
			case 'referralTeam': return '推薦團隊';
			case 'profile': return '賬戶資料';
			case 'menu': return '選單';
			case 'directly': return '直接的';
			case 'indirectly': return '間接的';
			case 'inviteContacts': return '邀請聯絡人';
			case 'refereesAtFirstLevelDesc': return ({required InlineSpan nickname, required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: '你的邀請人是'),
				nickname,
				const TextSpan(text: '，你已直接推薦'),
				num1,
				const TextSpan(text: '人，其中當前線上'),
				num2,
				const TextSpan(text: '人。'),
			]);
			case 'refereesAtSecondLevelDesc': return ({required InlineSpan num1, required InlineSpan num2}) => TextSpan(children: [
				const TextSpan(text: '你已間接推薦'),
				num1,
				const TextSpan(text: '人，其中當前線上'),
				num2,
				const TextSpan(text: '人。'),
			]);
			case 'invitationToBoostMiningDesc': return ({required InlineSpan rate1, required InlineSpan btn}) => TextSpan(children: [
				const TextSpan(text: '邀請好友加入Delta，一起提高社會共識。每直接推薦一人挖礦速率提升基礎速率的'),
				rate1,
				const TextSpan(text: '。 '),
				btn,
			]);
			case 'invitationToBoostMiningDesc2': return ({required InlineSpan rate2}) => TextSpan(children: [
				const TextSpan(text: '邀請好友加入Delta，一起提高社會共識, 每間接推薦一人挖礦速率提升基礎速率的'),
				rate2,
				const TextSpan(text: '。'),
			]);
			case 'areYouSureToRemove_x': return ({required Object name}) => '你確定刪除“${name}”嗎？';
			case 'safetyCircleRoleQ': return '安全圈的作用什麼?';
			case 'safetyCircleRoleA': return '在敏感情況下提供二次身份驗證，來保護你的賬戶安全。';
			case 'howSecurityCirclesWorkQ': return '安全圈的工作原理？';
			case 'howSecurityCirclesWorkA': return '當需要安全圈進行驗證的情況下，Delta智慧合約程式將隨機在安全圈好友列表中選取一位成員，來幫助你提供一個安全碼為你完成身份安全驗證。當你向該成員詢問安全碼的時候，它就可以確認你是否是你本人。同時程式會提示:"如果不是你本人的情況下拒絕提供安全碼"，從而來保護你的賬戶安全。所以你應該隨時確認安全圈成員是你可以信任的人。';
			case 'securityCircleBeUsedQ': return '什麼時候會用到？';
			case 'securityCircleBeUsedA1': return '1. 當你的Delta APP失去控制的時候，一般情況是手機丟失或被盜。';
			case 'securityCircleBeUsedA2': return '2. 當一些敏感操作的情況下，Delta智慧合約程式需要確認是你是你本人。';
			case 'provideSafetyTip1': return '當您的好友向您詢問它的安全碼時，請您務必確認它是它本人。';
			case 'provideSafetyTip2': return '您正在為以上好友提供安全保護，它們將您在安全圈中設定為了最信任的人，需要您在它的賬戶遇到敏感操作的情況下為它提供安全確認。';
			case 'provideSafetyTip3': return '在需要的時候雙擊對方頭像可提取安全碼。';
			case 'doesNotSecurityCodeNeedsRetrieved': return '對方目前沒有需要提取的安全碼!';
			case 'existSecurityCodeTip': return '請您務必確認向您索取安全碼的親友是它本人，為了保護親友安全，在非親友本人的情況下您應該拒絕提供。';
			case 'avatarSettings': return '頭像設定';
			case 'NFTAvatarPropertyRightsText': return '宣告：使用相關NFT作為頭像僅為個人喜好，與擁有該NFT的智慧財產權無關。';
			case 'projectWebsite': return '專案網站: ';
			case 'whitepaper': return '白皮書：';
			case 'indexID': return '索引Id';
			case 'indexesRangeFromXtoY': return ({required Object start, required Object end}) => '索引範圍在${start} 到 ${end}之間';
			case 'inputToLoadNFTAvatarTip': return '輸入您喜歡NFT的索引id，程式將自動幫您載入為頭像。';
			case 'miningRate': return '挖礦速率';
			case 'miningDetails': return '挖礦詳情';
			case 'totalMiningRateEachDay': return ({required InlineSpan rate}) => TextSpan(children: [
				const TextSpan(text: '合計挖礦速率: '),
				rate,
				const TextSpan(text: ' δ/天'),
			]);
			case 'EndOfMiningSession': return '週期挖礦結束：';
			case 'tapToMineDeltaCoin': return '點選挖掘Delta幣 ↑';
			case 'clickToStartMining': return '點選開始挖礦！';
			case 'miningHasStoppedPromptDesc': return '挖礦已停止，每24小時為一個挖礦週期，點選閃電圖示開始新一輪挖礦。Delta的挖礦是一種分配機制，不會消耗您裝置的額外算力與網路流量。';
			case 'aboutBaseRate': return '關於基礎速率？';
			case 'baseRateDescription': return '根據白皮書約定，Delta挖礦的基礎速率遞減規則將分為兩個階段。 \n第1階段：當參與（註冊）人數為 3000 或更少時，該速率為 32δ/天。以此作為起步基準，每當人數增加10倍時，基本速率減半。 \n第2階段：當參與人數達到3000萬及以上，每當人數增加3倍時，基本速率減半。直到最後挖完停產。';
			case 'baseRate': return '基礎速率';
			case 'directReferralRewards': return '直接推薦獎勵';
			case 'directReferralRewardDesc': return '每直接推薦1人，當其處於挖礦狀態時，您的挖礦速率將額外提升基礎速率的1/3。\n\n 另外，您的推薦人的挖礦狀態，也將計算到您的直接推薦獎勵中。';
			case 'indirectReferralRewards': return '間接推薦獎勵';
			case 'indirectReferralRewardDesc': return '當一個間接推薦人處於挖礦狀態時，您的挖礦速率將額外提升基礎速率的1/10。\n\n 您的直接推薦團隊，它們再推薦的每一個人都代表為您的間接推薦。';
			case 'mine': return '開採';
			case 'thisMiningInformation': return '本次採礦資訊';
			case 'participatedInMiningXtimes': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '已參與挖礦：'),
				x,
				const TextSpan(text: '次'),
			]);
			case 'totalIncomeThisTimeXDeltaCoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '本次總收益：'),
				x,
				const TextSpan(text: ' Delta幣'),
			]);
			case 'basicIncomeXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '基礎收益：'),
				x,
				const TextSpan(text: ' 個幣'),
			]);
			case 'directTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '直接團隊貢獻：'),
				x,
				const TextSpan(text: '個幣'),
			]);
			case 'indirectTeamContributionXcoins': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '間接團隊貢獻：'),
				x,
				const TextSpan(text: '個幣'),
			]);
			case 'timeIntervalFromLastMiningX': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '與上次挖礦間隔時長：'),
				x,
			]);
			case 'effectiveMiningTimeXhours': return ({required InlineSpan x}) => TextSpan(children: [
				const TextSpan(text: '有效挖礦時長：'),
				x,
			]);
			case 'xhours': return ({required Object x}) => '${x}小時';
			case 'keep3_5peopleInTheSafetyCircleTip': return '為了資產安全，安全圈成員應該隨時保持3-5個可信任的人。';
			case 'index': return '索引';
			case 'amount': return '金額';
			case 'balance': return '餘額';
			case 'timeStamp': return '時間戳';
			case 'summary': return '摘要';
			case 'miningHasStopped': return '挖礦已停止。';
			case 'miningHasStoppedDesc': return '目前您的挖礦已停止，馬上開始賺取收益。';
			case 'startMining': return '開始挖礦';
			case 'changeMobileNumber': return '更換手機號碼';
			case 'currentMobileNumber': return '當前手機號碼';
			case 'newMobileNumber': return '新的手機號碼';
			case 'securityCodeFormatIs6digits': return '安全碼格式為6位數字！';
			case 'startVrification': return '開始驗證';
			case 'mobileNumberAlreadyExists_associated': return ({required Object dId}) => '這個手機號碼已存在，關聯DID： ${dId}';
			case 'noDataYet': return '暫無資料';
			case 'previousMobileNumber': return '以前的手機號碼';
			case 'changeLog': return '變更記錄';
			case 'referralLinkToShare': return '推薦連結分享';
			case 'referrer': return '推薦人';
			case 'isoCountryCode': return 'ISO國家程式碼';
			case 'avatarLogo': return '頭像標識';
			case 'creationTime': return '建立時間';
			case 'lastUpdate': return '最後一次更新';
			case 'numberOfSecurityCircleMembers': return '安全圈成員數量';
			case 'theLatestMining': return '最近一次挖礦';
			case 'effectiveMiningDays': return '有效挖礦的天數';
			case 'modifyNickname': return '修改暱稱';
			case 'didNotChange': return '沒有改變!';
			case 'kycVerification': return 'KYC驗證';
			case 'faceID': return '人臉ID';
			case 'touchID': return '指紋ID';
			case 'biometricsAuthorizationTest': return '生物特徵認證測試';
			case 'currentState': return '當前狀態';
			case 'biometricsAuthenticationLocalizedReason': return '使用裝置的解鎖來驗證身份。';
			case 'graph': return '圖譜';
			case 'referralRelationshipGraph': return '引薦關係圖譜';
			case 'nativeContacts': return '本機聯絡人';
			case 'registrationAndMiningTrends': return '註冊與挖礦趨勢';
			case 'inMining': return '挖礦中';
			case 'registrationVolume': return '註冊量';
			case 'unmined': return '未開採';
			case 'mined': return '已開採';
			case 'communityMining': return '社羣採礦';
			case 'consensusPromotionFund': return '共識促進基金';
			case 'ecologicalAwardFund': return '生態獎勵基金';
			case 'icpFuelCrowdfunding': return 'ICP燃料眾籌';
			case 'coreDeveloperRewards': return '核心開發者獎勵';
			case 'totalAllocation': return '總量分配';
			case 'miningRatio': return '開採比例';
			case 'billion.30': return '300億';
			case 'billion.60': return '600億';
			case 'billion.180': return '1800億';
			case 'billion.300': return '3000億';
			case 'watchAdsToSupportDevelopers': return '看廣告支援開發者';
			case 'loadingAdcomponents': return '正在載入廣告元件…';
			case 'timeIsNotUp': return '時間未到！';
			case 'loadingFailed_maybeTheNetworkIsBlocked': return '載入失敗, 可能網路受阻！';
			case 'pendingUSCTrecords': return '待定的USCT記錄';
			case 'pendingUSCTrecordsDesc': return '待定的USCT記錄將在15-30天內與廣告平臺進行比對確認，有效的記錄將轉移到USCT記錄列表，並新增相應的USCT金額到賬戶餘額。';
			case 'validity': return '有效性';
			case 'advertiser': return '廣告商';
			case 'earned': return '已賺取';
			case 'withdraw': return '提現';
			case 'validUSCTrecords': return '有效的USCT記錄';
			case 'USCTmining': return 'USCT 挖礦';
			case 'aboutUSCTmining': return '關於USCT挖礦？';
			case 'aboutUSCTminingItme1': return '1. USDT 是一種全球流行的美元穩定幣，可在全球主流加密貨幣交易所輕鬆的兌換成各國主權貨幣。';
			case 'aboutUSCTminingItme2': return '2. USCT 是USCT挖礦的收益的臨時性計量值，全稱USD credit， 最終根據廣告平臺實際結算額度和分配規則，並按相應比例可轉換為USDT。';
			case 'aboutUSCTminingItme3': return '3. USCT挖礦 是Delta社羣的一種流量廣告變現功能。利用Delta社羣龐大的使用者群體，為廣告商、Delta開發者和曠工提供多方受益。其設計目的是為在Delta生態還沒有形成和繁榮的早期階段，為曠工提供一定的有效收入；同時，也為開發者提供一定的經費支援，確保開發者能夠持續長期的提供開發服務，最終能夠實現白皮書的所有規劃；也為產品廣告商提供一種有效的推廣渠道。';
			case 'aboutUSCTminingItme4': return '4. 分配規則設計為總收益的40%作為開發者技術服務佣金，其餘的60%作為社羣曠工獎勵。曠工獎勵部分採用與DTC類似的多級分配模型，將這些曠工獎勵再按6:3:1的比例分為3份，每次一的USCT挖礦的曠工獎勵的6成分配給當前看廣告的曠工，3成分配給上級推薦人，1成分配給二級推薦人。同理，你推薦的好友透過USCT挖礦您也可以得到同樣的推薦者獎勵。這樣多層次分配的好處在於任何人都可以透過發展下線團隊來獲得相對大量的USDT收益。';
			case 'aboutUSCTminingItme5': return '5. 結算週期為7天，即每7天與廣告平臺核對一次有效性,確認有效的收益和實際金額將記錄到餘額中。每次提現的最低額度為10USDT。';
			case 'linesXtoY': return ({required Object x, required Object y}) => '第${x}到${y}行';
			case 'wallet': return '錢包';
			case 'multiChainWallet': return '多鏈錢包';
			case 'deposit': return '存入';
			case 'transfer': return '轉賬';
			case 'xcoinInWallet': return ({required Object coinCode}) => '錢包地址中的${coinCode}';
			case 'transactions': return '交易記錄';
			case 'network': return '網路';
			case 'walletAddress': return '錢包地址';
			case 'currentAddress': return '當前地址';
			case 'depositAddress': return '充值地址';
			case 'receivingMoneyAddress': return '收款地址';
			case 'applyTempDepositAddress': return '申請臨時充值地址';
			case 'tempDepositAddressTip': return '1.這是一個共享的存款地址。請不要在租約到期或解除繫結後存入金額。如果發生這種情況，該金額將會丟失。';
			case 'tempDepositAddressTip2': return '2.在存款前請務必確認[鏈名稱]與[幣種名稱]完全匹配; 如果是合約代幣還需要確認[合約標準]與[合約地址]完全匹配。';
			case 'tempDepositAddressTip3': return '3.請不要試圖存入與以上提示中任何引數不匹配的資金，否者該金額將會丟失。';
			case 'tempDepositAddressTip4': return '4.如需要存入其它型別的資產，請切換到對應的幣種頁面和引數選項申請一個新的地址。';
			case 'applyExtensionOfValidity': return '申請延長有效期';
			case 'depositAddressExpireTip': return ({required InlineSpan diff, required InlineSpanBuilder tap}) => TextSpan(children: [
				const TextSpan(text: '該地址將在'),
				diff,
				const TextSpan(text: '後過期，過期前12小時內可'),
				tap('手動延長'),
				const TextSpan(text: '有效期。'),
			]);
			case 'canOnlyRenewWithin12hoursInAdvance': return '只能提前12小時內續訂';
			case 'theReceivingAddressValidForLongtime': return '該收款地址長期有效.';
			case 'theReceivingAddressValidForLongtimeAndAutomaticallyCredited': return '該收款地址長期有效，並實時自動入賬。';
			case 'confirmDeposited': return '確認已存入';
			case 'unbindThisDepositAddress': return '解綁該充值地址';
			case 'confirmDepositedTip': return '如果已轉入資金，請在10分鐘後點選以上按鈕觸發計賬到錢包。';
			case 'unbindDepositAddressTip': return '為了減少智慧合約的執行開銷，如果在有效期內不會再存入資金的情況下，請解綁充值地址。';
			case 'transferToAddress': return '轉至地址';
			case 'longPressToPaste': return '長按貼上';
			case 'all': return '全部';
			case 'balanceX': return ({required Object x}) => 'Balance ${x}';
			case 'transferOut': return '轉 出';
			case 'depositXcoins': return ({required Object x}) => '入賬 ${x}';
			case 'sender': return '傳送者';
			case 'recipient': return '接收者';
			case 'memo': return '備註';
			case 'kind': return '方式';
			case 'transferAmountExceedsAvailableBalance': return '轉賬金額超過可用餘額';
			case 'pleaseEnterValidAmount': return '請輸入有效金額';
			case 'networkFee': return '網路手續費';
			case 'fee': return '手續費';
			case 'validLengthXcharacters': return ({required Object x}) => '地址有效長度${x}字元';
			case 'historys': return '歷史記錄';
			case 'dtcCreditdetail': return 'Delta 積分詳情';
			case 'usdCreditdetail': return 'USD 積分詳情';
			case 'dappSquare': return 'dApp 廣場';
			case 'amountRaised': return '募集金額';
			case 'disbursedAmount': return '發放金額';
			case 'participationTimes': return '參與人次';
			case 'completionRate': return '完成率';
			case 'exchangeRate': return '兌換率';
			case 'icpCrowdfunding': return 'ICP 眾籌';
			case 'crowdfunding': return '眾籌';
			case 'trendsCurve': return '趨勢曲線';
			case 'fullScreenView': return '全屏檢視';
			case 'walletBalance': return '錢包餘額：';
			case 'manageWallet': return '管理錢包';
			case 'fundraiseAmount': return '募資金額';
			case 'exchangeRewardAmount': return '換取獎勵金額';
			case 'fundraise': return '籌集資金';
			case 'rangeIntegersX': return ({required Object x}) => '範圍：整數 ${x}';
			case 'successfullParticipatingFundraisingXtip': return ({required Object amount}) => '成功參與募資並獲得獎勵${amount}DTCT';
			case 'amountSummary': return '金額彙總';
			case 'changePreferred': return '更改首選';
			case 'changePreferredAddress': return '更改首選地址';
			case 'preferredAddressTip': return '當使用註冊的移動號碼或DID收款時，資金將自動轉入首選地址。';
			case 'newAddress': return '新建地址';
			case 'newAddressTip': return '為了防止被濫用，當錢包地址超過一個時，每建立一個新地址將產生一筆交易手續費。';
			case 'createNew': return '新建';
			case 'chainNetworkName': return '鏈網路名稱';
			case 'from': return '來自';
			case 'to': return '到';
			case 'noAvailableDepositAmountDetected': return '未檢測到可用的存入金額！';
			case 'crossChainReceiveMoneyMonitoring': return '跨鏈收款正在監聽中 …';
			case 'receivedV': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '已收到('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'confirming': return ({required InlineSpan v}) => TextSpan(children: [
				const TextSpan(text: '確認中('),
				v,
				const TextSpan(text: ')'),
			]);
			case 'thingsToNote_forNewbies': return '注意事項(新手必讀)';
			case 'whyUseSharedAddresses': return '為什麼採用共享地址？';
			case 'useSharedrAdvantage': return '在跨鏈存款時，採用共享地址的優勢如下：';
			case 'useSharedrAdvantage1': return '1. 減少轉賬手續費浪費，降低使用者使用成本。因為如果採用獨享地址，會導致資金過於分散，一般為了方便之後其他使用者在提現時轉出， 當使用者充值後需要將資金二次轉賬歸集到一個或少量地址管理。';
			case 'useSharedrAdvantage2': return '2. 在共享方案中，程式只需要維護一個相對較小的地址池，可以快速匹配轉出資金和輕量的收款監聽，這樣可以減少計算資源開銷。相比之下，如果採用獨享地址，情況會恰好相反。';
			case 'tokenType': return '代幣型別';
			case 'contract': return '合約';
			case 'contractStandard': return '合約標準';
			case 'contractAddress': return '合約地址';
			case 'native': return '原生';
			case 'confirmUnbindingPleaseEnterYes': return '確認解除繫結，請輸入"yes"';
			case 'listAllWorkingTempReceivingAddresses': return '列出所有正在工作的跨鏈充值地址';
			case 'setNote': return '設定備註';
			case 'lengthCannotExceedXbytes': return ({required Object x}) => '長度不能超過 ${x} 位元組';
			case 'transferFee': return '轉賬費';
			case 'crossChainFee': return '跨鏈費';
			case 'crossChainTransferOutError': return '跨鏈轉出錯誤';
			case 'chainName': return '鏈名稱';
			case 'message': return '訊息';
			case 'dontShowAgain': return '不再顯示';
			case 'queuing': return '佇列中';
			case 'optional': return '可選的';
			case 'publiclyVisible': return '公開可見';
			case 'rates': return '費率';
			case 'minimum': return '最低限度';
			case 'maximum': return '最多限度';
			case 'minimumBlockConfirmations': return '最小區塊確認數';
			case 'dsmsVerifyTerminal': return 'DSMS驗證終端';
			case 'overall': return '總體';
			case 'my': return '我的';
			case 'checkValidatorQualifications': return '檢查驗證者許可權資格';
			case 'getVerifierPermissions': return '獲取驗證者許可權';
			case 'qualification': return '資質';
			case 'upperLimit': return '上限';
			case 'maximumNumberOfTerminalsAllowedToAccess': return '允許接入終端數量上限';
			case 'numberOfExistingAccessTerminals': return '已有接入終端數量';
			case 'applyingForDSMSVerifierPermissionsTips': return '申請驗證者許可權前，需要準備一臺閒置的安卓手機和一個專用的接入號碼，並下載安裝DSMS接入終端應用程式。';
			case 'downloadLink': return '下載連結';
			case 'alreadyReadyFollowingTheAboveTips': return '已按照以上提示準備就緒';
			case 'globalUniversal': return '全球通用';
			case 'insufficientLocalVerifierTips': return ({required InlineSpan gu}) => TextSpan(children: [
				const TextSpan(text: '當前本地沒有足夠的驗證者參與DSMS驗證接入服務，請選擇"'),
				gu,
				const TextSpan(text: '"接入服務。'),
			]);
			case 'asDedicatedNumberForAccess': return '作為接入專用號';
			case 'pleaseCheckTip': return ({required Object tip}) => '請勾選“${tip}”';
			case 'inputLengthTooShort': return '輸入長度太短';
			case 'shortName': return '簡稱';
			case 'pleaseEnterXname': return ({required Object name}) => '請輸入${name}';
			case 'applicationIsBeingSubmitted_pleaseWait': return '正在提交申請，請稍候...';
			case 'applyForDSMSVerifierPermission': return '申請DSMS驗證者許可權';
			case 'confirmInformation': return '確認資料';
			case 'lastHeartbeat': return '最後心跳';
			case 'expirationTime': return '到期時間';
			case 'country': return '國家';
			case 'accessTerminals': return '接入終端';
			case 'totalNumberOfDSMSaccessNumberTerminals': return 'DSMS接入號碼終端總量';
			case 'textContent': return '文字內容';
			case 'scanQRcodeToLogin': return '掃碼登入';
			case 'confirmLogin': return '確認登入';
			case 'authorizeSubApplicationToLogin': return '授權該子應用登入';
			case 'authorizationSuccessful': return '授權成功！';
			case 'launchSMSprogram': return '啟動簡訊程式';
			case 'notApplied': return '沒有申請';
			case 'validityPeriod': return '有效期';
			case 'renewal': return '續期';
			case 'scanCodeToAuthorizeTerminalLogin': return '掃碼授權終端登入';
			case 'rewards': return '獎勵';
			case 'roles': return '角色';
			case 'developerCenter': return '開發者中心';
			case 'appName': return '應用名稱';
			case 'pleaseSelect': return '請選擇';
			case 'category': return '類目';
			case 'keywords': return '關鍵詞';
			case 'pleaseEnterAkeyword': return '請輸入一個關鍵詞';
			case 'createApplication': return '建立應用程式';
			case 'appType': return '應用型別';
			case 'numberOfCategoriesMustBetween1and3': return '類目數量必須在1到3個之間';
			case 'appLogoSpecifications': return '圖片格式：png，大小：100KB以內，解析度(畫素)：256*256';
			case 'localAlbum': return '本地相簿';
			case 'networkPath': return '網路路徑';
			case 'imageURLkAddress': return '圖片URL地址';
			case 'urlAddressFormatIsIncorrect': return 'URL地址格式不正確';
			case 'imageFormatOnlySupportsPng': return '圖片只支援“png”格式.';
			case 'lengthMustBeBetweenA_BCharacters': return ({required Object a, required Object b}) => '長度必須介於${a}-${b}個字元之間';
			case 'introduction': return '簡介';
			case 'imageSizeCannotBeLargerThanA_currentlyB': return ({required Object a, required Object b}) => '圖片大小不能大於${a}，目前為${b}';
			case 'imageResolutionMustBeP1pixels_currentlyP2': return ({required Object p1, required Object p2}) => '圖片解析度必須為：${p1}(畫素)，當前為${p2}';
			case 'becomeDeveloper': return '成為開發者';
			case 'developerInformation': return '開發者資訊';
			case 'teamName': return '團隊名稱';
			case 'website': return '網站';
			case 'other': return '其它';
			case 'githubVerification': return 'Github驗證';
			case 'exampleUrl': return '示例Url';
			case 'githubVerificationTip': return ({required Object did}) => '請使用您的GitHub賬戶在倉庫中建立一個\'delta.did\'檔案,檔案內容為\'${did}\'；然後，將該檔案的githubusercontent Url地址貼上到這個輸入框用於身份驗證。';
			case 'createApp': return '建立應用';
			case 'appManagement': return '應用管理';
			case 'statusLogs': return '狀態日誌';
			case 'bad': return '不好';
			case 'normal': return '一般';
			case 'good': return '很好';
			case 'onceCreatedItCannotBeChanged': return '一旦建立,不可更改！';
			case 'manageApplicationEntity': return '管理應用實體';
			case 'currentVersion': return '當前版本';
			case 'submitVersion': return '提交版本';
			case 'packageOnlySupportZipCompressedFile': return '程式包僅支援zip壓縮檔案';
			case 'theXfileWasNotFoundInTheZipPackage': return ({required Object name}) => 'zip程式包中未找到\'${name}\'檔案';
			case 'fileList': return '檔案列表：';
			case 'programPackage': return '程式包：';
			case 'automaticallyExtractFromVersionFile': return '自動從 \'.version\' 檔案中提取';
			case 'dappVersionFormatTip': return '版本號格式必須為小數且精度保持2位，最大不能超過99.99';
			case 'versionNumberMustBeGreaterThanCurrentVersionX': return ({required Object v}) => '版本號必須大於當前版本\'${v}\'';
			case 'versionNotes': return '版本說明：';
			case 'updateRelease': return '更新版本';
			case 'loadAndRun': return '載入並執行';
			case 'notYetSubmittedProgramPackage': return '還未提交程式包！';
			case 'authorizeMinidAppLogin': return '授權 mini-dApp 登入';
			case 'confirmAuthorizationPleaseEnterYes': return '確認授權, 請輸入“yes”';
			case 'authorizeNow': return '立即授權';
			case 'operation': return '操作: ';
			case 'statusChange': return '狀態變更';
			case 'changeTo': return '改變到：';
			case 'notes': return '備註: ';
			case 'changesNotEffective': return '更改無效 !';
			case 'released': return '已釋出';
			case 'inPublicBeta': return '公測中';
			case 'developers': return '開發者: ';
			case 'reviewList': return '評論列表: ';
			case 'postReview': return '發表評論';
			case 'scoreNow': return '立即評分';
			case 'description': return '描述: ';
			case 'noData': return '(^-^) \n 無資料';
			case 'versionHasBeenUpdatedFromAtoB': return ({required Object a, required Object b}) => '版本已從 ${a} 更新至 ${b}';
			case 'loadNewVersion': return '載入新版本';
			case 'name': return '名稱: ';
			case 'canisterId': return '容器罐Id: ';
			case 'updateTime': return '更新時間';
			case 'contractCanistersState': return '合約罐狀態';
			case 'userDistribution': return '使用者分佈';
			case 'settings': return '設 置';
			case 'security': return '安 全';
			case 'invite': return '邀請';
			case 'more': return '更多…';
			case 'receiveAddress': return '接收地址：';
			case 'hangingAmount': return '掛起金額';
			case 'hangingAmountTips': return '掛起金額是由您的下級團隊挖礦而產生獎勵的臨時記錄，一旦您進行一次挖礦這些金額將被收集到待定金額中';
			case 'pendingAmount': return '待定金額';
			case 'pendingAmountTips': return '待定金額是指還未與廣告商進行確認比對的金額，比對有效的金額將被轉移到有效USCT記錄中，如有無效的部分將被排除';
			case 'received': return '已收到';
			case 'processing': return '處理中';
			case 'replied': return '已應答';
			case 'rejected': return '拒絕';
			case 'unknown': return '未知';
			case 'insufficientBalance': return '餘額不足！';
			case 'InsufficientXbalanceToPayCrossChainNetworkFee': return ({required Object x}) => '${x}餘額不足以支付跨鏈網路費';
			case 'aTransactionThatHasNotBeenCompleted_CannotBeTransferredAtMoment': return '有一筆交易尚未完成，暫不能轉賬';
			case 'thisfunctionNotSupportExternalCalls': return '該函式不支援被外部呼叫';
			case 'noMatchingAddressThatCanBeUsedToPayCrossChainFees_switchOtherChainToTry': return '沒有匹配到可用於支付跨鏈手續費的地址，請切換到其它鏈網路嘗試。';
			case 'currentMaximumMatchedSingleTransferAmountIsX': return ({required Object x}) => '當前匹配到單筆最大可轉賬金額為${x}';
			case 'memoMustNotBeMoreThan64bytes': return '備註不得超過 64 位元組';
			case 'insufficientBalance_theAmountIsX': return ({required Object x}) => '餘額不足，金額為：${x}';
			case 'boundRreceivingAddressesExceed3Tip': return '已繫結收款地址不能超出3個，\n如需繫結新的收款地址，\n請先解綁另外一個收款地址';
			case 'parametersA_exception': return ({required Object x}) => '引數：${x}，異常';
			case 'parameterException': return '引數異常！';
			case 'transferAmountMustBeLargerThan0': return '轉賬金額必須大於0';
			case 'authorizationHasExpired': return '授權已過期';
			case 'theAppHasNotBeenAuthorizedByOwner': return '該應用尚未獲得所有者授權';
			case 'authenticationTokenIsInvalid': return '身份驗證令牌無效';
			case 'verifyInfoIsInvalidOrExpired': return '驗證資訊無效或過期';
			case 'verifyThatNumberOfAccessTerminalsHasExceededLimitOf1in10000': return '驗證接入終端數量已經超過萬分之一的限制';
			case 'timeToParticipateInMiningMustBeMoreThan3Days': return '參與挖礦的時間必須大於3天';
			case 'numberOfSafetyCircleCannotBeLessThan3': return '安全圈成員人數不能少於3人';
			case 'avatarIsNotSet': return '頭像未設定';
			case 'numberOfDirectReferralsCannotBeLessThan3': return '直接推薦人數不能小於3人';
			case 'insufficientTimeLimit_mobileNumberOnlyChangedOnceYear': return '時限不足，一年內只能換一次手機號碼。';
			case 'mobileNumberAlreadyExistsAndCannotBeRepeated': return '該手機號碼已存在，不能重複';
			case 'securityCodeIsIncorrect': return '安全碼不正確';
			case 'securityCodeMayHaveExpired': return '安全碼可能已過期';
			case 'sessionIdIsInvalidOrExpired': return '會話id無效或過期';
			case 'sessionHasBeenAuthorized': return '該會話已授權完成！';
			case 'canOnlyBeRenewedWithinXdaysBeforeExpiration': return ({required Object x}) => '只能期滿前${x}天內續期';
			case 'notYetGrantedDeveloperPermissions': return '還未獲得開發者許可權';
			case 'fieldXcannotBeEmpty': return ({required Object x}) => '欄位${x}不能為空';
			case 'emailFormatError': return 'email格式錯誤';
			case 'theXformatIsIncorrect': return ({required Object x}) => '\'${x}\'格式錯誤';
			case 'lengthOfFieldXmustBeBetweenYandXcharacters': return ({required Object x, required Object y, required Object z}) => '欄位“${x}”的長度必須在 ${y} 到 ${z} 個字元之間。';
			case 'theXselectionMustBeBetweenYandX': return ({required Object x, required Object y, required Object z}) => '‘${x}’選擇範圍必須介於 ${y} 至 ${z}個之間';
			case 'unchanged_sameAsOldContent': return '未改變，與舊的內容相同！';
			case 'XYalreadyexists': return ({required Object x, required Object y}) => '${x}: \'${y}\' 已存在！';
			case 'mobileNumberHasNotJoinedDelta': return '這個手機號碼還未加入Delta!';
			case 'referrerIdCannotBeEmpty': return '推薦人ID不能為空！';
			case 'referrerIdDoesNotExist': return '推薦人 ID 不存在！';
			case 'didIsIncorrectOrInvalid': return 'DID 不正確或無效！';
			case 'accessTokenIsIncorrectOrInvalid': return 'accessToken 不正確或無效！';
			case 'minimumWithdrawalAmountIs1USD': return '一次提現金額最少1USD';
			case 'miningTimeIsNotYet': return '挖礦時間尚未到';
			case 'alreadyExists_pleaseDoNotRepeatedly': return '已存在，請不要重複新增！';
			case 'registrationNumberCannotBeUsedAsAccessNumber': return '不能使用註冊號碼作為驗證接入號';
			case 'canotAddYourSelf': return '不能加你自己';
			case 'logOut': return '退出登入';
			case 'confirmLogout': return '確認退出登入';
			case 'logOutTipsText': return '友情提示：按照白皮書的相關約定，賬戶的每次登入驗證將會消耗你一定量的DTC幣支付給驗證者作為激勵，請勿在非必要的情況下嘗試登入和登出，點選以下按鈕將會立即退出登入。';
			case 'ConfirmLogoutPleaseEnterYes': return '確認退出登入請輸入"yes"';
			case 'tip': return '提示';
			case 'cancel': return '取消';
			case 'close': return '關閉';
			case 'selected': return '已選定';
			case 'edit': return '編輯';
			case 'submit': return '提交';
			case 'goBack': return '回退';
			case 'copiedToClipboard': return '已複製到剪下板。';
			case 'nickname': return '暱稱';
			case 'confirm': return '確認';
			case 'cannotBeEmpty': return '不能為空';
			case 'deleteSuccessful': return '刪除成功！';
			case 'successfullyModified': return '修改成功！';
			case 'executionSuccessful': return '執行成功！';
			case 'preview': return '預覽';
			case 'followSystem': return '跟隨系統';
			case 'change': return '更改';
			case 'replace': return '更換';
			case 'view': return '檢視';
			case 'manage': return '管理';
			case 'modify': return '修改';
			case 'replacedSuccessfully': return '更換成功!';
			case 'authentication': return '鑑權';
			case 'reacquire': return '重新獲取';
			case 'tryAgain': return '再試一次';
			case 'querying': return '正在查詢 …';
			case 'writingToOnChain_pleaseWait': return '正在寫入鏈上，請稍候 …';
			case 'versionCheck': return '版本檢測';
			case 'alreadyLatestVersion': return '已是最新版本！';
			case 'foundNewVersion': return '發現新版本：';
			case 'upgradeLink': return '升級連結: ';
			case 'deviceDescription': return '裝置描述: ';
			case 'notification30SecondsBeforeMiningStops': return '在挖礦停止前30秒執行通知提醒！';
			case 'goMining': return '去挖礦';
			case 'deltaMiningReminder': return 'Delta挖礦提示';
			case 'clickToMine_miningIsAboutToStop': return '點這裡去挖礦，挖礦即將停 ！';
			case 'incorrect_input': return '輸入不正確！';
			case 'are_you_sure_delete': return '確認刪除嗎？';
			case 'delete_account': return '刪除帳戶';
			case 'how_to_operate_it': return '查看如何操作?';
			case 'deletion_warning_tip': return '如果刪除帳戶，您將失去所有的Delta硬幣，其他所有成員給您帶來的收益也將丟失。';
			case 'launchWhatsAppProgram': return '啟動WhatsApp程式';
			case 'sms': return '簡訊';
			case 'whatsApp_verification_tips': return '包含此圖示的存取號碼表示同時支援WhatsApp訊息驗證。在發送跨國訊息時，建議使用WhatsApp，來提高成功率並降低費用。';
			case 'ihaveSentVerificationString': return '我已發送驗證串';
			case 'totalOfPeople': return '總人數：';
			case 'numberOfPeopleMining': return '挖礦人次';
			case 'useBrowserScanQRcodeToSMSprogram': return '您可在另一個裝置使用瀏覽器掃描二維碼並將其傳遞至簡訊程式';
			case 'toggle': return '切換';
			case 'DSMSverifier': return 'DSMS驗證者';
			case 'activate': return '啟動';
			case 'activated': return '已啟動';
			case 'generateActivationCommand': return '產生啟動指令';
			case 'activationCommand': return '啟動指令';
			case 'activationSentedTip': return '啟動簡訊發送後，請在接取終端設備上查看啟動狀態。';
			case 'biometricsNotEnabledTip': return '您的裝置尚未啟用生物辨識（人臉或指紋），請啟用後繼續。';
			case 'error': return '錯誤';
			case 'exceptionOccurredWhenCallingBiometric': return '調用生物辨識（人臉或指紋）功能出現異常！';
			case 'accessNumberSelectionTip': return ({required InlineSpan checkedNum, required InlineSpan shouldNum}) => TextSpan(children: [
				const TextSpan(text: '已勾選'),
				checkedNum,
				const TextSpan(text: '個接入號碼，應該選擇'),
				shouldNum,
				const TextSpan(text: '個。'),
			]);
			case 'sentaboveXaccessNumbers': return ({required Object text, required Object n}) => '${text}已傳送到以上的${n}個接入號碼嗎？';
			case 'interface': return '介面：';
			case 'waitingTimeoutOrSenderNumberMismatch': return '等待逾時或寄件者號碼不符';
			case 'mobileNumberOfsecurityCircleYouFilledDoesntMatch': return ({required Object x}) => '您補填的安全圈成員手機號碼不符:${x}';
			case 'loginWithin10MinutesOfLoggingOutAvoidTwoFactorVerification': return '退出後10分鐘內登錄，可避免雙重驗證。';
			case 'leastXmobileNumbersMustCompleted': return ({required Object n}) => '必須填寫至少${n}個手機號碼';
			case 'noAccessNumberInYourRegionYet': return '你所在的區域暫時還沒有存取號碼';
			case 'notEnoughAccessNumbersInYourRegion': return '你所在的區域存取號碼不充足';
			case 'tipsForDeployDSMSterminal': return '系統已經自動為您加載了一些其它國家的接入號碼，為了提供更好更低成本的驗證服務，建議您或聯繫您的推薦人在本地部署DSMS終端，賺取驗證費。';
			case 'noOneCanProvideMeTheSecurityCode': return '沒有一個人可以提供給我安全碼？';
			case 'useSupplementalMode': return '使用補充模式';
			case 'returnToSecurityCodeMode': return '返回安全碼模式';
			case 'enterTheirAssociatedMobileNumber_countryCodeCanBeOmitted': return '請輸入它們的關聯手機號碼，可省略國家代碼。';
			case 'mobileNumberForNameIsIncorrect': return ({required Object name}) => '${name}的行動號碼不正確';
			case 'matchingVerificationStrategyIs': return '符合的驗證策略為：';
			case 'balanceGreater3ICP_noNeedPourFuel': return '餘額大於3 ICP暫時不需倒入燃料。';
			case 'escrowAccount': return '託管帳戶';
			case 'fuelRelay': return '燃料中繼';
			case 'pourFuel': return '導入燃料';
			case 'fuelState': return '燃料狀態';
			case 'pouringFuelTips': return '倒入燃料不會為您帶來任何的好處或壞處，其目的為了豐富Delta系統體驗。';
			case 'sponsorDevelopersByWatchingAds': return '透過觀看廣告贊助開發者';
			case 'status': return '狀態';
			case 'date': return '日期';
			default: return null;
		}
	}
}
